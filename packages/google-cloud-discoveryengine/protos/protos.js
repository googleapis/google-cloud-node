// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_discoveryengine_protos || ($protobuf.roots._google_cloud_discoveryengine_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.discoveryengine = (function() {
    
                /**
                 * Namespace discoveryengine.
                 * @memberof google.cloud
                 * @namespace
                 */
                var discoveryengine = {};
    
                discoveryengine.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.discoveryengine
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.CustomAttribute = (function() {
    
                        /**
                         * Properties of a CustomAttribute.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ICustomAttribute
                         * @property {Array.<string>|null} [text] CustomAttribute text
                         * @property {Array.<number>|null} [numbers] CustomAttribute numbers
                         */
    
                        /**
                         * Constructs a new CustomAttribute.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a CustomAttribute.
                         * @implements ICustomAttribute
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ICustomAttribute=} [properties] Properties to set
                         */
                        function CustomAttribute(properties) {
                            this.text = [];
                            this.numbers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CustomAttribute text.
                         * @member {Array.<string>} text
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @instance
                         */
                        CustomAttribute.prototype.text = $util.emptyArray;
    
                        /**
                         * CustomAttribute numbers.
                         * @member {Array.<number>} numbers
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @instance
                         */
                        CustomAttribute.prototype.numbers = $util.emptyArray;
    
                        /**
                         * Creates a new CustomAttribute instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICustomAttribute=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.CustomAttribute} CustomAttribute instance
                         */
                        CustomAttribute.create = function create(properties) {
                            return new CustomAttribute(properties);
                        };
    
                        /**
                         * Encodes the specified CustomAttribute message. Does not implicitly {@link google.cloud.discoveryengine.v1.CustomAttribute.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICustomAttribute} message CustomAttribute message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomAttribute.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.text != null && message.text.length)
                                for (var i = 0; i < message.text.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.text[i]);
                            if (message.numbers != null && message.numbers.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.numbers.length; ++i)
                                    writer.double(message.numbers[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CustomAttribute message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.CustomAttribute.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICustomAttribute} message CustomAttribute message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomAttribute.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CustomAttribute message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.CustomAttribute} CustomAttribute
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomAttribute.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.CustomAttribute();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.text && message.text.length))
                                            message.text = [];
                                        message.text.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.numbers && message.numbers.length))
                                            message.numbers = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.numbers.push(reader.double());
                                        } else
                                            message.numbers.push(reader.double());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CustomAttribute message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.CustomAttribute} CustomAttribute
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomAttribute.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CustomAttribute message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CustomAttribute.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.text != null && message.hasOwnProperty("text")) {
                                if (!Array.isArray(message.text))
                                    return "text: array expected";
                                for (var i = 0; i < message.text.length; ++i)
                                    if (!$util.isString(message.text[i]))
                                        return "text: string[] expected";
                            }
                            if (message.numbers != null && message.hasOwnProperty("numbers")) {
                                if (!Array.isArray(message.numbers))
                                    return "numbers: array expected";
                                for (var i = 0; i < message.numbers.length; ++i)
                                    if (typeof message.numbers[i] !== "number")
                                        return "numbers: number[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CustomAttribute message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.CustomAttribute} CustomAttribute
                         */
                        CustomAttribute.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.CustomAttribute)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.CustomAttribute();
                            if (object.text) {
                                if (!Array.isArray(object.text))
                                    throw TypeError(".google.cloud.discoveryengine.v1.CustomAttribute.text: array expected");
                                message.text = [];
                                for (var i = 0; i < object.text.length; ++i)
                                    message.text[i] = String(object.text[i]);
                            }
                            if (object.numbers) {
                                if (!Array.isArray(object.numbers))
                                    throw TypeError(".google.cloud.discoveryengine.v1.CustomAttribute.numbers: array expected");
                                message.numbers = [];
                                for (var i = 0; i < object.numbers.length; ++i)
                                    message.numbers[i] = Number(object.numbers[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CustomAttribute message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @static
                         * @param {google.cloud.discoveryengine.v1.CustomAttribute} message CustomAttribute
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CustomAttribute.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.text = [];
                                object.numbers = [];
                            }
                            if (message.text && message.text.length) {
                                object.text = [];
                                for (var j = 0; j < message.text.length; ++j)
                                    object.text[j] = message.text[j];
                            }
                            if (message.numbers && message.numbers.length) {
                                object.numbers = [];
                                for (var j = 0; j < message.numbers.length; ++j)
                                    object.numbers[j] = options.json && !isFinite(message.numbers[j]) ? String(message.numbers[j]) : message.numbers[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CustomAttribute to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CustomAttribute.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CustomAttribute
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.CustomAttribute
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CustomAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.CustomAttribute";
                        };
    
                        return CustomAttribute;
                    })();
    
                    v1.UserInfo = (function() {
    
                        /**
                         * Properties of a UserInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IUserInfo
                         * @property {string|null} [userId] UserInfo userId
                         * @property {string|null} [userAgent] UserInfo userAgent
                         */
    
                        /**
                         * Constructs a new UserInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a UserInfo.
                         * @implements IUserInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IUserInfo=} [properties] Properties to set
                         */
                        function UserInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserInfo userId.
                         * @member {string} userId
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @instance
                         */
                        UserInfo.prototype.userId = "";
    
                        /**
                         * UserInfo userAgent.
                         * @member {string} userAgent
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @instance
                         */
                        UserInfo.prototype.userAgent = "";
    
                        /**
                         * Creates a new UserInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUserInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.UserInfo} UserInfo instance
                         */
                        UserInfo.create = function create(properties) {
                            return new UserInfo(properties);
                        };
    
                        /**
                         * Encodes the specified UserInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1.UserInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUserInfo} message UserInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);
                            if (message.userAgent != null && Object.hasOwnProperty.call(message, "userAgent"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.userAgent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.UserInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUserInfo} message UserInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.UserInfo} UserInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.UserInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.userId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userAgent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.UserInfo} UserInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.userId != null && message.hasOwnProperty("userId"))
                                if (!$util.isString(message.userId))
                                    return "userId: string expected";
                            if (message.userAgent != null && message.hasOwnProperty("userAgent"))
                                if (!$util.isString(message.userAgent))
                                    return "userAgent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a UserInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.UserInfo} UserInfo
                         */
                        UserInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.UserInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.UserInfo();
                            if (object.userId != null)
                                message.userId = String(object.userId);
                            if (object.userAgent != null)
                                message.userAgent = String(object.userAgent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.UserInfo} message UserInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.userId = "";
                                object.userAgent = "";
                            }
                            if (message.userId != null && message.hasOwnProperty("userId"))
                                object.userId = message.userId;
                            if (message.userAgent != null && message.hasOwnProperty("userAgent"))
                                object.userAgent = message.userAgent;
                            return object;
                        };
    
                        /**
                         * Converts this UserInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.UserInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.UserInfo";
                        };
    
                        return UserInfo;
                    })();
    
                    v1.CompletionService = (function() {
    
                        /**
                         * Constructs a new CompletionService service.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a CompletionService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CompletionService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CompletionService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CompletionService;
    
                        /**
                         * Creates new CompletionService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.CompletionService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CompletionService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CompletionService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.CompletionService|completeQuery}.
                         * @memberof google.cloud.discoveryengine.v1.CompletionService
                         * @typedef CompleteQueryCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1.CompleteQueryResponse} [response] CompleteQueryResponse
                         */
    
                        /**
                         * Calls CompleteQuery.
                         * @function completeQuery
                         * @memberof google.cloud.discoveryengine.v1.CompletionService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryRequest} request CompleteQueryRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.CompletionService.CompleteQueryCallback} callback Node-style callback called with the error, if any, and CompleteQueryResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CompletionService.prototype.completeQuery = function completeQuery(request, callback) {
                            return this.rpcCall(completeQuery, $root.google.cloud.discoveryengine.v1.CompleteQueryRequest, $root.google.cloud.discoveryengine.v1.CompleteQueryResponse, request, callback);
                        }, "name", { value: "CompleteQuery" });
    
                        /**
                         * Calls CompleteQuery.
                         * @function completeQuery
                         * @memberof google.cloud.discoveryengine.v1.CompletionService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryRequest} request CompleteQueryRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1.CompleteQueryResponse>} Promise
                         * @variation 2
                         */
    
                        return CompletionService;
                    })();
    
                    v1.CompleteQueryRequest = (function() {
    
                        /**
                         * Properties of a CompleteQueryRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ICompleteQueryRequest
                         * @property {string|null} [dataStore] CompleteQueryRequest dataStore
                         * @property {string|null} [query] CompleteQueryRequest query
                         * @property {string|null} [queryModel] CompleteQueryRequest queryModel
                         * @property {string|null} [userPseudoId] CompleteQueryRequest userPseudoId
                         */
    
                        /**
                         * Constructs a new CompleteQueryRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a CompleteQueryRequest.
                         * @implements ICompleteQueryRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryRequest=} [properties] Properties to set
                         */
                        function CompleteQueryRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompleteQueryRequest dataStore.
                         * @member {string} dataStore
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.dataStore = "";
    
                        /**
                         * CompleteQueryRequest query.
                         * @member {string} query
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.query = "";
    
                        /**
                         * CompleteQueryRequest queryModel.
                         * @member {string} queryModel
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.queryModel = "";
    
                        /**
                         * CompleteQueryRequest userPseudoId.
                         * @member {string} userPseudoId
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.userPseudoId = "";
    
                        /**
                         * Creates a new CompleteQueryRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.CompleteQueryRequest} CompleteQueryRequest instance
                         */
                        CompleteQueryRequest.create = function create(properties) {
                            return new CompleteQueryRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CompleteQueryRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.CompleteQueryRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryRequest} message CompleteQueryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dataStore != null && Object.hasOwnProperty.call(message, "dataStore"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.dataStore);
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.query);
                            if (message.queryModel != null && Object.hasOwnProperty.call(message, "queryModel"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.queryModel);
                            if (message.userPseudoId != null && Object.hasOwnProperty.call(message, "userPseudoId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.userPseudoId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompleteQueryRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.CompleteQueryRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryRequest} message CompleteQueryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompleteQueryRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.CompleteQueryRequest} CompleteQueryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.CompleteQueryRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.dataStore = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.query = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.queryModel = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.userPseudoId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompleteQueryRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.CompleteQueryRequest} CompleteQueryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompleteQueryRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompleteQueryRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dataStore != null && message.hasOwnProperty("dataStore"))
                                if (!$util.isString(message.dataStore))
                                    return "dataStore: string expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.queryModel != null && message.hasOwnProperty("queryModel"))
                                if (!$util.isString(message.queryModel))
                                    return "queryModel: string expected";
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                if (!$util.isString(message.userPseudoId))
                                    return "userPseudoId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CompleteQueryRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.CompleteQueryRequest} CompleteQueryRequest
                         */
                        CompleteQueryRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.CompleteQueryRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.CompleteQueryRequest();
                            if (object.dataStore != null)
                                message.dataStore = String(object.dataStore);
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.queryModel != null)
                                message.queryModel = String(object.queryModel);
                            if (object.userPseudoId != null)
                                message.userPseudoId = String(object.userPseudoId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompleteQueryRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.CompleteQueryRequest} message CompleteQueryRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompleteQueryRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.dataStore = "";
                                object.query = "";
                                object.queryModel = "";
                                object.userPseudoId = "";
                            }
                            if (message.dataStore != null && message.hasOwnProperty("dataStore"))
                                object.dataStore = message.dataStore;
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.queryModel != null && message.hasOwnProperty("queryModel"))
                                object.queryModel = message.queryModel;
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                object.userPseudoId = message.userPseudoId;
                            return object;
                        };
    
                        /**
                         * Converts this CompleteQueryRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompleteQueryRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CompleteQueryRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CompleteQueryRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.CompleteQueryRequest";
                        };
    
                        return CompleteQueryRequest;
                    })();
    
                    v1.CompleteQueryResponse = (function() {
    
                        /**
                         * Properties of a CompleteQueryResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ICompleteQueryResponse
                         * @property {Array.<google.cloud.discoveryengine.v1.CompleteQueryResponse.IQuerySuggestion>|null} [querySuggestions] CompleteQueryResponse querySuggestions
                         */
    
                        /**
                         * Constructs a new CompleteQueryResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a CompleteQueryResponse.
                         * @implements ICompleteQueryResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryResponse=} [properties] Properties to set
                         */
                        function CompleteQueryResponse(properties) {
                            this.querySuggestions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompleteQueryResponse querySuggestions.
                         * @member {Array.<google.cloud.discoveryengine.v1.CompleteQueryResponse.IQuerySuggestion>} querySuggestions
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @instance
                         */
                        CompleteQueryResponse.prototype.querySuggestions = $util.emptyArray;
    
                        /**
                         * Creates a new CompleteQueryResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.CompleteQueryResponse} CompleteQueryResponse instance
                         */
                        CompleteQueryResponse.create = function create(properties) {
                            return new CompleteQueryResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CompleteQueryResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1.CompleteQueryResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryResponse} message CompleteQueryResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.querySuggestions != null && message.querySuggestions.length)
                                for (var i = 0; i < message.querySuggestions.length; ++i)
                                    $root.google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion.encode(message.querySuggestions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompleteQueryResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.CompleteQueryResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICompleteQueryResponse} message CompleteQueryResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompleteQueryResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.CompleteQueryResponse} CompleteQueryResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.CompleteQueryResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.querySuggestions && message.querySuggestions.length))
                                            message.querySuggestions = [];
                                        message.querySuggestions.push($root.google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompleteQueryResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.CompleteQueryResponse} CompleteQueryResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompleteQueryResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompleteQueryResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.querySuggestions != null && message.hasOwnProperty("querySuggestions")) {
                                if (!Array.isArray(message.querySuggestions))
                                    return "querySuggestions: array expected";
                                for (var i = 0; i < message.querySuggestions.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion.verify(message.querySuggestions[i]);
                                    if (error)
                                        return "querySuggestions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CompleteQueryResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.CompleteQueryResponse} CompleteQueryResponse
                         */
                        CompleteQueryResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.CompleteQueryResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.CompleteQueryResponse();
                            if (object.querySuggestions) {
                                if (!Array.isArray(object.querySuggestions))
                                    throw TypeError(".google.cloud.discoveryengine.v1.CompleteQueryResponse.querySuggestions: array expected");
                                message.querySuggestions = [];
                                for (var i = 0; i < object.querySuggestions.length; ++i) {
                                    if (typeof object.querySuggestions[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.CompleteQueryResponse.querySuggestions: object expected");
                                    message.querySuggestions[i] = $root.google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion.fromObject(object.querySuggestions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompleteQueryResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.CompleteQueryResponse} message CompleteQueryResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompleteQueryResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.querySuggestions = [];
                            if (message.querySuggestions && message.querySuggestions.length) {
                                object.querySuggestions = [];
                                for (var j = 0; j < message.querySuggestions.length; ++j)
                                    object.querySuggestions[j] = $root.google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion.toObject(message.querySuggestions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CompleteQueryResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompleteQueryResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CompleteQueryResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CompleteQueryResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.CompleteQueryResponse";
                        };
    
                        CompleteQueryResponse.QuerySuggestion = (function() {
    
                            /**
                             * Properties of a QuerySuggestion.
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                             * @interface IQuerySuggestion
                             * @property {string|null} [suggestion] QuerySuggestion suggestion
                             */
    
                            /**
                             * Constructs a new QuerySuggestion.
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse
                             * @classdesc Represents a QuerySuggestion.
                             * @implements IQuerySuggestion
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1.CompleteQueryResponse.IQuerySuggestion=} [properties] Properties to set
                             */
                            function QuerySuggestion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * QuerySuggestion suggestion.
                             * @member {string} suggestion
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @instance
                             */
                            QuerySuggestion.prototype.suggestion = "";
    
                            /**
                             * Creates a new QuerySuggestion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {google.cloud.discoveryengine.v1.CompleteQueryResponse.IQuerySuggestion=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion} QuerySuggestion instance
                             */
                            QuerySuggestion.create = function create(properties) {
                                return new QuerySuggestion(properties);
                            };
    
                            /**
                             * Encodes the specified QuerySuggestion message. Does not implicitly {@link google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {google.cloud.discoveryengine.v1.CompleteQueryResponse.IQuerySuggestion} message QuerySuggestion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            QuerySuggestion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.suggestion != null && Object.hasOwnProperty.call(message, "suggestion"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.suggestion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified QuerySuggestion message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {google.cloud.discoveryengine.v1.CompleteQueryResponse.IQuerySuggestion} message QuerySuggestion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            QuerySuggestion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a QuerySuggestion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion} QuerySuggestion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            QuerySuggestion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.suggestion = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a QuerySuggestion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion} QuerySuggestion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            QuerySuggestion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a QuerySuggestion message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            QuerySuggestion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.suggestion != null && message.hasOwnProperty("suggestion"))
                                    if (!$util.isString(message.suggestion))
                                        return "suggestion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a QuerySuggestion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion} QuerySuggestion
                             */
                            QuerySuggestion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion();
                                if (object.suggestion != null)
                                    message.suggestion = String(object.suggestion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a QuerySuggestion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion} message QuerySuggestion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            QuerySuggestion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.suggestion = "";
                                if (message.suggestion != null && message.hasOwnProperty("suggestion"))
                                    object.suggestion = message.suggestion;
                                return object;
                            };
    
                            /**
                             * Converts this QuerySuggestion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            QuerySuggestion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for QuerySuggestion
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            QuerySuggestion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1.CompleteQueryResponse.QuerySuggestion";
                            };
    
                            return QuerySuggestion;
                        })();
    
                        return CompleteQueryResponse;
                    })();
    
                    v1.Document = (function() {
    
                        /**
                         * Properties of a Document.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IDocument
                         * @property {google.protobuf.IStruct|null} [structData] Document structData
                         * @property {string|null} [jsonData] Document jsonData
                         * @property {string|null} [name] Document name
                         * @property {string|null} [id] Document id
                         * @property {string|null} [schemaId] Document schemaId
                         * @property {google.cloud.discoveryengine.v1.Document.IContent|null} [content] Document content
                         * @property {string|null} [parentDocumentId] Document parentDocumentId
                         * @property {google.protobuf.IStruct|null} [derivedStructData] Document derivedStructData
                         */
    
                        /**
                         * Constructs a new Document.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a Document.
                         * @implements IDocument
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IDocument=} [properties] Properties to set
                         */
                        function Document(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Document structData.
                         * @member {google.protobuf.IStruct|null|undefined} structData
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         */
                        Document.prototype.structData = null;
    
                        /**
                         * Document jsonData.
                         * @member {string|null|undefined} jsonData
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         */
                        Document.prototype.jsonData = null;
    
                        /**
                         * Document name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         */
                        Document.prototype.name = "";
    
                        /**
                         * Document id.
                         * @member {string} id
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         */
                        Document.prototype.id = "";
    
                        /**
                         * Document schemaId.
                         * @member {string} schemaId
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         */
                        Document.prototype.schemaId = "";
    
                        /**
                         * Document content.
                         * @member {google.cloud.discoveryengine.v1.Document.IContent|null|undefined} content
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         */
                        Document.prototype.content = null;
    
                        /**
                         * Document parentDocumentId.
                         * @member {string} parentDocumentId
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         */
                        Document.prototype.parentDocumentId = "";
    
                        /**
                         * Document derivedStructData.
                         * @member {google.protobuf.IStruct|null|undefined} derivedStructData
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         */
                        Document.prototype.derivedStructData = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Document data.
                         * @member {"structData"|"jsonData"|undefined} data
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         */
                        Object.defineProperty(Document.prototype, "data", {
                            get: $util.oneOfGetter($oneOfFields = ["structData", "jsonData"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Document instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDocument=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.Document} Document instance
                         */
                        Document.create = function create(properties) {
                            return new Document(properties);
                        };
    
                        /**
                         * Encodes the specified Document message. Does not implicitly {@link google.cloud.discoveryengine.v1.Document.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);
                            if (message.schemaId != null && Object.hasOwnProperty.call(message, "schemaId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.schemaId);
                            if (message.structData != null && Object.hasOwnProperty.call(message, "structData"))
                                $root.google.protobuf.Struct.encode(message.structData, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.jsonData != null && Object.hasOwnProperty.call(message, "jsonData"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.jsonData);
                            if (message.derivedStructData != null && Object.hasOwnProperty.call(message, "derivedStructData"))
                                $root.google.protobuf.Struct.encode(message.derivedStructData, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.parentDocumentId != null && Object.hasOwnProperty.call(message, "parentDocumentId"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.parentDocumentId);
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                $root.google.cloud.discoveryengine.v1.Document.Content.encode(message.content, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Document message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.Document.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.Document();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.structData = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.jsonData = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.schemaId = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.content = $root.google.cloud.discoveryengine.v1.Document.Content.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.parentDocumentId = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.derivedStructData = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Document message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Document.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.structData != null && message.hasOwnProperty("structData")) {
                                properties.data = 1;
                                {
                                    var error = $root.google.protobuf.Struct.verify(message.structData);
                                    if (error)
                                        return "structData." + error;
                                }
                            }
                            if (message.jsonData != null && message.hasOwnProperty("jsonData")) {
                                if (properties.data === 1)
                                    return "data: multiple values";
                                properties.data = 1;
                                if (!$util.isString(message.jsonData))
                                    return "jsonData: string expected";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.schemaId != null && message.hasOwnProperty("schemaId"))
                                if (!$util.isString(message.schemaId))
                                    return "schemaId: string expected";
                            if (message.content != null && message.hasOwnProperty("content")) {
                                var error = $root.google.cloud.discoveryengine.v1.Document.Content.verify(message.content);
                                if (error)
                                    return "content." + error;
                            }
                            if (message.parentDocumentId != null && message.hasOwnProperty("parentDocumentId"))
                                if (!$util.isString(message.parentDocumentId))
                                    return "parentDocumentId: string expected";
                            if (message.derivedStructData != null && message.hasOwnProperty("derivedStructData")) {
                                var error = $root.google.protobuf.Struct.verify(message.derivedStructData);
                                if (error)
                                    return "derivedStructData." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Document message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.Document} Document
                         */
                        Document.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.Document)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.Document();
                            if (object.structData != null) {
                                if (typeof object.structData !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.Document.structData: object expected");
                                message.structData = $root.google.protobuf.Struct.fromObject(object.structData);
                            }
                            if (object.jsonData != null)
                                message.jsonData = String(object.jsonData);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.schemaId != null)
                                message.schemaId = String(object.schemaId);
                            if (object.content != null) {
                                if (typeof object.content !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.Document.content: object expected");
                                message.content = $root.google.cloud.discoveryengine.v1.Document.Content.fromObject(object.content);
                            }
                            if (object.parentDocumentId != null)
                                message.parentDocumentId = String(object.parentDocumentId);
                            if (object.derivedStructData != null) {
                                if (typeof object.derivedStructData !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.Document.derivedStructData: object expected");
                                message.derivedStructData = $root.google.protobuf.Struct.fromObject(object.derivedStructData);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Document message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @static
                         * @param {google.cloud.discoveryengine.v1.Document} message Document
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Document.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.id = "";
                                object.schemaId = "";
                                object.derivedStructData = null;
                                object.parentDocumentId = "";
                                object.content = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.schemaId != null && message.hasOwnProperty("schemaId"))
                                object.schemaId = message.schemaId;
                            if (message.structData != null && message.hasOwnProperty("structData")) {
                                object.structData = $root.google.protobuf.Struct.toObject(message.structData, options);
                                if (options.oneofs)
                                    object.data = "structData";
                            }
                            if (message.jsonData != null && message.hasOwnProperty("jsonData")) {
                                object.jsonData = message.jsonData;
                                if (options.oneofs)
                                    object.data = "jsonData";
                            }
                            if (message.derivedStructData != null && message.hasOwnProperty("derivedStructData"))
                                object.derivedStructData = $root.google.protobuf.Struct.toObject(message.derivedStructData, options);
                            if (message.parentDocumentId != null && message.hasOwnProperty("parentDocumentId"))
                                object.parentDocumentId = message.parentDocumentId;
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = $root.google.cloud.discoveryengine.v1.Document.Content.toObject(message.content, options);
                            return object;
                        };
    
                        /**
                         * Converts this Document to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Document.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Document
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.Document
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Document.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.Document";
                        };
    
                        Document.Content = (function() {
    
                            /**
                             * Properties of a Content.
                             * @memberof google.cloud.discoveryengine.v1.Document
                             * @interface IContent
                             * @property {Uint8Array|null} [rawBytes] Content rawBytes
                             * @property {string|null} [uri] Content uri
                             * @property {string|null} [mimeType] Content mimeType
                             */
    
                            /**
                             * Constructs a new Content.
                             * @memberof google.cloud.discoveryengine.v1.Document
                             * @classdesc Represents a Content.
                             * @implements IContent
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1.Document.IContent=} [properties] Properties to set
                             */
                            function Content(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Content rawBytes.
                             * @member {Uint8Array|null|undefined} rawBytes
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @instance
                             */
                            Content.prototype.rawBytes = null;
    
                            /**
                             * Content uri.
                             * @member {string|null|undefined} uri
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @instance
                             */
                            Content.prototype.uri = null;
    
                            /**
                             * Content mimeType.
                             * @member {string} mimeType
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @instance
                             */
                            Content.prototype.mimeType = "";
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Content content.
                             * @member {"rawBytes"|"uri"|undefined} content
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @instance
                             */
                            Object.defineProperty(Content.prototype, "content", {
                                get: $util.oneOfGetter($oneOfFields = ["rawBytes", "uri"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Content instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @static
                             * @param {google.cloud.discoveryengine.v1.Document.IContent=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1.Document.Content} Content instance
                             */
                            Content.create = function create(properties) {
                                return new Content(properties);
                            };
    
                            /**
                             * Encodes the specified Content message. Does not implicitly {@link google.cloud.discoveryengine.v1.Document.Content.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @static
                             * @param {google.cloud.discoveryengine.v1.Document.IContent} message Content message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Content.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.mimeType);
                                if (message.rawBytes != null && Object.hasOwnProperty.call(message, "rawBytes"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.rawBytes);
                                if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Content message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.Document.Content.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @static
                             * @param {google.cloud.discoveryengine.v1.Document.IContent} message Content message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Content.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Content message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1.Document.Content} Content
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Content.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.Document.Content();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2: {
                                            message.rawBytes = reader.bytes();
                                            break;
                                        }
                                    case 3: {
                                            message.uri = reader.string();
                                            break;
                                        }
                                    case 1: {
                                            message.mimeType = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Content message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1.Document.Content} Content
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Content.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Content message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Content.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.rawBytes != null && message.hasOwnProperty("rawBytes")) {
                                    properties.content = 1;
                                    if (!(message.rawBytes && typeof message.rawBytes.length === "number" || $util.isString(message.rawBytes)))
                                        return "rawBytes: buffer expected";
                                }
                                if (message.uri != null && message.hasOwnProperty("uri")) {
                                    if (properties.content === 1)
                                        return "content: multiple values";
                                    properties.content = 1;
                                    if (!$util.isString(message.uri))
                                        return "uri: string expected";
                                }
                                if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                    if (!$util.isString(message.mimeType))
                                        return "mimeType: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Content message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1.Document.Content} Content
                             */
                            Content.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1.Document.Content)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1.Document.Content();
                                if (object.rawBytes != null)
                                    if (typeof object.rawBytes === "string")
                                        $util.base64.decode(object.rawBytes, message.rawBytes = $util.newBuffer($util.base64.length(object.rawBytes)), 0);
                                    else if (object.rawBytes.length >= 0)
                                        message.rawBytes = object.rawBytes;
                                if (object.uri != null)
                                    message.uri = String(object.uri);
                                if (object.mimeType != null)
                                    message.mimeType = String(object.mimeType);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Content message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @static
                             * @param {google.cloud.discoveryengine.v1.Document.Content} message Content
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Content.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.mimeType = "";
                                if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                    object.mimeType = message.mimeType;
                                if (message.rawBytes != null && message.hasOwnProperty("rawBytes")) {
                                    object.rawBytes = options.bytes === String ? $util.base64.encode(message.rawBytes, 0, message.rawBytes.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawBytes) : message.rawBytes;
                                    if (options.oneofs)
                                        object.content = "rawBytes";
                                }
                                if (message.uri != null && message.hasOwnProperty("uri")) {
                                    object.uri = message.uri;
                                    if (options.oneofs)
                                        object.content = "uri";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Content to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Content.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Content
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1.Document.Content
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Content.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1.Document.Content";
                            };
    
                            return Content;
                        })();
    
                        return Document;
                    })();
    
                    v1.DocumentService = (function() {
    
                        /**
                         * Constructs a new DocumentService service.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a DocumentService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DocumentService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DocumentService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DocumentService;
    
                        /**
                         * Creates new DocumentService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DocumentService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DocumentService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.DocumentService|getDocument}.
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @typedef GetDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1.Document} [response] Document
                         */
    
                        /**
                         * Calls GetDocument.
                         * @function getDocument
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IGetDocumentRequest} request GetDocumentRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.DocumentService.GetDocumentCallback} callback Node-style callback called with the error, if any, and Document
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.getDocument = function getDocument(request, callback) {
                            return this.rpcCall(getDocument, $root.google.cloud.discoveryengine.v1.GetDocumentRequest, $root.google.cloud.discoveryengine.v1.Document, request, callback);
                        }, "name", { value: "GetDocument" });
    
                        /**
                         * Calls GetDocument.
                         * @function getDocument
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IGetDocumentRequest} request GetDocumentRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1.Document>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.DocumentService|listDocuments}.
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @typedef ListDocumentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1.ListDocumentsResponse} [response] ListDocumentsResponse
                         */
    
                        /**
                         * Calls ListDocuments.
                         * @function listDocuments
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsRequest} request ListDocumentsRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.DocumentService.ListDocumentsCallback} callback Node-style callback called with the error, if any, and ListDocumentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.listDocuments = function listDocuments(request, callback) {
                            return this.rpcCall(listDocuments, $root.google.cloud.discoveryengine.v1.ListDocumentsRequest, $root.google.cloud.discoveryengine.v1.ListDocumentsResponse, request, callback);
                        }, "name", { value: "ListDocuments" });
    
                        /**
                         * Calls ListDocuments.
                         * @function listDocuments
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsRequest} request ListDocumentsRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1.ListDocumentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.DocumentService|createDocument}.
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @typedef CreateDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1.Document} [response] Document
                         */
    
                        /**
                         * Calls CreateDocument.
                         * @function createDocument
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ICreateDocumentRequest} request CreateDocumentRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.DocumentService.CreateDocumentCallback} callback Node-style callback called with the error, if any, and Document
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.createDocument = function createDocument(request, callback) {
                            return this.rpcCall(createDocument, $root.google.cloud.discoveryengine.v1.CreateDocumentRequest, $root.google.cloud.discoveryengine.v1.Document, request, callback);
                        }, "name", { value: "CreateDocument" });
    
                        /**
                         * Calls CreateDocument.
                         * @function createDocument
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ICreateDocumentRequest} request CreateDocumentRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1.Document>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.DocumentService|updateDocument}.
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @typedef UpdateDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1.Document} [response] Document
                         */
    
                        /**
                         * Calls UpdateDocument.
                         * @function updateDocument
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IUpdateDocumentRequest} request UpdateDocumentRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.DocumentService.UpdateDocumentCallback} callback Node-style callback called with the error, if any, and Document
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.updateDocument = function updateDocument(request, callback) {
                            return this.rpcCall(updateDocument, $root.google.cloud.discoveryengine.v1.UpdateDocumentRequest, $root.google.cloud.discoveryengine.v1.Document, request, callback);
                        }, "name", { value: "UpdateDocument" });
    
                        /**
                         * Calls UpdateDocument.
                         * @function updateDocument
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IUpdateDocumentRequest} request UpdateDocumentRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1.Document>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.DocumentService|deleteDocument}.
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @typedef DeleteDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteDocument.
                         * @function deleteDocument
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IDeleteDocumentRequest} request DeleteDocumentRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.DocumentService.DeleteDocumentCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.deleteDocument = function deleteDocument(request, callback) {
                            return this.rpcCall(deleteDocument, $root.google.cloud.discoveryengine.v1.DeleteDocumentRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteDocument" });
    
                        /**
                         * Calls DeleteDocument.
                         * @function deleteDocument
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IDeleteDocumentRequest} request DeleteDocumentRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.DocumentService|importDocuments}.
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @typedef ImportDocumentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ImportDocuments.
                         * @function importDocuments
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsRequest} request ImportDocumentsRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.DocumentService.ImportDocumentsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.importDocuments = function importDocuments(request, callback) {
                            return this.rpcCall(importDocuments, $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ImportDocuments" });
    
                        /**
                         * Calls ImportDocuments.
                         * @function importDocuments
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsRequest} request ImportDocumentsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.DocumentService|purgeDocuments}.
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @typedef PurgeDocumentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls PurgeDocuments.
                         * @function purgeDocuments
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsRequest} request PurgeDocumentsRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.DocumentService.PurgeDocumentsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.purgeDocuments = function purgeDocuments(request, callback) {
                            return this.rpcCall(purgeDocuments, $root.google.cloud.discoveryengine.v1.PurgeDocumentsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "PurgeDocuments" });
    
                        /**
                         * Calls PurgeDocuments.
                         * @function purgeDocuments
                         * @memberof google.cloud.discoveryengine.v1.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsRequest} request PurgeDocumentsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return DocumentService;
                    })();
    
                    v1.GetDocumentRequest = (function() {
    
                        /**
                         * Properties of a GetDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IGetDocumentRequest
                         * @property {string|null} [name] GetDocumentRequest name
                         */
    
                        /**
                         * Constructs a new GetDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a GetDocumentRequest.
                         * @implements IGetDocumentRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IGetDocumentRequest=} [properties] Properties to set
                         */
                        function GetDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetDocumentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @instance
                         */
                        GetDocumentRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IGetDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.GetDocumentRequest} GetDocumentRequest instance
                         */
                        GetDocumentRequest.create = function create(properties) {
                            return new GetDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetDocumentRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.GetDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IGetDocumentRequest} message GetDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.GetDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IGetDocumentRequest} message GetDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.GetDocumentRequest} GetDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.GetDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.GetDocumentRequest} GetDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.GetDocumentRequest} GetDocumentRequest
                         */
                        GetDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.GetDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.GetDocumentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.GetDocumentRequest} message GetDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.GetDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.GetDocumentRequest";
                        };
    
                        return GetDocumentRequest;
                    })();
    
                    v1.ListDocumentsRequest = (function() {
    
                        /**
                         * Properties of a ListDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IListDocumentsRequest
                         * @property {string|null} [parent] ListDocumentsRequest parent
                         * @property {number|null} [pageSize] ListDocumentsRequest pageSize
                         * @property {string|null} [pageToken] ListDocumentsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a ListDocumentsRequest.
                         * @implements IListDocumentsRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsRequest=} [properties] Properties to set
                         */
                        function ListDocumentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDocumentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @instance
                         */
                        ListDocumentsRequest.prototype.parent = "";
    
                        /**
                         * ListDocumentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @instance
                         */
                        ListDocumentsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListDocumentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @instance
                         */
                        ListDocumentsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListDocumentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ListDocumentsRequest} ListDocumentsRequest instance
                         */
                        ListDocumentsRequest.create = function create(properties) {
                            return new ListDocumentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListDocumentsRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.ListDocumentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsRequest} message ListDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDocumentsRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ListDocumentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsRequest} message ListDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDocumentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ListDocumentsRequest} ListDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ListDocumentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDocumentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ListDocumentsRequest} ListDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDocumentsRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDocumentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListDocumentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ListDocumentsRequest} ListDocumentsRequest
                         */
                        ListDocumentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ListDocumentsRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ListDocumentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDocumentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ListDocumentsRequest} message ListDocumentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDocumentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListDocumentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDocumentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDocumentsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDocumentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ListDocumentsRequest";
                        };
    
                        return ListDocumentsRequest;
                    })();
    
                    v1.ListDocumentsResponse = (function() {
    
                        /**
                         * Properties of a ListDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IListDocumentsResponse
                         * @property {Array.<google.cloud.discoveryengine.v1.IDocument>|null} [documents] ListDocumentsResponse documents
                         * @property {string|null} [nextPageToken] ListDocumentsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a ListDocumentsResponse.
                         * @implements IListDocumentsResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsResponse=} [properties] Properties to set
                         */
                        function ListDocumentsResponse(properties) {
                            this.documents = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDocumentsResponse documents.
                         * @member {Array.<google.cloud.discoveryengine.v1.IDocument>} documents
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @instance
                         */
                        ListDocumentsResponse.prototype.documents = $util.emptyArray;
    
                        /**
                         * ListDocumentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @instance
                         */
                        ListDocumentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListDocumentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ListDocumentsResponse} ListDocumentsResponse instance
                         */
                        ListDocumentsResponse.create = function create(properties) {
                            return new ListDocumentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListDocumentsResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1.ListDocumentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsResponse} message ListDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.documents != null && message.documents.length)
                                for (var i = 0; i < message.documents.length; ++i)
                                    $root.google.cloud.discoveryengine.v1.Document.encode(message.documents[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDocumentsResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ListDocumentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListDocumentsResponse} message ListDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDocumentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ListDocumentsResponse} ListDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ListDocumentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.documents && message.documents.length))
                                            message.documents = [];
                                        message.documents.push($root.google.cloud.discoveryengine.v1.Document.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDocumentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ListDocumentsResponse} ListDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDocumentsResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDocumentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documents != null && message.hasOwnProperty("documents")) {
                                if (!Array.isArray(message.documents))
                                    return "documents: array expected";
                                for (var i = 0; i < message.documents.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1.Document.verify(message.documents[i]);
                                    if (error)
                                        return "documents." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListDocumentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ListDocumentsResponse} ListDocumentsResponse
                         */
                        ListDocumentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ListDocumentsResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ListDocumentsResponse();
                            if (object.documents) {
                                if (!Array.isArray(object.documents))
                                    throw TypeError(".google.cloud.discoveryengine.v1.ListDocumentsResponse.documents: array expected");
                                message.documents = [];
                                for (var i = 0; i < object.documents.length; ++i) {
                                    if (typeof object.documents[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.ListDocumentsResponse.documents: object expected");
                                    message.documents[i] = $root.google.cloud.discoveryengine.v1.Document.fromObject(object.documents[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDocumentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ListDocumentsResponse} message ListDocumentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDocumentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.documents = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.documents && message.documents.length) {
                                object.documents = [];
                                for (var j = 0; j < message.documents.length; ++j)
                                    object.documents[j] = $root.google.cloud.discoveryengine.v1.Document.toObject(message.documents[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListDocumentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDocumentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDocumentsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ListDocumentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDocumentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ListDocumentsResponse";
                        };
    
                        return ListDocumentsResponse;
                    })();
    
                    v1.CreateDocumentRequest = (function() {
    
                        /**
                         * Properties of a CreateDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ICreateDocumentRequest
                         * @property {string|null} [parent] CreateDocumentRequest parent
                         * @property {google.cloud.discoveryengine.v1.IDocument|null} [document] CreateDocumentRequest document
                         * @property {string|null} [documentId] CreateDocumentRequest documentId
                         */
    
                        /**
                         * Constructs a new CreateDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a CreateDocumentRequest.
                         * @implements ICreateDocumentRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ICreateDocumentRequest=} [properties] Properties to set
                         */
                        function CreateDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateDocumentRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.parent = "";
    
                        /**
                         * CreateDocumentRequest document.
                         * @member {google.cloud.discoveryengine.v1.IDocument|null|undefined} document
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.document = null;
    
                        /**
                         * CreateDocumentRequest documentId.
                         * @member {string} documentId
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.documentId = "";
    
                        /**
                         * Creates a new CreateDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICreateDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.CreateDocumentRequest} CreateDocumentRequest instance
                         */
                        CreateDocumentRequest.create = function create(properties) {
                            return new CreateDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateDocumentRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.CreateDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICreateDocumentRequest} message CreateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                $root.google.cloud.discoveryengine.v1.Document.encode(message.document, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.documentId != null && Object.hasOwnProperty.call(message, "documentId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.documentId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.CreateDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICreateDocumentRequest} message CreateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.CreateDocumentRequest} CreateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.CreateDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.document = $root.google.cloud.discoveryengine.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.documentId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.CreateDocumentRequest} CreateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.document != null && message.hasOwnProperty("document")) {
                                var error = $root.google.cloud.discoveryengine.v1.Document.verify(message.document);
                                if (error)
                                    return "document." + error;
                            }
                            if (message.documentId != null && message.hasOwnProperty("documentId"))
                                if (!$util.isString(message.documentId))
                                    return "documentId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.CreateDocumentRequest} CreateDocumentRequest
                         */
                        CreateDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.CreateDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.CreateDocumentRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.document != null) {
                                if (typeof object.document !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.CreateDocumentRequest.document: object expected");
                                message.document = $root.google.cloud.discoveryengine.v1.Document.fromObject(object.document);
                            }
                            if (object.documentId != null)
                                message.documentId = String(object.documentId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.CreateDocumentRequest} message CreateDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.document = null;
                                object.documentId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.document != null && message.hasOwnProperty("document"))
                                object.document = $root.google.cloud.discoveryengine.v1.Document.toObject(message.document, options);
                            if (message.documentId != null && message.hasOwnProperty("documentId"))
                                object.documentId = message.documentId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.CreateDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.CreateDocumentRequest";
                        };
    
                        return CreateDocumentRequest;
                    })();
    
                    v1.UpdateDocumentRequest = (function() {
    
                        /**
                         * Properties of an UpdateDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IUpdateDocumentRequest
                         * @property {google.cloud.discoveryengine.v1.IDocument|null} [document] UpdateDocumentRequest document
                         * @property {boolean|null} [allowMissing] UpdateDocumentRequest allowMissing
                         */
    
                        /**
                         * Constructs a new UpdateDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an UpdateDocumentRequest.
                         * @implements IUpdateDocumentRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IUpdateDocumentRequest=} [properties] Properties to set
                         */
                        function UpdateDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateDocumentRequest document.
                         * @member {google.cloud.discoveryengine.v1.IDocument|null|undefined} document
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @instance
                         */
                        UpdateDocumentRequest.prototype.document = null;
    
                        /**
                         * UpdateDocumentRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @instance
                         */
                        UpdateDocumentRequest.prototype.allowMissing = false;
    
                        /**
                         * Creates a new UpdateDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUpdateDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.UpdateDocumentRequest} UpdateDocumentRequest instance
                         */
                        UpdateDocumentRequest.create = function create(properties) {
                            return new UpdateDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.UpdateDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUpdateDocumentRequest} message UpdateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                $root.google.cloud.discoveryengine.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.UpdateDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUpdateDocumentRequest} message UpdateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.UpdateDocumentRequest} UpdateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.UpdateDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.document = $root.google.cloud.discoveryengine.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.UpdateDocumentRequest} UpdateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.document != null && message.hasOwnProperty("document")) {
                                var error = $root.google.cloud.discoveryengine.v1.Document.verify(message.document);
                                if (error)
                                    return "document." + error;
                            }
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.UpdateDocumentRequest} UpdateDocumentRequest
                         */
                        UpdateDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.UpdateDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.UpdateDocumentRequest();
                            if (object.document != null) {
                                if (typeof object.document !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UpdateDocumentRequest.document: object expected");
                                message.document = $root.google.cloud.discoveryengine.v1.Document.fromObject(object.document);
                            }
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.UpdateDocumentRequest} message UpdateDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.document = null;
                                object.allowMissing = false;
                            }
                            if (message.document != null && message.hasOwnProperty("document"))
                                object.document = $root.google.cloud.discoveryengine.v1.Document.toObject(message.document, options);
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.UpdateDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.UpdateDocumentRequest";
                        };
    
                        return UpdateDocumentRequest;
                    })();
    
                    v1.DeleteDocumentRequest = (function() {
    
                        /**
                         * Properties of a DeleteDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IDeleteDocumentRequest
                         * @property {string|null} [name] DeleteDocumentRequest name
                         */
    
                        /**
                         * Constructs a new DeleteDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a DeleteDocumentRequest.
                         * @implements IDeleteDocumentRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IDeleteDocumentRequest=} [properties] Properties to set
                         */
                        function DeleteDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteDocumentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @instance
                         */
                        DeleteDocumentRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDeleteDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.DeleteDocumentRequest} DeleteDocumentRequest instance
                         */
                        DeleteDocumentRequest.create = function create(properties) {
                            return new DeleteDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.DeleteDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDeleteDocumentRequest} message DeleteDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.DeleteDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDeleteDocumentRequest} message DeleteDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.DeleteDocumentRequest} DeleteDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.DeleteDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.DeleteDocumentRequest} DeleteDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.DeleteDocumentRequest} DeleteDocumentRequest
                         */
                        DeleteDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.DeleteDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.DeleteDocumentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.DeleteDocumentRequest} message DeleteDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.DeleteDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.DeleteDocumentRequest";
                        };
    
                        return DeleteDocumentRequest;
                    })();
    
                    v1.GcsSource = (function() {
    
                        /**
                         * Properties of a GcsSource.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IGcsSource
                         * @property {Array.<string>|null} [inputUris] GcsSource inputUris
                         * @property {string|null} [dataSchema] GcsSource dataSchema
                         */
    
                        /**
                         * Constructs a new GcsSource.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a GcsSource.
                         * @implements IGcsSource
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IGcsSource=} [properties] Properties to set
                         */
                        function GcsSource(properties) {
                            this.inputUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsSource inputUris.
                         * @member {Array.<string>} inputUris
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @instance
                         */
                        GcsSource.prototype.inputUris = $util.emptyArray;
    
                        /**
                         * GcsSource dataSchema.
                         * @member {string} dataSchema
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @instance
                         */
                        GcsSource.prototype.dataSchema = "";
    
                        /**
                         * Creates a new GcsSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IGcsSource=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.GcsSource} GcsSource instance
                         */
                        GcsSource.create = function create(properties) {
                            return new GcsSource(properties);
                        };
    
                        /**
                         * Encodes the specified GcsSource message. Does not implicitly {@link google.cloud.discoveryengine.v1.GcsSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IGcsSource} message GcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.inputUris != null && message.inputUris.length)
                                for (var i = 0; i < message.inputUris.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.inputUris[i]);
                            if (message.dataSchema != null && Object.hasOwnProperty.call(message, "dataSchema"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.dataSchema);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsSource message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.GcsSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IGcsSource} message GcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.GcsSource} GcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.GcsSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.inputUris && message.inputUris.length))
                                            message.inputUris = [];
                                        message.inputUris.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.dataSchema = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.GcsSource} GcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsSource message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.inputUris != null && message.hasOwnProperty("inputUris")) {
                                if (!Array.isArray(message.inputUris))
                                    return "inputUris: array expected";
                                for (var i = 0; i < message.inputUris.length; ++i)
                                    if (!$util.isString(message.inputUris[i]))
                                        return "inputUris: string[] expected";
                            }
                            if (message.dataSchema != null && message.hasOwnProperty("dataSchema"))
                                if (!$util.isString(message.dataSchema))
                                    return "dataSchema: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GcsSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.GcsSource} GcsSource
                         */
                        GcsSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.GcsSource)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.GcsSource();
                            if (object.inputUris) {
                                if (!Array.isArray(object.inputUris))
                                    throw TypeError(".google.cloud.discoveryengine.v1.GcsSource.inputUris: array expected");
                                message.inputUris = [];
                                for (var i = 0; i < object.inputUris.length; ++i)
                                    message.inputUris[i] = String(object.inputUris[i]);
                            }
                            if (object.dataSchema != null)
                                message.dataSchema = String(object.dataSchema);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @static
                         * @param {google.cloud.discoveryengine.v1.GcsSource} message GcsSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.inputUris = [];
                            if (options.defaults)
                                object.dataSchema = "";
                            if (message.inputUris && message.inputUris.length) {
                                object.inputUris = [];
                                for (var j = 0; j < message.inputUris.length; ++j)
                                    object.inputUris[j] = message.inputUris[j];
                            }
                            if (message.dataSchema != null && message.hasOwnProperty("dataSchema"))
                                object.dataSchema = message.dataSchema;
                            return object;
                        };
    
                        /**
                         * Converts this GcsSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsSource
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.GcsSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.GcsSource";
                        };
    
                        return GcsSource;
                    })();
    
                    v1.BigQuerySource = (function() {
    
                        /**
                         * Properties of a BigQuerySource.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IBigQuerySource
                         * @property {google.type.IDate|null} [partitionDate] BigQuerySource partitionDate
                         * @property {string|null} [projectId] BigQuerySource projectId
                         * @property {string|null} [datasetId] BigQuerySource datasetId
                         * @property {string|null} [tableId] BigQuerySource tableId
                         * @property {string|null} [gcsStagingDir] BigQuerySource gcsStagingDir
                         * @property {string|null} [dataSchema] BigQuerySource dataSchema
                         */
    
                        /**
                         * Constructs a new BigQuerySource.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a BigQuerySource.
                         * @implements IBigQuerySource
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IBigQuerySource=} [properties] Properties to set
                         */
                        function BigQuerySource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BigQuerySource partitionDate.
                         * @member {google.type.IDate|null|undefined} partitionDate
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.partitionDate = null;
    
                        /**
                         * BigQuerySource projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.projectId = "";
    
                        /**
                         * BigQuerySource datasetId.
                         * @member {string} datasetId
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.datasetId = "";
    
                        /**
                         * BigQuerySource tableId.
                         * @member {string} tableId
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.tableId = "";
    
                        /**
                         * BigQuerySource gcsStagingDir.
                         * @member {string} gcsStagingDir
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.gcsStagingDir = "";
    
                        /**
                         * BigQuerySource dataSchema.
                         * @member {string} dataSchema
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.dataSchema = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * BigQuerySource partition.
                         * @member {"partitionDate"|undefined} partition
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @instance
                         */
                        Object.defineProperty(BigQuerySource.prototype, "partition", {
                            get: $util.oneOfGetter($oneOfFields = ["partitionDate"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BigQuerySource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IBigQuerySource=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.BigQuerySource} BigQuerySource instance
                         */
                        BigQuerySource.create = function create(properties) {
                            return new BigQuerySource(properties);
                        };
    
                        /**
                         * Encodes the specified BigQuerySource message. Does not implicitly {@link google.cloud.discoveryengine.v1.BigQuerySource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IBigQuerySource} message BigQuerySource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQuerySource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.datasetId != null && Object.hasOwnProperty.call(message, "datasetId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.datasetId);
                            if (message.tableId != null && Object.hasOwnProperty.call(message, "tableId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.tableId);
                            if (message.gcsStagingDir != null && Object.hasOwnProperty.call(message, "gcsStagingDir"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.gcsStagingDir);
                            if (message.partitionDate != null && Object.hasOwnProperty.call(message, "partitionDate"))
                                $root.google.type.Date.encode(message.partitionDate, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.dataSchema != null && Object.hasOwnProperty.call(message, "dataSchema"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.dataSchema);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BigQuerySource message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.BigQuerySource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IBigQuerySource} message BigQuerySource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQuerySource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BigQuerySource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.BigQuerySource} BigQuerySource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQuerySource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.BigQuerySource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.partitionDate = $root.google.type.Date.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.datasetId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.tableId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.gcsStagingDir = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.dataSchema = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BigQuerySource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.BigQuerySource} BigQuerySource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQuerySource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BigQuerySource message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BigQuerySource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.partitionDate != null && message.hasOwnProperty("partitionDate")) {
                                properties.partition = 1;
                                {
                                    var error = $root.google.type.Date.verify(message.partitionDate);
                                    if (error)
                                        return "partitionDate." + error;
                                }
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                if (!$util.isString(message.datasetId))
                                    return "datasetId: string expected";
                            if (message.tableId != null && message.hasOwnProperty("tableId"))
                                if (!$util.isString(message.tableId))
                                    return "tableId: string expected";
                            if (message.gcsStagingDir != null && message.hasOwnProperty("gcsStagingDir"))
                                if (!$util.isString(message.gcsStagingDir))
                                    return "gcsStagingDir: string expected";
                            if (message.dataSchema != null && message.hasOwnProperty("dataSchema"))
                                if (!$util.isString(message.dataSchema))
                                    return "dataSchema: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BigQuerySource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.BigQuerySource} BigQuerySource
                         */
                        BigQuerySource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.BigQuerySource)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.BigQuerySource();
                            if (object.partitionDate != null) {
                                if (typeof object.partitionDate !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.BigQuerySource.partitionDate: object expected");
                                message.partitionDate = $root.google.type.Date.fromObject(object.partitionDate);
                            }
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.datasetId != null)
                                message.datasetId = String(object.datasetId);
                            if (object.tableId != null)
                                message.tableId = String(object.tableId);
                            if (object.gcsStagingDir != null)
                                message.gcsStagingDir = String(object.gcsStagingDir);
                            if (object.dataSchema != null)
                                message.dataSchema = String(object.dataSchema);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BigQuerySource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @static
                         * @param {google.cloud.discoveryengine.v1.BigQuerySource} message BigQuerySource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BigQuerySource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.datasetId = "";
                                object.tableId = "";
                                object.gcsStagingDir = "";
                                object.dataSchema = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                object.datasetId = message.datasetId;
                            if (message.tableId != null && message.hasOwnProperty("tableId"))
                                object.tableId = message.tableId;
                            if (message.gcsStagingDir != null && message.hasOwnProperty("gcsStagingDir"))
                                object.gcsStagingDir = message.gcsStagingDir;
                            if (message.partitionDate != null && message.hasOwnProperty("partitionDate")) {
                                object.partitionDate = $root.google.type.Date.toObject(message.partitionDate, options);
                                if (options.oneofs)
                                    object.partition = "partitionDate";
                            }
                            if (message.dataSchema != null && message.hasOwnProperty("dataSchema"))
                                object.dataSchema = message.dataSchema;
                            return object;
                        };
    
                        /**
                         * Converts this BigQuerySource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BigQuerySource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BigQuerySource
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.BigQuerySource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BigQuerySource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.BigQuerySource";
                        };
    
                        return BigQuerySource;
                    })();
    
                    v1.ImportErrorConfig = (function() {
    
                        /**
                         * Properties of an ImportErrorConfig.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IImportErrorConfig
                         * @property {string|null} [gcsPrefix] ImportErrorConfig gcsPrefix
                         */
    
                        /**
                         * Constructs a new ImportErrorConfig.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an ImportErrorConfig.
                         * @implements IImportErrorConfig
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IImportErrorConfig=} [properties] Properties to set
                         */
                        function ImportErrorConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportErrorConfig gcsPrefix.
                         * @member {string|null|undefined} gcsPrefix
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @instance
                         */
                        ImportErrorConfig.prototype.gcsPrefix = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportErrorConfig destination.
                         * @member {"gcsPrefix"|undefined} destination
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @instance
                         */
                        Object.defineProperty(ImportErrorConfig.prototype, "destination", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsPrefix"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportErrorConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportErrorConfig=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ImportErrorConfig} ImportErrorConfig instance
                         */
                        ImportErrorConfig.create = function create(properties) {
                            return new ImportErrorConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ImportErrorConfig message. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportErrorConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportErrorConfig} message ImportErrorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportErrorConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsPrefix != null && Object.hasOwnProperty.call(message, "gcsPrefix"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gcsPrefix);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportErrorConfig message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportErrorConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportErrorConfig} message ImportErrorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportErrorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportErrorConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ImportErrorConfig} ImportErrorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportErrorConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ImportErrorConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsPrefix = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportErrorConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ImportErrorConfig} ImportErrorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportErrorConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportErrorConfig message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportErrorConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsPrefix != null && message.hasOwnProperty("gcsPrefix")) {
                                properties.destination = 1;
                                if (!$util.isString(message.gcsPrefix))
                                    return "gcsPrefix: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportErrorConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ImportErrorConfig} ImportErrorConfig
                         */
                        ImportErrorConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ImportErrorConfig)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ImportErrorConfig();
                            if (object.gcsPrefix != null)
                                message.gcsPrefix = String(object.gcsPrefix);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportErrorConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ImportErrorConfig} message ImportErrorConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportErrorConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.gcsPrefix != null && message.hasOwnProperty("gcsPrefix")) {
                                object.gcsPrefix = message.gcsPrefix;
                                if (options.oneofs)
                                    object.destination = "gcsPrefix";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ImportErrorConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportErrorConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportErrorConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ImportErrorConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportErrorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ImportErrorConfig";
                        };
    
                        return ImportErrorConfig;
                    })();
    
                    v1.ImportUserEventsRequest = (function() {
    
                        /**
                         * Properties of an ImportUserEventsRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IImportUserEventsRequest
                         * @property {google.cloud.discoveryengine.v1.ImportUserEventsRequest.IInlineSource|null} [inlineSource] ImportUserEventsRequest inlineSource
                         * @property {google.cloud.discoveryengine.v1.IGcsSource|null} [gcsSource] ImportUserEventsRequest gcsSource
                         * @property {google.cloud.discoveryengine.v1.IBigQuerySource|null} [bigquerySource] ImportUserEventsRequest bigquerySource
                         * @property {string|null} [parent] ImportUserEventsRequest parent
                         * @property {google.cloud.discoveryengine.v1.IImportErrorConfig|null} [errorConfig] ImportUserEventsRequest errorConfig
                         */
    
                        /**
                         * Constructs a new ImportUserEventsRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an ImportUserEventsRequest.
                         * @implements IImportUserEventsRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsRequest=} [properties] Properties to set
                         */
                        function ImportUserEventsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportUserEventsRequest inlineSource.
                         * @member {google.cloud.discoveryengine.v1.ImportUserEventsRequest.IInlineSource|null|undefined} inlineSource
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.inlineSource = null;
    
                        /**
                         * ImportUserEventsRequest gcsSource.
                         * @member {google.cloud.discoveryengine.v1.IGcsSource|null|undefined} gcsSource
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.gcsSource = null;
    
                        /**
                         * ImportUserEventsRequest bigquerySource.
                         * @member {google.cloud.discoveryengine.v1.IBigQuerySource|null|undefined} bigquerySource
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.bigquerySource = null;
    
                        /**
                         * ImportUserEventsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.parent = "";
    
                        /**
                         * ImportUserEventsRequest errorConfig.
                         * @member {google.cloud.discoveryengine.v1.IImportErrorConfig|null|undefined} errorConfig
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.errorConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportUserEventsRequest source.
                         * @member {"inlineSource"|"gcsSource"|"bigquerySource"|undefined} source
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @instance
                         */
                        Object.defineProperty(ImportUserEventsRequest.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["inlineSource", "gcsSource", "bigquerySource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportUserEventsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsRequest} ImportUserEventsRequest instance
                         */
                        ImportUserEventsRequest.create = function create(properties) {
                            return new ImportUserEventsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportUserEventsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsRequest} message ImportUserEventsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.inlineSource != null && Object.hasOwnProperty.call(message, "inlineSource"))
                                $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource.encode(message.inlineSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.cloud.discoveryengine.v1.GcsSource.encode(message.gcsSource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.bigquerySource != null && Object.hasOwnProperty.call(message, "bigquerySource"))
                                $root.google.cloud.discoveryengine.v1.BigQuerySource.encode(message.bigquerySource, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.errorConfig != null && Object.hasOwnProperty.call(message, "errorConfig"))
                                $root.google.cloud.discoveryengine.v1.ImportErrorConfig.encode(message.errorConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportUserEventsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsRequest} message ImportUserEventsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportUserEventsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsRequest} ImportUserEventsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.inlineSource = $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.gcsSource = $root.google.cloud.discoveryengine.v1.GcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.bigquerySource = $root.google.cloud.discoveryengine.v1.BigQuerySource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportUserEventsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsRequest} ImportUserEventsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportUserEventsRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportUserEventsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.inlineSource != null && message.hasOwnProperty("inlineSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource.verify(message.inlineSource);
                                    if (error)
                                        return "inlineSource." + error;
                                }
                            }
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1.GcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.bigquerySource != null && message.hasOwnProperty("bigquerySource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1.BigQuerySource.verify(message.bigquerySource);
                                    if (error)
                                        return "bigquerySource." + error;
                                }
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig")) {
                                var error = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.verify(message.errorConfig);
                                if (error)
                                    return "errorConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportUserEventsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsRequest} ImportUserEventsRequest
                         */
                        ImportUserEventsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest();
                            if (object.inlineSource != null) {
                                if (typeof object.inlineSource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsRequest.inlineSource: object expected");
                                message.inlineSource = $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource.fromObject(object.inlineSource);
                            }
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsRequest.gcsSource: object expected");
                                message.gcsSource = $root.google.cloud.discoveryengine.v1.GcsSource.fromObject(object.gcsSource);
                            }
                            if (object.bigquerySource != null) {
                                if (typeof object.bigquerySource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsRequest.bigquerySource: object expected");
                                message.bigquerySource = $root.google.cloud.discoveryengine.v1.BigQuerySource.fromObject(object.bigquerySource);
                            }
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.errorConfig != null) {
                                if (typeof object.errorConfig !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsRequest.errorConfig: object expected");
                                message.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.fromObject(object.errorConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportUserEventsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ImportUserEventsRequest} message ImportUserEventsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportUserEventsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.errorConfig = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.inlineSource != null && message.hasOwnProperty("inlineSource")) {
                                object.inlineSource = $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource.toObject(message.inlineSource, options);
                                if (options.oneofs)
                                    object.source = "inlineSource";
                            }
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.cloud.discoveryengine.v1.GcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            if (message.bigquerySource != null && message.hasOwnProperty("bigquerySource")) {
                                object.bigquerySource = $root.google.cloud.discoveryengine.v1.BigQuerySource.toObject(message.bigquerySource, options);
                                if (options.oneofs)
                                    object.source = "bigquerySource";
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig"))
                                object.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.toObject(message.errorConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this ImportUserEventsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportUserEventsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportUserEventsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportUserEventsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ImportUserEventsRequest";
                        };
    
                        ImportUserEventsRequest.InlineSource = (function() {
    
                            /**
                             * Properties of an InlineSource.
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                             * @interface IInlineSource
                             * @property {Array.<google.cloud.discoveryengine.v1.IUserEvent>|null} [userEvents] InlineSource userEvents
                             */
    
                            /**
                             * Constructs a new InlineSource.
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest
                             * @classdesc Represents an InlineSource.
                             * @implements IInlineSource
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1.ImportUserEventsRequest.IInlineSource=} [properties] Properties to set
                             */
                            function InlineSource(properties) {
                                this.userEvents = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * InlineSource userEvents.
                             * @member {Array.<google.cloud.discoveryengine.v1.IUserEvent>} userEvents
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @instance
                             */
                            InlineSource.prototype.userEvents = $util.emptyArray;
    
                            /**
                             * Creates a new InlineSource instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1.ImportUserEventsRequest.IInlineSource=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource} InlineSource instance
                             */
                            InlineSource.create = function create(properties) {
                                return new InlineSource(properties);
                            };
    
                            /**
                             * Encodes the specified InlineSource message. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1.ImportUserEventsRequest.IInlineSource} message InlineSource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InlineSource.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.userEvents != null && message.userEvents.length)
                                    for (var i = 0; i < message.userEvents.length; ++i)
                                        $root.google.cloud.discoveryengine.v1.UserEvent.encode(message.userEvents[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified InlineSource message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1.ImportUserEventsRequest.IInlineSource} message InlineSource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InlineSource.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an InlineSource message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource} InlineSource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InlineSource.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.userEvents && message.userEvents.length))
                                                message.userEvents = [];
                                            message.userEvents.push($root.google.cloud.discoveryengine.v1.UserEvent.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an InlineSource message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource} InlineSource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InlineSource.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an InlineSource message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            InlineSource.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.userEvents != null && message.hasOwnProperty("userEvents")) {
                                    if (!Array.isArray(message.userEvents))
                                        return "userEvents: array expected";
                                    for (var i = 0; i < message.userEvents.length; ++i) {
                                        var error = $root.google.cloud.discoveryengine.v1.UserEvent.verify(message.userEvents[i]);
                                        if (error)
                                            return "userEvents." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an InlineSource message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource} InlineSource
                             */
                            InlineSource.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource();
                                if (object.userEvents) {
                                    if (!Array.isArray(object.userEvents))
                                        throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource.userEvents: array expected");
                                    message.userEvents = [];
                                    for (var i = 0; i < object.userEvents.length; ++i) {
                                        if (typeof object.userEvents[i] !== "object")
                                            throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource.userEvents: object expected");
                                        message.userEvents[i] = $root.google.cloud.discoveryengine.v1.UserEvent.fromObject(object.userEvents[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an InlineSource message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource} message InlineSource
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            InlineSource.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.userEvents = [];
                                if (message.userEvents && message.userEvents.length) {
                                    object.userEvents = [];
                                    for (var j = 0; j < message.userEvents.length; ++j)
                                        object.userEvents[j] = $root.google.cloud.discoveryengine.v1.UserEvent.toObject(message.userEvents[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this InlineSource to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            InlineSource.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for InlineSource
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            InlineSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ImportUserEventsRequest.InlineSource";
                            };
    
                            return InlineSource;
                        })();
    
                        return ImportUserEventsRequest;
                    })();
    
                    v1.ImportUserEventsResponse = (function() {
    
                        /**
                         * Properties of an ImportUserEventsResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IImportUserEventsResponse
                         * @property {Array.<google.rpc.IStatus>|null} [errorSamples] ImportUserEventsResponse errorSamples
                         * @property {google.cloud.discoveryengine.v1.IImportErrorConfig|null} [errorConfig] ImportUserEventsResponse errorConfig
                         * @property {number|Long|null} [joinedEventsCount] ImportUserEventsResponse joinedEventsCount
                         * @property {number|Long|null} [unjoinedEventsCount] ImportUserEventsResponse unjoinedEventsCount
                         */
    
                        /**
                         * Constructs a new ImportUserEventsResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an ImportUserEventsResponse.
                         * @implements IImportUserEventsResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsResponse=} [properties] Properties to set
                         */
                        function ImportUserEventsResponse(properties) {
                            this.errorSamples = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportUserEventsResponse errorSamples.
                         * @member {Array.<google.rpc.IStatus>} errorSamples
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @instance
                         */
                        ImportUserEventsResponse.prototype.errorSamples = $util.emptyArray;
    
                        /**
                         * ImportUserEventsResponse errorConfig.
                         * @member {google.cloud.discoveryengine.v1.IImportErrorConfig|null|undefined} errorConfig
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @instance
                         */
                        ImportUserEventsResponse.prototype.errorConfig = null;
    
                        /**
                         * ImportUserEventsResponse joinedEventsCount.
                         * @member {number|Long} joinedEventsCount
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @instance
                         */
                        ImportUserEventsResponse.prototype.joinedEventsCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * ImportUserEventsResponse unjoinedEventsCount.
                         * @member {number|Long} unjoinedEventsCount
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @instance
                         */
                        ImportUserEventsResponse.prototype.unjoinedEventsCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new ImportUserEventsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsResponse} ImportUserEventsResponse instance
                         */
                        ImportUserEventsResponse.create = function create(properties) {
                            return new ImportUserEventsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportUserEventsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsResponse} message ImportUserEventsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.errorSamples != null && message.errorSamples.length)
                                for (var i = 0; i < message.errorSamples.length; ++i)
                                    $root.google.rpc.Status.encode(message.errorSamples[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.errorConfig != null && Object.hasOwnProperty.call(message, "errorConfig"))
                                $root.google.cloud.discoveryengine.v1.ImportErrorConfig.encode(message.errorConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.joinedEventsCount != null && Object.hasOwnProperty.call(message, "joinedEventsCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.joinedEventsCount);
                            if (message.unjoinedEventsCount != null && Object.hasOwnProperty.call(message, "unjoinedEventsCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.unjoinedEventsCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportUserEventsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsResponse} message ImportUserEventsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportUserEventsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsResponse} ImportUserEventsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ImportUserEventsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.errorSamples && message.errorSamples.length))
                                            message.errorSamples = [];
                                        message.errorSamples.push($root.google.rpc.Status.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.joinedEventsCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.unjoinedEventsCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportUserEventsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsResponse} ImportUserEventsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportUserEventsResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportUserEventsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.errorSamples != null && message.hasOwnProperty("errorSamples")) {
                                if (!Array.isArray(message.errorSamples))
                                    return "errorSamples: array expected";
                                for (var i = 0; i < message.errorSamples.length; ++i) {
                                    var error = $root.google.rpc.Status.verify(message.errorSamples[i]);
                                    if (error)
                                        return "errorSamples." + error;
                                }
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig")) {
                                var error = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.verify(message.errorConfig);
                                if (error)
                                    return "errorConfig." + error;
                            }
                            if (message.joinedEventsCount != null && message.hasOwnProperty("joinedEventsCount"))
                                if (!$util.isInteger(message.joinedEventsCount) && !(message.joinedEventsCount && $util.isInteger(message.joinedEventsCount.low) && $util.isInteger(message.joinedEventsCount.high)))
                                    return "joinedEventsCount: integer|Long expected";
                            if (message.unjoinedEventsCount != null && message.hasOwnProperty("unjoinedEventsCount"))
                                if (!$util.isInteger(message.unjoinedEventsCount) && !(message.unjoinedEventsCount && $util.isInteger(message.unjoinedEventsCount.low) && $util.isInteger(message.unjoinedEventsCount.high)))
                                    return "unjoinedEventsCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportUserEventsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsResponse} ImportUserEventsResponse
                         */
                        ImportUserEventsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ImportUserEventsResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ImportUserEventsResponse();
                            if (object.errorSamples) {
                                if (!Array.isArray(object.errorSamples))
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsResponse.errorSamples: array expected");
                                message.errorSamples = [];
                                for (var i = 0; i < object.errorSamples.length; ++i) {
                                    if (typeof object.errorSamples[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsResponse.errorSamples: object expected");
                                    message.errorSamples[i] = $root.google.rpc.Status.fromObject(object.errorSamples[i]);
                                }
                            }
                            if (object.errorConfig != null) {
                                if (typeof object.errorConfig !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsResponse.errorConfig: object expected");
                                message.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.fromObject(object.errorConfig);
                            }
                            if (object.joinedEventsCount != null)
                                if ($util.Long)
                                    (message.joinedEventsCount = $util.Long.fromValue(object.joinedEventsCount)).unsigned = false;
                                else if (typeof object.joinedEventsCount === "string")
                                    message.joinedEventsCount = parseInt(object.joinedEventsCount, 10);
                                else if (typeof object.joinedEventsCount === "number")
                                    message.joinedEventsCount = object.joinedEventsCount;
                                else if (typeof object.joinedEventsCount === "object")
                                    message.joinedEventsCount = new $util.LongBits(object.joinedEventsCount.low >>> 0, object.joinedEventsCount.high >>> 0).toNumber();
                            if (object.unjoinedEventsCount != null)
                                if ($util.Long)
                                    (message.unjoinedEventsCount = $util.Long.fromValue(object.unjoinedEventsCount)).unsigned = false;
                                else if (typeof object.unjoinedEventsCount === "string")
                                    message.unjoinedEventsCount = parseInt(object.unjoinedEventsCount, 10);
                                else if (typeof object.unjoinedEventsCount === "number")
                                    message.unjoinedEventsCount = object.unjoinedEventsCount;
                                else if (typeof object.unjoinedEventsCount === "object")
                                    message.unjoinedEventsCount = new $util.LongBits(object.unjoinedEventsCount.low >>> 0, object.unjoinedEventsCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportUserEventsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ImportUserEventsResponse} message ImportUserEventsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportUserEventsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errorSamples = [];
                            if (options.defaults) {
                                object.errorConfig = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.joinedEventsCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.joinedEventsCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.unjoinedEventsCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.unjoinedEventsCount = options.longs === String ? "0" : 0;
                            }
                            if (message.errorSamples && message.errorSamples.length) {
                                object.errorSamples = [];
                                for (var j = 0; j < message.errorSamples.length; ++j)
                                    object.errorSamples[j] = $root.google.rpc.Status.toObject(message.errorSamples[j], options);
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig"))
                                object.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.toObject(message.errorConfig, options);
                            if (message.joinedEventsCount != null && message.hasOwnProperty("joinedEventsCount"))
                                if (typeof message.joinedEventsCount === "number")
                                    object.joinedEventsCount = options.longs === String ? String(message.joinedEventsCount) : message.joinedEventsCount;
                                else
                                    object.joinedEventsCount = options.longs === String ? $util.Long.prototype.toString.call(message.joinedEventsCount) : options.longs === Number ? new $util.LongBits(message.joinedEventsCount.low >>> 0, message.joinedEventsCount.high >>> 0).toNumber() : message.joinedEventsCount;
                            if (message.unjoinedEventsCount != null && message.hasOwnProperty("unjoinedEventsCount"))
                                if (typeof message.unjoinedEventsCount === "number")
                                    object.unjoinedEventsCount = options.longs === String ? String(message.unjoinedEventsCount) : message.unjoinedEventsCount;
                                else
                                    object.unjoinedEventsCount = options.longs === String ? $util.Long.prototype.toString.call(message.unjoinedEventsCount) : options.longs === Number ? new $util.LongBits(message.unjoinedEventsCount.low >>> 0, message.unjoinedEventsCount.high >>> 0).toNumber() : message.unjoinedEventsCount;
                            return object;
                        };
    
                        /**
                         * Converts this ImportUserEventsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportUserEventsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportUserEventsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportUserEventsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ImportUserEventsResponse";
                        };
    
                        return ImportUserEventsResponse;
                    })();
    
                    v1.ImportUserEventsMetadata = (function() {
    
                        /**
                         * Properties of an ImportUserEventsMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IImportUserEventsMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] ImportUserEventsMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] ImportUserEventsMetadata updateTime
                         * @property {number|Long|null} [successCount] ImportUserEventsMetadata successCount
                         * @property {number|Long|null} [failureCount] ImportUserEventsMetadata failureCount
                         */
    
                        /**
                         * Constructs a new ImportUserEventsMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an ImportUserEventsMetadata.
                         * @implements IImportUserEventsMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsMetadata=} [properties] Properties to set
                         */
                        function ImportUserEventsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportUserEventsMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @instance
                         */
                        ImportUserEventsMetadata.prototype.createTime = null;
    
                        /**
                         * ImportUserEventsMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @instance
                         */
                        ImportUserEventsMetadata.prototype.updateTime = null;
    
                        /**
                         * ImportUserEventsMetadata successCount.
                         * @member {number|Long} successCount
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @instance
                         */
                        ImportUserEventsMetadata.prototype.successCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * ImportUserEventsMetadata failureCount.
                         * @member {number|Long} failureCount
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @instance
                         */
                        ImportUserEventsMetadata.prototype.failureCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new ImportUserEventsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsMetadata} ImportUserEventsMetadata instance
                         */
                        ImportUserEventsMetadata.create = function create(properties) {
                            return new ImportUserEventsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportUserEventsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsMetadata} message ImportUserEventsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.successCount != null && Object.hasOwnProperty.call(message, "successCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.successCount);
                            if (message.failureCount != null && Object.hasOwnProperty.call(message, "failureCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.failureCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportUserEventsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsMetadata} message ImportUserEventsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportUserEventsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsMetadata} ImportUserEventsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ImportUserEventsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.successCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.failureCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportUserEventsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsMetadata} ImportUserEventsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportUserEventsMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportUserEventsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (!$util.isInteger(message.successCount) && !(message.successCount && $util.isInteger(message.successCount.low) && $util.isInteger(message.successCount.high)))
                                    return "successCount: integer|Long expected";
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (!$util.isInteger(message.failureCount) && !(message.failureCount && $util.isInteger(message.failureCount.low) && $util.isInteger(message.failureCount.high)))
                                    return "failureCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportUserEventsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ImportUserEventsMetadata} ImportUserEventsMetadata
                         */
                        ImportUserEventsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ImportUserEventsMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ImportUserEventsMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportUserEventsMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.successCount != null)
                                if ($util.Long)
                                    (message.successCount = $util.Long.fromValue(object.successCount)).unsigned = false;
                                else if (typeof object.successCount === "string")
                                    message.successCount = parseInt(object.successCount, 10);
                                else if (typeof object.successCount === "number")
                                    message.successCount = object.successCount;
                                else if (typeof object.successCount === "object")
                                    message.successCount = new $util.LongBits(object.successCount.low >>> 0, object.successCount.high >>> 0).toNumber();
                            if (object.failureCount != null)
                                if ($util.Long)
                                    (message.failureCount = $util.Long.fromValue(object.failureCount)).unsigned = false;
                                else if (typeof object.failureCount === "string")
                                    message.failureCount = parseInt(object.failureCount, 10);
                                else if (typeof object.failureCount === "number")
                                    message.failureCount = object.failureCount;
                                else if (typeof object.failureCount === "object")
                                    message.failureCount = new $util.LongBits(object.failureCount.low >>> 0, object.failureCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportUserEventsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ImportUserEventsMetadata} message ImportUserEventsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportUserEventsMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.successCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.successCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.failureCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.failureCount = options.longs === String ? "0" : 0;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (typeof message.successCount === "number")
                                    object.successCount = options.longs === String ? String(message.successCount) : message.successCount;
                                else
                                    object.successCount = options.longs === String ? $util.Long.prototype.toString.call(message.successCount) : options.longs === Number ? new $util.LongBits(message.successCount.low >>> 0, message.successCount.high >>> 0).toNumber() : message.successCount;
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (typeof message.failureCount === "number")
                                    object.failureCount = options.longs === String ? String(message.failureCount) : message.failureCount;
                                else
                                    object.failureCount = options.longs === String ? $util.Long.prototype.toString.call(message.failureCount) : options.longs === Number ? new $util.LongBits(message.failureCount.low >>> 0, message.failureCount.high >>> 0).toNumber() : message.failureCount;
                            return object;
                        };
    
                        /**
                         * Converts this ImportUserEventsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportUserEventsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportUserEventsMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ImportUserEventsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportUserEventsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ImportUserEventsMetadata";
                        };
    
                        return ImportUserEventsMetadata;
                    })();
    
                    v1.ImportDocumentsMetadata = (function() {
    
                        /**
                         * Properties of an ImportDocumentsMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IImportDocumentsMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] ImportDocumentsMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] ImportDocumentsMetadata updateTime
                         * @property {number|Long|null} [successCount] ImportDocumentsMetadata successCount
                         * @property {number|Long|null} [failureCount] ImportDocumentsMetadata failureCount
                         */
    
                        /**
                         * Constructs a new ImportDocumentsMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an ImportDocumentsMetadata.
                         * @implements IImportDocumentsMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsMetadata=} [properties] Properties to set
                         */
                        function ImportDocumentsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportDocumentsMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @instance
                         */
                        ImportDocumentsMetadata.prototype.createTime = null;
    
                        /**
                         * ImportDocumentsMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @instance
                         */
                        ImportDocumentsMetadata.prototype.updateTime = null;
    
                        /**
                         * ImportDocumentsMetadata successCount.
                         * @member {number|Long} successCount
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @instance
                         */
                        ImportDocumentsMetadata.prototype.successCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * ImportDocumentsMetadata failureCount.
                         * @member {number|Long} failureCount
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @instance
                         */
                        ImportDocumentsMetadata.prototype.failureCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new ImportDocumentsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsMetadata} ImportDocumentsMetadata instance
                         */
                        ImportDocumentsMetadata.create = function create(properties) {
                            return new ImportDocumentsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportDocumentsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsMetadata} message ImportDocumentsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.successCount != null && Object.hasOwnProperty.call(message, "successCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.successCount);
                            if (message.failureCount != null && Object.hasOwnProperty.call(message, "failureCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.failureCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportDocumentsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsMetadata} message ImportDocumentsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportDocumentsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsMetadata} ImportDocumentsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ImportDocumentsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.successCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.failureCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportDocumentsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsMetadata} ImportDocumentsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportDocumentsMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportDocumentsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (!$util.isInteger(message.successCount) && !(message.successCount && $util.isInteger(message.successCount.low) && $util.isInteger(message.successCount.high)))
                                    return "successCount: integer|Long expected";
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (!$util.isInteger(message.failureCount) && !(message.failureCount && $util.isInteger(message.failureCount.low) && $util.isInteger(message.failureCount.high)))
                                    return "failureCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportDocumentsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsMetadata} ImportDocumentsMetadata
                         */
                        ImportDocumentsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ImportDocumentsMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ImportDocumentsMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.successCount != null)
                                if ($util.Long)
                                    (message.successCount = $util.Long.fromValue(object.successCount)).unsigned = false;
                                else if (typeof object.successCount === "string")
                                    message.successCount = parseInt(object.successCount, 10);
                                else if (typeof object.successCount === "number")
                                    message.successCount = object.successCount;
                                else if (typeof object.successCount === "object")
                                    message.successCount = new $util.LongBits(object.successCount.low >>> 0, object.successCount.high >>> 0).toNumber();
                            if (object.failureCount != null)
                                if ($util.Long)
                                    (message.failureCount = $util.Long.fromValue(object.failureCount)).unsigned = false;
                                else if (typeof object.failureCount === "string")
                                    message.failureCount = parseInt(object.failureCount, 10);
                                else if (typeof object.failureCount === "number")
                                    message.failureCount = object.failureCount;
                                else if (typeof object.failureCount === "object")
                                    message.failureCount = new $util.LongBits(object.failureCount.low >>> 0, object.failureCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportDocumentsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ImportDocumentsMetadata} message ImportDocumentsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportDocumentsMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.successCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.successCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.failureCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.failureCount = options.longs === String ? "0" : 0;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (typeof message.successCount === "number")
                                    object.successCount = options.longs === String ? String(message.successCount) : message.successCount;
                                else
                                    object.successCount = options.longs === String ? $util.Long.prototype.toString.call(message.successCount) : options.longs === Number ? new $util.LongBits(message.successCount.low >>> 0, message.successCount.high >>> 0).toNumber() : message.successCount;
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (typeof message.failureCount === "number")
                                    object.failureCount = options.longs === String ? String(message.failureCount) : message.failureCount;
                                else
                                    object.failureCount = options.longs === String ? $util.Long.prototype.toString.call(message.failureCount) : options.longs === Number ? new $util.LongBits(message.failureCount.low >>> 0, message.failureCount.high >>> 0).toNumber() : message.failureCount;
                            return object;
                        };
    
                        /**
                         * Converts this ImportDocumentsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportDocumentsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportDocumentsMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportDocumentsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ImportDocumentsMetadata";
                        };
    
                        return ImportDocumentsMetadata;
                    })();
    
                    v1.ImportDocumentsRequest = (function() {
    
                        /**
                         * Properties of an ImportDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IImportDocumentsRequest
                         * @property {google.cloud.discoveryengine.v1.ImportDocumentsRequest.IInlineSource|null} [inlineSource] ImportDocumentsRequest inlineSource
                         * @property {google.cloud.discoveryengine.v1.IGcsSource|null} [gcsSource] ImportDocumentsRequest gcsSource
                         * @property {google.cloud.discoveryengine.v1.IBigQuerySource|null} [bigquerySource] ImportDocumentsRequest bigquerySource
                         * @property {string|null} [parent] ImportDocumentsRequest parent
                         * @property {google.cloud.discoveryengine.v1.IImportErrorConfig|null} [errorConfig] ImportDocumentsRequest errorConfig
                         * @property {google.cloud.discoveryengine.v1.ImportDocumentsRequest.ReconciliationMode|null} [reconciliationMode] ImportDocumentsRequest reconciliationMode
                         * @property {boolean|null} [autoGenerateIds] ImportDocumentsRequest autoGenerateIds
                         * @property {string|null} [idField] ImportDocumentsRequest idField
                         */
    
                        /**
                         * Constructs a new ImportDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an ImportDocumentsRequest.
                         * @implements IImportDocumentsRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsRequest=} [properties] Properties to set
                         */
                        function ImportDocumentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportDocumentsRequest inlineSource.
                         * @member {google.cloud.discoveryengine.v1.ImportDocumentsRequest.IInlineSource|null|undefined} inlineSource
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.inlineSource = null;
    
                        /**
                         * ImportDocumentsRequest gcsSource.
                         * @member {google.cloud.discoveryengine.v1.IGcsSource|null|undefined} gcsSource
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.gcsSource = null;
    
                        /**
                         * ImportDocumentsRequest bigquerySource.
                         * @member {google.cloud.discoveryengine.v1.IBigQuerySource|null|undefined} bigquerySource
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.bigquerySource = null;
    
                        /**
                         * ImportDocumentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.parent = "";
    
                        /**
                         * ImportDocumentsRequest errorConfig.
                         * @member {google.cloud.discoveryengine.v1.IImportErrorConfig|null|undefined} errorConfig
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.errorConfig = null;
    
                        /**
                         * ImportDocumentsRequest reconciliationMode.
                         * @member {google.cloud.discoveryengine.v1.ImportDocumentsRequest.ReconciliationMode} reconciliationMode
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.reconciliationMode = 0;
    
                        /**
                         * ImportDocumentsRequest autoGenerateIds.
                         * @member {boolean} autoGenerateIds
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.autoGenerateIds = false;
    
                        /**
                         * ImportDocumentsRequest idField.
                         * @member {string} idField
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.idField = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportDocumentsRequest source.
                         * @member {"inlineSource"|"gcsSource"|"bigquerySource"|undefined} source
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         */
                        Object.defineProperty(ImportDocumentsRequest.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["inlineSource", "gcsSource", "bigquerySource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportDocumentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsRequest} ImportDocumentsRequest instance
                         */
                        ImportDocumentsRequest.create = function create(properties) {
                            return new ImportDocumentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportDocumentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsRequest} message ImportDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.inlineSource != null && Object.hasOwnProperty.call(message, "inlineSource"))
                                $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource.encode(message.inlineSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.cloud.discoveryengine.v1.GcsSource.encode(message.gcsSource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.bigquerySource != null && Object.hasOwnProperty.call(message, "bigquerySource"))
                                $root.google.cloud.discoveryengine.v1.BigQuerySource.encode(message.bigquerySource, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.errorConfig != null && Object.hasOwnProperty.call(message, "errorConfig"))
                                $root.google.cloud.discoveryengine.v1.ImportErrorConfig.encode(message.errorConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.reconciliationMode != null && Object.hasOwnProperty.call(message, "reconciliationMode"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.reconciliationMode);
                            if (message.autoGenerateIds != null && Object.hasOwnProperty.call(message, "autoGenerateIds"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.autoGenerateIds);
                            if (message.idField != null && Object.hasOwnProperty.call(message, "idField"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.idField);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportDocumentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsRequest} message ImportDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportDocumentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsRequest} ImportDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.inlineSource = $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.gcsSource = $root.google.cloud.discoveryengine.v1.GcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.bigquerySource = $root.google.cloud.discoveryengine.v1.BigQuerySource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.reconciliationMode = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.autoGenerateIds = reader.bool();
                                        break;
                                    }
                                case 9: {
                                        message.idField = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportDocumentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsRequest} ImportDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportDocumentsRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportDocumentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.inlineSource != null && message.hasOwnProperty("inlineSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource.verify(message.inlineSource);
                                    if (error)
                                        return "inlineSource." + error;
                                }
                            }
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1.GcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.bigquerySource != null && message.hasOwnProperty("bigquerySource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1.BigQuerySource.verify(message.bigquerySource);
                                    if (error)
                                        return "bigquerySource." + error;
                                }
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig")) {
                                var error = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.verify(message.errorConfig);
                                if (error)
                                    return "errorConfig." + error;
                            }
                            if (message.reconciliationMode != null && message.hasOwnProperty("reconciliationMode"))
                                switch (message.reconciliationMode) {
                                default:
                                    return "reconciliationMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.autoGenerateIds != null && message.hasOwnProperty("autoGenerateIds"))
                                if (typeof message.autoGenerateIds !== "boolean")
                                    return "autoGenerateIds: boolean expected";
                            if (message.idField != null && message.hasOwnProperty("idField"))
                                if (!$util.isString(message.idField))
                                    return "idField: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportDocumentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsRequest} ImportDocumentsRequest
                         */
                        ImportDocumentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest();
                            if (object.inlineSource != null) {
                                if (typeof object.inlineSource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsRequest.inlineSource: object expected");
                                message.inlineSource = $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource.fromObject(object.inlineSource);
                            }
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsRequest.gcsSource: object expected");
                                message.gcsSource = $root.google.cloud.discoveryengine.v1.GcsSource.fromObject(object.gcsSource);
                            }
                            if (object.bigquerySource != null) {
                                if (typeof object.bigquerySource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsRequest.bigquerySource: object expected");
                                message.bigquerySource = $root.google.cloud.discoveryengine.v1.BigQuerySource.fromObject(object.bigquerySource);
                            }
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.errorConfig != null) {
                                if (typeof object.errorConfig !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsRequest.errorConfig: object expected");
                                message.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.fromObject(object.errorConfig);
                            }
                            switch (object.reconciliationMode) {
                            default:
                                if (typeof object.reconciliationMode === "number") {
                                    message.reconciliationMode = object.reconciliationMode;
                                    break;
                                }
                                break;
                            case "RECONCILIATION_MODE_UNSPECIFIED":
                            case 0:
                                message.reconciliationMode = 0;
                                break;
                            case "INCREMENTAL":
                            case 1:
                                message.reconciliationMode = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.reconciliationMode = 2;
                                break;
                            }
                            if (object.autoGenerateIds != null)
                                message.autoGenerateIds = Boolean(object.autoGenerateIds);
                            if (object.idField != null)
                                message.idField = String(object.idField);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportDocumentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ImportDocumentsRequest} message ImportDocumentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportDocumentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.errorConfig = null;
                                object.reconciliationMode = options.enums === String ? "RECONCILIATION_MODE_UNSPECIFIED" : 0;
                                object.autoGenerateIds = false;
                                object.idField = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.inlineSource != null && message.hasOwnProperty("inlineSource")) {
                                object.inlineSource = $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource.toObject(message.inlineSource, options);
                                if (options.oneofs)
                                    object.source = "inlineSource";
                            }
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.cloud.discoveryengine.v1.GcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            if (message.bigquerySource != null && message.hasOwnProperty("bigquerySource")) {
                                object.bigquerySource = $root.google.cloud.discoveryengine.v1.BigQuerySource.toObject(message.bigquerySource, options);
                                if (options.oneofs)
                                    object.source = "bigquerySource";
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig"))
                                object.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.toObject(message.errorConfig, options);
                            if (message.reconciliationMode != null && message.hasOwnProperty("reconciliationMode"))
                                object.reconciliationMode = options.enums === String ? $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.ReconciliationMode[message.reconciliationMode] === undefined ? message.reconciliationMode : $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.ReconciliationMode[message.reconciliationMode] : message.reconciliationMode;
                            if (message.autoGenerateIds != null && message.hasOwnProperty("autoGenerateIds"))
                                object.autoGenerateIds = message.autoGenerateIds;
                            if (message.idField != null && message.hasOwnProperty("idField"))
                                object.idField = message.idField;
                            return object;
                        };
    
                        /**
                         * Converts this ImportDocumentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportDocumentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportDocumentsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportDocumentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ImportDocumentsRequest";
                        };
    
                        ImportDocumentsRequest.InlineSource = (function() {
    
                            /**
                             * Properties of an InlineSource.
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                             * @interface IInlineSource
                             * @property {Array.<google.cloud.discoveryengine.v1.IDocument>|null} [documents] InlineSource documents
                             */
    
                            /**
                             * Constructs a new InlineSource.
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest
                             * @classdesc Represents an InlineSource.
                             * @implements IInlineSource
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1.ImportDocumentsRequest.IInlineSource=} [properties] Properties to set
                             */
                            function InlineSource(properties) {
                                this.documents = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * InlineSource documents.
                             * @member {Array.<google.cloud.discoveryengine.v1.IDocument>} documents
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @instance
                             */
                            InlineSource.prototype.documents = $util.emptyArray;
    
                            /**
                             * Creates a new InlineSource instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1.ImportDocumentsRequest.IInlineSource=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource} InlineSource instance
                             */
                            InlineSource.create = function create(properties) {
                                return new InlineSource(properties);
                            };
    
                            /**
                             * Encodes the specified InlineSource message. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1.ImportDocumentsRequest.IInlineSource} message InlineSource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InlineSource.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.documents != null && message.documents.length)
                                    for (var i = 0; i < message.documents.length; ++i)
                                        $root.google.cloud.discoveryengine.v1.Document.encode(message.documents[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified InlineSource message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1.ImportDocumentsRequest.IInlineSource} message InlineSource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InlineSource.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an InlineSource message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource} InlineSource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InlineSource.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.documents && message.documents.length))
                                                message.documents = [];
                                            message.documents.push($root.google.cloud.discoveryengine.v1.Document.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an InlineSource message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource} InlineSource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InlineSource.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an InlineSource message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            InlineSource.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.documents != null && message.hasOwnProperty("documents")) {
                                    if (!Array.isArray(message.documents))
                                        return "documents: array expected";
                                    for (var i = 0; i < message.documents.length; ++i) {
                                        var error = $root.google.cloud.discoveryengine.v1.Document.verify(message.documents[i]);
                                        if (error)
                                            return "documents." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an InlineSource message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource} InlineSource
                             */
                            InlineSource.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource();
                                if (object.documents) {
                                    if (!Array.isArray(object.documents))
                                        throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource.documents: array expected");
                                    message.documents = [];
                                    for (var i = 0; i < object.documents.length; ++i) {
                                        if (typeof object.documents[i] !== "object")
                                            throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource.documents: object expected");
                                        message.documents[i] = $root.google.cloud.discoveryengine.v1.Document.fromObject(object.documents[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an InlineSource message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource} message InlineSource
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            InlineSource.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.documents = [];
                                if (message.documents && message.documents.length) {
                                    object.documents = [];
                                    for (var j = 0; j < message.documents.length; ++j)
                                        object.documents[j] = $root.google.cloud.discoveryengine.v1.Document.toObject(message.documents[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this InlineSource to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            InlineSource.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for InlineSource
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            InlineSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ImportDocumentsRequest.InlineSource";
                            };
    
                            return InlineSource;
                        })();
    
                        /**
                         * ReconciliationMode enum.
                         * @name google.cloud.discoveryengine.v1.ImportDocumentsRequest.ReconciliationMode
                         * @enum {number}
                         * @property {number} RECONCILIATION_MODE_UNSPECIFIED=0 RECONCILIATION_MODE_UNSPECIFIED value
                         * @property {number} INCREMENTAL=1 INCREMENTAL value
                         * @property {number} FULL=2 FULL value
                         */
                        ImportDocumentsRequest.ReconciliationMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RECONCILIATION_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "INCREMENTAL"] = 1;
                            values[valuesById[2] = "FULL"] = 2;
                            return values;
                        })();
    
                        return ImportDocumentsRequest;
                    })();
    
                    v1.ImportDocumentsResponse = (function() {
    
                        /**
                         * Properties of an ImportDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IImportDocumentsResponse
                         * @property {Array.<google.rpc.IStatus>|null} [errorSamples] ImportDocumentsResponse errorSamples
                         * @property {google.cloud.discoveryengine.v1.IImportErrorConfig|null} [errorConfig] ImportDocumentsResponse errorConfig
                         */
    
                        /**
                         * Constructs a new ImportDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an ImportDocumentsResponse.
                         * @implements IImportDocumentsResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsResponse=} [properties] Properties to set
                         */
                        function ImportDocumentsResponse(properties) {
                            this.errorSamples = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportDocumentsResponse errorSamples.
                         * @member {Array.<google.rpc.IStatus>} errorSamples
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @instance
                         */
                        ImportDocumentsResponse.prototype.errorSamples = $util.emptyArray;
    
                        /**
                         * ImportDocumentsResponse errorConfig.
                         * @member {google.cloud.discoveryengine.v1.IImportErrorConfig|null|undefined} errorConfig
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @instance
                         */
                        ImportDocumentsResponse.prototype.errorConfig = null;
    
                        /**
                         * Creates a new ImportDocumentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsResponse} ImportDocumentsResponse instance
                         */
                        ImportDocumentsResponse.create = function create(properties) {
                            return new ImportDocumentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportDocumentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsResponse} message ImportDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.errorSamples != null && message.errorSamples.length)
                                for (var i = 0; i < message.errorSamples.length; ++i)
                                    $root.google.rpc.Status.encode(message.errorSamples[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.errorConfig != null && Object.hasOwnProperty.call(message, "errorConfig"))
                                $root.google.cloud.discoveryengine.v1.ImportErrorConfig.encode(message.errorConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ImportDocumentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IImportDocumentsResponse} message ImportDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportDocumentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsResponse} ImportDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ImportDocumentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.errorSamples && message.errorSamples.length))
                                            message.errorSamples = [];
                                        message.errorSamples.push($root.google.rpc.Status.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportDocumentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsResponse} ImportDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportDocumentsResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportDocumentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.errorSamples != null && message.hasOwnProperty("errorSamples")) {
                                if (!Array.isArray(message.errorSamples))
                                    return "errorSamples: array expected";
                                for (var i = 0; i < message.errorSamples.length; ++i) {
                                    var error = $root.google.rpc.Status.verify(message.errorSamples[i]);
                                    if (error)
                                        return "errorSamples." + error;
                                }
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig")) {
                                var error = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.verify(message.errorConfig);
                                if (error)
                                    return "errorConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportDocumentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ImportDocumentsResponse} ImportDocumentsResponse
                         */
                        ImportDocumentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ImportDocumentsResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ImportDocumentsResponse();
                            if (object.errorSamples) {
                                if (!Array.isArray(object.errorSamples))
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsResponse.errorSamples: array expected");
                                message.errorSamples = [];
                                for (var i = 0; i < object.errorSamples.length; ++i) {
                                    if (typeof object.errorSamples[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsResponse.errorSamples: object expected");
                                    message.errorSamples[i] = $root.google.rpc.Status.fromObject(object.errorSamples[i]);
                                }
                            }
                            if (object.errorConfig != null) {
                                if (typeof object.errorConfig !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.ImportDocumentsResponse.errorConfig: object expected");
                                message.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.fromObject(object.errorConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportDocumentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ImportDocumentsResponse} message ImportDocumentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportDocumentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errorSamples = [];
                            if (options.defaults)
                                object.errorConfig = null;
                            if (message.errorSamples && message.errorSamples.length) {
                                object.errorSamples = [];
                                for (var j = 0; j < message.errorSamples.length; ++j)
                                    object.errorSamples[j] = $root.google.rpc.Status.toObject(message.errorSamples[j], options);
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig"))
                                object.errorConfig = $root.google.cloud.discoveryengine.v1.ImportErrorConfig.toObject(message.errorConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this ImportDocumentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportDocumentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportDocumentsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ImportDocumentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportDocumentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ImportDocumentsResponse";
                        };
    
                        return ImportDocumentsResponse;
                    })();
    
                    v1.UserEvent = (function() {
    
                        /**
                         * Properties of a UserEvent.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IUserEvent
                         * @property {string|null} [eventType] UserEvent eventType
                         * @property {string|null} [userPseudoId] UserEvent userPseudoId
                         * @property {google.protobuf.ITimestamp|null} [eventTime] UserEvent eventTime
                         * @property {google.cloud.discoveryengine.v1.IUserInfo|null} [userInfo] UserEvent userInfo
                         * @property {boolean|null} [directUserRequest] UserEvent directUserRequest
                         * @property {string|null} [sessionId] UserEvent sessionId
                         * @property {google.cloud.discoveryengine.v1.IPageInfo|null} [pageInfo] UserEvent pageInfo
                         * @property {string|null} [attributionToken] UserEvent attributionToken
                         * @property {string|null} [filter] UserEvent filter
                         * @property {Array.<google.cloud.discoveryengine.v1.IDocumentInfo>|null} [documents] UserEvent documents
                         * @property {google.cloud.discoveryengine.v1.IPanelInfo|null} [panel] UserEvent panel
                         * @property {google.cloud.discoveryengine.v1.ISearchInfo|null} [searchInfo] UserEvent searchInfo
                         * @property {google.cloud.discoveryengine.v1.ICompletionInfo|null} [completionInfo] UserEvent completionInfo
                         * @property {google.cloud.discoveryengine.v1.ITransactionInfo|null} [transactionInfo] UserEvent transactionInfo
                         * @property {Array.<string>|null} [tagIds] UserEvent tagIds
                         * @property {Array.<string>|null} [promotionIds] UserEvent promotionIds
                         * @property {Object.<string,google.cloud.discoveryengine.v1.ICustomAttribute>|null} [attributes] UserEvent attributes
                         * @property {google.cloud.discoveryengine.v1.IMediaInfo|null} [mediaInfo] UserEvent mediaInfo
                         */
    
                        /**
                         * Constructs a new UserEvent.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a UserEvent.
                         * @implements IUserEvent
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IUserEvent=} [properties] Properties to set
                         */
                        function UserEvent(properties) {
                            this.documents = [];
                            this.tagIds = [];
                            this.promotionIds = [];
                            this.attributes = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserEvent eventType.
                         * @member {string} eventType
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.eventType = "";
    
                        /**
                         * UserEvent userPseudoId.
                         * @member {string} userPseudoId
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.userPseudoId = "";
    
                        /**
                         * UserEvent eventTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} eventTime
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.eventTime = null;
    
                        /**
                         * UserEvent userInfo.
                         * @member {google.cloud.discoveryengine.v1.IUserInfo|null|undefined} userInfo
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.userInfo = null;
    
                        /**
                         * UserEvent directUserRequest.
                         * @member {boolean} directUserRequest
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.directUserRequest = false;
    
                        /**
                         * UserEvent sessionId.
                         * @member {string} sessionId
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.sessionId = "";
    
                        /**
                         * UserEvent pageInfo.
                         * @member {google.cloud.discoveryengine.v1.IPageInfo|null|undefined} pageInfo
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.pageInfo = null;
    
                        /**
                         * UserEvent attributionToken.
                         * @member {string} attributionToken
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.attributionToken = "";
    
                        /**
                         * UserEvent filter.
                         * @member {string} filter
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.filter = "";
    
                        /**
                         * UserEvent documents.
                         * @member {Array.<google.cloud.discoveryengine.v1.IDocumentInfo>} documents
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.documents = $util.emptyArray;
    
                        /**
                         * UserEvent panel.
                         * @member {google.cloud.discoveryengine.v1.IPanelInfo|null|undefined} panel
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.panel = null;
    
                        /**
                         * UserEvent searchInfo.
                         * @member {google.cloud.discoveryengine.v1.ISearchInfo|null|undefined} searchInfo
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.searchInfo = null;
    
                        /**
                         * UserEvent completionInfo.
                         * @member {google.cloud.discoveryengine.v1.ICompletionInfo|null|undefined} completionInfo
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.completionInfo = null;
    
                        /**
                         * UserEvent transactionInfo.
                         * @member {google.cloud.discoveryengine.v1.ITransactionInfo|null|undefined} transactionInfo
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.transactionInfo = null;
    
                        /**
                         * UserEvent tagIds.
                         * @member {Array.<string>} tagIds
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.tagIds = $util.emptyArray;
    
                        /**
                         * UserEvent promotionIds.
                         * @member {Array.<string>} promotionIds
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.promotionIds = $util.emptyArray;
    
                        /**
                         * UserEvent attributes.
                         * @member {Object.<string,google.cloud.discoveryengine.v1.ICustomAttribute>} attributes
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.attributes = $util.emptyObject;
    
                        /**
                         * UserEvent mediaInfo.
                         * @member {google.cloud.discoveryengine.v1.IMediaInfo|null|undefined} mediaInfo
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.mediaInfo = null;
    
                        /**
                         * Creates a new UserEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUserEvent=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.UserEvent} UserEvent instance
                         */
                        UserEvent.create = function create(properties) {
                            return new UserEvent(properties);
                        };
    
                        /**
                         * Encodes the specified UserEvent message. Does not implicitly {@link google.cloud.discoveryengine.v1.UserEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUserEvent} message UserEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventType != null && Object.hasOwnProperty.call(message, "eventType"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.eventType);
                            if (message.userPseudoId != null && Object.hasOwnProperty.call(message, "userPseudoId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.userPseudoId);
                            if (message.eventTime != null && Object.hasOwnProperty.call(message, "eventTime"))
                                $root.google.protobuf.Timestamp.encode(message.eventTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.userInfo != null && Object.hasOwnProperty.call(message, "userInfo"))
                                $root.google.cloud.discoveryengine.v1.UserInfo.encode(message.userInfo, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.directUserRequest != null && Object.hasOwnProperty.call(message, "directUserRequest"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.directUserRequest);
                            if (message.sessionId != null && Object.hasOwnProperty.call(message, "sessionId"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.sessionId);
                            if (message.pageInfo != null && Object.hasOwnProperty.call(message, "pageInfo"))
                                $root.google.cloud.discoveryengine.v1.PageInfo.encode(message.pageInfo, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.attributionToken != null && Object.hasOwnProperty.call(message, "attributionToken"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.attributionToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.filter);
                            if (message.documents != null && message.documents.length)
                                for (var i = 0; i < message.documents.length; ++i)
                                    $root.google.cloud.discoveryengine.v1.DocumentInfo.encode(message.documents[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.panel != null && Object.hasOwnProperty.call(message, "panel"))
                                $root.google.cloud.discoveryengine.v1.PanelInfo.encode(message.panel, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.searchInfo != null && Object.hasOwnProperty.call(message, "searchInfo"))
                                $root.google.cloud.discoveryengine.v1.SearchInfo.encode(message.searchInfo, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.completionInfo != null && Object.hasOwnProperty.call(message, "completionInfo"))
                                $root.google.cloud.discoveryengine.v1.CompletionInfo.encode(message.completionInfo, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.transactionInfo != null && Object.hasOwnProperty.call(message, "transactionInfo"))
                                $root.google.cloud.discoveryengine.v1.TransactionInfo.encode(message.transactionInfo, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.tagIds != null && message.tagIds.length)
                                for (var i = 0; i < message.tagIds.length; ++i)
                                    writer.uint32(/* id 15, wireType 2 =*/122).string(message.tagIds[i]);
                            if (message.promotionIds != null && message.promotionIds.length)
                                for (var i = 0; i < message.promotionIds.length; ++i)
                                    writer.uint32(/* id 16, wireType 2 =*/130).string(message.promotionIds[i]);
                            if (message.attributes != null && Object.hasOwnProperty.call(message, "attributes"))
                                for (var keys = Object.keys(message.attributes), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 17, wireType 2 =*/138).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.discoveryengine.v1.CustomAttribute.encode(message.attributes[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.mediaInfo != null && Object.hasOwnProperty.call(message, "mediaInfo"))
                                $root.google.cloud.discoveryengine.v1.MediaInfo.encode(message.mediaInfo, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserEvent message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.UserEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUserEvent} message UserEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.UserEvent} UserEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.UserEvent(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.eventType = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userPseudoId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.eventTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.userInfo = $root.google.cloud.discoveryengine.v1.UserInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.directUserRequest = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.sessionId = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.pageInfo = $root.google.cloud.discoveryengine.v1.PageInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.attributionToken = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 10: {
                                        if (!(message.documents && message.documents.length))
                                            message.documents = [];
                                        message.documents.push($root.google.cloud.discoveryengine.v1.DocumentInfo.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 11: {
                                        message.panel = $root.google.cloud.discoveryengine.v1.PanelInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.searchInfo = $root.google.cloud.discoveryengine.v1.SearchInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.completionInfo = $root.google.cloud.discoveryengine.v1.CompletionInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.transactionInfo = $root.google.cloud.discoveryengine.v1.TransactionInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        if (!(message.tagIds && message.tagIds.length))
                                            message.tagIds = [];
                                        message.tagIds.push(reader.string());
                                        break;
                                    }
                                case 16: {
                                        if (!(message.promotionIds && message.promotionIds.length))
                                            message.promotionIds = [];
                                        message.promotionIds.push(reader.string());
                                        break;
                                    }
                                case 17: {
                                        if (message.attributes === $util.emptyObject)
                                            message.attributes = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.discoveryengine.v1.CustomAttribute.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.attributes[key] = value;
                                        break;
                                    }
                                case 18: {
                                        message.mediaInfo = $root.google.cloud.discoveryengine.v1.MediaInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.UserEvent} UserEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserEvent message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                if (!$util.isString(message.eventType))
                                    return "eventType: string expected";
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                if (!$util.isString(message.userPseudoId))
                                    return "userPseudoId: string expected";
                            if (message.eventTime != null && message.hasOwnProperty("eventTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.eventTime);
                                if (error)
                                    return "eventTime." + error;
                            }
                            if (message.userInfo != null && message.hasOwnProperty("userInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1.UserInfo.verify(message.userInfo);
                                if (error)
                                    return "userInfo." + error;
                            }
                            if (message.directUserRequest != null && message.hasOwnProperty("directUserRequest"))
                                if (typeof message.directUserRequest !== "boolean")
                                    return "directUserRequest: boolean expected";
                            if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                if (!$util.isString(message.sessionId))
                                    return "sessionId: string expected";
                            if (message.pageInfo != null && message.hasOwnProperty("pageInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1.PageInfo.verify(message.pageInfo);
                                if (error)
                                    return "pageInfo." + error;
                            }
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                if (!$util.isString(message.attributionToken))
                                    return "attributionToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.documents != null && message.hasOwnProperty("documents")) {
                                if (!Array.isArray(message.documents))
                                    return "documents: array expected";
                                for (var i = 0; i < message.documents.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1.DocumentInfo.verify(message.documents[i]);
                                    if (error)
                                        return "documents." + error;
                                }
                            }
                            if (message.panel != null && message.hasOwnProperty("panel")) {
                                var error = $root.google.cloud.discoveryengine.v1.PanelInfo.verify(message.panel);
                                if (error)
                                    return "panel." + error;
                            }
                            if (message.searchInfo != null && message.hasOwnProperty("searchInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1.SearchInfo.verify(message.searchInfo);
                                if (error)
                                    return "searchInfo." + error;
                            }
                            if (message.completionInfo != null && message.hasOwnProperty("completionInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1.CompletionInfo.verify(message.completionInfo);
                                if (error)
                                    return "completionInfo." + error;
                            }
                            if (message.transactionInfo != null && message.hasOwnProperty("transactionInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1.TransactionInfo.verify(message.transactionInfo);
                                if (error)
                                    return "transactionInfo." + error;
                            }
                            if (message.tagIds != null && message.hasOwnProperty("tagIds")) {
                                if (!Array.isArray(message.tagIds))
                                    return "tagIds: array expected";
                                for (var i = 0; i < message.tagIds.length; ++i)
                                    if (!$util.isString(message.tagIds[i]))
                                        return "tagIds: string[] expected";
                            }
                            if (message.promotionIds != null && message.hasOwnProperty("promotionIds")) {
                                if (!Array.isArray(message.promotionIds))
                                    return "promotionIds: array expected";
                                for (var i = 0; i < message.promotionIds.length; ++i)
                                    if (!$util.isString(message.promotionIds[i]))
                                        return "promotionIds: string[] expected";
                            }
                            if (message.attributes != null && message.hasOwnProperty("attributes")) {
                                if (!$util.isObject(message.attributes))
                                    return "attributes: object expected";
                                var key = Object.keys(message.attributes);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1.CustomAttribute.verify(message.attributes[key[i]]);
                                    if (error)
                                        return "attributes." + error;
                                }
                            }
                            if (message.mediaInfo != null && message.hasOwnProperty("mediaInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1.MediaInfo.verify(message.mediaInfo);
                                if (error)
                                    return "mediaInfo." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a UserEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.UserEvent} UserEvent
                         */
                        UserEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.UserEvent)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.UserEvent();
                            if (object.eventType != null)
                                message.eventType = String(object.eventType);
                            if (object.userPseudoId != null)
                                message.userPseudoId = String(object.userPseudoId);
                            if (object.eventTime != null) {
                                if (typeof object.eventTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.eventTime: object expected");
                                message.eventTime = $root.google.protobuf.Timestamp.fromObject(object.eventTime);
                            }
                            if (object.userInfo != null) {
                                if (typeof object.userInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.userInfo: object expected");
                                message.userInfo = $root.google.cloud.discoveryengine.v1.UserInfo.fromObject(object.userInfo);
                            }
                            if (object.directUserRequest != null)
                                message.directUserRequest = Boolean(object.directUserRequest);
                            if (object.sessionId != null)
                                message.sessionId = String(object.sessionId);
                            if (object.pageInfo != null) {
                                if (typeof object.pageInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.pageInfo: object expected");
                                message.pageInfo = $root.google.cloud.discoveryengine.v1.PageInfo.fromObject(object.pageInfo);
                            }
                            if (object.attributionToken != null)
                                message.attributionToken = String(object.attributionToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.documents) {
                                if (!Array.isArray(object.documents))
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.documents: array expected");
                                message.documents = [];
                                for (var i = 0; i < object.documents.length; ++i) {
                                    if (typeof object.documents[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.documents: object expected");
                                    message.documents[i] = $root.google.cloud.discoveryengine.v1.DocumentInfo.fromObject(object.documents[i]);
                                }
                            }
                            if (object.panel != null) {
                                if (typeof object.panel !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.panel: object expected");
                                message.panel = $root.google.cloud.discoveryengine.v1.PanelInfo.fromObject(object.panel);
                            }
                            if (object.searchInfo != null) {
                                if (typeof object.searchInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.searchInfo: object expected");
                                message.searchInfo = $root.google.cloud.discoveryengine.v1.SearchInfo.fromObject(object.searchInfo);
                            }
                            if (object.completionInfo != null) {
                                if (typeof object.completionInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.completionInfo: object expected");
                                message.completionInfo = $root.google.cloud.discoveryengine.v1.CompletionInfo.fromObject(object.completionInfo);
                            }
                            if (object.transactionInfo != null) {
                                if (typeof object.transactionInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.transactionInfo: object expected");
                                message.transactionInfo = $root.google.cloud.discoveryengine.v1.TransactionInfo.fromObject(object.transactionInfo);
                            }
                            if (object.tagIds) {
                                if (!Array.isArray(object.tagIds))
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.tagIds: array expected");
                                message.tagIds = [];
                                for (var i = 0; i < object.tagIds.length; ++i)
                                    message.tagIds[i] = String(object.tagIds[i]);
                            }
                            if (object.promotionIds) {
                                if (!Array.isArray(object.promotionIds))
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.promotionIds: array expected");
                                message.promotionIds = [];
                                for (var i = 0; i < object.promotionIds.length; ++i)
                                    message.promotionIds[i] = String(object.promotionIds[i]);
                            }
                            if (object.attributes) {
                                if (typeof object.attributes !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.attributes: object expected");
                                message.attributes = {};
                                for (var keys = Object.keys(object.attributes), i = 0; i < keys.length; ++i) {
                                    if (typeof object.attributes[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.attributes: object expected");
                                    message.attributes[keys[i]] = $root.google.cloud.discoveryengine.v1.CustomAttribute.fromObject(object.attributes[keys[i]]);
                                }
                            }
                            if (object.mediaInfo != null) {
                                if (typeof object.mediaInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UserEvent.mediaInfo: object expected");
                                message.mediaInfo = $root.google.cloud.discoveryengine.v1.MediaInfo.fromObject(object.mediaInfo);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @static
                         * @param {google.cloud.discoveryengine.v1.UserEvent} message UserEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.documents = [];
                                object.tagIds = [];
                                object.promotionIds = [];
                            }
                            if (options.objects || options.defaults)
                                object.attributes = {};
                            if (options.defaults) {
                                object.eventType = "";
                                object.userPseudoId = "";
                                object.eventTime = null;
                                object.userInfo = null;
                                object.directUserRequest = false;
                                object.sessionId = "";
                                object.pageInfo = null;
                                object.attributionToken = "";
                                object.filter = "";
                                object.panel = null;
                                object.searchInfo = null;
                                object.completionInfo = null;
                                object.transactionInfo = null;
                                object.mediaInfo = null;
                            }
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                object.eventType = message.eventType;
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                object.userPseudoId = message.userPseudoId;
                            if (message.eventTime != null && message.hasOwnProperty("eventTime"))
                                object.eventTime = $root.google.protobuf.Timestamp.toObject(message.eventTime, options);
                            if (message.userInfo != null && message.hasOwnProperty("userInfo"))
                                object.userInfo = $root.google.cloud.discoveryengine.v1.UserInfo.toObject(message.userInfo, options);
                            if (message.directUserRequest != null && message.hasOwnProperty("directUserRequest"))
                                object.directUserRequest = message.directUserRequest;
                            if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                object.sessionId = message.sessionId;
                            if (message.pageInfo != null && message.hasOwnProperty("pageInfo"))
                                object.pageInfo = $root.google.cloud.discoveryengine.v1.PageInfo.toObject(message.pageInfo, options);
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                object.attributionToken = message.attributionToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.documents && message.documents.length) {
                                object.documents = [];
                                for (var j = 0; j < message.documents.length; ++j)
                                    object.documents[j] = $root.google.cloud.discoveryengine.v1.DocumentInfo.toObject(message.documents[j], options);
                            }
                            if (message.panel != null && message.hasOwnProperty("panel"))
                                object.panel = $root.google.cloud.discoveryengine.v1.PanelInfo.toObject(message.panel, options);
                            if (message.searchInfo != null && message.hasOwnProperty("searchInfo"))
                                object.searchInfo = $root.google.cloud.discoveryengine.v1.SearchInfo.toObject(message.searchInfo, options);
                            if (message.completionInfo != null && message.hasOwnProperty("completionInfo"))
                                object.completionInfo = $root.google.cloud.discoveryengine.v1.CompletionInfo.toObject(message.completionInfo, options);
                            if (message.transactionInfo != null && message.hasOwnProperty("transactionInfo"))
                                object.transactionInfo = $root.google.cloud.discoveryengine.v1.TransactionInfo.toObject(message.transactionInfo, options);
                            if (message.tagIds && message.tagIds.length) {
                                object.tagIds = [];
                                for (var j = 0; j < message.tagIds.length; ++j)
                                    object.tagIds[j] = message.tagIds[j];
                            }
                            if (message.promotionIds && message.promotionIds.length) {
                                object.promotionIds = [];
                                for (var j = 0; j < message.promotionIds.length; ++j)
                                    object.promotionIds[j] = message.promotionIds[j];
                            }
                            var keys2;
                            if (message.attributes && (keys2 = Object.keys(message.attributes)).length) {
                                object.attributes = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.attributes[keys2[j]] = $root.google.cloud.discoveryengine.v1.CustomAttribute.toObject(message.attributes[keys2[j]], options);
                            }
                            if (message.mediaInfo != null && message.hasOwnProperty("mediaInfo"))
                                object.mediaInfo = $root.google.cloud.discoveryengine.v1.MediaInfo.toObject(message.mediaInfo, options);
                            return object;
                        };
    
                        /**
                         * Converts this UserEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.UserEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.UserEvent";
                        };
    
                        return UserEvent;
                    })();
    
                    v1.PageInfo = (function() {
    
                        /**
                         * Properties of a PageInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IPageInfo
                         * @property {string|null} [pageviewId] PageInfo pageviewId
                         * @property {string|null} [pageCategory] PageInfo pageCategory
                         * @property {string|null} [uri] PageInfo uri
                         * @property {string|null} [referrerUri] PageInfo referrerUri
                         */
    
                        /**
                         * Constructs a new PageInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a PageInfo.
                         * @implements IPageInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IPageInfo=} [properties] Properties to set
                         */
                        function PageInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PageInfo pageviewId.
                         * @member {string} pageviewId
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @instance
                         */
                        PageInfo.prototype.pageviewId = "";
    
                        /**
                         * PageInfo pageCategory.
                         * @member {string} pageCategory
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @instance
                         */
                        PageInfo.prototype.pageCategory = "";
    
                        /**
                         * PageInfo uri.
                         * @member {string} uri
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @instance
                         */
                        PageInfo.prototype.uri = "";
    
                        /**
                         * PageInfo referrerUri.
                         * @member {string} referrerUri
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @instance
                         */
                        PageInfo.prototype.referrerUri = "";
    
                        /**
                         * Creates a new PageInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPageInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.PageInfo} PageInfo instance
                         */
                        PageInfo.create = function create(properties) {
                            return new PageInfo(properties);
                        };
    
                        /**
                         * Encodes the specified PageInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1.PageInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPageInfo} message PageInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PageInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pageviewId != null && Object.hasOwnProperty.call(message, "pageviewId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.pageviewId);
                            if (message.pageCategory != null && Object.hasOwnProperty.call(message, "pageCategory"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.pageCategory);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            if (message.referrerUri != null && Object.hasOwnProperty.call(message, "referrerUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.referrerUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PageInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.PageInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPageInfo} message PageInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PageInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PageInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.PageInfo} PageInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PageInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.PageInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.pageviewId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageCategory = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.referrerUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PageInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.PageInfo} PageInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PageInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PageInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PageInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pageviewId != null && message.hasOwnProperty("pageviewId"))
                                if (!$util.isString(message.pageviewId))
                                    return "pageviewId: string expected";
                            if (message.pageCategory != null && message.hasOwnProperty("pageCategory"))
                                if (!$util.isString(message.pageCategory))
                                    return "pageCategory: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.referrerUri != null && message.hasOwnProperty("referrerUri"))
                                if (!$util.isString(message.referrerUri))
                                    return "referrerUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PageInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.PageInfo} PageInfo
                         */
                        PageInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.PageInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.PageInfo();
                            if (object.pageviewId != null)
                                message.pageviewId = String(object.pageviewId);
                            if (object.pageCategory != null)
                                message.pageCategory = String(object.pageCategory);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.referrerUri != null)
                                message.referrerUri = String(object.referrerUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PageInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.PageInfo} message PageInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PageInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.pageviewId = "";
                                object.pageCategory = "";
                                object.uri = "";
                                object.referrerUri = "";
                            }
                            if (message.pageviewId != null && message.hasOwnProperty("pageviewId"))
                                object.pageviewId = message.pageviewId;
                            if (message.pageCategory != null && message.hasOwnProperty("pageCategory"))
                                object.pageCategory = message.pageCategory;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.referrerUri != null && message.hasOwnProperty("referrerUri"))
                                object.referrerUri = message.referrerUri;
                            return object;
                        };
    
                        /**
                         * Converts this PageInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PageInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PageInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.PageInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PageInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.PageInfo";
                        };
    
                        return PageInfo;
                    })();
    
                    v1.SearchInfo = (function() {
    
                        /**
                         * Properties of a SearchInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ISearchInfo
                         * @property {string|null} [searchQuery] SearchInfo searchQuery
                         * @property {string|null} [orderBy] SearchInfo orderBy
                         * @property {number|null} [offset] SearchInfo offset
                         */
    
                        /**
                         * Constructs a new SearchInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a SearchInfo.
                         * @implements ISearchInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ISearchInfo=} [properties] Properties to set
                         */
                        function SearchInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchInfo searchQuery.
                         * @member {string} searchQuery
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @instance
                         */
                        SearchInfo.prototype.searchQuery = "";
    
                        /**
                         * SearchInfo orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @instance
                         */
                        SearchInfo.prototype.orderBy = "";
    
                        /**
                         * SearchInfo offset.
                         * @member {number|null|undefined} offset
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @instance
                         */
                        SearchInfo.prototype.offset = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SearchInfo _offset.
                         * @member {"offset"|undefined} _offset
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @instance
                         */
                        Object.defineProperty(SearchInfo.prototype, "_offset", {
                            get: $util.oneOfGetter($oneOfFields = ["offset"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SearchInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISearchInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.SearchInfo} SearchInfo instance
                         */
                        SearchInfo.create = function create(properties) {
                            return new SearchInfo(properties);
                        };
    
                        /**
                         * Encodes the specified SearchInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISearchInfo} message SearchInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.searchQuery != null && Object.hasOwnProperty.call(message, "searchQuery"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.searchQuery);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.orderBy);
                            if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.offset);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISearchInfo} message SearchInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.SearchInfo} SearchInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.SearchInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.searchQuery = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.offset = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.SearchInfo} SearchInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.searchQuery != null && message.hasOwnProperty("searchQuery"))
                                if (!$util.isString(message.searchQuery))
                                    return "searchQuery: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            if (message.offset != null && message.hasOwnProperty("offset")) {
                                properties._offset = 1;
                                if (!$util.isInteger(message.offset))
                                    return "offset: integer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.SearchInfo} SearchInfo
                         */
                        SearchInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.SearchInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.SearchInfo();
                            if (object.searchQuery != null)
                                message.searchQuery = String(object.searchQuery);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            if (object.offset != null)
                                message.offset = object.offset | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.SearchInfo} message SearchInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.searchQuery = "";
                                object.orderBy = "";
                            }
                            if (message.searchQuery != null && message.hasOwnProperty("searchQuery"))
                                object.searchQuery = message.searchQuery;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            if (message.offset != null && message.hasOwnProperty("offset")) {
                                object.offset = message.offset;
                                if (options.oneofs)
                                    object._offset = "offset";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SearchInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.SearchInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.SearchInfo";
                        };
    
                        return SearchInfo;
                    })();
    
                    v1.CompletionInfo = (function() {
    
                        /**
                         * Properties of a CompletionInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ICompletionInfo
                         * @property {string|null} [selectedSuggestion] CompletionInfo selectedSuggestion
                         * @property {number|null} [selectedPosition] CompletionInfo selectedPosition
                         */
    
                        /**
                         * Constructs a new CompletionInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a CompletionInfo.
                         * @implements ICompletionInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ICompletionInfo=} [properties] Properties to set
                         */
                        function CompletionInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompletionInfo selectedSuggestion.
                         * @member {string} selectedSuggestion
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @instance
                         */
                        CompletionInfo.prototype.selectedSuggestion = "";
    
                        /**
                         * CompletionInfo selectedPosition.
                         * @member {number} selectedPosition
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @instance
                         */
                        CompletionInfo.prototype.selectedPosition = 0;
    
                        /**
                         * Creates a new CompletionInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICompletionInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.CompletionInfo} CompletionInfo instance
                         */
                        CompletionInfo.create = function create(properties) {
                            return new CompletionInfo(properties);
                        };
    
                        /**
                         * Encodes the specified CompletionInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1.CompletionInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICompletionInfo} message CompletionInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompletionInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.selectedSuggestion != null && Object.hasOwnProperty.call(message, "selectedSuggestion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.selectedSuggestion);
                            if (message.selectedPosition != null && Object.hasOwnProperty.call(message, "selectedPosition"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.selectedPosition);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompletionInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.CompletionInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICompletionInfo} message CompletionInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompletionInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompletionInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.CompletionInfo} CompletionInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompletionInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.CompletionInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.selectedSuggestion = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.selectedPosition = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompletionInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.CompletionInfo} CompletionInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompletionInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompletionInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompletionInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.selectedSuggestion != null && message.hasOwnProperty("selectedSuggestion"))
                                if (!$util.isString(message.selectedSuggestion))
                                    return "selectedSuggestion: string expected";
                            if (message.selectedPosition != null && message.hasOwnProperty("selectedPosition"))
                                if (!$util.isInteger(message.selectedPosition))
                                    return "selectedPosition: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a CompletionInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.CompletionInfo} CompletionInfo
                         */
                        CompletionInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.CompletionInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.CompletionInfo();
                            if (object.selectedSuggestion != null)
                                message.selectedSuggestion = String(object.selectedSuggestion);
                            if (object.selectedPosition != null)
                                message.selectedPosition = object.selectedPosition | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompletionInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.CompletionInfo} message CompletionInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompletionInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.selectedSuggestion = "";
                                object.selectedPosition = 0;
                            }
                            if (message.selectedSuggestion != null && message.hasOwnProperty("selectedSuggestion"))
                                object.selectedSuggestion = message.selectedSuggestion;
                            if (message.selectedPosition != null && message.hasOwnProperty("selectedPosition"))
                                object.selectedPosition = message.selectedPosition;
                            return object;
                        };
    
                        /**
                         * Converts this CompletionInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompletionInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CompletionInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.CompletionInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CompletionInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.CompletionInfo";
                        };
    
                        return CompletionInfo;
                    })();
    
                    v1.TransactionInfo = (function() {
    
                        /**
                         * Properties of a TransactionInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ITransactionInfo
                         * @property {number|null} [value] TransactionInfo value
                         * @property {string|null} [currency] TransactionInfo currency
                         * @property {string|null} [transactionId] TransactionInfo transactionId
                         * @property {number|null} [tax] TransactionInfo tax
                         * @property {number|null} [cost] TransactionInfo cost
                         * @property {number|null} [discountValue] TransactionInfo discountValue
                         */
    
                        /**
                         * Constructs a new TransactionInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a TransactionInfo.
                         * @implements ITransactionInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ITransactionInfo=} [properties] Properties to set
                         */
                        function TransactionInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransactionInfo value.
                         * @member {number|null|undefined} value
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.value = null;
    
                        /**
                         * TransactionInfo currency.
                         * @member {string} currency
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.currency = "";
    
                        /**
                         * TransactionInfo transactionId.
                         * @member {string} transactionId
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.transactionId = "";
    
                        /**
                         * TransactionInfo tax.
                         * @member {number|null|undefined} tax
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.tax = null;
    
                        /**
                         * TransactionInfo cost.
                         * @member {number|null|undefined} cost
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.cost = null;
    
                        /**
                         * TransactionInfo discountValue.
                         * @member {number|null|undefined} discountValue
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.discountValue = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * TransactionInfo _value.
                         * @member {"value"|undefined} _value
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        Object.defineProperty(TransactionInfo.prototype, "_value", {
                            get: $util.oneOfGetter($oneOfFields = ["value"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * TransactionInfo _tax.
                         * @member {"tax"|undefined} _tax
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        Object.defineProperty(TransactionInfo.prototype, "_tax", {
                            get: $util.oneOfGetter($oneOfFields = ["tax"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * TransactionInfo _cost.
                         * @member {"cost"|undefined} _cost
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        Object.defineProperty(TransactionInfo.prototype, "_cost", {
                            get: $util.oneOfGetter($oneOfFields = ["cost"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * TransactionInfo _discountValue.
                         * @member {"discountValue"|undefined} _discountValue
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         */
                        Object.defineProperty(TransactionInfo.prototype, "_discountValue", {
                            get: $util.oneOfGetter($oneOfFields = ["discountValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new TransactionInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ITransactionInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.TransactionInfo} TransactionInfo instance
                         */
                        TransactionInfo.create = function create(properties) {
                            return new TransactionInfo(properties);
                        };
    
                        /**
                         * Encodes the specified TransactionInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1.TransactionInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ITransactionInfo} message TransactionInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransactionInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.currency);
                            if (message.transactionId != null && Object.hasOwnProperty.call(message, "transactionId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.transactionId);
                            if (message.tax != null && Object.hasOwnProperty.call(message, "tax"))
                                writer.uint32(/* id 4, wireType 5 =*/37).float(message.tax);
                            if (message.cost != null && Object.hasOwnProperty.call(message, "cost"))
                                writer.uint32(/* id 5, wireType 5 =*/45).float(message.cost);
                            if (message.discountValue != null && Object.hasOwnProperty.call(message, "discountValue"))
                                writer.uint32(/* id 6, wireType 5 =*/53).float(message.discountValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransactionInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.TransactionInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ITransactionInfo} message TransactionInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransactionInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransactionInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.TransactionInfo} TransactionInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransactionInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.TransactionInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.value = reader.float();
                                        break;
                                    }
                                case 2: {
                                        message.currency = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.transactionId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.tax = reader.float();
                                        break;
                                    }
                                case 5: {
                                        message.cost = reader.float();
                                        break;
                                    }
                                case 6: {
                                        message.discountValue = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransactionInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.TransactionInfo} TransactionInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransactionInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransactionInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransactionInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                properties._value = 1;
                                if (typeof message.value !== "number")
                                    return "value: number expected";
                            }
                            if (message.currency != null && message.hasOwnProperty("currency"))
                                if (!$util.isString(message.currency))
                                    return "currency: string expected";
                            if (message.transactionId != null && message.hasOwnProperty("transactionId"))
                                if (!$util.isString(message.transactionId))
                                    return "transactionId: string expected";
                            if (message.tax != null && message.hasOwnProperty("tax")) {
                                properties._tax = 1;
                                if (typeof message.tax !== "number")
                                    return "tax: number expected";
                            }
                            if (message.cost != null && message.hasOwnProperty("cost")) {
                                properties._cost = 1;
                                if (typeof message.cost !== "number")
                                    return "cost: number expected";
                            }
                            if (message.discountValue != null && message.hasOwnProperty("discountValue")) {
                                properties._discountValue = 1;
                                if (typeof message.discountValue !== "number")
                                    return "discountValue: number expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransactionInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.TransactionInfo} TransactionInfo
                         */
                        TransactionInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.TransactionInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.TransactionInfo();
                            if (object.value != null)
                                message.value = Number(object.value);
                            if (object.currency != null)
                                message.currency = String(object.currency);
                            if (object.transactionId != null)
                                message.transactionId = String(object.transactionId);
                            if (object.tax != null)
                                message.tax = Number(object.tax);
                            if (object.cost != null)
                                message.cost = Number(object.cost);
                            if (object.discountValue != null)
                                message.discountValue = Number(object.discountValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransactionInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.TransactionInfo} message TransactionInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransactionInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.currency = "";
                                object.transactionId = "";
                            }
                            if (message.value != null && message.hasOwnProperty("value")) {
                                object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                                if (options.oneofs)
                                    object._value = "value";
                            }
                            if (message.currency != null && message.hasOwnProperty("currency"))
                                object.currency = message.currency;
                            if (message.transactionId != null && message.hasOwnProperty("transactionId"))
                                object.transactionId = message.transactionId;
                            if (message.tax != null && message.hasOwnProperty("tax")) {
                                object.tax = options.json && !isFinite(message.tax) ? String(message.tax) : message.tax;
                                if (options.oneofs)
                                    object._tax = "tax";
                            }
                            if (message.cost != null && message.hasOwnProperty("cost")) {
                                object.cost = options.json && !isFinite(message.cost) ? String(message.cost) : message.cost;
                                if (options.oneofs)
                                    object._cost = "cost";
                            }
                            if (message.discountValue != null && message.hasOwnProperty("discountValue")) {
                                object.discountValue = options.json && !isFinite(message.discountValue) ? String(message.discountValue) : message.discountValue;
                                if (options.oneofs)
                                    object._discountValue = "discountValue";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TransactionInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransactionInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransactionInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.TransactionInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransactionInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.TransactionInfo";
                        };
    
                        return TransactionInfo;
                    })();
    
                    v1.DocumentInfo = (function() {
    
                        /**
                         * Properties of a DocumentInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IDocumentInfo
                         * @property {string|null} [id] DocumentInfo id
                         * @property {string|null} [name] DocumentInfo name
                         * @property {number|null} [quantity] DocumentInfo quantity
                         * @property {Array.<string>|null} [promotionIds] DocumentInfo promotionIds
                         */
    
                        /**
                         * Constructs a new DocumentInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a DocumentInfo.
                         * @implements IDocumentInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IDocumentInfo=} [properties] Properties to set
                         */
                        function DocumentInfo(properties) {
                            this.promotionIds = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DocumentInfo id.
                         * @member {string|null|undefined} id
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @instance
                         */
                        DocumentInfo.prototype.id = null;
    
                        /**
                         * DocumentInfo name.
                         * @member {string|null|undefined} name
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @instance
                         */
                        DocumentInfo.prototype.name = null;
    
                        /**
                         * DocumentInfo quantity.
                         * @member {number|null|undefined} quantity
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @instance
                         */
                        DocumentInfo.prototype.quantity = null;
    
                        /**
                         * DocumentInfo promotionIds.
                         * @member {Array.<string>} promotionIds
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @instance
                         */
                        DocumentInfo.prototype.promotionIds = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DocumentInfo documentDescriptor.
                         * @member {"id"|"name"|undefined} documentDescriptor
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @instance
                         */
                        Object.defineProperty(DocumentInfo.prototype, "documentDescriptor", {
                            get: $util.oneOfGetter($oneOfFields = ["id", "name"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * DocumentInfo _quantity.
                         * @member {"quantity"|undefined} _quantity
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @instance
                         */
                        Object.defineProperty(DocumentInfo.prototype, "_quantity", {
                            get: $util.oneOfGetter($oneOfFields = ["quantity"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DocumentInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDocumentInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.DocumentInfo} DocumentInfo instance
                         */
                        DocumentInfo.create = function create(properties) {
                            return new DocumentInfo(properties);
                        };
    
                        /**
                         * Encodes the specified DocumentInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1.DocumentInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDocumentInfo} message DocumentInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                            if (message.quantity != null && Object.hasOwnProperty.call(message, "quantity"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.quantity);
                            if (message.promotionIds != null && message.promotionIds.length)
                                for (var i = 0; i < message.promotionIds.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.promotionIds[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DocumentInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.DocumentInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDocumentInfo} message DocumentInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DocumentInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.DocumentInfo} DocumentInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.DocumentInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.quantity = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.promotionIds && message.promotionIds.length))
                                            message.promotionIds = [];
                                        message.promotionIds.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DocumentInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.DocumentInfo} DocumentInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DocumentInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DocumentInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.id != null && message.hasOwnProperty("id")) {
                                properties.documentDescriptor = 1;
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            }
                            if (message.name != null && message.hasOwnProperty("name")) {
                                if (properties.documentDescriptor === 1)
                                    return "documentDescriptor: multiple values";
                                properties.documentDescriptor = 1;
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            }
                            if (message.quantity != null && message.hasOwnProperty("quantity")) {
                                properties._quantity = 1;
                                if (!$util.isInteger(message.quantity))
                                    return "quantity: integer expected";
                            }
                            if (message.promotionIds != null && message.hasOwnProperty("promotionIds")) {
                                if (!Array.isArray(message.promotionIds))
                                    return "promotionIds: array expected";
                                for (var i = 0; i < message.promotionIds.length; ++i)
                                    if (!$util.isString(message.promotionIds[i]))
                                        return "promotionIds: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DocumentInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.DocumentInfo} DocumentInfo
                         */
                        DocumentInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.DocumentInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.DocumentInfo();
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.quantity != null)
                                message.quantity = object.quantity | 0;
                            if (object.promotionIds) {
                                if (!Array.isArray(object.promotionIds))
                                    throw TypeError(".google.cloud.discoveryengine.v1.DocumentInfo.promotionIds: array expected");
                                message.promotionIds = [];
                                for (var i = 0; i < object.promotionIds.length; ++i)
                                    message.promotionIds[i] = String(object.promotionIds[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DocumentInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.DocumentInfo} message DocumentInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DocumentInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.promotionIds = [];
                            if (message.id != null && message.hasOwnProperty("id")) {
                                object.id = message.id;
                                if (options.oneofs)
                                    object.documentDescriptor = "id";
                            }
                            if (message.name != null && message.hasOwnProperty("name")) {
                                object.name = message.name;
                                if (options.oneofs)
                                    object.documentDescriptor = "name";
                            }
                            if (message.quantity != null && message.hasOwnProperty("quantity")) {
                                object.quantity = message.quantity;
                                if (options.oneofs)
                                    object._quantity = "quantity";
                            }
                            if (message.promotionIds && message.promotionIds.length) {
                                object.promotionIds = [];
                                for (var j = 0; j < message.promotionIds.length; ++j)
                                    object.promotionIds[j] = message.promotionIds[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DocumentInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DocumentInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DocumentInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.DocumentInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DocumentInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.DocumentInfo";
                        };
    
                        return DocumentInfo;
                    })();
    
                    v1.PanelInfo = (function() {
    
                        /**
                         * Properties of a PanelInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IPanelInfo
                         * @property {string|null} [panelId] PanelInfo panelId
                         * @property {string|null} [displayName] PanelInfo displayName
                         * @property {number|null} [panelPosition] PanelInfo panelPosition
                         * @property {number|null} [totalPanels] PanelInfo totalPanels
                         */
    
                        /**
                         * Constructs a new PanelInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a PanelInfo.
                         * @implements IPanelInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IPanelInfo=} [properties] Properties to set
                         */
                        function PanelInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PanelInfo panelId.
                         * @member {string} panelId
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @instance
                         */
                        PanelInfo.prototype.panelId = "";
    
                        /**
                         * PanelInfo displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @instance
                         */
                        PanelInfo.prototype.displayName = "";
    
                        /**
                         * PanelInfo panelPosition.
                         * @member {number|null|undefined} panelPosition
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @instance
                         */
                        PanelInfo.prototype.panelPosition = null;
    
                        /**
                         * PanelInfo totalPanels.
                         * @member {number|null|undefined} totalPanels
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @instance
                         */
                        PanelInfo.prototype.totalPanels = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * PanelInfo _panelPosition.
                         * @member {"panelPosition"|undefined} _panelPosition
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @instance
                         */
                        Object.defineProperty(PanelInfo.prototype, "_panelPosition", {
                            get: $util.oneOfGetter($oneOfFields = ["panelPosition"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * PanelInfo _totalPanels.
                         * @member {"totalPanels"|undefined} _totalPanels
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @instance
                         */
                        Object.defineProperty(PanelInfo.prototype, "_totalPanels", {
                            get: $util.oneOfGetter($oneOfFields = ["totalPanels"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new PanelInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPanelInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.PanelInfo} PanelInfo instance
                         */
                        PanelInfo.create = function create(properties) {
                            return new PanelInfo(properties);
                        };
    
                        /**
                         * Encodes the specified PanelInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1.PanelInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPanelInfo} message PanelInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PanelInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.panelId != null && Object.hasOwnProperty.call(message, "panelId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.panelId);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.displayName);
                            if (message.panelPosition != null && Object.hasOwnProperty.call(message, "panelPosition"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.panelPosition);
                            if (message.totalPanels != null && Object.hasOwnProperty.call(message, "totalPanels"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.totalPanels);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PanelInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.PanelInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPanelInfo} message PanelInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PanelInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PanelInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.PanelInfo} PanelInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PanelInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.PanelInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.panelId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.panelPosition = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.totalPanels = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PanelInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.PanelInfo} PanelInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PanelInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PanelInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PanelInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.panelId != null && message.hasOwnProperty("panelId"))
                                if (!$util.isString(message.panelId))
                                    return "panelId: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.panelPosition != null && message.hasOwnProperty("panelPosition")) {
                                properties._panelPosition = 1;
                                if (!$util.isInteger(message.panelPosition))
                                    return "panelPosition: integer expected";
                            }
                            if (message.totalPanels != null && message.hasOwnProperty("totalPanels")) {
                                properties._totalPanels = 1;
                                if (!$util.isInteger(message.totalPanels))
                                    return "totalPanels: integer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PanelInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.PanelInfo} PanelInfo
                         */
                        PanelInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.PanelInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.PanelInfo();
                            if (object.panelId != null)
                                message.panelId = String(object.panelId);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.panelPosition != null)
                                message.panelPosition = object.panelPosition | 0;
                            if (object.totalPanels != null)
                                message.totalPanels = object.totalPanels | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PanelInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.PanelInfo} message PanelInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PanelInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.panelId = "";
                                object.displayName = "";
                            }
                            if (message.panelId != null && message.hasOwnProperty("panelId"))
                                object.panelId = message.panelId;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.panelPosition != null && message.hasOwnProperty("panelPosition")) {
                                object.panelPosition = message.panelPosition;
                                if (options.oneofs)
                                    object._panelPosition = "panelPosition";
                            }
                            if (message.totalPanels != null && message.hasOwnProperty("totalPanels")) {
                                object.totalPanels = message.totalPanels;
                                if (options.oneofs)
                                    object._totalPanels = "totalPanels";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PanelInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PanelInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PanelInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.PanelInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PanelInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.PanelInfo";
                        };
    
                        return PanelInfo;
                    })();
    
                    v1.MediaInfo = (function() {
    
                        /**
                         * Properties of a MediaInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IMediaInfo
                         * @property {google.protobuf.IDuration|null} [mediaProgressDuration] MediaInfo mediaProgressDuration
                         * @property {number|null} [mediaProgressPercentage] MediaInfo mediaProgressPercentage
                         */
    
                        /**
                         * Constructs a new MediaInfo.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a MediaInfo.
                         * @implements IMediaInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IMediaInfo=} [properties] Properties to set
                         */
                        function MediaInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MediaInfo mediaProgressDuration.
                         * @member {google.protobuf.IDuration|null|undefined} mediaProgressDuration
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @instance
                         */
                        MediaInfo.prototype.mediaProgressDuration = null;
    
                        /**
                         * MediaInfo mediaProgressPercentage.
                         * @member {number|null|undefined} mediaProgressPercentage
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @instance
                         */
                        MediaInfo.prototype.mediaProgressPercentage = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MediaInfo _mediaProgressPercentage.
                         * @member {"mediaProgressPercentage"|undefined} _mediaProgressPercentage
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @instance
                         */
                        Object.defineProperty(MediaInfo.prototype, "_mediaProgressPercentage", {
                            get: $util.oneOfGetter($oneOfFields = ["mediaProgressPercentage"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MediaInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IMediaInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.MediaInfo} MediaInfo instance
                         */
                        MediaInfo.create = function create(properties) {
                            return new MediaInfo(properties);
                        };
    
                        /**
                         * Encodes the specified MediaInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1.MediaInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IMediaInfo} message MediaInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MediaInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mediaProgressDuration != null && Object.hasOwnProperty.call(message, "mediaProgressDuration"))
                                $root.google.protobuf.Duration.encode(message.mediaProgressDuration, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.mediaProgressPercentage != null && Object.hasOwnProperty.call(message, "mediaProgressPercentage"))
                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.mediaProgressPercentage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MediaInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.MediaInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IMediaInfo} message MediaInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MediaInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MediaInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.MediaInfo} MediaInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MediaInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.MediaInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mediaProgressDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.mediaProgressPercentage = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MediaInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.MediaInfo} MediaInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MediaInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MediaInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MediaInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.mediaProgressDuration != null && message.hasOwnProperty("mediaProgressDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.mediaProgressDuration);
                                if (error)
                                    return "mediaProgressDuration." + error;
                            }
                            if (message.mediaProgressPercentage != null && message.hasOwnProperty("mediaProgressPercentage")) {
                                properties._mediaProgressPercentage = 1;
                                if (typeof message.mediaProgressPercentage !== "number")
                                    return "mediaProgressPercentage: number expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MediaInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.MediaInfo} MediaInfo
                         */
                        MediaInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.MediaInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.MediaInfo();
                            if (object.mediaProgressDuration != null) {
                                if (typeof object.mediaProgressDuration !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.MediaInfo.mediaProgressDuration: object expected");
                                message.mediaProgressDuration = $root.google.protobuf.Duration.fromObject(object.mediaProgressDuration);
                            }
                            if (object.mediaProgressPercentage != null)
                                message.mediaProgressPercentage = Number(object.mediaProgressPercentage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MediaInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1.MediaInfo} message MediaInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MediaInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.mediaProgressDuration = null;
                            if (message.mediaProgressDuration != null && message.hasOwnProperty("mediaProgressDuration"))
                                object.mediaProgressDuration = $root.google.protobuf.Duration.toObject(message.mediaProgressDuration, options);
                            if (message.mediaProgressPercentage != null && message.hasOwnProperty("mediaProgressPercentage")) {
                                object.mediaProgressPercentage = options.json && !isFinite(message.mediaProgressPercentage) ? String(message.mediaProgressPercentage) : message.mediaProgressPercentage;
                                if (options.oneofs)
                                    object._mediaProgressPercentage = "mediaProgressPercentage";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MediaInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MediaInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MediaInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.MediaInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MediaInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.MediaInfo";
                        };
    
                        return MediaInfo;
                    })();
    
                    v1.PurgeDocumentsRequest = (function() {
    
                        /**
                         * Properties of a PurgeDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IPurgeDocumentsRequest
                         * @property {string|null} [parent] PurgeDocumentsRequest parent
                         * @property {string|null} [filter] PurgeDocumentsRequest filter
                         * @property {boolean|null} [force] PurgeDocumentsRequest force
                         */
    
                        /**
                         * Constructs a new PurgeDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a PurgeDocumentsRequest.
                         * @implements IPurgeDocumentsRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsRequest=} [properties] Properties to set
                         */
                        function PurgeDocumentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeDocumentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @instance
                         */
                        PurgeDocumentsRequest.prototype.parent = "";
    
                        /**
                         * PurgeDocumentsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @instance
                         */
                        PurgeDocumentsRequest.prototype.filter = "";
    
                        /**
                         * PurgeDocumentsRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @instance
                         */
                        PurgeDocumentsRequest.prototype.force = false;
    
                        /**
                         * Creates a new PurgeDocumentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsRequest} PurgeDocumentsRequest instance
                         */
                        PurgeDocumentsRequest.create = function create(properties) {
                            return new PurgeDocumentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.PurgeDocumentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsRequest} message PurgeDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.PurgeDocumentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsRequest} message PurgeDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeDocumentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsRequest} PurgeDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.PurgeDocumentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeDocumentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsRequest} PurgeDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeDocumentsRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeDocumentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeDocumentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsRequest} PurgeDocumentsRequest
                         */
                        PurgeDocumentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.PurgeDocumentsRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.PurgeDocumentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeDocumentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.PurgeDocumentsRequest} message PurgeDocumentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeDocumentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.force = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeDocumentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeDocumentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeDocumentsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeDocumentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.PurgeDocumentsRequest";
                        };
    
                        return PurgeDocumentsRequest;
                    })();
    
                    v1.PurgeDocumentsResponse = (function() {
    
                        /**
                         * Properties of a PurgeDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IPurgeDocumentsResponse
                         * @property {number|Long|null} [purgeCount] PurgeDocumentsResponse purgeCount
                         * @property {Array.<string>|null} [purgeSample] PurgeDocumentsResponse purgeSample
                         */
    
                        /**
                         * Constructs a new PurgeDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a PurgeDocumentsResponse.
                         * @implements IPurgeDocumentsResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsResponse=} [properties] Properties to set
                         */
                        function PurgeDocumentsResponse(properties) {
                            this.purgeSample = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeDocumentsResponse purgeCount.
                         * @member {number|Long} purgeCount
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @instance
                         */
                        PurgeDocumentsResponse.prototype.purgeCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * PurgeDocumentsResponse purgeSample.
                         * @member {Array.<string>} purgeSample
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @instance
                         */
                        PurgeDocumentsResponse.prototype.purgeSample = $util.emptyArray;
    
                        /**
                         * Creates a new PurgeDocumentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsResponse} PurgeDocumentsResponse instance
                         */
                        PurgeDocumentsResponse.create = function create(properties) {
                            return new PurgeDocumentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1.PurgeDocumentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsResponse} message PurgeDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.purgeCount != null && Object.hasOwnProperty.call(message, "purgeCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.purgeCount);
                            if (message.purgeSample != null && message.purgeSample.length)
                                for (var i = 0; i < message.purgeSample.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.purgeSample[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.PurgeDocumentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsResponse} message PurgeDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeDocumentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsResponse} PurgeDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.PurgeDocumentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.purgeCount = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.purgeSample && message.purgeSample.length))
                                            message.purgeSample = [];
                                        message.purgeSample.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeDocumentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsResponse} PurgeDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeDocumentsResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeDocumentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.purgeCount != null && message.hasOwnProperty("purgeCount"))
                                if (!$util.isInteger(message.purgeCount) && !(message.purgeCount && $util.isInteger(message.purgeCount.low) && $util.isInteger(message.purgeCount.high)))
                                    return "purgeCount: integer|Long expected";
                            if (message.purgeSample != null && message.hasOwnProperty("purgeSample")) {
                                if (!Array.isArray(message.purgeSample))
                                    return "purgeSample: array expected";
                                for (var i = 0; i < message.purgeSample.length; ++i)
                                    if (!$util.isString(message.purgeSample[i]))
                                        return "purgeSample: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PurgeDocumentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsResponse} PurgeDocumentsResponse
                         */
                        PurgeDocumentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.PurgeDocumentsResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.PurgeDocumentsResponse();
                            if (object.purgeCount != null)
                                if ($util.Long)
                                    (message.purgeCount = $util.Long.fromValue(object.purgeCount)).unsigned = false;
                                else if (typeof object.purgeCount === "string")
                                    message.purgeCount = parseInt(object.purgeCount, 10);
                                else if (typeof object.purgeCount === "number")
                                    message.purgeCount = object.purgeCount;
                                else if (typeof object.purgeCount === "object")
                                    message.purgeCount = new $util.LongBits(object.purgeCount.low >>> 0, object.purgeCount.high >>> 0).toNumber();
                            if (object.purgeSample) {
                                if (!Array.isArray(object.purgeSample))
                                    throw TypeError(".google.cloud.discoveryengine.v1.PurgeDocumentsResponse.purgeSample: array expected");
                                message.purgeSample = [];
                                for (var i = 0; i < object.purgeSample.length; ++i)
                                    message.purgeSample[i] = String(object.purgeSample[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeDocumentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.PurgeDocumentsResponse} message PurgeDocumentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeDocumentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.purgeSample = [];
                            if (options.defaults)
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.purgeCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.purgeCount = options.longs === String ? "0" : 0;
                            if (message.purgeCount != null && message.hasOwnProperty("purgeCount"))
                                if (typeof message.purgeCount === "number")
                                    object.purgeCount = options.longs === String ? String(message.purgeCount) : message.purgeCount;
                                else
                                    object.purgeCount = options.longs === String ? $util.Long.prototype.toString.call(message.purgeCount) : options.longs === Number ? new $util.LongBits(message.purgeCount.low >>> 0, message.purgeCount.high >>> 0).toNumber() : message.purgeCount;
                            if (message.purgeSample && message.purgeSample.length) {
                                object.purgeSample = [];
                                for (var j = 0; j < message.purgeSample.length; ++j)
                                    object.purgeSample[j] = message.purgeSample[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PurgeDocumentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeDocumentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeDocumentsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeDocumentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.PurgeDocumentsResponse";
                        };
    
                        return PurgeDocumentsResponse;
                    })();
    
                    v1.PurgeDocumentsMetadata = (function() {
    
                        /**
                         * Properties of a PurgeDocumentsMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IPurgeDocumentsMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] PurgeDocumentsMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] PurgeDocumentsMetadata updateTime
                         * @property {number|Long|null} [successCount] PurgeDocumentsMetadata successCount
                         * @property {number|Long|null} [failureCount] PurgeDocumentsMetadata failureCount
                         */
    
                        /**
                         * Constructs a new PurgeDocumentsMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a PurgeDocumentsMetadata.
                         * @implements IPurgeDocumentsMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsMetadata=} [properties] Properties to set
                         */
                        function PurgeDocumentsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeDocumentsMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @instance
                         */
                        PurgeDocumentsMetadata.prototype.createTime = null;
    
                        /**
                         * PurgeDocumentsMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @instance
                         */
                        PurgeDocumentsMetadata.prototype.updateTime = null;
    
                        /**
                         * PurgeDocumentsMetadata successCount.
                         * @member {number|Long} successCount
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @instance
                         */
                        PurgeDocumentsMetadata.prototype.successCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * PurgeDocumentsMetadata failureCount.
                         * @member {number|Long} failureCount
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @instance
                         */
                        PurgeDocumentsMetadata.prototype.failureCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new PurgeDocumentsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsMetadata} PurgeDocumentsMetadata instance
                         */
                        PurgeDocumentsMetadata.create = function create(properties) {
                            return new PurgeDocumentsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1.PurgeDocumentsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsMetadata} message PurgeDocumentsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.successCount != null && Object.hasOwnProperty.call(message, "successCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.successCount);
                            if (message.failureCount != null && Object.hasOwnProperty.call(message, "failureCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.failureCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.PurgeDocumentsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IPurgeDocumentsMetadata} message PurgeDocumentsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeDocumentsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsMetadata} PurgeDocumentsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.PurgeDocumentsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.successCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.failureCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeDocumentsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsMetadata} PurgeDocumentsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeDocumentsMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeDocumentsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (!$util.isInteger(message.successCount) && !(message.successCount && $util.isInteger(message.successCount.low) && $util.isInteger(message.successCount.high)))
                                    return "successCount: integer|Long expected";
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (!$util.isInteger(message.failureCount) && !(message.failureCount && $util.isInteger(message.failureCount.low) && $util.isInteger(message.failureCount.high)))
                                    return "failureCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeDocumentsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.PurgeDocumentsMetadata} PurgeDocumentsMetadata
                         */
                        PurgeDocumentsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.PurgeDocumentsMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.PurgeDocumentsMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.PurgeDocumentsMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.PurgeDocumentsMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.successCount != null)
                                if ($util.Long)
                                    (message.successCount = $util.Long.fromValue(object.successCount)).unsigned = false;
                                else if (typeof object.successCount === "string")
                                    message.successCount = parseInt(object.successCount, 10);
                                else if (typeof object.successCount === "number")
                                    message.successCount = object.successCount;
                                else if (typeof object.successCount === "object")
                                    message.successCount = new $util.LongBits(object.successCount.low >>> 0, object.successCount.high >>> 0).toNumber();
                            if (object.failureCount != null)
                                if ($util.Long)
                                    (message.failureCount = $util.Long.fromValue(object.failureCount)).unsigned = false;
                                else if (typeof object.failureCount === "string")
                                    message.failureCount = parseInt(object.failureCount, 10);
                                else if (typeof object.failureCount === "number")
                                    message.failureCount = object.failureCount;
                                else if (typeof object.failureCount === "object")
                                    message.failureCount = new $util.LongBits(object.failureCount.low >>> 0, object.failureCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeDocumentsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.PurgeDocumentsMetadata} message PurgeDocumentsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeDocumentsMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.successCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.successCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.failureCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.failureCount = options.longs === String ? "0" : 0;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (typeof message.successCount === "number")
                                    object.successCount = options.longs === String ? String(message.successCount) : message.successCount;
                                else
                                    object.successCount = options.longs === String ? $util.Long.prototype.toString.call(message.successCount) : options.longs === Number ? new $util.LongBits(message.successCount.low >>> 0, message.successCount.high >>> 0).toNumber() : message.successCount;
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (typeof message.failureCount === "number")
                                    object.failureCount = options.longs === String ? String(message.failureCount) : message.failureCount;
                                else
                                    object.failureCount = options.longs === String ? $util.Long.prototype.toString.call(message.failureCount) : options.longs === Number ? new $util.LongBits(message.failureCount.low >>> 0, message.failureCount.high >>> 0).toNumber() : message.failureCount;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeDocumentsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeDocumentsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeDocumentsMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.PurgeDocumentsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeDocumentsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.PurgeDocumentsMetadata";
                        };
    
                        return PurgeDocumentsMetadata;
                    })();
    
                    v1.Schema = (function() {
    
                        /**
                         * Properties of a Schema.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ISchema
                         * @property {google.protobuf.IStruct|null} [structSchema] Schema structSchema
                         * @property {string|null} [jsonSchema] Schema jsonSchema
                         * @property {string|null} [name] Schema name
                         */
    
                        /**
                         * Constructs a new Schema.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a Schema.
                         * @implements ISchema
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ISchema=} [properties] Properties to set
                         */
                        function Schema(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Schema structSchema.
                         * @member {google.protobuf.IStruct|null|undefined} structSchema
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @instance
                         */
                        Schema.prototype.structSchema = null;
    
                        /**
                         * Schema jsonSchema.
                         * @member {string|null|undefined} jsonSchema
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @instance
                         */
                        Schema.prototype.jsonSchema = null;
    
                        /**
                         * Schema name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @instance
                         */
                        Schema.prototype.name = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Schema schema.
                         * @member {"structSchema"|"jsonSchema"|undefined} schema
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @instance
                         */
                        Object.defineProperty(Schema.prototype, "schema", {
                            get: $util.oneOfGetter($oneOfFields = ["structSchema", "jsonSchema"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Schema instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISchema=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.Schema} Schema instance
                         */
                        Schema.create = function create(properties) {
                            return new Schema(properties);
                        };
    
                        /**
                         * Encodes the specified Schema message. Does not implicitly {@link google.cloud.discoveryengine.v1.Schema.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISchema} message Schema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Schema.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.structSchema != null && Object.hasOwnProperty.call(message, "structSchema"))
                                $root.google.protobuf.Struct.encode(message.structSchema, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.jsonSchema != null && Object.hasOwnProperty.call(message, "jsonSchema"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.jsonSchema);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Schema message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.Schema.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISchema} message Schema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Schema.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Schema message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.Schema} Schema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Schema.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.Schema();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.structSchema = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.jsonSchema = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Schema message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.Schema} Schema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Schema.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Schema message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Schema.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.structSchema != null && message.hasOwnProperty("structSchema")) {
                                properties.schema = 1;
                                {
                                    var error = $root.google.protobuf.Struct.verify(message.structSchema);
                                    if (error)
                                        return "structSchema." + error;
                                }
                            }
                            if (message.jsonSchema != null && message.hasOwnProperty("jsonSchema")) {
                                if (properties.schema === 1)
                                    return "schema: multiple values";
                                properties.schema = 1;
                                if (!$util.isString(message.jsonSchema))
                                    return "jsonSchema: string expected";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Schema message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.Schema} Schema
                         */
                        Schema.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.Schema)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.Schema();
                            if (object.structSchema != null) {
                                if (typeof object.structSchema !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.Schema.structSchema: object expected");
                                message.structSchema = $root.google.protobuf.Struct.fromObject(object.structSchema);
                            }
                            if (object.jsonSchema != null)
                                message.jsonSchema = String(object.jsonSchema);
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Schema message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @static
                         * @param {google.cloud.discoveryengine.v1.Schema} message Schema
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Schema.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.structSchema != null && message.hasOwnProperty("structSchema")) {
                                object.structSchema = $root.google.protobuf.Struct.toObject(message.structSchema, options);
                                if (options.oneofs)
                                    object.schema = "structSchema";
                            }
                            if (message.jsonSchema != null && message.hasOwnProperty("jsonSchema")) {
                                object.jsonSchema = message.jsonSchema;
                                if (options.oneofs)
                                    object.schema = "jsonSchema";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Schema to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Schema.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Schema
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.Schema
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Schema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.Schema";
                        };
    
                        return Schema;
                    })();
    
                    v1.SchemaService = (function() {
    
                        /**
                         * Constructs a new SchemaService service.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a SchemaService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SchemaService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SchemaService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SchemaService;
    
                        /**
                         * Creates new SchemaService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SchemaService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SchemaService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.SchemaService|getSchema}.
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @typedef GetSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1.Schema} [response] Schema
                         */
    
                        /**
                         * Calls GetSchema.
                         * @function getSchema
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IGetSchemaRequest} request GetSchemaRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.SchemaService.GetSchemaCallback} callback Node-style callback called with the error, if any, and Schema
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.getSchema = function getSchema(request, callback) {
                            return this.rpcCall(getSchema, $root.google.cloud.discoveryengine.v1.GetSchemaRequest, $root.google.cloud.discoveryengine.v1.Schema, request, callback);
                        }, "name", { value: "GetSchema" });
    
                        /**
                         * Calls GetSchema.
                         * @function getSchema
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IGetSchemaRequest} request GetSchemaRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1.Schema>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.SchemaService|listSchemas}.
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @typedef ListSchemasCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1.ListSchemasResponse} [response] ListSchemasResponse
                         */
    
                        /**
                         * Calls ListSchemas.
                         * @function listSchemas
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IListSchemasRequest} request ListSchemasRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.SchemaService.ListSchemasCallback} callback Node-style callback called with the error, if any, and ListSchemasResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.listSchemas = function listSchemas(request, callback) {
                            return this.rpcCall(listSchemas, $root.google.cloud.discoveryengine.v1.ListSchemasRequest, $root.google.cloud.discoveryengine.v1.ListSchemasResponse, request, callback);
                        }, "name", { value: "ListSchemas" });
    
                        /**
                         * Calls ListSchemas.
                         * @function listSchemas
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IListSchemasRequest} request ListSchemasRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1.ListSchemasResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.SchemaService|createSchema}.
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @typedef CreateSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateSchema.
                         * @function createSchema
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaRequest} request CreateSchemaRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.SchemaService.CreateSchemaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.createSchema = function createSchema(request, callback) {
                            return this.rpcCall(createSchema, $root.google.cloud.discoveryengine.v1.CreateSchemaRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateSchema" });
    
                        /**
                         * Calls CreateSchema.
                         * @function createSchema
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaRequest} request CreateSchemaRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.SchemaService|updateSchema}.
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @typedef UpdateSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateSchema.
                         * @function updateSchema
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaRequest} request UpdateSchemaRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.SchemaService.UpdateSchemaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.updateSchema = function updateSchema(request, callback) {
                            return this.rpcCall(updateSchema, $root.google.cloud.discoveryengine.v1.UpdateSchemaRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateSchema" });
    
                        /**
                         * Calls UpdateSchema.
                         * @function updateSchema
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaRequest} request UpdateSchemaRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.SchemaService|deleteSchema}.
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @typedef DeleteSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteSchema.
                         * @function deleteSchema
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaRequest} request DeleteSchemaRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.SchemaService.DeleteSchemaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.deleteSchema = function deleteSchema(request, callback) {
                            return this.rpcCall(deleteSchema, $root.google.cloud.discoveryengine.v1.DeleteSchemaRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteSchema" });
    
                        /**
                         * Calls DeleteSchema.
                         * @function deleteSchema
                         * @memberof google.cloud.discoveryengine.v1.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaRequest} request DeleteSchemaRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return SchemaService;
                    })();
    
                    v1.GetSchemaRequest = (function() {
    
                        /**
                         * Properties of a GetSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IGetSchemaRequest
                         * @property {string|null} [name] GetSchemaRequest name
                         */
    
                        /**
                         * Constructs a new GetSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a GetSchemaRequest.
                         * @implements IGetSchemaRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IGetSchemaRequest=} [properties] Properties to set
                         */
                        function GetSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetSchemaRequest name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @instance
                         */
                        GetSchemaRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IGetSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.GetSchemaRequest} GetSchemaRequest instance
                         */
                        GetSchemaRequest.create = function create(properties) {
                            return new GetSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetSchemaRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.GetSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IGetSchemaRequest} message GetSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.GetSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IGetSchemaRequest} message GetSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.GetSchemaRequest} GetSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.GetSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.GetSchemaRequest} GetSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.GetSchemaRequest} GetSchemaRequest
                         */
                        GetSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.GetSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.GetSchemaRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.GetSchemaRequest} message GetSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.GetSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.GetSchemaRequest";
                        };
    
                        return GetSchemaRequest;
                    })();
    
                    v1.ListSchemasRequest = (function() {
    
                        /**
                         * Properties of a ListSchemasRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IListSchemasRequest
                         * @property {string|null} [parent] ListSchemasRequest parent
                         * @property {number|null} [pageSize] ListSchemasRequest pageSize
                         * @property {string|null} [pageToken] ListSchemasRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListSchemasRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a ListSchemasRequest.
                         * @implements IListSchemasRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IListSchemasRequest=} [properties] Properties to set
                         */
                        function ListSchemasRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSchemasRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @instance
                         */
                        ListSchemasRequest.prototype.parent = "";
    
                        /**
                         * ListSchemasRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @instance
                         */
                        ListSchemasRequest.prototype.pageSize = 0;
    
                        /**
                         * ListSchemasRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @instance
                         */
                        ListSchemasRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListSchemasRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListSchemasRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ListSchemasRequest} ListSchemasRequest instance
                         */
                        ListSchemasRequest.create = function create(properties) {
                            return new ListSchemasRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListSchemasRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.ListSchemasRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListSchemasRequest} message ListSchemasRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchemasRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSchemasRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ListSchemasRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListSchemasRequest} message ListSchemasRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchemasRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSchemasRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ListSchemasRequest} ListSchemasRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchemasRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ListSchemasRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSchemasRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ListSchemasRequest} ListSchemasRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchemasRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSchemasRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSchemasRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSchemasRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ListSchemasRequest} ListSchemasRequest
                         */
                        ListSchemasRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ListSchemasRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ListSchemasRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSchemasRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ListSchemasRequest} message ListSchemasRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSchemasRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSchemasRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSchemasRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSchemasRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSchemasRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ListSchemasRequest";
                        };
    
                        return ListSchemasRequest;
                    })();
    
                    v1.ListSchemasResponse = (function() {
    
                        /**
                         * Properties of a ListSchemasResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IListSchemasResponse
                         * @property {Array.<google.cloud.discoveryengine.v1.ISchema>|null} [schemas] ListSchemasResponse schemas
                         * @property {string|null} [nextPageToken] ListSchemasResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListSchemasResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a ListSchemasResponse.
                         * @implements IListSchemasResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IListSchemasResponse=} [properties] Properties to set
                         */
                        function ListSchemasResponse(properties) {
                            this.schemas = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSchemasResponse schemas.
                         * @member {Array.<google.cloud.discoveryengine.v1.ISchema>} schemas
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @instance
                         */
                        ListSchemasResponse.prototype.schemas = $util.emptyArray;
    
                        /**
                         * ListSchemasResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @instance
                         */
                        ListSchemasResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListSchemasResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListSchemasResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.ListSchemasResponse} ListSchemasResponse instance
                         */
                        ListSchemasResponse.create = function create(properties) {
                            return new ListSchemasResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListSchemasResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1.ListSchemasResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListSchemasResponse} message ListSchemasResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchemasResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schemas != null && message.schemas.length)
                                for (var i = 0; i < message.schemas.length; ++i)
                                    $root.google.cloud.discoveryengine.v1.Schema.encode(message.schemas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSchemasResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.ListSchemasResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IListSchemasResponse} message ListSchemasResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchemasResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSchemasResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.ListSchemasResponse} ListSchemasResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchemasResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.ListSchemasResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.schemas && message.schemas.length))
                                            message.schemas = [];
                                        message.schemas.push($root.google.cloud.discoveryengine.v1.Schema.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSchemasResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.ListSchemasResponse} ListSchemasResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchemasResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSchemasResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSchemasResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schemas != null && message.hasOwnProperty("schemas")) {
                                if (!Array.isArray(message.schemas))
                                    return "schemas: array expected";
                                for (var i = 0; i < message.schemas.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1.Schema.verify(message.schemas[i]);
                                    if (error)
                                        return "schemas." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSchemasResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.ListSchemasResponse} ListSchemasResponse
                         */
                        ListSchemasResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.ListSchemasResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.ListSchemasResponse();
                            if (object.schemas) {
                                if (!Array.isArray(object.schemas))
                                    throw TypeError(".google.cloud.discoveryengine.v1.ListSchemasResponse.schemas: array expected");
                                message.schemas = [];
                                for (var i = 0; i < object.schemas.length; ++i) {
                                    if (typeof object.schemas[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.ListSchemasResponse.schemas: object expected");
                                    message.schemas[i] = $root.google.cloud.discoveryengine.v1.Schema.fromObject(object.schemas[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSchemasResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ListSchemasResponse} message ListSchemasResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSchemasResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.schemas = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.schemas && message.schemas.length) {
                                object.schemas = [];
                                for (var j = 0; j < message.schemas.length; ++j)
                                    object.schemas[j] = $root.google.cloud.discoveryengine.v1.Schema.toObject(message.schemas[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSchemasResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSchemasResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSchemasResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.ListSchemasResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSchemasResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.ListSchemasResponse";
                        };
    
                        return ListSchemasResponse;
                    })();
    
                    v1.CreateSchemaRequest = (function() {
    
                        /**
                         * Properties of a CreateSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ICreateSchemaRequest
                         * @property {string|null} [parent] CreateSchemaRequest parent
                         * @property {google.cloud.discoveryengine.v1.ISchema|null} [schema] CreateSchemaRequest schema
                         * @property {string|null} [schemaId] CreateSchemaRequest schemaId
                         */
    
                        /**
                         * Constructs a new CreateSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a CreateSchemaRequest.
                         * @implements ICreateSchemaRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaRequest=} [properties] Properties to set
                         */
                        function CreateSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateSchemaRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @instance
                         */
                        CreateSchemaRequest.prototype.parent = "";
    
                        /**
                         * CreateSchemaRequest schema.
                         * @member {google.cloud.discoveryengine.v1.ISchema|null|undefined} schema
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @instance
                         */
                        CreateSchemaRequest.prototype.schema = null;
    
                        /**
                         * CreateSchemaRequest schemaId.
                         * @member {string} schemaId
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @instance
                         */
                        CreateSchemaRequest.prototype.schemaId = "";
    
                        /**
                         * Creates a new CreateSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.CreateSchemaRequest} CreateSchemaRequest instance
                         */
                        CreateSchemaRequest.create = function create(properties) {
                            return new CreateSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateSchemaRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.CreateSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaRequest} message CreateSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                $root.google.cloud.discoveryengine.v1.Schema.encode(message.schema, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.schemaId != null && Object.hasOwnProperty.call(message, "schemaId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.schemaId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.CreateSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaRequest} message CreateSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.CreateSchemaRequest} CreateSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.CreateSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.schema = $root.google.cloud.discoveryengine.v1.Schema.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.schemaId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.CreateSchemaRequest} CreateSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.schema != null && message.hasOwnProperty("schema")) {
                                var error = $root.google.cloud.discoveryengine.v1.Schema.verify(message.schema);
                                if (error)
                                    return "schema." + error;
                            }
                            if (message.schemaId != null && message.hasOwnProperty("schemaId"))
                                if (!$util.isString(message.schemaId))
                                    return "schemaId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.CreateSchemaRequest} CreateSchemaRequest
                         */
                        CreateSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.CreateSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.CreateSchemaRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.schema != null) {
                                if (typeof object.schema !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.CreateSchemaRequest.schema: object expected");
                                message.schema = $root.google.cloud.discoveryengine.v1.Schema.fromObject(object.schema);
                            }
                            if (object.schemaId != null)
                                message.schemaId = String(object.schemaId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.CreateSchemaRequest} message CreateSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.schema = null;
                                object.schemaId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.schema != null && message.hasOwnProperty("schema"))
                                object.schema = $root.google.cloud.discoveryengine.v1.Schema.toObject(message.schema, options);
                            if (message.schemaId != null && message.hasOwnProperty("schemaId"))
                                object.schemaId = message.schemaId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.CreateSchemaRequest";
                        };
    
                        return CreateSchemaRequest;
                    })();
    
                    v1.UpdateSchemaRequest = (function() {
    
                        /**
                         * Properties of an UpdateSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IUpdateSchemaRequest
                         * @property {google.cloud.discoveryengine.v1.ISchema|null} [schema] UpdateSchemaRequest schema
                         * @property {boolean|null} [allowMissing] UpdateSchemaRequest allowMissing
                         */
    
                        /**
                         * Constructs a new UpdateSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an UpdateSchemaRequest.
                         * @implements IUpdateSchemaRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaRequest=} [properties] Properties to set
                         */
                        function UpdateSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateSchemaRequest schema.
                         * @member {google.cloud.discoveryengine.v1.ISchema|null|undefined} schema
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @instance
                         */
                        UpdateSchemaRequest.prototype.schema = null;
    
                        /**
                         * UpdateSchemaRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @instance
                         */
                        UpdateSchemaRequest.prototype.allowMissing = false;
    
                        /**
                         * Creates a new UpdateSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.UpdateSchemaRequest} UpdateSchemaRequest instance
                         */
                        UpdateSchemaRequest.create = function create(properties) {
                            return new UpdateSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateSchemaRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.UpdateSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaRequest} message UpdateSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                $root.google.cloud.discoveryengine.v1.Schema.encode(message.schema, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.allowMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.UpdateSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaRequest} message UpdateSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.UpdateSchemaRequest} UpdateSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.UpdateSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.schema = $root.google.cloud.discoveryengine.v1.Schema.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.UpdateSchemaRequest} UpdateSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schema != null && message.hasOwnProperty("schema")) {
                                var error = $root.google.cloud.discoveryengine.v1.Schema.verify(message.schema);
                                if (error)
                                    return "schema." + error;
                            }
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.UpdateSchemaRequest} UpdateSchemaRequest
                         */
                        UpdateSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.UpdateSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.UpdateSchemaRequest();
                            if (object.schema != null) {
                                if (typeof object.schema !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UpdateSchemaRequest.schema: object expected");
                                message.schema = $root.google.cloud.discoveryengine.v1.Schema.fromObject(object.schema);
                            }
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.UpdateSchemaRequest} message UpdateSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.schema = null;
                                object.allowMissing = false;
                            }
                            if (message.schema != null && message.hasOwnProperty("schema"))
                                object.schema = $root.google.cloud.discoveryengine.v1.Schema.toObject(message.schema, options);
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.UpdateSchemaRequest";
                        };
    
                        return UpdateSchemaRequest;
                    })();
    
                    v1.DeleteSchemaRequest = (function() {
    
                        /**
                         * Properties of a DeleteSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IDeleteSchemaRequest
                         * @property {string|null} [name] DeleteSchemaRequest name
                         */
    
                        /**
                         * Constructs a new DeleteSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a DeleteSchemaRequest.
                         * @implements IDeleteSchemaRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaRequest=} [properties] Properties to set
                         */
                        function DeleteSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteSchemaRequest name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @instance
                         */
                        DeleteSchemaRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.DeleteSchemaRequest} DeleteSchemaRequest instance
                         */
                        DeleteSchemaRequest.create = function create(properties) {
                            return new DeleteSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteSchemaRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.DeleteSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaRequest} message DeleteSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.DeleteSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaRequest} message DeleteSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.DeleteSchemaRequest} DeleteSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.DeleteSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.DeleteSchemaRequest} DeleteSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.DeleteSchemaRequest} DeleteSchemaRequest
                         */
                        DeleteSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.DeleteSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.DeleteSchemaRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.DeleteSchemaRequest} message DeleteSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.DeleteSchemaRequest";
                        };
    
                        return DeleteSchemaRequest;
                    })();
    
                    v1.CreateSchemaMetadata = (function() {
    
                        /**
                         * Properties of a CreateSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ICreateSchemaMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] CreateSchemaMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] CreateSchemaMetadata updateTime
                         */
    
                        /**
                         * Constructs a new CreateSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a CreateSchemaMetadata.
                         * @implements ICreateSchemaMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaMetadata=} [properties] Properties to set
                         */
                        function CreateSchemaMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateSchemaMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @instance
                         */
                        CreateSchemaMetadata.prototype.createTime = null;
    
                        /**
                         * CreateSchemaMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @instance
                         */
                        CreateSchemaMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new CreateSchemaMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.CreateSchemaMetadata} CreateSchemaMetadata instance
                         */
                        CreateSchemaMetadata.create = function create(properties) {
                            return new CreateSchemaMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified CreateSchemaMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1.CreateSchemaMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaMetadata} message CreateSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSchemaMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateSchemaMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.CreateSchemaMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICreateSchemaMetadata} message CreateSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSchemaMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateSchemaMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.CreateSchemaMetadata} CreateSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSchemaMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.CreateSchemaMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateSchemaMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.CreateSchemaMetadata} CreateSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSchemaMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateSchemaMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateSchemaMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateSchemaMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.CreateSchemaMetadata} CreateSchemaMetadata
                         */
                        CreateSchemaMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.CreateSchemaMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.CreateSchemaMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.CreateSchemaMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.CreateSchemaMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateSchemaMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.CreateSchemaMetadata} message CreateSchemaMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateSchemaMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateSchemaMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateSchemaMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateSchemaMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.CreateSchemaMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateSchemaMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.CreateSchemaMetadata";
                        };
    
                        return CreateSchemaMetadata;
                    })();
    
                    v1.UpdateSchemaMetadata = (function() {
    
                        /**
                         * Properties of an UpdateSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IUpdateSchemaMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] UpdateSchemaMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] UpdateSchemaMetadata updateTime
                         */
    
                        /**
                         * Constructs a new UpdateSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents an UpdateSchemaMetadata.
                         * @implements IUpdateSchemaMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaMetadata=} [properties] Properties to set
                         */
                        function UpdateSchemaMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateSchemaMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @instance
                         */
                        UpdateSchemaMetadata.prototype.createTime = null;
    
                        /**
                         * UpdateSchemaMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @instance
                         */
                        UpdateSchemaMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new UpdateSchemaMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.UpdateSchemaMetadata} UpdateSchemaMetadata instance
                         */
                        UpdateSchemaMetadata.create = function create(properties) {
                            return new UpdateSchemaMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateSchemaMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1.UpdateSchemaMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaMetadata} message UpdateSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSchemaMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateSchemaMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.UpdateSchemaMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IUpdateSchemaMetadata} message UpdateSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSchemaMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateSchemaMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.UpdateSchemaMetadata} UpdateSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSchemaMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.UpdateSchemaMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateSchemaMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.UpdateSchemaMetadata} UpdateSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSchemaMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateSchemaMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateSchemaMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateSchemaMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.UpdateSchemaMetadata} UpdateSchemaMetadata
                         */
                        UpdateSchemaMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.UpdateSchemaMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.UpdateSchemaMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UpdateSchemaMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.UpdateSchemaMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateSchemaMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.UpdateSchemaMetadata} message UpdateSchemaMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateSchemaMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateSchemaMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateSchemaMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateSchemaMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.UpdateSchemaMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateSchemaMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.UpdateSchemaMetadata";
                        };
    
                        return UpdateSchemaMetadata;
                    })();
    
                    v1.DeleteSchemaMetadata = (function() {
    
                        /**
                         * Properties of a DeleteSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IDeleteSchemaMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] DeleteSchemaMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] DeleteSchemaMetadata updateTime
                         */
    
                        /**
                         * Constructs a new DeleteSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a DeleteSchemaMetadata.
                         * @implements IDeleteSchemaMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaMetadata=} [properties] Properties to set
                         */
                        function DeleteSchemaMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteSchemaMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @instance
                         */
                        DeleteSchemaMetadata.prototype.createTime = null;
    
                        /**
                         * DeleteSchemaMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @instance
                         */
                        DeleteSchemaMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new DeleteSchemaMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.DeleteSchemaMetadata} DeleteSchemaMetadata instance
                         */
                        DeleteSchemaMetadata.create = function create(properties) {
                            return new DeleteSchemaMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteSchemaMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1.DeleteSchemaMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaMetadata} message DeleteSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSchemaMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteSchemaMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.DeleteSchemaMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IDeleteSchemaMetadata} message DeleteSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSchemaMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteSchemaMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.DeleteSchemaMetadata} DeleteSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSchemaMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.DeleteSchemaMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteSchemaMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.DeleteSchemaMetadata} DeleteSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSchemaMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteSchemaMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteSchemaMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeleteSchemaMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.DeleteSchemaMetadata} DeleteSchemaMetadata
                         */
                        DeleteSchemaMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.DeleteSchemaMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.DeleteSchemaMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.DeleteSchemaMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.DeleteSchemaMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteSchemaMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1.DeleteSchemaMetadata} message DeleteSchemaMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteSchemaMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeleteSchemaMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteSchemaMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteSchemaMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.DeleteSchemaMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteSchemaMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.DeleteSchemaMetadata";
                        };
    
                        return DeleteSchemaMetadata;
                    })();
    
                    v1.SearchService = (function() {
    
                        /**
                         * Constructs a new SearchService service.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a SearchService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SearchService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SearchService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SearchService;
    
                        /**
                         * Creates new SearchService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.SearchService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SearchService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SearchService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.SearchService|search}.
                         * @memberof google.cloud.discoveryengine.v1.SearchService
                         * @typedef SearchCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1.SearchResponse} [response] SearchResponse
                         */
    
                        /**
                         * Calls Search.
                         * @function search
                         * @memberof google.cloud.discoveryengine.v1.SearchService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ISearchRequest} request SearchRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.SearchService.SearchCallback} callback Node-style callback called with the error, if any, and SearchResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SearchService.prototype.search = function search(request, callback) {
                            return this.rpcCall(search, $root.google.cloud.discoveryengine.v1.SearchRequest, $root.google.cloud.discoveryengine.v1.SearchResponse, request, callback);
                        }, "name", { value: "Search" });
    
                        /**
                         * Calls Search.
                         * @function search
                         * @memberof google.cloud.discoveryengine.v1.SearchService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ISearchRequest} request SearchRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1.SearchResponse>} Promise
                         * @variation 2
                         */
    
                        return SearchService;
                    })();
    
                    v1.SearchRequest = (function() {
    
                        /**
                         * Properties of a SearchRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ISearchRequest
                         * @property {string|null} [servingConfig] SearchRequest servingConfig
                         * @property {string|null} [branch] SearchRequest branch
                         * @property {string|null} [query] SearchRequest query
                         * @property {number|null} [pageSize] SearchRequest pageSize
                         * @property {string|null} [pageToken] SearchRequest pageToken
                         * @property {number|null} [offset] SearchRequest offset
                         * @property {google.cloud.discoveryengine.v1.IUserInfo|null} [userInfo] SearchRequest userInfo
                         * @property {Object.<string,google.protobuf.IValue>|null} [params] SearchRequest params
                         * @property {google.cloud.discoveryengine.v1.SearchRequest.IQueryExpansionSpec|null} [queryExpansionSpec] SearchRequest queryExpansionSpec
                         * @property {google.cloud.discoveryengine.v1.SearchRequest.ISpellCorrectionSpec|null} [spellCorrectionSpec] SearchRequest spellCorrectionSpec
                         * @property {string|null} [userPseudoId] SearchRequest userPseudoId
                         * @property {google.cloud.discoveryengine.v1.SearchRequest.IContentSearchSpec|null} [contentSearchSpec] SearchRequest contentSearchSpec
                         * @property {boolean|null} [safeSearch] SearchRequest safeSearch
                         * @property {Object.<string,string>|null} [userLabels] SearchRequest userLabels
                         */
    
                        /**
                         * Constructs a new SearchRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a SearchRequest.
                         * @implements ISearchRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ISearchRequest=} [properties] Properties to set
                         */
                        function SearchRequest(properties) {
                            this.params = {};
                            this.userLabels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchRequest servingConfig.
                         * @member {string} servingConfig
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.servingConfig = "";
    
                        /**
                         * SearchRequest branch.
                         * @member {string} branch
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.branch = "";
    
                        /**
                         * SearchRequest query.
                         * @member {string} query
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.query = "";
    
                        /**
                         * SearchRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.pageSize = 0;
    
                        /**
                         * SearchRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.pageToken = "";
    
                        /**
                         * SearchRequest offset.
                         * @member {number} offset
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.offset = 0;
    
                        /**
                         * SearchRequest userInfo.
                         * @member {google.cloud.discoveryengine.v1.IUserInfo|null|undefined} userInfo
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.userInfo = null;
    
                        /**
                         * SearchRequest params.
                         * @member {Object.<string,google.protobuf.IValue>} params
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.params = $util.emptyObject;
    
                        /**
                         * SearchRequest queryExpansionSpec.
                         * @member {google.cloud.discoveryengine.v1.SearchRequest.IQueryExpansionSpec|null|undefined} queryExpansionSpec
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.queryExpansionSpec = null;
    
                        /**
                         * SearchRequest spellCorrectionSpec.
                         * @member {google.cloud.discoveryengine.v1.SearchRequest.ISpellCorrectionSpec|null|undefined} spellCorrectionSpec
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.spellCorrectionSpec = null;
    
                        /**
                         * SearchRequest userPseudoId.
                         * @member {string} userPseudoId
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.userPseudoId = "";
    
                        /**
                         * SearchRequest contentSearchSpec.
                         * @member {google.cloud.discoveryengine.v1.SearchRequest.IContentSearchSpec|null|undefined} contentSearchSpec
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.contentSearchSpec = null;
    
                        /**
                         * SearchRequest safeSearch.
                         * @member {boolean} safeSearch
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.safeSearch = false;
    
                        /**
                         * SearchRequest userLabels.
                         * @member {Object.<string,string>} userLabels
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.userLabels = $util.emptyObject;
    
                        /**
                         * Creates a new SearchRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISearchRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.SearchRequest} SearchRequest instance
                         */
                        SearchRequest.create = function create(properties) {
                            return new SearchRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISearchRequest} message SearchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.servingConfig != null && Object.hasOwnProperty.call(message, "servingConfig"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.servingConfig);
                            if (message.branch != null && Object.hasOwnProperty.call(message, "branch"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.branch);
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.query);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pageToken);
                            if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.offset);
                            if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                                for (var keys = Object.keys(message.params), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 11, wireType 2 =*/90).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.protobuf.Value.encode(message.params[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.queryExpansionSpec != null && Object.hasOwnProperty.call(message, "queryExpansionSpec"))
                                $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.encode(message.queryExpansionSpec, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.spellCorrectionSpec != null && Object.hasOwnProperty.call(message, "spellCorrectionSpec"))
                                $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.encode(message.spellCorrectionSpec, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.userPseudoId != null && Object.hasOwnProperty.call(message, "userPseudoId"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.userPseudoId);
                            if (message.safeSearch != null && Object.hasOwnProperty.call(message, "safeSearch"))
                                writer.uint32(/* id 20, wireType 0 =*/160).bool(message.safeSearch);
                            if (message.userInfo != null && Object.hasOwnProperty.call(message, "userInfo"))
                                $root.google.cloud.discoveryengine.v1.UserInfo.encode(message.userInfo, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.userLabels != null && Object.hasOwnProperty.call(message, "userLabels"))
                                for (var keys = Object.keys(message.userLabels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 22, wireType 2 =*/178).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.userLabels[keys[i]]).ldelim();
                            if (message.contentSearchSpec != null && Object.hasOwnProperty.call(message, "contentSearchSpec"))
                                $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.encode(message.contentSearchSpec, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISearchRequest} message SearchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.SearchRequest} SearchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.SearchRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.servingConfig = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.branch = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.query = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.offset = reader.int32();
                                        break;
                                    }
                                case 21: {
                                        message.userInfo = $root.google.cloud.discoveryengine.v1.UserInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        if (message.params === $util.emptyObject)
                                            message.params = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.protobuf.Value.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.params[key] = value;
                                        break;
                                    }
                                case 13: {
                                        message.queryExpansionSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.spellCorrectionSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.userPseudoId = reader.string();
                                        break;
                                    }
                                case 24: {
                                        message.contentSearchSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 20: {
                                        message.safeSearch = reader.bool();
                                        break;
                                    }
                                case 22: {
                                        if (message.userLabels === $util.emptyObject)
                                            message.userLabels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.userLabels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.SearchRequest} SearchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.servingConfig != null && message.hasOwnProperty("servingConfig"))
                                if (!$util.isString(message.servingConfig))
                                    return "servingConfig: string expected";
                            if (message.branch != null && message.hasOwnProperty("branch"))
                                if (!$util.isString(message.branch))
                                    return "branch: string expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (!$util.isInteger(message.offset))
                                    return "offset: integer expected";
                            if (message.userInfo != null && message.hasOwnProperty("userInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1.UserInfo.verify(message.userInfo);
                                if (error)
                                    return "userInfo." + error;
                            }
                            if (message.params != null && message.hasOwnProperty("params")) {
                                if (!$util.isObject(message.params))
                                    return "params: object expected";
                                var key = Object.keys(message.params);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.protobuf.Value.verify(message.params[key[i]]);
                                    if (error)
                                        return "params." + error;
                                }
                            }
                            if (message.queryExpansionSpec != null && message.hasOwnProperty("queryExpansionSpec")) {
                                var error = $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.verify(message.queryExpansionSpec);
                                if (error)
                                    return "queryExpansionSpec." + error;
                            }
                            if (message.spellCorrectionSpec != null && message.hasOwnProperty("spellCorrectionSpec")) {
                                var error = $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.verify(message.spellCorrectionSpec);
                                if (error)
                                    return "spellCorrectionSpec." + error;
                            }
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                if (!$util.isString(message.userPseudoId))
                                    return "userPseudoId: string expected";
                            if (message.contentSearchSpec != null && message.hasOwnProperty("contentSearchSpec")) {
                                var error = $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.verify(message.contentSearchSpec);
                                if (error)
                                    return "contentSearchSpec." + error;
                            }
                            if (message.safeSearch != null && message.hasOwnProperty("safeSearch"))
                                if (typeof message.safeSearch !== "boolean")
                                    return "safeSearch: boolean expected";
                            if (message.userLabels != null && message.hasOwnProperty("userLabels")) {
                                if (!$util.isObject(message.userLabels))
                                    return "userLabels: object expected";
                                var key = Object.keys(message.userLabels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.userLabels[key[i]]))
                                        return "userLabels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.SearchRequest} SearchRequest
                         */
                        SearchRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.SearchRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.SearchRequest();
                            if (object.servingConfig != null)
                                message.servingConfig = String(object.servingConfig);
                            if (object.branch != null)
                                message.branch = String(object.branch);
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.offset != null)
                                message.offset = object.offset | 0;
                            if (object.userInfo != null) {
                                if (typeof object.userInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.SearchRequest.userInfo: object expected");
                                message.userInfo = $root.google.cloud.discoveryengine.v1.UserInfo.fromObject(object.userInfo);
                            }
                            if (object.params) {
                                if (typeof object.params !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.SearchRequest.params: object expected");
                                message.params = {};
                                for (var keys = Object.keys(object.params), i = 0; i < keys.length; ++i) {
                                    if (typeof object.params[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.SearchRequest.params: object expected");
                                    message.params[keys[i]] = $root.google.protobuf.Value.fromObject(object.params[keys[i]]);
                                }
                            }
                            if (object.queryExpansionSpec != null) {
                                if (typeof object.queryExpansionSpec !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.SearchRequest.queryExpansionSpec: object expected");
                                message.queryExpansionSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.fromObject(object.queryExpansionSpec);
                            }
                            if (object.spellCorrectionSpec != null) {
                                if (typeof object.spellCorrectionSpec !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.SearchRequest.spellCorrectionSpec: object expected");
                                message.spellCorrectionSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.fromObject(object.spellCorrectionSpec);
                            }
                            if (object.userPseudoId != null)
                                message.userPseudoId = String(object.userPseudoId);
                            if (object.contentSearchSpec != null) {
                                if (typeof object.contentSearchSpec !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.SearchRequest.contentSearchSpec: object expected");
                                message.contentSearchSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.fromObject(object.contentSearchSpec);
                            }
                            if (object.safeSearch != null)
                                message.safeSearch = Boolean(object.safeSearch);
                            if (object.userLabels) {
                                if (typeof object.userLabels !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.SearchRequest.userLabels: object expected");
                                message.userLabels = {};
                                for (var keys = Object.keys(object.userLabels), i = 0; i < keys.length; ++i)
                                    message.userLabels[keys[i]] = String(object.userLabels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.SearchRequest} message SearchRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.params = {};
                                object.userLabels = {};
                            }
                            if (options.defaults) {
                                object.servingConfig = "";
                                object.branch = "";
                                object.query = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.offset = 0;
                                object.queryExpansionSpec = null;
                                object.spellCorrectionSpec = null;
                                object.userPseudoId = "";
                                object.safeSearch = false;
                                object.userInfo = null;
                                object.contentSearchSpec = null;
                            }
                            if (message.servingConfig != null && message.hasOwnProperty("servingConfig"))
                                object.servingConfig = message.servingConfig;
                            if (message.branch != null && message.hasOwnProperty("branch"))
                                object.branch = message.branch;
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                object.offset = message.offset;
                            var keys2;
                            if (message.params && (keys2 = Object.keys(message.params)).length) {
                                object.params = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.params[keys2[j]] = $root.google.protobuf.Value.toObject(message.params[keys2[j]], options);
                            }
                            if (message.queryExpansionSpec != null && message.hasOwnProperty("queryExpansionSpec"))
                                object.queryExpansionSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.toObject(message.queryExpansionSpec, options);
                            if (message.spellCorrectionSpec != null && message.hasOwnProperty("spellCorrectionSpec"))
                                object.spellCorrectionSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.toObject(message.spellCorrectionSpec, options);
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                object.userPseudoId = message.userPseudoId;
                            if (message.safeSearch != null && message.hasOwnProperty("safeSearch"))
                                object.safeSearch = message.safeSearch;
                            if (message.userInfo != null && message.hasOwnProperty("userInfo"))
                                object.userInfo = $root.google.cloud.discoveryengine.v1.UserInfo.toObject(message.userInfo, options);
                            if (message.userLabels && (keys2 = Object.keys(message.userLabels)).length) {
                                object.userLabels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.userLabels[keys2[j]] = message.userLabels[keys2[j]];
                            }
                            if (message.contentSearchSpec != null && message.hasOwnProperty("contentSearchSpec"))
                                object.contentSearchSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.toObject(message.contentSearchSpec, options);
                            return object;
                        };
    
                        /**
                         * Converts this SearchRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.SearchRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.SearchRequest";
                        };
    
                        SearchRequest.QueryExpansionSpec = (function() {
    
                            /**
                             * Properties of a QueryExpansionSpec.
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest
                             * @interface IQueryExpansionSpec
                             * @property {google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition|null} [condition] QueryExpansionSpec condition
                             */
    
                            /**
                             * Constructs a new QueryExpansionSpec.
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest
                             * @classdesc Represents a QueryExpansionSpec.
                             * @implements IQueryExpansionSpec
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.IQueryExpansionSpec=} [properties] Properties to set
                             */
                            function QueryExpansionSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * QueryExpansionSpec condition.
                             * @member {google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition} condition
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @instance
                             */
                            QueryExpansionSpec.prototype.condition = 0;
    
                            /**
                             * Creates a new QueryExpansionSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.IQueryExpansionSpec=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec} QueryExpansionSpec instance
                             */
                            QueryExpansionSpec.create = function create(properties) {
                                return new QueryExpansionSpec(properties);
                            };
    
                            /**
                             * Encodes the specified QueryExpansionSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.IQueryExpansionSpec} message QueryExpansionSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            QueryExpansionSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.condition);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified QueryExpansionSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.IQueryExpansionSpec} message QueryExpansionSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            QueryExpansionSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a QueryExpansionSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec} QueryExpansionSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            QueryExpansionSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.condition = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a QueryExpansionSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec} QueryExpansionSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            QueryExpansionSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a QueryExpansionSpec message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            QueryExpansionSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.condition != null && message.hasOwnProperty("condition"))
                                    switch (message.condition) {
                                    default:
                                        return "condition: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a QueryExpansionSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec} QueryExpansionSpec
                             */
                            QueryExpansionSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec();
                                switch (object.condition) {
                                default:
                                    if (typeof object.condition === "number") {
                                        message.condition = object.condition;
                                        break;
                                    }
                                    break;
                                case "CONDITION_UNSPECIFIED":
                                case 0:
                                    message.condition = 0;
                                    break;
                                case "DISABLED":
                                case 1:
                                    message.condition = 1;
                                    break;
                                case "AUTO":
                                case 2:
                                    message.condition = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a QueryExpansionSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec} message QueryExpansionSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            QueryExpansionSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.condition = options.enums === String ? "CONDITION_UNSPECIFIED" : 0;
                                if (message.condition != null && message.hasOwnProperty("condition"))
                                    object.condition = options.enums === String ? $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition[message.condition] === undefined ? message.condition : $root.google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition[message.condition] : message.condition;
                                return object;
                            };
    
                            /**
                             * Converts this QueryExpansionSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            QueryExpansionSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for QueryExpansionSpec
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            QueryExpansionSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec";
                            };
    
                            /**
                             * Condition enum.
                             * @name google.cloud.discoveryengine.v1.SearchRequest.QueryExpansionSpec.Condition
                             * @enum {number}
                             * @property {number} CONDITION_UNSPECIFIED=0 CONDITION_UNSPECIFIED value
                             * @property {number} DISABLED=1 DISABLED value
                             * @property {number} AUTO=2 AUTO value
                             */
                            QueryExpansionSpec.Condition = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "CONDITION_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "DISABLED"] = 1;
                                values[valuesById[2] = "AUTO"] = 2;
                                return values;
                            })();
    
                            return QueryExpansionSpec;
                        })();
    
                        SearchRequest.SpellCorrectionSpec = (function() {
    
                            /**
                             * Properties of a SpellCorrectionSpec.
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest
                             * @interface ISpellCorrectionSpec
                             * @property {google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode|null} [mode] SpellCorrectionSpec mode
                             */
    
                            /**
                             * Constructs a new SpellCorrectionSpec.
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest
                             * @classdesc Represents a SpellCorrectionSpec.
                             * @implements ISpellCorrectionSpec
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.ISpellCorrectionSpec=} [properties] Properties to set
                             */
                            function SpellCorrectionSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SpellCorrectionSpec mode.
                             * @member {google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode} mode
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @instance
                             */
                            SpellCorrectionSpec.prototype.mode = 0;
    
                            /**
                             * Creates a new SpellCorrectionSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.ISpellCorrectionSpec=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec} SpellCorrectionSpec instance
                             */
                            SpellCorrectionSpec.create = function create(properties) {
                                return new SpellCorrectionSpec(properties);
                            };
    
                            /**
                             * Encodes the specified SpellCorrectionSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.ISpellCorrectionSpec} message SpellCorrectionSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SpellCorrectionSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SpellCorrectionSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.ISpellCorrectionSpec} message SpellCorrectionSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SpellCorrectionSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SpellCorrectionSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec} SpellCorrectionSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SpellCorrectionSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.mode = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SpellCorrectionSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec} SpellCorrectionSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SpellCorrectionSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SpellCorrectionSpec message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SpellCorrectionSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    switch (message.mode) {
                                    default:
                                        return "mode: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a SpellCorrectionSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec} SpellCorrectionSpec
                             */
                            SpellCorrectionSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec();
                                switch (object.mode) {
                                default:
                                    if (typeof object.mode === "number") {
                                        message.mode = object.mode;
                                        break;
                                    }
                                    break;
                                case "MODE_UNSPECIFIED":
                                case 0:
                                    message.mode = 0;
                                    break;
                                case "SUGGESTION_ONLY":
                                case 1:
                                    message.mode = 1;
                                    break;
                                case "AUTO":
                                case 2:
                                    message.mode = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SpellCorrectionSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec} message SpellCorrectionSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SpellCorrectionSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.mode = options.enums === String ? "MODE_UNSPECIFIED" : 0;
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    object.mode = options.enums === String ? $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode[message.mode] === undefined ? message.mode : $root.google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode[message.mode] : message.mode;
                                return object;
                            };
    
                            /**
                             * Converts this SpellCorrectionSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SpellCorrectionSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SpellCorrectionSpec
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SpellCorrectionSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec";
                            };
    
                            /**
                             * Mode enum.
                             * @name google.cloud.discoveryengine.v1.SearchRequest.SpellCorrectionSpec.Mode
                             * @enum {number}
                             * @property {number} MODE_UNSPECIFIED=0 MODE_UNSPECIFIED value
                             * @property {number} SUGGESTION_ONLY=1 SUGGESTION_ONLY value
                             * @property {number} AUTO=2 AUTO value
                             */
                            SpellCorrectionSpec.Mode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "MODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SUGGESTION_ONLY"] = 1;
                                values[valuesById[2] = "AUTO"] = 2;
                                return values;
                            })();
    
                            return SpellCorrectionSpec;
                        })();
    
                        SearchRequest.ContentSearchSpec = (function() {
    
                            /**
                             * Properties of a ContentSearchSpec.
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest
                             * @interface IContentSearchSpec
                             * @property {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ISnippetSpec|null} [snippetSpec] ContentSearchSpec snippetSpec
                             */
    
                            /**
                             * Constructs a new ContentSearchSpec.
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest
                             * @classdesc Represents a ContentSearchSpec.
                             * @implements IContentSearchSpec
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.IContentSearchSpec=} [properties] Properties to set
                             */
                            function ContentSearchSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ContentSearchSpec snippetSpec.
                             * @member {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ISnippetSpec|null|undefined} snippetSpec
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @instance
                             */
                            ContentSearchSpec.prototype.snippetSpec = null;
    
                            /**
                             * Creates a new ContentSearchSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.IContentSearchSpec=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec} ContentSearchSpec instance
                             */
                            ContentSearchSpec.create = function create(properties) {
                                return new ContentSearchSpec(properties);
                            };
    
                            /**
                             * Encodes the specified ContentSearchSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.IContentSearchSpec} message ContentSearchSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ContentSearchSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.snippetSpec != null && Object.hasOwnProperty.call(message, "snippetSpec"))
                                    $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec.encode(message.snippetSpec, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ContentSearchSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.IContentSearchSpec} message ContentSearchSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ContentSearchSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ContentSearchSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec} ContentSearchSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ContentSearchSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.snippetSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ContentSearchSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec} ContentSearchSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ContentSearchSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ContentSearchSpec message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ContentSearchSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.snippetSpec != null && message.hasOwnProperty("snippetSpec")) {
                                    var error = $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec.verify(message.snippetSpec);
                                    if (error)
                                        return "snippetSpec." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ContentSearchSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec} ContentSearchSpec
                             */
                            ContentSearchSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec();
                                if (object.snippetSpec != null) {
                                    if (typeof object.snippetSpec !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.snippetSpec: object expected");
                                    message.snippetSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec.fromObject(object.snippetSpec);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ContentSearchSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec} message ContentSearchSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ContentSearchSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.snippetSpec = null;
                                if (message.snippetSpec != null && message.hasOwnProperty("snippetSpec"))
                                    object.snippetSpec = $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec.toObject(message.snippetSpec, options);
                                return object;
                            };
    
                            /**
                             * Converts this ContentSearchSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ContentSearchSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ContentSearchSpec
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ContentSearchSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec";
                            };
    
                            ContentSearchSpec.SnippetSpec = (function() {
    
                                /**
                                 * Properties of a SnippetSpec.
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                                 * @interface ISnippetSpec
                                 * @property {number|null} [maxSnippetCount] SnippetSpec maxSnippetCount
                                 * @property {boolean|null} [referenceOnly] SnippetSpec referenceOnly
                                 */
    
                                /**
                                 * Constructs a new SnippetSpec.
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec
                                 * @classdesc Represents a SnippetSpec.
                                 * @implements ISnippetSpec
                                 * @constructor
                                 * @param {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ISnippetSpec=} [properties] Properties to set
                                 */
                                function SnippetSpec(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * SnippetSpec maxSnippetCount.
                                 * @member {number} maxSnippetCount
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @instance
                                 */
                                SnippetSpec.prototype.maxSnippetCount = 0;
    
                                /**
                                 * SnippetSpec referenceOnly.
                                 * @member {boolean} referenceOnly
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @instance
                                 */
                                SnippetSpec.prototype.referenceOnly = false;
    
                                /**
                                 * Creates a new SnippetSpec instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ISnippetSpec=} [properties] Properties to set
                                 * @returns {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec} SnippetSpec instance
                                 */
                                SnippetSpec.create = function create(properties) {
                                    return new SnippetSpec(properties);
                                };
    
                                /**
                                 * Encodes the specified SnippetSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ISnippetSpec} message SnippetSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SnippetSpec.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.maxSnippetCount != null && Object.hasOwnProperty.call(message, "maxSnippetCount"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxSnippetCount);
                                    if (message.referenceOnly != null && Object.hasOwnProperty.call(message, "referenceOnly"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.referenceOnly);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified SnippetSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.ISnippetSpec} message SnippetSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SnippetSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a SnippetSpec message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec} SnippetSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SnippetSpec.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.maxSnippetCount = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.referenceOnly = reader.bool();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a SnippetSpec message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec} SnippetSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SnippetSpec.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a SnippetSpec message.
                                 * @function verify
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                SnippetSpec.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.maxSnippetCount != null && message.hasOwnProperty("maxSnippetCount"))
                                        if (!$util.isInteger(message.maxSnippetCount))
                                            return "maxSnippetCount: integer expected";
                                    if (message.referenceOnly != null && message.hasOwnProperty("referenceOnly"))
                                        if (typeof message.referenceOnly !== "boolean")
                                            return "referenceOnly: boolean expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a SnippetSpec message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec} SnippetSpec
                                 */
                                SnippetSpec.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec)
                                        return object;
                                    var message = new $root.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec();
                                    if (object.maxSnippetCount != null)
                                        message.maxSnippetCount = object.maxSnippetCount | 0;
                                    if (object.referenceOnly != null)
                                        message.referenceOnly = Boolean(object.referenceOnly);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a SnippetSpec message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec} message SnippetSpec
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                SnippetSpec.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.maxSnippetCount = 0;
                                        object.referenceOnly = false;
                                    }
                                    if (message.maxSnippetCount != null && message.hasOwnProperty("maxSnippetCount"))
                                        object.maxSnippetCount = message.maxSnippetCount;
                                    if (message.referenceOnly != null && message.hasOwnProperty("referenceOnly"))
                                        object.referenceOnly = message.referenceOnly;
                                    return object;
                                };
    
                                /**
                                 * Converts this SnippetSpec to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                SnippetSpec.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for SnippetSpec
                                 * @function getTypeUrl
                                 * @memberof google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                SnippetSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SnippetSpec";
                                };
    
                                return SnippetSpec;
                            })();
    
                            return ContentSearchSpec;
                        })();
    
                        return SearchRequest;
                    })();
    
                    v1.SearchResponse = (function() {
    
                        /**
                         * Properties of a SearchResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ISearchResponse
                         * @property {Array.<google.cloud.discoveryengine.v1.SearchResponse.ISearchResult>|null} [results] SearchResponse results
                         * @property {number|null} [totalSize] SearchResponse totalSize
                         * @property {string|null} [attributionToken] SearchResponse attributionToken
                         * @property {string|null} [nextPageToken] SearchResponse nextPageToken
                         * @property {string|null} [correctedQuery] SearchResponse correctedQuery
                         */
    
                        /**
                         * Constructs a new SearchResponse.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a SearchResponse.
                         * @implements ISearchResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ISearchResponse=} [properties] Properties to set
                         */
                        function SearchResponse(properties) {
                            this.results = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchResponse results.
                         * @member {Array.<google.cloud.discoveryengine.v1.SearchResponse.ISearchResult>} results
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.results = $util.emptyArray;
    
                        /**
                         * SearchResponse totalSize.
                         * @member {number} totalSize
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.totalSize = 0;
    
                        /**
                         * SearchResponse attributionToken.
                         * @member {string} attributionToken
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.attributionToken = "";
    
                        /**
                         * SearchResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.nextPageToken = "";
    
                        /**
                         * SearchResponse correctedQuery.
                         * @member {string} correctedQuery
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.correctedQuery = "";
    
                        /**
                         * Creates a new SearchResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISearchResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.SearchResponse} SearchResponse instance
                         */
                        SearchResponse.create = function create(properties) {
                            return new SearchResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISearchResponse} message SearchResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.results != null && message.results.length)
                                for (var i = 0; i < message.results.length; ++i)
                                    $root.google.cloud.discoveryengine.v1.SearchResponse.SearchResult.encode(message.results[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.totalSize != null && Object.hasOwnProperty.call(message, "totalSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.totalSize);
                            if (message.attributionToken != null && Object.hasOwnProperty.call(message, "attributionToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.attributionToken);
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.nextPageToken);
                            if (message.correctedQuery != null && Object.hasOwnProperty.call(message, "correctedQuery"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.correctedQuery);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ISearchResponse} message SearchResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.SearchResponse} SearchResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.SearchResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.results && message.results.length))
                                            message.results = [];
                                        message.results.push($root.google.cloud.discoveryengine.v1.SearchResponse.SearchResult.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.totalSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.attributionToken = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.correctedQuery = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.SearchResponse} SearchResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.results != null && message.hasOwnProperty("results")) {
                                if (!Array.isArray(message.results))
                                    return "results: array expected";
                                for (var i = 0; i < message.results.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1.SearchResponse.SearchResult.verify(message.results[i]);
                                    if (error)
                                        return "results." + error;
                                }
                            }
                            if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                                if (!$util.isInteger(message.totalSize))
                                    return "totalSize: integer expected";
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                if (!$util.isString(message.attributionToken))
                                    return "attributionToken: string expected";
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.correctedQuery != null && message.hasOwnProperty("correctedQuery"))
                                if (!$util.isString(message.correctedQuery))
                                    return "correctedQuery: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.SearchResponse} SearchResponse
                         */
                        SearchResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.SearchResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.SearchResponse();
                            if (object.results) {
                                if (!Array.isArray(object.results))
                                    throw TypeError(".google.cloud.discoveryengine.v1.SearchResponse.results: array expected");
                                message.results = [];
                                for (var i = 0; i < object.results.length; ++i) {
                                    if (typeof object.results[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.SearchResponse.results: object expected");
                                    message.results[i] = $root.google.cloud.discoveryengine.v1.SearchResponse.SearchResult.fromObject(object.results[i]);
                                }
                            }
                            if (object.totalSize != null)
                                message.totalSize = object.totalSize | 0;
                            if (object.attributionToken != null)
                                message.attributionToken = String(object.attributionToken);
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.correctedQuery != null)
                                message.correctedQuery = String(object.correctedQuery);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1.SearchResponse} message SearchResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.results = [];
                            if (options.defaults) {
                                object.totalSize = 0;
                                object.attributionToken = "";
                                object.nextPageToken = "";
                                object.correctedQuery = "";
                            }
                            if (message.results && message.results.length) {
                                object.results = [];
                                for (var j = 0; j < message.results.length; ++j)
                                    object.results[j] = $root.google.cloud.discoveryengine.v1.SearchResponse.SearchResult.toObject(message.results[j], options);
                            }
                            if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                                object.totalSize = message.totalSize;
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                object.attributionToken = message.attributionToken;
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.correctedQuery != null && message.hasOwnProperty("correctedQuery"))
                                object.correctedQuery = message.correctedQuery;
                            return object;
                        };
    
                        /**
                         * Converts this SearchResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.SearchResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.SearchResponse";
                        };
    
                        SearchResponse.SearchResult = (function() {
    
                            /**
                             * Properties of a SearchResult.
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse
                             * @interface ISearchResult
                             * @property {string|null} [id] SearchResult id
                             * @property {google.cloud.discoveryengine.v1.IDocument|null} [document] SearchResult document
                             */
    
                            /**
                             * Constructs a new SearchResult.
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse
                             * @classdesc Represents a SearchResult.
                             * @implements ISearchResult
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1.SearchResponse.ISearchResult=} [properties] Properties to set
                             */
                            function SearchResult(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SearchResult id.
                             * @member {string} id
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @instance
                             */
                            SearchResult.prototype.id = "";
    
                            /**
                             * SearchResult document.
                             * @member {google.cloud.discoveryengine.v1.IDocument|null|undefined} document
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @instance
                             */
                            SearchResult.prototype.document = null;
    
                            /**
                             * Creates a new SearchResult instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchResponse.ISearchResult=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1.SearchResponse.SearchResult} SearchResult instance
                             */
                            SearchResult.create = function create(properties) {
                                return new SearchResult(properties);
                            };
    
                            /**
                             * Encodes the specified SearchResult message. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchResponse.SearchResult.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchResponse.ISearchResult} message SearchResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SearchResult.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                                if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                    $root.google.cloud.discoveryengine.v1.Document.encode(message.document, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SearchResult message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.SearchResponse.SearchResult.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchResponse.ISearchResult} message SearchResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SearchResult.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SearchResult message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1.SearchResponse.SearchResult} SearchResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SearchResult.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.SearchResponse.SearchResult();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.id = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.document = $root.google.cloud.discoveryengine.v1.Document.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SearchResult message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1.SearchResponse.SearchResult} SearchResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SearchResult.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SearchResult message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SearchResult.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.id != null && message.hasOwnProperty("id"))
                                    if (!$util.isString(message.id))
                                        return "id: string expected";
                                if (message.document != null && message.hasOwnProperty("document")) {
                                    var error = $root.google.cloud.discoveryengine.v1.Document.verify(message.document);
                                    if (error)
                                        return "document." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SearchResult message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1.SearchResponse.SearchResult} SearchResult
                             */
                            SearchResult.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1.SearchResponse.SearchResult)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1.SearchResponse.SearchResult();
                                if (object.id != null)
                                    message.id = String(object.id);
                                if (object.document != null) {
                                    if (typeof object.document !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1.SearchResponse.SearchResult.document: object expected");
                                    message.document = $root.google.cloud.discoveryengine.v1.Document.fromObject(object.document);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SearchResult message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1.SearchResponse.SearchResult} message SearchResult
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SearchResult.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.id = "";
                                    object.document = null;
                                }
                                if (message.id != null && message.hasOwnProperty("id"))
                                    object.id = message.id;
                                if (message.document != null && message.hasOwnProperty("document"))
                                    object.document = $root.google.cloud.discoveryengine.v1.Document.toObject(message.document, options);
                                return object;
                            };
    
                            /**
                             * Converts this SearchResult to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SearchResult.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SearchResult
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1.SearchResponse.SearchResult
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SearchResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1.SearchResponse.SearchResult";
                            };
    
                            return SearchResult;
                        })();
    
                        return SearchResponse;
                    })();
    
                    v1.UserEventService = (function() {
    
                        /**
                         * Constructs a new UserEventService service.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a UserEventService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function UserEventService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (UserEventService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = UserEventService;
    
                        /**
                         * Creates new UserEventService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {UserEventService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        UserEventService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.UserEventService|writeUserEvent}.
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @typedef WriteUserEventCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1.UserEvent} [response] UserEvent
                         */
    
                        /**
                         * Calls WriteUserEvent.
                         * @function writeUserEvent
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IWriteUserEventRequest} request WriteUserEventRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.UserEventService.WriteUserEventCallback} callback Node-style callback called with the error, if any, and UserEvent
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(UserEventService.prototype.writeUserEvent = function writeUserEvent(request, callback) {
                            return this.rpcCall(writeUserEvent, $root.google.cloud.discoveryengine.v1.WriteUserEventRequest, $root.google.cloud.discoveryengine.v1.UserEvent, request, callback);
                        }, "name", { value: "WriteUserEvent" });
    
                        /**
                         * Calls WriteUserEvent.
                         * @function writeUserEvent
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IWriteUserEventRequest} request WriteUserEventRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1.UserEvent>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.UserEventService|collectUserEvent}.
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @typedef CollectUserEventCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.api.HttpBody} [response] HttpBody
                         */
    
                        /**
                         * Calls CollectUserEvent.
                         * @function collectUserEvent
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ICollectUserEventRequest} request CollectUserEventRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.UserEventService.CollectUserEventCallback} callback Node-style callback called with the error, if any, and HttpBody
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(UserEventService.prototype.collectUserEvent = function collectUserEvent(request, callback) {
                            return this.rpcCall(collectUserEvent, $root.google.cloud.discoveryengine.v1.CollectUserEventRequest, $root.google.api.HttpBody, request, callback);
                        }, "name", { value: "CollectUserEvent" });
    
                        /**
                         * Calls CollectUserEvent.
                         * @function collectUserEvent
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.ICollectUserEventRequest} request CollectUserEventRequest message or plain object
                         * @returns {Promise<google.api.HttpBody>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1.UserEventService|importUserEvents}.
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @typedef ImportUserEventsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ImportUserEvents.
                         * @function importUserEvents
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsRequest} request ImportUserEventsRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1.UserEventService.ImportUserEventsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(UserEventService.prototype.importUserEvents = function importUserEvents(request, callback) {
                            return this.rpcCall(importUserEvents, $root.google.cloud.discoveryengine.v1.ImportUserEventsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ImportUserEvents" });
    
                        /**
                         * Calls ImportUserEvents.
                         * @function importUserEvents
                         * @memberof google.cloud.discoveryengine.v1.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1.IImportUserEventsRequest} request ImportUserEventsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return UserEventService;
                    })();
    
                    v1.WriteUserEventRequest = (function() {
    
                        /**
                         * Properties of a WriteUserEventRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface IWriteUserEventRequest
                         * @property {string|null} [parent] WriteUserEventRequest parent
                         * @property {google.cloud.discoveryengine.v1.IUserEvent|null} [userEvent] WriteUserEventRequest userEvent
                         */
    
                        /**
                         * Constructs a new WriteUserEventRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a WriteUserEventRequest.
                         * @implements IWriteUserEventRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.IWriteUserEventRequest=} [properties] Properties to set
                         */
                        function WriteUserEventRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WriteUserEventRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @instance
                         */
                        WriteUserEventRequest.prototype.parent = "";
    
                        /**
                         * WriteUserEventRequest userEvent.
                         * @member {google.cloud.discoveryengine.v1.IUserEvent|null|undefined} userEvent
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @instance
                         */
                        WriteUserEventRequest.prototype.userEvent = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * WriteUserEventRequest _userEvent.
                         * @member {"userEvent"|undefined} _userEvent
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @instance
                         */
                        Object.defineProperty(WriteUserEventRequest.prototype, "_userEvent", {
                            get: $util.oneOfGetter($oneOfFields = ["userEvent"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new WriteUserEventRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IWriteUserEventRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.WriteUserEventRequest} WriteUserEventRequest instance
                         */
                        WriteUserEventRequest.create = function create(properties) {
                            return new WriteUserEventRequest(properties);
                        };
    
                        /**
                         * Encodes the specified WriteUserEventRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.WriteUserEventRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IWriteUserEventRequest} message WriteUserEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WriteUserEventRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.userEvent != null && Object.hasOwnProperty.call(message, "userEvent"))
                                $root.google.cloud.discoveryengine.v1.UserEvent.encode(message.userEvent, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WriteUserEventRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.WriteUserEventRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.IWriteUserEventRequest} message WriteUserEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WriteUserEventRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WriteUserEventRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.WriteUserEventRequest} WriteUserEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WriteUserEventRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.WriteUserEventRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userEvent = $root.google.cloud.discoveryengine.v1.UserEvent.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WriteUserEventRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.WriteUserEventRequest} WriteUserEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WriteUserEventRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WriteUserEventRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WriteUserEventRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.userEvent != null && message.hasOwnProperty("userEvent")) {
                                properties._userEvent = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1.UserEvent.verify(message.userEvent);
                                    if (error)
                                        return "userEvent." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a WriteUserEventRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.WriteUserEventRequest} WriteUserEventRequest
                         */
                        WriteUserEventRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.WriteUserEventRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.WriteUserEventRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.userEvent != null) {
                                if (typeof object.userEvent !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1.WriteUserEventRequest.userEvent: object expected");
                                message.userEvent = $root.google.cloud.discoveryengine.v1.UserEvent.fromObject(object.userEvent);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WriteUserEventRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.WriteUserEventRequest} message WriteUserEventRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WriteUserEventRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.parent = "";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.userEvent != null && message.hasOwnProperty("userEvent")) {
                                object.userEvent = $root.google.cloud.discoveryengine.v1.UserEvent.toObject(message.userEvent, options);
                                if (options.oneofs)
                                    object._userEvent = "userEvent";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this WriteUserEventRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WriteUserEventRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WriteUserEventRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.WriteUserEventRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WriteUserEventRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.WriteUserEventRequest";
                        };
    
                        return WriteUserEventRequest;
                    })();
    
                    v1.CollectUserEventRequest = (function() {
    
                        /**
                         * Properties of a CollectUserEventRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @interface ICollectUserEventRequest
                         * @property {string|null} [parent] CollectUserEventRequest parent
                         * @property {string|null} [userEvent] CollectUserEventRequest userEvent
                         * @property {string|null} [uri] CollectUserEventRequest uri
                         * @property {number|Long|null} [ets] CollectUserEventRequest ets
                         */
    
                        /**
                         * Constructs a new CollectUserEventRequest.
                         * @memberof google.cloud.discoveryengine.v1
                         * @classdesc Represents a CollectUserEventRequest.
                         * @implements ICollectUserEventRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1.ICollectUserEventRequest=} [properties] Properties to set
                         */
                        function CollectUserEventRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CollectUserEventRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @instance
                         */
                        CollectUserEventRequest.prototype.parent = "";
    
                        /**
                         * CollectUserEventRequest userEvent.
                         * @member {string} userEvent
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @instance
                         */
                        CollectUserEventRequest.prototype.userEvent = "";
    
                        /**
                         * CollectUserEventRequest uri.
                         * @member {string|null|undefined} uri
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @instance
                         */
                        CollectUserEventRequest.prototype.uri = null;
    
                        /**
                         * CollectUserEventRequest ets.
                         * @member {number|Long|null|undefined} ets
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @instance
                         */
                        CollectUserEventRequest.prototype.ets = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CollectUserEventRequest _uri.
                         * @member {"uri"|undefined} _uri
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @instance
                         */
                        Object.defineProperty(CollectUserEventRequest.prototype, "_uri", {
                            get: $util.oneOfGetter($oneOfFields = ["uri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CollectUserEventRequest _ets.
                         * @member {"ets"|undefined} _ets
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @instance
                         */
                        Object.defineProperty(CollectUserEventRequest.prototype, "_ets", {
                            get: $util.oneOfGetter($oneOfFields = ["ets"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CollectUserEventRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICollectUserEventRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1.CollectUserEventRequest} CollectUserEventRequest instance
                         */
                        CollectUserEventRequest.create = function create(properties) {
                            return new CollectUserEventRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CollectUserEventRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1.CollectUserEventRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICollectUserEventRequest} message CollectUserEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CollectUserEventRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.userEvent != null && Object.hasOwnProperty.call(message, "userEvent"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.userEvent);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            if (message.ets != null && Object.hasOwnProperty.call(message, "ets"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.ets);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CollectUserEventRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1.CollectUserEventRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.ICollectUserEventRequest} message CollectUserEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CollectUserEventRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CollectUserEventRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1.CollectUserEventRequest} CollectUserEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CollectUserEventRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1.CollectUserEventRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userEvent = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.ets = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CollectUserEventRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1.CollectUserEventRequest} CollectUserEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CollectUserEventRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CollectUserEventRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CollectUserEventRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.userEvent != null && message.hasOwnProperty("userEvent"))
                                if (!$util.isString(message.userEvent))
                                    return "userEvent: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                properties._uri = 1;
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            }
                            if (message.ets != null && message.hasOwnProperty("ets")) {
                                properties._ets = 1;
                                if (!$util.isInteger(message.ets) && !(message.ets && $util.isInteger(message.ets.low) && $util.isInteger(message.ets.high)))
                                    return "ets: integer|Long expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CollectUserEventRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1.CollectUserEventRequest} CollectUserEventRequest
                         */
                        CollectUserEventRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1.CollectUserEventRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1.CollectUserEventRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.userEvent != null)
                                message.userEvent = String(object.userEvent);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.ets != null)
                                if ($util.Long)
                                    (message.ets = $util.Long.fromValue(object.ets)).unsigned = false;
                                else if (typeof object.ets === "string")
                                    message.ets = parseInt(object.ets, 10);
                                else if (typeof object.ets === "number")
                                    message.ets = object.ets;
                                else if (typeof object.ets === "object")
                                    message.ets = new $util.LongBits(object.ets.low >>> 0, object.ets.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CollectUserEventRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1.CollectUserEventRequest} message CollectUserEventRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CollectUserEventRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.userEvent = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.userEvent != null && message.hasOwnProperty("userEvent"))
                                object.userEvent = message.userEvent;
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                object.uri = message.uri;
                                if (options.oneofs)
                                    object._uri = "uri";
                            }
                            if (message.ets != null && message.hasOwnProperty("ets")) {
                                if (typeof message.ets === "number")
                                    object.ets = options.longs === String ? String(message.ets) : message.ets;
                                else
                                    object.ets = options.longs === String ? $util.Long.prototype.toString.call(message.ets) : options.longs === Number ? new $util.LongBits(message.ets.low >>> 0, message.ets.high >>> 0).toNumber() : message.ets;
                                if (options.oneofs)
                                    object._ets = "ets";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CollectUserEventRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CollectUserEventRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CollectUserEventRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1.CollectUserEventRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CollectUserEventRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1.CollectUserEventRequest";
                        };
    
                        return CollectUserEventRequest;
                    })();
    
                    return v1;
                })();
    
                discoveryengine.v1beta = (function() {
    
                    /**
                     * Namespace v1beta.
                     * @memberof google.cloud.discoveryengine
                     * @namespace
                     */
                    var v1beta = {};
    
                    v1beta.Interval = (function() {
    
                        /**
                         * Properties of an Interval.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IInterval
                         * @property {number|null} [minimum] Interval minimum
                         * @property {number|null} [exclusiveMinimum] Interval exclusiveMinimum
                         * @property {number|null} [maximum] Interval maximum
                         * @property {number|null} [exclusiveMaximum] Interval exclusiveMaximum
                         */
    
                        /**
                         * Constructs a new Interval.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an Interval.
                         * @implements IInterval
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IInterval=} [properties] Properties to set
                         */
                        function Interval(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Interval minimum.
                         * @member {number|null|undefined} minimum
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @instance
                         */
                        Interval.prototype.minimum = null;
    
                        /**
                         * Interval exclusiveMinimum.
                         * @member {number|null|undefined} exclusiveMinimum
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @instance
                         */
                        Interval.prototype.exclusiveMinimum = null;
    
                        /**
                         * Interval maximum.
                         * @member {number|null|undefined} maximum
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @instance
                         */
                        Interval.prototype.maximum = null;
    
                        /**
                         * Interval exclusiveMaximum.
                         * @member {number|null|undefined} exclusiveMaximum
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @instance
                         */
                        Interval.prototype.exclusiveMaximum = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Interval min.
                         * @member {"minimum"|"exclusiveMinimum"|undefined} min
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @instance
                         */
                        Object.defineProperty(Interval.prototype, "min", {
                            get: $util.oneOfGetter($oneOfFields = ["minimum", "exclusiveMinimum"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Interval max.
                         * @member {"maximum"|"exclusiveMaximum"|undefined} max
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @instance
                         */
                        Object.defineProperty(Interval.prototype, "max", {
                            get: $util.oneOfGetter($oneOfFields = ["maximum", "exclusiveMaximum"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Interval instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IInterval=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.Interval} Interval instance
                         */
                        Interval.create = function create(properties) {
                            return new Interval(properties);
                        };
    
                        /**
                         * Encodes the specified Interval message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.Interval.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IInterval} message Interval message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Interval.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.minimum != null && Object.hasOwnProperty.call(message, "minimum"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.minimum);
                            if (message.exclusiveMinimum != null && Object.hasOwnProperty.call(message, "exclusiveMinimum"))
                                writer.uint32(/* id 2, wireType 1 =*/17).double(message.exclusiveMinimum);
                            if (message.maximum != null && Object.hasOwnProperty.call(message, "maximum"))
                                writer.uint32(/* id 3, wireType 1 =*/25).double(message.maximum);
                            if (message.exclusiveMaximum != null && Object.hasOwnProperty.call(message, "exclusiveMaximum"))
                                writer.uint32(/* id 4, wireType 1 =*/33).double(message.exclusiveMaximum);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Interval message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.Interval.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IInterval} message Interval message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Interval.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Interval message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.Interval} Interval
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Interval.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.Interval();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.minimum = reader.double();
                                        break;
                                    }
                                case 2: {
                                        message.exclusiveMinimum = reader.double();
                                        break;
                                    }
                                case 3: {
                                        message.maximum = reader.double();
                                        break;
                                    }
                                case 4: {
                                        message.exclusiveMaximum = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Interval message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.Interval} Interval
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Interval.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Interval message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Interval.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.minimum != null && message.hasOwnProperty("minimum")) {
                                properties.min = 1;
                                if (typeof message.minimum !== "number")
                                    return "minimum: number expected";
                            }
                            if (message.exclusiveMinimum != null && message.hasOwnProperty("exclusiveMinimum")) {
                                if (properties.min === 1)
                                    return "min: multiple values";
                                properties.min = 1;
                                if (typeof message.exclusiveMinimum !== "number")
                                    return "exclusiveMinimum: number expected";
                            }
                            if (message.maximum != null && message.hasOwnProperty("maximum")) {
                                properties.max = 1;
                                if (typeof message.maximum !== "number")
                                    return "maximum: number expected";
                            }
                            if (message.exclusiveMaximum != null && message.hasOwnProperty("exclusiveMaximum")) {
                                if (properties.max === 1)
                                    return "max: multiple values";
                                properties.max = 1;
                                if (typeof message.exclusiveMaximum !== "number")
                                    return "exclusiveMaximum: number expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Interval message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.Interval} Interval
                         */
                        Interval.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.Interval)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.Interval();
                            if (object.minimum != null)
                                message.minimum = Number(object.minimum);
                            if (object.exclusiveMinimum != null)
                                message.exclusiveMinimum = Number(object.exclusiveMinimum);
                            if (object.maximum != null)
                                message.maximum = Number(object.maximum);
                            if (object.exclusiveMaximum != null)
                                message.exclusiveMaximum = Number(object.exclusiveMaximum);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Interval message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.Interval} message Interval
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Interval.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.minimum != null && message.hasOwnProperty("minimum")) {
                                object.minimum = options.json && !isFinite(message.minimum) ? String(message.minimum) : message.minimum;
                                if (options.oneofs)
                                    object.min = "minimum";
                            }
                            if (message.exclusiveMinimum != null && message.hasOwnProperty("exclusiveMinimum")) {
                                object.exclusiveMinimum = options.json && !isFinite(message.exclusiveMinimum) ? String(message.exclusiveMinimum) : message.exclusiveMinimum;
                                if (options.oneofs)
                                    object.min = "exclusiveMinimum";
                            }
                            if (message.maximum != null && message.hasOwnProperty("maximum")) {
                                object.maximum = options.json && !isFinite(message.maximum) ? String(message.maximum) : message.maximum;
                                if (options.oneofs)
                                    object.max = "maximum";
                            }
                            if (message.exclusiveMaximum != null && message.hasOwnProperty("exclusiveMaximum")) {
                                object.exclusiveMaximum = options.json && !isFinite(message.exclusiveMaximum) ? String(message.exclusiveMaximum) : message.exclusiveMaximum;
                                if (options.oneofs)
                                    object.max = "exclusiveMaximum";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Interval to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Interval.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Interval
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.Interval
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Interval.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.Interval";
                        };
    
                        return Interval;
                    })();
    
                    v1beta.CustomAttribute = (function() {
    
                        /**
                         * Properties of a CustomAttribute.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ICustomAttribute
                         * @property {Array.<string>|null} [text] CustomAttribute text
                         * @property {Array.<number>|null} [numbers] CustomAttribute numbers
                         */
    
                        /**
                         * Constructs a new CustomAttribute.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a CustomAttribute.
                         * @implements ICustomAttribute
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ICustomAttribute=} [properties] Properties to set
                         */
                        function CustomAttribute(properties) {
                            this.text = [];
                            this.numbers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CustomAttribute text.
                         * @member {Array.<string>} text
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @instance
                         */
                        CustomAttribute.prototype.text = $util.emptyArray;
    
                        /**
                         * CustomAttribute numbers.
                         * @member {Array.<number>} numbers
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @instance
                         */
                        CustomAttribute.prototype.numbers = $util.emptyArray;
    
                        /**
                         * Creates a new CustomAttribute instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICustomAttribute=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.CustomAttribute} CustomAttribute instance
                         */
                        CustomAttribute.create = function create(properties) {
                            return new CustomAttribute(properties);
                        };
    
                        /**
                         * Encodes the specified CustomAttribute message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CustomAttribute.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICustomAttribute} message CustomAttribute message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomAttribute.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.text != null && message.text.length)
                                for (var i = 0; i < message.text.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.text[i]);
                            if (message.numbers != null && message.numbers.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.numbers.length; ++i)
                                    writer.double(message.numbers[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CustomAttribute message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CustomAttribute.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICustomAttribute} message CustomAttribute message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomAttribute.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CustomAttribute message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.CustomAttribute} CustomAttribute
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomAttribute.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.CustomAttribute();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.text && message.text.length))
                                            message.text = [];
                                        message.text.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.numbers && message.numbers.length))
                                            message.numbers = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.numbers.push(reader.double());
                                        } else
                                            message.numbers.push(reader.double());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CustomAttribute message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.CustomAttribute} CustomAttribute
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomAttribute.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CustomAttribute message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CustomAttribute.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.text != null && message.hasOwnProperty("text")) {
                                if (!Array.isArray(message.text))
                                    return "text: array expected";
                                for (var i = 0; i < message.text.length; ++i)
                                    if (!$util.isString(message.text[i]))
                                        return "text: string[] expected";
                            }
                            if (message.numbers != null && message.hasOwnProperty("numbers")) {
                                if (!Array.isArray(message.numbers))
                                    return "numbers: array expected";
                                for (var i = 0; i < message.numbers.length; ++i)
                                    if (typeof message.numbers[i] !== "number")
                                        return "numbers: number[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CustomAttribute message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.CustomAttribute} CustomAttribute
                         */
                        CustomAttribute.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.CustomAttribute)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.CustomAttribute();
                            if (object.text) {
                                if (!Array.isArray(object.text))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.CustomAttribute.text: array expected");
                                message.text = [];
                                for (var i = 0; i < object.text.length; ++i)
                                    message.text[i] = String(object.text[i]);
                            }
                            if (object.numbers) {
                                if (!Array.isArray(object.numbers))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.CustomAttribute.numbers: array expected");
                                message.numbers = [];
                                for (var i = 0; i < object.numbers.length; ++i)
                                    message.numbers[i] = Number(object.numbers[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CustomAttribute message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.CustomAttribute} message CustomAttribute
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CustomAttribute.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.text = [];
                                object.numbers = [];
                            }
                            if (message.text && message.text.length) {
                                object.text = [];
                                for (var j = 0; j < message.text.length; ++j)
                                    object.text[j] = message.text[j];
                            }
                            if (message.numbers && message.numbers.length) {
                                object.numbers = [];
                                for (var j = 0; j < message.numbers.length; ++j)
                                    object.numbers[j] = options.json && !isFinite(message.numbers[j]) ? String(message.numbers[j]) : message.numbers[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CustomAttribute to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CustomAttribute.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CustomAttribute
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.CustomAttribute
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CustomAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.CustomAttribute";
                        };
    
                        return CustomAttribute;
                    })();
    
                    v1beta.UserInfo = (function() {
    
                        /**
                         * Properties of a UserInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IUserInfo
                         * @property {string|null} [userId] UserInfo userId
                         * @property {string|null} [userAgent] UserInfo userAgent
                         */
    
                        /**
                         * Constructs a new UserInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a UserInfo.
                         * @implements IUserInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IUserInfo=} [properties] Properties to set
                         */
                        function UserInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserInfo userId.
                         * @member {string} userId
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @instance
                         */
                        UserInfo.prototype.userId = "";
    
                        /**
                         * UserInfo userAgent.
                         * @member {string} userAgent
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @instance
                         */
                        UserInfo.prototype.userAgent = "";
    
                        /**
                         * Creates a new UserInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUserInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.UserInfo} UserInfo instance
                         */
                        UserInfo.create = function create(properties) {
                            return new UserInfo(properties);
                        };
    
                        /**
                         * Encodes the specified UserInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UserInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUserInfo} message UserInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);
                            if (message.userAgent != null && Object.hasOwnProperty.call(message, "userAgent"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.userAgent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UserInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUserInfo} message UserInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.UserInfo} UserInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.UserInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.userId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userAgent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.UserInfo} UserInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.userId != null && message.hasOwnProperty("userId"))
                                if (!$util.isString(message.userId))
                                    return "userId: string expected";
                            if (message.userAgent != null && message.hasOwnProperty("userAgent"))
                                if (!$util.isString(message.userAgent))
                                    return "userAgent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a UserInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.UserInfo} UserInfo
                         */
                        UserInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.UserInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.UserInfo();
                            if (object.userId != null)
                                message.userId = String(object.userId);
                            if (object.userAgent != null)
                                message.userAgent = String(object.userAgent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.UserInfo} message UserInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.userId = "";
                                object.userAgent = "";
                            }
                            if (message.userId != null && message.hasOwnProperty("userId"))
                                object.userId = message.userId;
                            if (message.userAgent != null && message.hasOwnProperty("userAgent"))
                                object.userAgent = message.userAgent;
                            return object;
                        };
    
                        /**
                         * Converts this UserInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.UserInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.UserInfo";
                        };
    
                        return UserInfo;
                    })();
    
                    v1beta.CompletionService = (function() {
    
                        /**
                         * Constructs a new CompletionService service.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a CompletionService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CompletionService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CompletionService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CompletionService;
    
                        /**
                         * Creates new CompletionService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CompletionService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CompletionService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.CompletionService|completeQuery}.
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionService
                         * @typedef CompleteQueryCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.CompleteQueryResponse} [response] CompleteQueryResponse
                         */
    
                        /**
                         * Calls CompleteQuery.
                         * @function completeQuery
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryRequest} request CompleteQueryRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.CompletionService.CompleteQueryCallback} callback Node-style callback called with the error, if any, and CompleteQueryResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CompletionService.prototype.completeQuery = function completeQuery(request, callback) {
                            return this.rpcCall(completeQuery, $root.google.cloud.discoveryengine.v1beta.CompleteQueryRequest, $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse, request, callback);
                        }, "name", { value: "CompleteQuery" });
    
                        /**
                         * Calls CompleteQuery.
                         * @function completeQuery
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryRequest} request CompleteQueryRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.CompleteQueryResponse>} Promise
                         * @variation 2
                         */
    
                        return CompletionService;
                    })();
    
                    v1beta.CompleteQueryRequest = (function() {
    
                        /**
                         * Properties of a CompleteQueryRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ICompleteQueryRequest
                         * @property {string|null} [dataStore] CompleteQueryRequest dataStore
                         * @property {string|null} [query] CompleteQueryRequest query
                         * @property {string|null} [queryModel] CompleteQueryRequest queryModel
                         * @property {string|null} [userPseudoId] CompleteQueryRequest userPseudoId
                         */
    
                        /**
                         * Constructs a new CompleteQueryRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a CompleteQueryRequest.
                         * @implements ICompleteQueryRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryRequest=} [properties] Properties to set
                         */
                        function CompleteQueryRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompleteQueryRequest dataStore.
                         * @member {string} dataStore
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.dataStore = "";
    
                        /**
                         * CompleteQueryRequest query.
                         * @member {string} query
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.query = "";
    
                        /**
                         * CompleteQueryRequest queryModel.
                         * @member {string} queryModel
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.queryModel = "";
    
                        /**
                         * CompleteQueryRequest userPseudoId.
                         * @member {string} userPseudoId
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @instance
                         */
                        CompleteQueryRequest.prototype.userPseudoId = "";
    
                        /**
                         * Creates a new CompleteQueryRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryRequest} CompleteQueryRequest instance
                         */
                        CompleteQueryRequest.create = function create(properties) {
                            return new CompleteQueryRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CompleteQueryRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CompleteQueryRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryRequest} message CompleteQueryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dataStore != null && Object.hasOwnProperty.call(message, "dataStore"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.dataStore);
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.query);
                            if (message.queryModel != null && Object.hasOwnProperty.call(message, "queryModel"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.queryModel);
                            if (message.userPseudoId != null && Object.hasOwnProperty.call(message, "userPseudoId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.userPseudoId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompleteQueryRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CompleteQueryRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryRequest} message CompleteQueryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompleteQueryRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryRequest} CompleteQueryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.CompleteQueryRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.dataStore = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.query = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.queryModel = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.userPseudoId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompleteQueryRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryRequest} CompleteQueryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompleteQueryRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompleteQueryRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dataStore != null && message.hasOwnProperty("dataStore"))
                                if (!$util.isString(message.dataStore))
                                    return "dataStore: string expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.queryModel != null && message.hasOwnProperty("queryModel"))
                                if (!$util.isString(message.queryModel))
                                    return "queryModel: string expected";
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                if (!$util.isString(message.userPseudoId))
                                    return "userPseudoId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CompleteQueryRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryRequest} CompleteQueryRequest
                         */
                        CompleteQueryRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.CompleteQueryRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.CompleteQueryRequest();
                            if (object.dataStore != null)
                                message.dataStore = String(object.dataStore);
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.queryModel != null)
                                message.queryModel = String(object.queryModel);
                            if (object.userPseudoId != null)
                                message.userPseudoId = String(object.userPseudoId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompleteQueryRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.CompleteQueryRequest} message CompleteQueryRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompleteQueryRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.dataStore = "";
                                object.query = "";
                                object.queryModel = "";
                                object.userPseudoId = "";
                            }
                            if (message.dataStore != null && message.hasOwnProperty("dataStore"))
                                object.dataStore = message.dataStore;
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.queryModel != null && message.hasOwnProperty("queryModel"))
                                object.queryModel = message.queryModel;
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                object.userPseudoId = message.userPseudoId;
                            return object;
                        };
    
                        /**
                         * Converts this CompleteQueryRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompleteQueryRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CompleteQueryRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CompleteQueryRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.CompleteQueryRequest";
                        };
    
                        return CompleteQueryRequest;
                    })();
    
                    v1beta.CompleteQueryResponse = (function() {
    
                        /**
                         * Properties of a CompleteQueryResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ICompleteQueryResponse
                         * @property {Array.<google.cloud.discoveryengine.v1beta.CompleteQueryResponse.IQuerySuggestion>|null} [querySuggestions] CompleteQueryResponse querySuggestions
                         */
    
                        /**
                         * Constructs a new CompleteQueryResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a CompleteQueryResponse.
                         * @implements ICompleteQueryResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryResponse=} [properties] Properties to set
                         */
                        function CompleteQueryResponse(properties) {
                            this.querySuggestions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompleteQueryResponse querySuggestions.
                         * @member {Array.<google.cloud.discoveryengine.v1beta.CompleteQueryResponse.IQuerySuggestion>} querySuggestions
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @instance
                         */
                        CompleteQueryResponse.prototype.querySuggestions = $util.emptyArray;
    
                        /**
                         * Creates a new CompleteQueryResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryResponse} CompleteQueryResponse instance
                         */
                        CompleteQueryResponse.create = function create(properties) {
                            return new CompleteQueryResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CompleteQueryResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CompleteQueryResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryResponse} message CompleteQueryResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.querySuggestions != null && message.querySuggestions.length)
                                for (var i = 0; i < message.querySuggestions.length; ++i)
                                    $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion.encode(message.querySuggestions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompleteQueryResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CompleteQueryResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICompleteQueryResponse} message CompleteQueryResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompleteQueryResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompleteQueryResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryResponse} CompleteQueryResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.querySuggestions && message.querySuggestions.length))
                                            message.querySuggestions = [];
                                        message.querySuggestions.push($root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompleteQueryResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryResponse} CompleteQueryResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompleteQueryResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompleteQueryResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompleteQueryResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.querySuggestions != null && message.hasOwnProperty("querySuggestions")) {
                                if (!Array.isArray(message.querySuggestions))
                                    return "querySuggestions: array expected";
                                for (var i = 0; i < message.querySuggestions.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion.verify(message.querySuggestions[i]);
                                    if (error)
                                        return "querySuggestions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CompleteQueryResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryResponse} CompleteQueryResponse
                         */
                        CompleteQueryResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse();
                            if (object.querySuggestions) {
                                if (!Array.isArray(object.querySuggestions))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.CompleteQueryResponse.querySuggestions: array expected");
                                message.querySuggestions = [];
                                for (var i = 0; i < object.querySuggestions.length; ++i) {
                                    if (typeof object.querySuggestions[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.CompleteQueryResponse.querySuggestions: object expected");
                                    message.querySuggestions[i] = $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion.fromObject(object.querySuggestions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompleteQueryResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.CompleteQueryResponse} message CompleteQueryResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompleteQueryResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.querySuggestions = [];
                            if (message.querySuggestions && message.querySuggestions.length) {
                                object.querySuggestions = [];
                                for (var j = 0; j < message.querySuggestions.length; ++j)
                                    object.querySuggestions[j] = $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion.toObject(message.querySuggestions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CompleteQueryResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompleteQueryResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CompleteQueryResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CompleteQueryResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.CompleteQueryResponse";
                        };
    
                        CompleteQueryResponse.QuerySuggestion = (function() {
    
                            /**
                             * Properties of a QuerySuggestion.
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                             * @interface IQuerySuggestion
                             * @property {string|null} [suggestion] QuerySuggestion suggestion
                             */
    
                            /**
                             * Constructs a new QuerySuggestion.
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse
                             * @classdesc Represents a QuerySuggestion.
                             * @implements IQuerySuggestion
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.CompleteQueryResponse.IQuerySuggestion=} [properties] Properties to set
                             */
                            function QuerySuggestion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * QuerySuggestion suggestion.
                             * @member {string} suggestion
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @instance
                             */
                            QuerySuggestion.prototype.suggestion = "";
    
                            /**
                             * Creates a new QuerySuggestion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.CompleteQueryResponse.IQuerySuggestion=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion} QuerySuggestion instance
                             */
                            QuerySuggestion.create = function create(properties) {
                                return new QuerySuggestion(properties);
                            };
    
                            /**
                             * Encodes the specified QuerySuggestion message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.CompleteQueryResponse.IQuerySuggestion} message QuerySuggestion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            QuerySuggestion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.suggestion != null && Object.hasOwnProperty.call(message, "suggestion"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.suggestion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified QuerySuggestion message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.CompleteQueryResponse.IQuerySuggestion} message QuerySuggestion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            QuerySuggestion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a QuerySuggestion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion} QuerySuggestion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            QuerySuggestion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.suggestion = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a QuerySuggestion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion} QuerySuggestion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            QuerySuggestion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a QuerySuggestion message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            QuerySuggestion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.suggestion != null && message.hasOwnProperty("suggestion"))
                                    if (!$util.isString(message.suggestion))
                                        return "suggestion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a QuerySuggestion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion} QuerySuggestion
                             */
                            QuerySuggestion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion();
                                if (object.suggestion != null)
                                    message.suggestion = String(object.suggestion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a QuerySuggestion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion} message QuerySuggestion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            QuerySuggestion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.suggestion = "";
                                if (message.suggestion != null && message.hasOwnProperty("suggestion"))
                                    object.suggestion = message.suggestion;
                                return object;
                            };
    
                            /**
                             * Converts this QuerySuggestion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            QuerySuggestion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for QuerySuggestion
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            QuerySuggestion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.CompleteQueryResponse.QuerySuggestion";
                            };
    
                            return QuerySuggestion;
                        })();
    
                        return CompleteQueryResponse;
                    })();
    
                    v1beta.Document = (function() {
    
                        /**
                         * Properties of a Document.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IDocument
                         * @property {google.protobuf.IStruct|null} [structData] Document structData
                         * @property {string|null} [jsonData] Document jsonData
                         * @property {string|null} [name] Document name
                         * @property {string|null} [id] Document id
                         * @property {string|null} [schemaId] Document schemaId
                         * @property {google.cloud.discoveryengine.v1beta.Document.IContent|null} [content] Document content
                         * @property {string|null} [parentDocumentId] Document parentDocumentId
                         * @property {google.protobuf.IStruct|null} [derivedStructData] Document derivedStructData
                         */
    
                        /**
                         * Constructs a new Document.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a Document.
                         * @implements IDocument
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IDocument=} [properties] Properties to set
                         */
                        function Document(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Document structData.
                         * @member {google.protobuf.IStruct|null|undefined} structData
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         */
                        Document.prototype.structData = null;
    
                        /**
                         * Document jsonData.
                         * @member {string|null|undefined} jsonData
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         */
                        Document.prototype.jsonData = null;
    
                        /**
                         * Document name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         */
                        Document.prototype.name = "";
    
                        /**
                         * Document id.
                         * @member {string} id
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         */
                        Document.prototype.id = "";
    
                        /**
                         * Document schemaId.
                         * @member {string} schemaId
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         */
                        Document.prototype.schemaId = "";
    
                        /**
                         * Document content.
                         * @member {google.cloud.discoveryengine.v1beta.Document.IContent|null|undefined} content
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         */
                        Document.prototype.content = null;
    
                        /**
                         * Document parentDocumentId.
                         * @member {string} parentDocumentId
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         */
                        Document.prototype.parentDocumentId = "";
    
                        /**
                         * Document derivedStructData.
                         * @member {google.protobuf.IStruct|null|undefined} derivedStructData
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         */
                        Document.prototype.derivedStructData = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Document data.
                         * @member {"structData"|"jsonData"|undefined} data
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         */
                        Object.defineProperty(Document.prototype, "data", {
                            get: $util.oneOfGetter($oneOfFields = ["structData", "jsonData"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Document instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDocument=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.Document} Document instance
                         */
                        Document.create = function create(properties) {
                            return new Document(properties);
                        };
    
                        /**
                         * Encodes the specified Document message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.Document.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);
                            if (message.schemaId != null && Object.hasOwnProperty.call(message, "schemaId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.schemaId);
                            if (message.structData != null && Object.hasOwnProperty.call(message, "structData"))
                                $root.google.protobuf.Struct.encode(message.structData, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.jsonData != null && Object.hasOwnProperty.call(message, "jsonData"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.jsonData);
                            if (message.derivedStructData != null && Object.hasOwnProperty.call(message, "derivedStructData"))
                                $root.google.protobuf.Struct.encode(message.derivedStructData, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.parentDocumentId != null && Object.hasOwnProperty.call(message, "parentDocumentId"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.parentDocumentId);
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                $root.google.cloud.discoveryengine.v1beta.Document.Content.encode(message.content, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Document message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.Document.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.Document();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.structData = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.jsonData = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.schemaId = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.content = $root.google.cloud.discoveryengine.v1beta.Document.Content.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.parentDocumentId = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.derivedStructData = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Document message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Document.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.structData != null && message.hasOwnProperty("structData")) {
                                properties.data = 1;
                                {
                                    var error = $root.google.protobuf.Struct.verify(message.structData);
                                    if (error)
                                        return "structData." + error;
                                }
                            }
                            if (message.jsonData != null && message.hasOwnProperty("jsonData")) {
                                if (properties.data === 1)
                                    return "data: multiple values";
                                properties.data = 1;
                                if (!$util.isString(message.jsonData))
                                    return "jsonData: string expected";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.schemaId != null && message.hasOwnProperty("schemaId"))
                                if (!$util.isString(message.schemaId))
                                    return "schemaId: string expected";
                            if (message.content != null && message.hasOwnProperty("content")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.Document.Content.verify(message.content);
                                if (error)
                                    return "content." + error;
                            }
                            if (message.parentDocumentId != null && message.hasOwnProperty("parentDocumentId"))
                                if (!$util.isString(message.parentDocumentId))
                                    return "parentDocumentId: string expected";
                            if (message.derivedStructData != null && message.hasOwnProperty("derivedStructData")) {
                                var error = $root.google.protobuf.Struct.verify(message.derivedStructData);
                                if (error)
                                    return "derivedStructData." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Document message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.Document} Document
                         */
                        Document.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.Document)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.Document();
                            if (object.structData != null) {
                                if (typeof object.structData !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.Document.structData: object expected");
                                message.structData = $root.google.protobuf.Struct.fromObject(object.structData);
                            }
                            if (object.jsonData != null)
                                message.jsonData = String(object.jsonData);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.schemaId != null)
                                message.schemaId = String(object.schemaId);
                            if (object.content != null) {
                                if (typeof object.content !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.Document.content: object expected");
                                message.content = $root.google.cloud.discoveryengine.v1beta.Document.Content.fromObject(object.content);
                            }
                            if (object.parentDocumentId != null)
                                message.parentDocumentId = String(object.parentDocumentId);
                            if (object.derivedStructData != null) {
                                if (typeof object.derivedStructData !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.Document.derivedStructData: object expected");
                                message.derivedStructData = $root.google.protobuf.Struct.fromObject(object.derivedStructData);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Document message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.Document} message Document
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Document.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.id = "";
                                object.schemaId = "";
                                object.derivedStructData = null;
                                object.parentDocumentId = "";
                                object.content = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.schemaId != null && message.hasOwnProperty("schemaId"))
                                object.schemaId = message.schemaId;
                            if (message.structData != null && message.hasOwnProperty("structData")) {
                                object.structData = $root.google.protobuf.Struct.toObject(message.structData, options);
                                if (options.oneofs)
                                    object.data = "structData";
                            }
                            if (message.jsonData != null && message.hasOwnProperty("jsonData")) {
                                object.jsonData = message.jsonData;
                                if (options.oneofs)
                                    object.data = "jsonData";
                            }
                            if (message.derivedStructData != null && message.hasOwnProperty("derivedStructData"))
                                object.derivedStructData = $root.google.protobuf.Struct.toObject(message.derivedStructData, options);
                            if (message.parentDocumentId != null && message.hasOwnProperty("parentDocumentId"))
                                object.parentDocumentId = message.parentDocumentId;
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = $root.google.cloud.discoveryengine.v1beta.Document.Content.toObject(message.content, options);
                            return object;
                        };
    
                        /**
                         * Converts this Document to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Document.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Document
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.Document
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Document.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.Document";
                        };
    
                        Document.Content = (function() {
    
                            /**
                             * Properties of a Content.
                             * @memberof google.cloud.discoveryengine.v1beta.Document
                             * @interface IContent
                             * @property {Uint8Array|null} [rawBytes] Content rawBytes
                             * @property {string|null} [uri] Content uri
                             * @property {string|null} [mimeType] Content mimeType
                             */
    
                            /**
                             * Constructs a new Content.
                             * @memberof google.cloud.discoveryengine.v1beta.Document
                             * @classdesc Represents a Content.
                             * @implements IContent
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.Document.IContent=} [properties] Properties to set
                             */
                            function Content(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Content rawBytes.
                             * @member {Uint8Array|null|undefined} rawBytes
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @instance
                             */
                            Content.prototype.rawBytes = null;
    
                            /**
                             * Content uri.
                             * @member {string|null|undefined} uri
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @instance
                             */
                            Content.prototype.uri = null;
    
                            /**
                             * Content mimeType.
                             * @member {string} mimeType
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @instance
                             */
                            Content.prototype.mimeType = "";
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Content content.
                             * @member {"rawBytes"|"uri"|undefined} content
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @instance
                             */
                            Object.defineProperty(Content.prototype, "content", {
                                get: $util.oneOfGetter($oneOfFields = ["rawBytes", "uri"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Content instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.Document.IContent=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.Document.Content} Content instance
                             */
                            Content.create = function create(properties) {
                                return new Content(properties);
                            };
    
                            /**
                             * Encodes the specified Content message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.Document.Content.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.Document.IContent} message Content message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Content.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.mimeType);
                                if (message.rawBytes != null && Object.hasOwnProperty.call(message, "rawBytes"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.rawBytes);
                                if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Content message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.Document.Content.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.Document.IContent} message Content message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Content.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Content message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.Document.Content} Content
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Content.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.Document.Content();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2: {
                                            message.rawBytes = reader.bytes();
                                            break;
                                        }
                                    case 3: {
                                            message.uri = reader.string();
                                            break;
                                        }
                                    case 1: {
                                            message.mimeType = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Content message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.Document.Content} Content
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Content.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Content message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Content.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.rawBytes != null && message.hasOwnProperty("rawBytes")) {
                                    properties.content = 1;
                                    if (!(message.rawBytes && typeof message.rawBytes.length === "number" || $util.isString(message.rawBytes)))
                                        return "rawBytes: buffer expected";
                                }
                                if (message.uri != null && message.hasOwnProperty("uri")) {
                                    if (properties.content === 1)
                                        return "content: multiple values";
                                    properties.content = 1;
                                    if (!$util.isString(message.uri))
                                        return "uri: string expected";
                                }
                                if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                    if (!$util.isString(message.mimeType))
                                        return "mimeType: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Content message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.Document.Content} Content
                             */
                            Content.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.Document.Content)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.Document.Content();
                                if (object.rawBytes != null)
                                    if (typeof object.rawBytes === "string")
                                        $util.base64.decode(object.rawBytes, message.rawBytes = $util.newBuffer($util.base64.length(object.rawBytes)), 0);
                                    else if (object.rawBytes.length >= 0)
                                        message.rawBytes = object.rawBytes;
                                if (object.uri != null)
                                    message.uri = String(object.uri);
                                if (object.mimeType != null)
                                    message.mimeType = String(object.mimeType);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Content message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.Document.Content} message Content
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Content.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.mimeType = "";
                                if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                    object.mimeType = message.mimeType;
                                if (message.rawBytes != null && message.hasOwnProperty("rawBytes")) {
                                    object.rawBytes = options.bytes === String ? $util.base64.encode(message.rawBytes, 0, message.rawBytes.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawBytes) : message.rawBytes;
                                    if (options.oneofs)
                                        object.content = "rawBytes";
                                }
                                if (message.uri != null && message.hasOwnProperty("uri")) {
                                    object.uri = message.uri;
                                    if (options.oneofs)
                                        object.content = "uri";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Content to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Content.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Content
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.Document.Content
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Content.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.Document.Content";
                            };
    
                            return Content;
                        })();
    
                        return Document;
                    })();
    
                    v1beta.DocumentService = (function() {
    
                        /**
                         * Constructs a new DocumentService service.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a DocumentService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DocumentService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DocumentService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DocumentService;
    
                        /**
                         * Creates new DocumentService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DocumentService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DocumentService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.DocumentService|getDocument}.
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @typedef GetDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.Document} [response] Document
                         */
    
                        /**
                         * Calls GetDocument.
                         * @function getDocument
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IGetDocumentRequest} request GetDocumentRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.DocumentService.GetDocumentCallback} callback Node-style callback called with the error, if any, and Document
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.getDocument = function getDocument(request, callback) {
                            return this.rpcCall(getDocument, $root.google.cloud.discoveryengine.v1beta.GetDocumentRequest, $root.google.cloud.discoveryengine.v1beta.Document, request, callback);
                        }, "name", { value: "GetDocument" });
    
                        /**
                         * Calls GetDocument.
                         * @function getDocument
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IGetDocumentRequest} request GetDocumentRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.Document>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.DocumentService|listDocuments}.
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @typedef ListDocumentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.ListDocumentsResponse} [response] ListDocumentsResponse
                         */
    
                        /**
                         * Calls ListDocuments.
                         * @function listDocuments
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsRequest} request ListDocumentsRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.DocumentService.ListDocumentsCallback} callback Node-style callback called with the error, if any, and ListDocumentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.listDocuments = function listDocuments(request, callback) {
                            return this.rpcCall(listDocuments, $root.google.cloud.discoveryengine.v1beta.ListDocumentsRequest, $root.google.cloud.discoveryengine.v1beta.ListDocumentsResponse, request, callback);
                        }, "name", { value: "ListDocuments" });
    
                        /**
                         * Calls ListDocuments.
                         * @function listDocuments
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsRequest} request ListDocumentsRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.ListDocumentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.DocumentService|createDocument}.
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @typedef CreateDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.Document} [response] Document
                         */
    
                        /**
                         * Calls CreateDocument.
                         * @function createDocument
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ICreateDocumentRequest} request CreateDocumentRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.DocumentService.CreateDocumentCallback} callback Node-style callback called with the error, if any, and Document
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.createDocument = function createDocument(request, callback) {
                            return this.rpcCall(createDocument, $root.google.cloud.discoveryengine.v1beta.CreateDocumentRequest, $root.google.cloud.discoveryengine.v1beta.Document, request, callback);
                        }, "name", { value: "CreateDocument" });
    
                        /**
                         * Calls CreateDocument.
                         * @function createDocument
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ICreateDocumentRequest} request CreateDocumentRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.Document>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.DocumentService|updateDocument}.
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @typedef UpdateDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.Document} [response] Document
                         */
    
                        /**
                         * Calls UpdateDocument.
                         * @function updateDocument
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateDocumentRequest} request UpdateDocumentRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.DocumentService.UpdateDocumentCallback} callback Node-style callback called with the error, if any, and Document
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.updateDocument = function updateDocument(request, callback) {
                            return this.rpcCall(updateDocument, $root.google.cloud.discoveryengine.v1beta.UpdateDocumentRequest, $root.google.cloud.discoveryengine.v1beta.Document, request, callback);
                        }, "name", { value: "UpdateDocument" });
    
                        /**
                         * Calls UpdateDocument.
                         * @function updateDocument
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateDocumentRequest} request UpdateDocumentRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.Document>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.DocumentService|deleteDocument}.
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @typedef DeleteDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteDocument.
                         * @function deleteDocument
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteDocumentRequest} request DeleteDocumentRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.DocumentService.DeleteDocumentCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.deleteDocument = function deleteDocument(request, callback) {
                            return this.rpcCall(deleteDocument, $root.google.cloud.discoveryengine.v1beta.DeleteDocumentRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteDocument" });
    
                        /**
                         * Calls DeleteDocument.
                         * @function deleteDocument
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteDocumentRequest} request DeleteDocumentRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.DocumentService|importDocuments}.
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @typedef ImportDocumentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ImportDocuments.
                         * @function importDocuments
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsRequest} request ImportDocumentsRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.DocumentService.ImportDocumentsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.importDocuments = function importDocuments(request, callback) {
                            return this.rpcCall(importDocuments, $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ImportDocuments" });
    
                        /**
                         * Calls ImportDocuments.
                         * @function importDocuments
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsRequest} request ImportDocumentsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.DocumentService|purgeDocuments}.
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @typedef PurgeDocumentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls PurgeDocuments.
                         * @function purgeDocuments
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsRequest} request PurgeDocumentsRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.DocumentService.PurgeDocumentsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.purgeDocuments = function purgeDocuments(request, callback) {
                            return this.rpcCall(purgeDocuments, $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "PurgeDocuments" });
    
                        /**
                         * Calls PurgeDocuments.
                         * @function purgeDocuments
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsRequest} request PurgeDocumentsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return DocumentService;
                    })();
    
                    v1beta.GetDocumentRequest = (function() {
    
                        /**
                         * Properties of a GetDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IGetDocumentRequest
                         * @property {string|null} [name] GetDocumentRequest name
                         */
    
                        /**
                         * Constructs a new GetDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a GetDocumentRequest.
                         * @implements IGetDocumentRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IGetDocumentRequest=} [properties] Properties to set
                         */
                        function GetDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetDocumentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @instance
                         */
                        GetDocumentRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IGetDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.GetDocumentRequest} GetDocumentRequest instance
                         */
                        GetDocumentRequest.create = function create(properties) {
                            return new GetDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetDocumentRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.GetDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IGetDocumentRequest} message GetDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.GetDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IGetDocumentRequest} message GetDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.GetDocumentRequest} GetDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.GetDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.GetDocumentRequest} GetDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.GetDocumentRequest} GetDocumentRequest
                         */
                        GetDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.GetDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.GetDocumentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.GetDocumentRequest} message GetDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.GetDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.GetDocumentRequest";
                        };
    
                        return GetDocumentRequest;
                    })();
    
                    v1beta.ListDocumentsRequest = (function() {
    
                        /**
                         * Properties of a ListDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IListDocumentsRequest
                         * @property {string|null} [parent] ListDocumentsRequest parent
                         * @property {number|null} [pageSize] ListDocumentsRequest pageSize
                         * @property {string|null} [pageToken] ListDocumentsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a ListDocumentsRequest.
                         * @implements IListDocumentsRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsRequest=} [properties] Properties to set
                         */
                        function ListDocumentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDocumentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @instance
                         */
                        ListDocumentsRequest.prototype.parent = "";
    
                        /**
                         * ListDocumentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @instance
                         */
                        ListDocumentsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListDocumentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @instance
                         */
                        ListDocumentsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListDocumentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ListDocumentsRequest} ListDocumentsRequest instance
                         */
                        ListDocumentsRequest.create = function create(properties) {
                            return new ListDocumentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListDocumentsRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ListDocumentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsRequest} message ListDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDocumentsRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ListDocumentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsRequest} message ListDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDocumentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ListDocumentsRequest} ListDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ListDocumentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDocumentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ListDocumentsRequest} ListDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDocumentsRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDocumentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListDocumentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ListDocumentsRequest} ListDocumentsRequest
                         */
                        ListDocumentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ListDocumentsRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ListDocumentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDocumentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ListDocumentsRequest} message ListDocumentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDocumentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListDocumentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDocumentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDocumentsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDocumentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ListDocumentsRequest";
                        };
    
                        return ListDocumentsRequest;
                    })();
    
                    v1beta.ListDocumentsResponse = (function() {
    
                        /**
                         * Properties of a ListDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IListDocumentsResponse
                         * @property {Array.<google.cloud.discoveryengine.v1beta.IDocument>|null} [documents] ListDocumentsResponse documents
                         * @property {string|null} [nextPageToken] ListDocumentsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a ListDocumentsResponse.
                         * @implements IListDocumentsResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsResponse=} [properties] Properties to set
                         */
                        function ListDocumentsResponse(properties) {
                            this.documents = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDocumentsResponse documents.
                         * @member {Array.<google.cloud.discoveryengine.v1beta.IDocument>} documents
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @instance
                         */
                        ListDocumentsResponse.prototype.documents = $util.emptyArray;
    
                        /**
                         * ListDocumentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @instance
                         */
                        ListDocumentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListDocumentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ListDocumentsResponse} ListDocumentsResponse instance
                         */
                        ListDocumentsResponse.create = function create(properties) {
                            return new ListDocumentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListDocumentsResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ListDocumentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsResponse} message ListDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.documents != null && message.documents.length)
                                for (var i = 0; i < message.documents.length; ++i)
                                    $root.google.cloud.discoveryengine.v1beta.Document.encode(message.documents[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDocumentsResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ListDocumentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListDocumentsResponse} message ListDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDocumentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ListDocumentsResponse} ListDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ListDocumentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.documents && message.documents.length))
                                            message.documents = [];
                                        message.documents.push($root.google.cloud.discoveryengine.v1beta.Document.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDocumentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ListDocumentsResponse} ListDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDocumentsResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDocumentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documents != null && message.hasOwnProperty("documents")) {
                                if (!Array.isArray(message.documents))
                                    return "documents: array expected";
                                for (var i = 0; i < message.documents.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.Document.verify(message.documents[i]);
                                    if (error)
                                        return "documents." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListDocumentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ListDocumentsResponse} ListDocumentsResponse
                         */
                        ListDocumentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ListDocumentsResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ListDocumentsResponse();
                            if (object.documents) {
                                if (!Array.isArray(object.documents))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ListDocumentsResponse.documents: array expected");
                                message.documents = [];
                                for (var i = 0; i < object.documents.length; ++i) {
                                    if (typeof object.documents[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.ListDocumentsResponse.documents: object expected");
                                    message.documents[i] = $root.google.cloud.discoveryengine.v1beta.Document.fromObject(object.documents[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDocumentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ListDocumentsResponse} message ListDocumentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDocumentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.documents = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.documents && message.documents.length) {
                                object.documents = [];
                                for (var j = 0; j < message.documents.length; ++j)
                                    object.documents[j] = $root.google.cloud.discoveryengine.v1beta.Document.toObject(message.documents[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListDocumentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDocumentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDocumentsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ListDocumentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDocumentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ListDocumentsResponse";
                        };
    
                        return ListDocumentsResponse;
                    })();
    
                    v1beta.CreateDocumentRequest = (function() {
    
                        /**
                         * Properties of a CreateDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ICreateDocumentRequest
                         * @property {string|null} [parent] CreateDocumentRequest parent
                         * @property {google.cloud.discoveryengine.v1beta.IDocument|null} [document] CreateDocumentRequest document
                         * @property {string|null} [documentId] CreateDocumentRequest documentId
                         */
    
                        /**
                         * Constructs a new CreateDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a CreateDocumentRequest.
                         * @implements ICreateDocumentRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ICreateDocumentRequest=} [properties] Properties to set
                         */
                        function CreateDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateDocumentRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.parent = "";
    
                        /**
                         * CreateDocumentRequest document.
                         * @member {google.cloud.discoveryengine.v1beta.IDocument|null|undefined} document
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.document = null;
    
                        /**
                         * CreateDocumentRequest documentId.
                         * @member {string} documentId
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.documentId = "";
    
                        /**
                         * Creates a new CreateDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICreateDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.CreateDocumentRequest} CreateDocumentRequest instance
                         */
                        CreateDocumentRequest.create = function create(properties) {
                            return new CreateDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateDocumentRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CreateDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICreateDocumentRequest} message CreateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                $root.google.cloud.discoveryengine.v1beta.Document.encode(message.document, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.documentId != null && Object.hasOwnProperty.call(message, "documentId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.documentId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CreateDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICreateDocumentRequest} message CreateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.CreateDocumentRequest} CreateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.CreateDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.document = $root.google.cloud.discoveryengine.v1beta.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.documentId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.CreateDocumentRequest} CreateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.document != null && message.hasOwnProperty("document")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.Document.verify(message.document);
                                if (error)
                                    return "document." + error;
                            }
                            if (message.documentId != null && message.hasOwnProperty("documentId"))
                                if (!$util.isString(message.documentId))
                                    return "documentId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.CreateDocumentRequest} CreateDocumentRequest
                         */
                        CreateDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.CreateDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.CreateDocumentRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.document != null) {
                                if (typeof object.document !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.CreateDocumentRequest.document: object expected");
                                message.document = $root.google.cloud.discoveryengine.v1beta.Document.fromObject(object.document);
                            }
                            if (object.documentId != null)
                                message.documentId = String(object.documentId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.CreateDocumentRequest} message CreateDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.document = null;
                                object.documentId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.document != null && message.hasOwnProperty("document"))
                                object.document = $root.google.cloud.discoveryengine.v1beta.Document.toObject(message.document, options);
                            if (message.documentId != null && message.hasOwnProperty("documentId"))
                                object.documentId = message.documentId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.CreateDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.CreateDocumentRequest";
                        };
    
                        return CreateDocumentRequest;
                    })();
    
                    v1beta.UpdateDocumentRequest = (function() {
    
                        /**
                         * Properties of an UpdateDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IUpdateDocumentRequest
                         * @property {google.cloud.discoveryengine.v1beta.IDocument|null} [document] UpdateDocumentRequest document
                         * @property {boolean|null} [allowMissing] UpdateDocumentRequest allowMissing
                         */
    
                        /**
                         * Constructs a new UpdateDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an UpdateDocumentRequest.
                         * @implements IUpdateDocumentRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateDocumentRequest=} [properties] Properties to set
                         */
                        function UpdateDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateDocumentRequest document.
                         * @member {google.cloud.discoveryengine.v1beta.IDocument|null|undefined} document
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @instance
                         */
                        UpdateDocumentRequest.prototype.document = null;
    
                        /**
                         * UpdateDocumentRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @instance
                         */
                        UpdateDocumentRequest.prototype.allowMissing = false;
    
                        /**
                         * Creates a new UpdateDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateDocumentRequest} UpdateDocumentRequest instance
                         */
                        UpdateDocumentRequest.create = function create(properties) {
                            return new UpdateDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UpdateDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateDocumentRequest} message UpdateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                $root.google.cloud.discoveryengine.v1beta.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UpdateDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateDocumentRequest} message UpdateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateDocumentRequest} UpdateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.UpdateDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.document = $root.google.cloud.discoveryengine.v1beta.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateDocumentRequest} UpdateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.document != null && message.hasOwnProperty("document")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.Document.verify(message.document);
                                if (error)
                                    return "document." + error;
                            }
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateDocumentRequest} UpdateDocumentRequest
                         */
                        UpdateDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.UpdateDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.UpdateDocumentRequest();
                            if (object.document != null) {
                                if (typeof object.document !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UpdateDocumentRequest.document: object expected");
                                message.document = $root.google.cloud.discoveryengine.v1beta.Document.fromObject(object.document);
                            }
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.UpdateDocumentRequest} message UpdateDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.document = null;
                                object.allowMissing = false;
                            }
                            if (message.document != null && message.hasOwnProperty("document"))
                                object.document = $root.google.cloud.discoveryengine.v1beta.Document.toObject(message.document, options);
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.UpdateDocumentRequest";
                        };
    
                        return UpdateDocumentRequest;
                    })();
    
                    v1beta.DeleteDocumentRequest = (function() {
    
                        /**
                         * Properties of a DeleteDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IDeleteDocumentRequest
                         * @property {string|null} [name] DeleteDocumentRequest name
                         */
    
                        /**
                         * Constructs a new DeleteDocumentRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a DeleteDocumentRequest.
                         * @implements IDeleteDocumentRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteDocumentRequest=} [properties] Properties to set
                         */
                        function DeleteDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteDocumentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @instance
                         */
                        DeleteDocumentRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteDocumentRequest} DeleteDocumentRequest instance
                         */
                        DeleteDocumentRequest.create = function create(properties) {
                            return new DeleteDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.DeleteDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteDocumentRequest} message DeleteDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.DeleteDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteDocumentRequest} message DeleteDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteDocumentRequest} DeleteDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.DeleteDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteDocumentRequest} DeleteDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteDocumentRequest} DeleteDocumentRequest
                         */
                        DeleteDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.DeleteDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.DeleteDocumentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.DeleteDocumentRequest} message DeleteDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.DeleteDocumentRequest";
                        };
    
                        return DeleteDocumentRequest;
                    })();
    
                    v1beta.GcsSource = (function() {
    
                        /**
                         * Properties of a GcsSource.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IGcsSource
                         * @property {Array.<string>|null} [inputUris] GcsSource inputUris
                         * @property {string|null} [dataSchema] GcsSource dataSchema
                         */
    
                        /**
                         * Constructs a new GcsSource.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a GcsSource.
                         * @implements IGcsSource
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IGcsSource=} [properties] Properties to set
                         */
                        function GcsSource(properties) {
                            this.inputUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsSource inputUris.
                         * @member {Array.<string>} inputUris
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @instance
                         */
                        GcsSource.prototype.inputUris = $util.emptyArray;
    
                        /**
                         * GcsSource dataSchema.
                         * @member {string} dataSchema
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @instance
                         */
                        GcsSource.prototype.dataSchema = "";
    
                        /**
                         * Creates a new GcsSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IGcsSource=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.GcsSource} GcsSource instance
                         */
                        GcsSource.create = function create(properties) {
                            return new GcsSource(properties);
                        };
    
                        /**
                         * Encodes the specified GcsSource message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.GcsSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IGcsSource} message GcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.inputUris != null && message.inputUris.length)
                                for (var i = 0; i < message.inputUris.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.inputUris[i]);
                            if (message.dataSchema != null && Object.hasOwnProperty.call(message, "dataSchema"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.dataSchema);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsSource message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.GcsSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IGcsSource} message GcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.GcsSource} GcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.GcsSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.inputUris && message.inputUris.length))
                                            message.inputUris = [];
                                        message.inputUris.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.dataSchema = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.GcsSource} GcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsSource message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.inputUris != null && message.hasOwnProperty("inputUris")) {
                                if (!Array.isArray(message.inputUris))
                                    return "inputUris: array expected";
                                for (var i = 0; i < message.inputUris.length; ++i)
                                    if (!$util.isString(message.inputUris[i]))
                                        return "inputUris: string[] expected";
                            }
                            if (message.dataSchema != null && message.hasOwnProperty("dataSchema"))
                                if (!$util.isString(message.dataSchema))
                                    return "dataSchema: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GcsSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.GcsSource} GcsSource
                         */
                        GcsSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.GcsSource)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.GcsSource();
                            if (object.inputUris) {
                                if (!Array.isArray(object.inputUris))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.GcsSource.inputUris: array expected");
                                message.inputUris = [];
                                for (var i = 0; i < object.inputUris.length; ++i)
                                    message.inputUris[i] = String(object.inputUris[i]);
                            }
                            if (object.dataSchema != null)
                                message.dataSchema = String(object.dataSchema);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.GcsSource} message GcsSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.inputUris = [];
                            if (options.defaults)
                                object.dataSchema = "";
                            if (message.inputUris && message.inputUris.length) {
                                object.inputUris = [];
                                for (var j = 0; j < message.inputUris.length; ++j)
                                    object.inputUris[j] = message.inputUris[j];
                            }
                            if (message.dataSchema != null && message.hasOwnProperty("dataSchema"))
                                object.dataSchema = message.dataSchema;
                            return object;
                        };
    
                        /**
                         * Converts this GcsSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsSource
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.GcsSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.GcsSource";
                        };
    
                        return GcsSource;
                    })();
    
                    v1beta.BigQuerySource = (function() {
    
                        /**
                         * Properties of a BigQuerySource.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IBigQuerySource
                         * @property {google.type.IDate|null} [partitionDate] BigQuerySource partitionDate
                         * @property {string|null} [projectId] BigQuerySource projectId
                         * @property {string|null} [datasetId] BigQuerySource datasetId
                         * @property {string|null} [tableId] BigQuerySource tableId
                         * @property {string|null} [gcsStagingDir] BigQuerySource gcsStagingDir
                         * @property {string|null} [dataSchema] BigQuerySource dataSchema
                         */
    
                        /**
                         * Constructs a new BigQuerySource.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a BigQuerySource.
                         * @implements IBigQuerySource
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IBigQuerySource=} [properties] Properties to set
                         */
                        function BigQuerySource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BigQuerySource partitionDate.
                         * @member {google.type.IDate|null|undefined} partitionDate
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.partitionDate = null;
    
                        /**
                         * BigQuerySource projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.projectId = "";
    
                        /**
                         * BigQuerySource datasetId.
                         * @member {string} datasetId
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.datasetId = "";
    
                        /**
                         * BigQuerySource tableId.
                         * @member {string} tableId
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.tableId = "";
    
                        /**
                         * BigQuerySource gcsStagingDir.
                         * @member {string} gcsStagingDir
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.gcsStagingDir = "";
    
                        /**
                         * BigQuerySource dataSchema.
                         * @member {string} dataSchema
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @instance
                         */
                        BigQuerySource.prototype.dataSchema = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * BigQuerySource partition.
                         * @member {"partitionDate"|undefined} partition
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @instance
                         */
                        Object.defineProperty(BigQuerySource.prototype, "partition", {
                            get: $util.oneOfGetter($oneOfFields = ["partitionDate"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BigQuerySource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IBigQuerySource=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.BigQuerySource} BigQuerySource instance
                         */
                        BigQuerySource.create = function create(properties) {
                            return new BigQuerySource(properties);
                        };
    
                        /**
                         * Encodes the specified BigQuerySource message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.BigQuerySource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IBigQuerySource} message BigQuerySource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQuerySource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.datasetId != null && Object.hasOwnProperty.call(message, "datasetId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.datasetId);
                            if (message.tableId != null && Object.hasOwnProperty.call(message, "tableId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.tableId);
                            if (message.gcsStagingDir != null && Object.hasOwnProperty.call(message, "gcsStagingDir"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.gcsStagingDir);
                            if (message.partitionDate != null && Object.hasOwnProperty.call(message, "partitionDate"))
                                $root.google.type.Date.encode(message.partitionDate, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.dataSchema != null && Object.hasOwnProperty.call(message, "dataSchema"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.dataSchema);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BigQuerySource message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.BigQuerySource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IBigQuerySource} message BigQuerySource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQuerySource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BigQuerySource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.BigQuerySource} BigQuerySource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQuerySource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.BigQuerySource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.partitionDate = $root.google.type.Date.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.datasetId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.tableId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.gcsStagingDir = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.dataSchema = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BigQuerySource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.BigQuerySource} BigQuerySource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQuerySource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BigQuerySource message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BigQuerySource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.partitionDate != null && message.hasOwnProperty("partitionDate")) {
                                properties.partition = 1;
                                {
                                    var error = $root.google.type.Date.verify(message.partitionDate);
                                    if (error)
                                        return "partitionDate." + error;
                                }
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                if (!$util.isString(message.datasetId))
                                    return "datasetId: string expected";
                            if (message.tableId != null && message.hasOwnProperty("tableId"))
                                if (!$util.isString(message.tableId))
                                    return "tableId: string expected";
                            if (message.gcsStagingDir != null && message.hasOwnProperty("gcsStagingDir"))
                                if (!$util.isString(message.gcsStagingDir))
                                    return "gcsStagingDir: string expected";
                            if (message.dataSchema != null && message.hasOwnProperty("dataSchema"))
                                if (!$util.isString(message.dataSchema))
                                    return "dataSchema: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BigQuerySource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.BigQuerySource} BigQuerySource
                         */
                        BigQuerySource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.BigQuerySource)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.BigQuerySource();
                            if (object.partitionDate != null) {
                                if (typeof object.partitionDate !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.BigQuerySource.partitionDate: object expected");
                                message.partitionDate = $root.google.type.Date.fromObject(object.partitionDate);
                            }
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.datasetId != null)
                                message.datasetId = String(object.datasetId);
                            if (object.tableId != null)
                                message.tableId = String(object.tableId);
                            if (object.gcsStagingDir != null)
                                message.gcsStagingDir = String(object.gcsStagingDir);
                            if (object.dataSchema != null)
                                message.dataSchema = String(object.dataSchema);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BigQuerySource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.BigQuerySource} message BigQuerySource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BigQuerySource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.datasetId = "";
                                object.tableId = "";
                                object.gcsStagingDir = "";
                                object.dataSchema = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                object.datasetId = message.datasetId;
                            if (message.tableId != null && message.hasOwnProperty("tableId"))
                                object.tableId = message.tableId;
                            if (message.gcsStagingDir != null && message.hasOwnProperty("gcsStagingDir"))
                                object.gcsStagingDir = message.gcsStagingDir;
                            if (message.partitionDate != null && message.hasOwnProperty("partitionDate")) {
                                object.partitionDate = $root.google.type.Date.toObject(message.partitionDate, options);
                                if (options.oneofs)
                                    object.partition = "partitionDate";
                            }
                            if (message.dataSchema != null && message.hasOwnProperty("dataSchema"))
                                object.dataSchema = message.dataSchema;
                            return object;
                        };
    
                        /**
                         * Converts this BigQuerySource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BigQuerySource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BigQuerySource
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.BigQuerySource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BigQuerySource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.BigQuerySource";
                        };
    
                        return BigQuerySource;
                    })();
    
                    v1beta.ImportErrorConfig = (function() {
    
                        /**
                         * Properties of an ImportErrorConfig.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IImportErrorConfig
                         * @property {string|null} [gcsPrefix] ImportErrorConfig gcsPrefix
                         */
    
                        /**
                         * Constructs a new ImportErrorConfig.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an ImportErrorConfig.
                         * @implements IImportErrorConfig
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IImportErrorConfig=} [properties] Properties to set
                         */
                        function ImportErrorConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportErrorConfig gcsPrefix.
                         * @member {string|null|undefined} gcsPrefix
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @instance
                         */
                        ImportErrorConfig.prototype.gcsPrefix = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportErrorConfig destination.
                         * @member {"gcsPrefix"|undefined} destination
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @instance
                         */
                        Object.defineProperty(ImportErrorConfig.prototype, "destination", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsPrefix"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportErrorConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportErrorConfig=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ImportErrorConfig} ImportErrorConfig instance
                         */
                        ImportErrorConfig.create = function create(properties) {
                            return new ImportErrorConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ImportErrorConfig message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportErrorConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportErrorConfig} message ImportErrorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportErrorConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsPrefix != null && Object.hasOwnProperty.call(message, "gcsPrefix"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gcsPrefix);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportErrorConfig message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportErrorConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportErrorConfig} message ImportErrorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportErrorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportErrorConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ImportErrorConfig} ImportErrorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportErrorConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsPrefix = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportErrorConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ImportErrorConfig} ImportErrorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportErrorConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportErrorConfig message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportErrorConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsPrefix != null && message.hasOwnProperty("gcsPrefix")) {
                                properties.destination = 1;
                                if (!$util.isString(message.gcsPrefix))
                                    return "gcsPrefix: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportErrorConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ImportErrorConfig} ImportErrorConfig
                         */
                        ImportErrorConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig();
                            if (object.gcsPrefix != null)
                                message.gcsPrefix = String(object.gcsPrefix);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportErrorConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ImportErrorConfig} message ImportErrorConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportErrorConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.gcsPrefix != null && message.hasOwnProperty("gcsPrefix")) {
                                object.gcsPrefix = message.gcsPrefix;
                                if (options.oneofs)
                                    object.destination = "gcsPrefix";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ImportErrorConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportErrorConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportErrorConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ImportErrorConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportErrorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ImportErrorConfig";
                        };
    
                        return ImportErrorConfig;
                    })();
    
                    v1beta.ImportUserEventsRequest = (function() {
    
                        /**
                         * Properties of an ImportUserEventsRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IImportUserEventsRequest
                         * @property {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.IInlineSource|null} [inlineSource] ImportUserEventsRequest inlineSource
                         * @property {google.cloud.discoveryengine.v1beta.IGcsSource|null} [gcsSource] ImportUserEventsRequest gcsSource
                         * @property {google.cloud.discoveryengine.v1beta.IBigQuerySource|null} [bigquerySource] ImportUserEventsRequest bigquerySource
                         * @property {string|null} [parent] ImportUserEventsRequest parent
                         * @property {google.cloud.discoveryengine.v1beta.IImportErrorConfig|null} [errorConfig] ImportUserEventsRequest errorConfig
                         */
    
                        /**
                         * Constructs a new ImportUserEventsRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an ImportUserEventsRequest.
                         * @implements IImportUserEventsRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsRequest=} [properties] Properties to set
                         */
                        function ImportUserEventsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportUserEventsRequest inlineSource.
                         * @member {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.IInlineSource|null|undefined} inlineSource
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.inlineSource = null;
    
                        /**
                         * ImportUserEventsRequest gcsSource.
                         * @member {google.cloud.discoveryengine.v1beta.IGcsSource|null|undefined} gcsSource
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.gcsSource = null;
    
                        /**
                         * ImportUserEventsRequest bigquerySource.
                         * @member {google.cloud.discoveryengine.v1beta.IBigQuerySource|null|undefined} bigquerySource
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.bigquerySource = null;
    
                        /**
                         * ImportUserEventsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.parent = "";
    
                        /**
                         * ImportUserEventsRequest errorConfig.
                         * @member {google.cloud.discoveryengine.v1beta.IImportErrorConfig|null|undefined} errorConfig
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @instance
                         */
                        ImportUserEventsRequest.prototype.errorConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportUserEventsRequest source.
                         * @member {"inlineSource"|"gcsSource"|"bigquerySource"|undefined} source
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @instance
                         */
                        Object.defineProperty(ImportUserEventsRequest.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["inlineSource", "gcsSource", "bigquerySource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportUserEventsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest} ImportUserEventsRequest instance
                         */
                        ImportUserEventsRequest.create = function create(properties) {
                            return new ImportUserEventsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsRequest} message ImportUserEventsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.inlineSource != null && Object.hasOwnProperty.call(message, "inlineSource"))
                                $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource.encode(message.inlineSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.cloud.discoveryengine.v1beta.GcsSource.encode(message.gcsSource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.bigquerySource != null && Object.hasOwnProperty.call(message, "bigquerySource"))
                                $root.google.cloud.discoveryengine.v1beta.BigQuerySource.encode(message.bigquerySource, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.errorConfig != null && Object.hasOwnProperty.call(message, "errorConfig"))
                                $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.encode(message.errorConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsRequest} message ImportUserEventsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportUserEventsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest} ImportUserEventsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.inlineSource = $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.gcsSource = $root.google.cloud.discoveryengine.v1beta.GcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.bigquerySource = $root.google.cloud.discoveryengine.v1beta.BigQuerySource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportUserEventsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest} ImportUserEventsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportUserEventsRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportUserEventsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.inlineSource != null && message.hasOwnProperty("inlineSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource.verify(message.inlineSource);
                                    if (error)
                                        return "inlineSource." + error;
                                }
                            }
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1beta.GcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.bigquerySource != null && message.hasOwnProperty("bigquerySource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1beta.BigQuerySource.verify(message.bigquerySource);
                                    if (error)
                                        return "bigquerySource." + error;
                                }
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.verify(message.errorConfig);
                                if (error)
                                    return "errorConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportUserEventsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest} ImportUserEventsRequest
                         */
                        ImportUserEventsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest();
                            if (object.inlineSource != null) {
                                if (typeof object.inlineSource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.inlineSource: object expected");
                                message.inlineSource = $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource.fromObject(object.inlineSource);
                            }
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.gcsSource: object expected");
                                message.gcsSource = $root.google.cloud.discoveryengine.v1beta.GcsSource.fromObject(object.gcsSource);
                            }
                            if (object.bigquerySource != null) {
                                if (typeof object.bigquerySource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.bigquerySource: object expected");
                                message.bigquerySource = $root.google.cloud.discoveryengine.v1beta.BigQuerySource.fromObject(object.bigquerySource);
                            }
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.errorConfig != null) {
                                if (typeof object.errorConfig !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.errorConfig: object expected");
                                message.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.fromObject(object.errorConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportUserEventsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest} message ImportUserEventsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportUserEventsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.errorConfig = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.inlineSource != null && message.hasOwnProperty("inlineSource")) {
                                object.inlineSource = $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource.toObject(message.inlineSource, options);
                                if (options.oneofs)
                                    object.source = "inlineSource";
                            }
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.cloud.discoveryengine.v1beta.GcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            if (message.bigquerySource != null && message.hasOwnProperty("bigquerySource")) {
                                object.bigquerySource = $root.google.cloud.discoveryengine.v1beta.BigQuerySource.toObject(message.bigquerySource, options);
                                if (options.oneofs)
                                    object.source = "bigquerySource";
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig"))
                                object.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.toObject(message.errorConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this ImportUserEventsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportUserEventsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportUserEventsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportUserEventsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ImportUserEventsRequest";
                        };
    
                        ImportUserEventsRequest.InlineSource = (function() {
    
                            /**
                             * Properties of an InlineSource.
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                             * @interface IInlineSource
                             * @property {Array.<google.cloud.discoveryengine.v1beta.IUserEvent>|null} [userEvents] InlineSource userEvents
                             */
    
                            /**
                             * Constructs a new InlineSource.
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest
                             * @classdesc Represents an InlineSource.
                             * @implements IInlineSource
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.IInlineSource=} [properties] Properties to set
                             */
                            function InlineSource(properties) {
                                this.userEvents = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * InlineSource userEvents.
                             * @member {Array.<google.cloud.discoveryengine.v1beta.IUserEvent>} userEvents
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @instance
                             */
                            InlineSource.prototype.userEvents = $util.emptyArray;
    
                            /**
                             * Creates a new InlineSource instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.IInlineSource=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource} InlineSource instance
                             */
                            InlineSource.create = function create(properties) {
                                return new InlineSource(properties);
                            };
    
                            /**
                             * Encodes the specified InlineSource message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.IInlineSource} message InlineSource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InlineSource.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.userEvents != null && message.userEvents.length)
                                    for (var i = 0; i < message.userEvents.length; ++i)
                                        $root.google.cloud.discoveryengine.v1beta.UserEvent.encode(message.userEvents[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified InlineSource message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.IInlineSource} message InlineSource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InlineSource.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an InlineSource message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource} InlineSource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InlineSource.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.userEvents && message.userEvents.length))
                                                message.userEvents = [];
                                            message.userEvents.push($root.google.cloud.discoveryengine.v1beta.UserEvent.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an InlineSource message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource} InlineSource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InlineSource.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an InlineSource message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            InlineSource.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.userEvents != null && message.hasOwnProperty("userEvents")) {
                                    if (!Array.isArray(message.userEvents))
                                        return "userEvents: array expected";
                                    for (var i = 0; i < message.userEvents.length; ++i) {
                                        var error = $root.google.cloud.discoveryengine.v1beta.UserEvent.verify(message.userEvents[i]);
                                        if (error)
                                            return "userEvents." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an InlineSource message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource} InlineSource
                             */
                            InlineSource.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource();
                                if (object.userEvents) {
                                    if (!Array.isArray(object.userEvents))
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource.userEvents: array expected");
                                    message.userEvents = [];
                                    for (var i = 0; i < object.userEvents.length; ++i) {
                                        if (typeof object.userEvents[i] !== "object")
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource.userEvents: object expected");
                                        message.userEvents[i] = $root.google.cloud.discoveryengine.v1beta.UserEvent.fromObject(object.userEvents[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an InlineSource message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource} message InlineSource
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            InlineSource.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.userEvents = [];
                                if (message.userEvents && message.userEvents.length) {
                                    object.userEvents = [];
                                    for (var j = 0; j < message.userEvents.length; ++j)
                                        object.userEvents[j] = $root.google.cloud.discoveryengine.v1beta.UserEvent.toObject(message.userEvents[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this InlineSource to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            InlineSource.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for InlineSource
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            InlineSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ImportUserEventsRequest.InlineSource";
                            };
    
                            return InlineSource;
                        })();
    
                        return ImportUserEventsRequest;
                    })();
    
                    v1beta.ImportUserEventsResponse = (function() {
    
                        /**
                         * Properties of an ImportUserEventsResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IImportUserEventsResponse
                         * @property {Array.<google.rpc.IStatus>|null} [errorSamples] ImportUserEventsResponse errorSamples
                         * @property {google.cloud.discoveryengine.v1beta.IImportErrorConfig|null} [errorConfig] ImportUserEventsResponse errorConfig
                         * @property {number|Long|null} [joinedEventsCount] ImportUserEventsResponse joinedEventsCount
                         * @property {number|Long|null} [unjoinedEventsCount] ImportUserEventsResponse unjoinedEventsCount
                         */
    
                        /**
                         * Constructs a new ImportUserEventsResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an ImportUserEventsResponse.
                         * @implements IImportUserEventsResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsResponse=} [properties] Properties to set
                         */
                        function ImportUserEventsResponse(properties) {
                            this.errorSamples = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportUserEventsResponse errorSamples.
                         * @member {Array.<google.rpc.IStatus>} errorSamples
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @instance
                         */
                        ImportUserEventsResponse.prototype.errorSamples = $util.emptyArray;
    
                        /**
                         * ImportUserEventsResponse errorConfig.
                         * @member {google.cloud.discoveryengine.v1beta.IImportErrorConfig|null|undefined} errorConfig
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @instance
                         */
                        ImportUserEventsResponse.prototype.errorConfig = null;
    
                        /**
                         * ImportUserEventsResponse joinedEventsCount.
                         * @member {number|Long} joinedEventsCount
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @instance
                         */
                        ImportUserEventsResponse.prototype.joinedEventsCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * ImportUserEventsResponse unjoinedEventsCount.
                         * @member {number|Long} unjoinedEventsCount
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @instance
                         */
                        ImportUserEventsResponse.prototype.unjoinedEventsCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new ImportUserEventsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsResponse} ImportUserEventsResponse instance
                         */
                        ImportUserEventsResponse.create = function create(properties) {
                            return new ImportUserEventsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportUserEventsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsResponse} message ImportUserEventsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.errorSamples != null && message.errorSamples.length)
                                for (var i = 0; i < message.errorSamples.length; ++i)
                                    $root.google.rpc.Status.encode(message.errorSamples[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.errorConfig != null && Object.hasOwnProperty.call(message, "errorConfig"))
                                $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.encode(message.errorConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.joinedEventsCount != null && Object.hasOwnProperty.call(message, "joinedEventsCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.joinedEventsCount);
                            if (message.unjoinedEventsCount != null && Object.hasOwnProperty.call(message, "unjoinedEventsCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.unjoinedEventsCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportUserEventsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsResponse} message ImportUserEventsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportUserEventsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsResponse} ImportUserEventsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ImportUserEventsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.errorSamples && message.errorSamples.length))
                                            message.errorSamples = [];
                                        message.errorSamples.push($root.google.rpc.Status.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.joinedEventsCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.unjoinedEventsCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportUserEventsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsResponse} ImportUserEventsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportUserEventsResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportUserEventsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.errorSamples != null && message.hasOwnProperty("errorSamples")) {
                                if (!Array.isArray(message.errorSamples))
                                    return "errorSamples: array expected";
                                for (var i = 0; i < message.errorSamples.length; ++i) {
                                    var error = $root.google.rpc.Status.verify(message.errorSamples[i]);
                                    if (error)
                                        return "errorSamples." + error;
                                }
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.verify(message.errorConfig);
                                if (error)
                                    return "errorConfig." + error;
                            }
                            if (message.joinedEventsCount != null && message.hasOwnProperty("joinedEventsCount"))
                                if (!$util.isInteger(message.joinedEventsCount) && !(message.joinedEventsCount && $util.isInteger(message.joinedEventsCount.low) && $util.isInteger(message.joinedEventsCount.high)))
                                    return "joinedEventsCount: integer|Long expected";
                            if (message.unjoinedEventsCount != null && message.hasOwnProperty("unjoinedEventsCount"))
                                if (!$util.isInteger(message.unjoinedEventsCount) && !(message.unjoinedEventsCount && $util.isInteger(message.unjoinedEventsCount.low) && $util.isInteger(message.unjoinedEventsCount.high)))
                                    return "unjoinedEventsCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportUserEventsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsResponse} ImportUserEventsResponse
                         */
                        ImportUserEventsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ImportUserEventsResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ImportUserEventsResponse();
                            if (object.errorSamples) {
                                if (!Array.isArray(object.errorSamples))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsResponse.errorSamples: array expected");
                                message.errorSamples = [];
                                for (var i = 0; i < object.errorSamples.length; ++i) {
                                    if (typeof object.errorSamples[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsResponse.errorSamples: object expected");
                                    message.errorSamples[i] = $root.google.rpc.Status.fromObject(object.errorSamples[i]);
                                }
                            }
                            if (object.errorConfig != null) {
                                if (typeof object.errorConfig !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsResponse.errorConfig: object expected");
                                message.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.fromObject(object.errorConfig);
                            }
                            if (object.joinedEventsCount != null)
                                if ($util.Long)
                                    (message.joinedEventsCount = $util.Long.fromValue(object.joinedEventsCount)).unsigned = false;
                                else if (typeof object.joinedEventsCount === "string")
                                    message.joinedEventsCount = parseInt(object.joinedEventsCount, 10);
                                else if (typeof object.joinedEventsCount === "number")
                                    message.joinedEventsCount = object.joinedEventsCount;
                                else if (typeof object.joinedEventsCount === "object")
                                    message.joinedEventsCount = new $util.LongBits(object.joinedEventsCount.low >>> 0, object.joinedEventsCount.high >>> 0).toNumber();
                            if (object.unjoinedEventsCount != null)
                                if ($util.Long)
                                    (message.unjoinedEventsCount = $util.Long.fromValue(object.unjoinedEventsCount)).unsigned = false;
                                else if (typeof object.unjoinedEventsCount === "string")
                                    message.unjoinedEventsCount = parseInt(object.unjoinedEventsCount, 10);
                                else if (typeof object.unjoinedEventsCount === "number")
                                    message.unjoinedEventsCount = object.unjoinedEventsCount;
                                else if (typeof object.unjoinedEventsCount === "object")
                                    message.unjoinedEventsCount = new $util.LongBits(object.unjoinedEventsCount.low >>> 0, object.unjoinedEventsCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportUserEventsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ImportUserEventsResponse} message ImportUserEventsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportUserEventsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errorSamples = [];
                            if (options.defaults) {
                                object.errorConfig = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.joinedEventsCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.joinedEventsCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.unjoinedEventsCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.unjoinedEventsCount = options.longs === String ? "0" : 0;
                            }
                            if (message.errorSamples && message.errorSamples.length) {
                                object.errorSamples = [];
                                for (var j = 0; j < message.errorSamples.length; ++j)
                                    object.errorSamples[j] = $root.google.rpc.Status.toObject(message.errorSamples[j], options);
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig"))
                                object.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.toObject(message.errorConfig, options);
                            if (message.joinedEventsCount != null && message.hasOwnProperty("joinedEventsCount"))
                                if (typeof message.joinedEventsCount === "number")
                                    object.joinedEventsCount = options.longs === String ? String(message.joinedEventsCount) : message.joinedEventsCount;
                                else
                                    object.joinedEventsCount = options.longs === String ? $util.Long.prototype.toString.call(message.joinedEventsCount) : options.longs === Number ? new $util.LongBits(message.joinedEventsCount.low >>> 0, message.joinedEventsCount.high >>> 0).toNumber() : message.joinedEventsCount;
                            if (message.unjoinedEventsCount != null && message.hasOwnProperty("unjoinedEventsCount"))
                                if (typeof message.unjoinedEventsCount === "number")
                                    object.unjoinedEventsCount = options.longs === String ? String(message.unjoinedEventsCount) : message.unjoinedEventsCount;
                                else
                                    object.unjoinedEventsCount = options.longs === String ? $util.Long.prototype.toString.call(message.unjoinedEventsCount) : options.longs === Number ? new $util.LongBits(message.unjoinedEventsCount.low >>> 0, message.unjoinedEventsCount.high >>> 0).toNumber() : message.unjoinedEventsCount;
                            return object;
                        };
    
                        /**
                         * Converts this ImportUserEventsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportUserEventsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportUserEventsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportUserEventsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ImportUserEventsResponse";
                        };
    
                        return ImportUserEventsResponse;
                    })();
    
                    v1beta.ImportUserEventsMetadata = (function() {
    
                        /**
                         * Properties of an ImportUserEventsMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IImportUserEventsMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] ImportUserEventsMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] ImportUserEventsMetadata updateTime
                         * @property {number|Long|null} [successCount] ImportUserEventsMetadata successCount
                         * @property {number|Long|null} [failureCount] ImportUserEventsMetadata failureCount
                         */
    
                        /**
                         * Constructs a new ImportUserEventsMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an ImportUserEventsMetadata.
                         * @implements IImportUserEventsMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsMetadata=} [properties] Properties to set
                         */
                        function ImportUserEventsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportUserEventsMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @instance
                         */
                        ImportUserEventsMetadata.prototype.createTime = null;
    
                        /**
                         * ImportUserEventsMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @instance
                         */
                        ImportUserEventsMetadata.prototype.updateTime = null;
    
                        /**
                         * ImportUserEventsMetadata successCount.
                         * @member {number|Long} successCount
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @instance
                         */
                        ImportUserEventsMetadata.prototype.successCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * ImportUserEventsMetadata failureCount.
                         * @member {number|Long} failureCount
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @instance
                         */
                        ImportUserEventsMetadata.prototype.failureCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new ImportUserEventsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata} ImportUserEventsMetadata instance
                         */
                        ImportUserEventsMetadata.create = function create(properties) {
                            return new ImportUserEventsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsMetadata} message ImportUserEventsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.successCount != null && Object.hasOwnProperty.call(message, "successCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.successCount);
                            if (message.failureCount != null && Object.hasOwnProperty.call(message, "failureCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.failureCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportUserEventsMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsMetadata} message ImportUserEventsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportUserEventsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportUserEventsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata} ImportUserEventsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.successCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.failureCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportUserEventsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata} ImportUserEventsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportUserEventsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportUserEventsMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportUserEventsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (!$util.isInteger(message.successCount) && !(message.successCount && $util.isInteger(message.successCount.low) && $util.isInteger(message.successCount.high)))
                                    return "successCount: integer|Long expected";
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (!$util.isInteger(message.failureCount) && !(message.failureCount && $util.isInteger(message.failureCount.low) && $util.isInteger(message.failureCount.high)))
                                    return "failureCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportUserEventsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata} ImportUserEventsMetadata
                         */
                        ImportUserEventsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.successCount != null)
                                if ($util.Long)
                                    (message.successCount = $util.Long.fromValue(object.successCount)).unsigned = false;
                                else if (typeof object.successCount === "string")
                                    message.successCount = parseInt(object.successCount, 10);
                                else if (typeof object.successCount === "number")
                                    message.successCount = object.successCount;
                                else if (typeof object.successCount === "object")
                                    message.successCount = new $util.LongBits(object.successCount.low >>> 0, object.successCount.high >>> 0).toNumber();
                            if (object.failureCount != null)
                                if ($util.Long)
                                    (message.failureCount = $util.Long.fromValue(object.failureCount)).unsigned = false;
                                else if (typeof object.failureCount === "string")
                                    message.failureCount = parseInt(object.failureCount, 10);
                                else if (typeof object.failureCount === "number")
                                    message.failureCount = object.failureCount;
                                else if (typeof object.failureCount === "object")
                                    message.failureCount = new $util.LongBits(object.failureCount.low >>> 0, object.failureCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportUserEventsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata} message ImportUserEventsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportUserEventsMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.successCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.successCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.failureCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.failureCount = options.longs === String ? "0" : 0;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (typeof message.successCount === "number")
                                    object.successCount = options.longs === String ? String(message.successCount) : message.successCount;
                                else
                                    object.successCount = options.longs === String ? $util.Long.prototype.toString.call(message.successCount) : options.longs === Number ? new $util.LongBits(message.successCount.low >>> 0, message.successCount.high >>> 0).toNumber() : message.successCount;
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (typeof message.failureCount === "number")
                                    object.failureCount = options.longs === String ? String(message.failureCount) : message.failureCount;
                                else
                                    object.failureCount = options.longs === String ? $util.Long.prototype.toString.call(message.failureCount) : options.longs === Number ? new $util.LongBits(message.failureCount.low >>> 0, message.failureCount.high >>> 0).toNumber() : message.failureCount;
                            return object;
                        };
    
                        /**
                         * Converts this ImportUserEventsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportUserEventsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportUserEventsMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportUserEventsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ImportUserEventsMetadata";
                        };
    
                        return ImportUserEventsMetadata;
                    })();
    
                    v1beta.ImportDocumentsMetadata = (function() {
    
                        /**
                         * Properties of an ImportDocumentsMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IImportDocumentsMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] ImportDocumentsMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] ImportDocumentsMetadata updateTime
                         * @property {number|Long|null} [successCount] ImportDocumentsMetadata successCount
                         * @property {number|Long|null} [failureCount] ImportDocumentsMetadata failureCount
                         */
    
                        /**
                         * Constructs a new ImportDocumentsMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an ImportDocumentsMetadata.
                         * @implements IImportDocumentsMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsMetadata=} [properties] Properties to set
                         */
                        function ImportDocumentsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportDocumentsMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @instance
                         */
                        ImportDocumentsMetadata.prototype.createTime = null;
    
                        /**
                         * ImportDocumentsMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @instance
                         */
                        ImportDocumentsMetadata.prototype.updateTime = null;
    
                        /**
                         * ImportDocumentsMetadata successCount.
                         * @member {number|Long} successCount
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @instance
                         */
                        ImportDocumentsMetadata.prototype.successCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * ImportDocumentsMetadata failureCount.
                         * @member {number|Long} failureCount
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @instance
                         */
                        ImportDocumentsMetadata.prototype.failureCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new ImportDocumentsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata} ImportDocumentsMetadata instance
                         */
                        ImportDocumentsMetadata.create = function create(properties) {
                            return new ImportDocumentsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsMetadata} message ImportDocumentsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.successCount != null && Object.hasOwnProperty.call(message, "successCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.successCount);
                            if (message.failureCount != null && Object.hasOwnProperty.call(message, "failureCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.failureCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsMetadata} message ImportDocumentsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportDocumentsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata} ImportDocumentsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.successCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.failureCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportDocumentsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata} ImportDocumentsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportDocumentsMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportDocumentsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (!$util.isInteger(message.successCount) && !(message.successCount && $util.isInteger(message.successCount.low) && $util.isInteger(message.successCount.high)))
                                    return "successCount: integer|Long expected";
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (!$util.isInteger(message.failureCount) && !(message.failureCount && $util.isInteger(message.failureCount.low) && $util.isInteger(message.failureCount.high)))
                                    return "failureCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportDocumentsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata} ImportDocumentsMetadata
                         */
                        ImportDocumentsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.successCount != null)
                                if ($util.Long)
                                    (message.successCount = $util.Long.fromValue(object.successCount)).unsigned = false;
                                else if (typeof object.successCount === "string")
                                    message.successCount = parseInt(object.successCount, 10);
                                else if (typeof object.successCount === "number")
                                    message.successCount = object.successCount;
                                else if (typeof object.successCount === "object")
                                    message.successCount = new $util.LongBits(object.successCount.low >>> 0, object.successCount.high >>> 0).toNumber();
                            if (object.failureCount != null)
                                if ($util.Long)
                                    (message.failureCount = $util.Long.fromValue(object.failureCount)).unsigned = false;
                                else if (typeof object.failureCount === "string")
                                    message.failureCount = parseInt(object.failureCount, 10);
                                else if (typeof object.failureCount === "number")
                                    message.failureCount = object.failureCount;
                                else if (typeof object.failureCount === "object")
                                    message.failureCount = new $util.LongBits(object.failureCount.low >>> 0, object.failureCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportDocumentsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata} message ImportDocumentsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportDocumentsMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.successCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.successCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.failureCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.failureCount = options.longs === String ? "0" : 0;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (typeof message.successCount === "number")
                                    object.successCount = options.longs === String ? String(message.successCount) : message.successCount;
                                else
                                    object.successCount = options.longs === String ? $util.Long.prototype.toString.call(message.successCount) : options.longs === Number ? new $util.LongBits(message.successCount.low >>> 0, message.successCount.high >>> 0).toNumber() : message.successCount;
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (typeof message.failureCount === "number")
                                    object.failureCount = options.longs === String ? String(message.failureCount) : message.failureCount;
                                else
                                    object.failureCount = options.longs === String ? $util.Long.prototype.toString.call(message.failureCount) : options.longs === Number ? new $util.LongBits(message.failureCount.low >>> 0, message.failureCount.high >>> 0).toNumber() : message.failureCount;
                            return object;
                        };
    
                        /**
                         * Converts this ImportDocumentsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportDocumentsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportDocumentsMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportDocumentsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ImportDocumentsMetadata";
                        };
    
                        return ImportDocumentsMetadata;
                    })();
    
                    v1beta.ImportDocumentsRequest = (function() {
    
                        /**
                         * Properties of an ImportDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IImportDocumentsRequest
                         * @property {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.IInlineSource|null} [inlineSource] ImportDocumentsRequest inlineSource
                         * @property {google.cloud.discoveryengine.v1beta.IGcsSource|null} [gcsSource] ImportDocumentsRequest gcsSource
                         * @property {google.cloud.discoveryengine.v1beta.IBigQuerySource|null} [bigquerySource] ImportDocumentsRequest bigquerySource
                         * @property {string|null} [parent] ImportDocumentsRequest parent
                         * @property {google.cloud.discoveryengine.v1beta.IImportErrorConfig|null} [errorConfig] ImportDocumentsRequest errorConfig
                         * @property {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.ReconciliationMode|null} [reconciliationMode] ImportDocumentsRequest reconciliationMode
                         * @property {boolean|null} [autoGenerateIds] ImportDocumentsRequest autoGenerateIds
                         * @property {string|null} [idField] ImportDocumentsRequest idField
                         */
    
                        /**
                         * Constructs a new ImportDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an ImportDocumentsRequest.
                         * @implements IImportDocumentsRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsRequest=} [properties] Properties to set
                         */
                        function ImportDocumentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportDocumentsRequest inlineSource.
                         * @member {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.IInlineSource|null|undefined} inlineSource
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.inlineSource = null;
    
                        /**
                         * ImportDocumentsRequest gcsSource.
                         * @member {google.cloud.discoveryengine.v1beta.IGcsSource|null|undefined} gcsSource
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.gcsSource = null;
    
                        /**
                         * ImportDocumentsRequest bigquerySource.
                         * @member {google.cloud.discoveryengine.v1beta.IBigQuerySource|null|undefined} bigquerySource
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.bigquerySource = null;
    
                        /**
                         * ImportDocumentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.parent = "";
    
                        /**
                         * ImportDocumentsRequest errorConfig.
                         * @member {google.cloud.discoveryengine.v1beta.IImportErrorConfig|null|undefined} errorConfig
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.errorConfig = null;
    
                        /**
                         * ImportDocumentsRequest reconciliationMode.
                         * @member {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.ReconciliationMode} reconciliationMode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.reconciliationMode = 0;
    
                        /**
                         * ImportDocumentsRequest autoGenerateIds.
                         * @member {boolean} autoGenerateIds
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.autoGenerateIds = false;
    
                        /**
                         * ImportDocumentsRequest idField.
                         * @member {string} idField
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         */
                        ImportDocumentsRequest.prototype.idField = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportDocumentsRequest source.
                         * @member {"inlineSource"|"gcsSource"|"bigquerySource"|undefined} source
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         */
                        Object.defineProperty(ImportDocumentsRequest.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["inlineSource", "gcsSource", "bigquerySource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportDocumentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest} ImportDocumentsRequest instance
                         */
                        ImportDocumentsRequest.create = function create(properties) {
                            return new ImportDocumentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsRequest} message ImportDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.inlineSource != null && Object.hasOwnProperty.call(message, "inlineSource"))
                                $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource.encode(message.inlineSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.cloud.discoveryengine.v1beta.GcsSource.encode(message.gcsSource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.bigquerySource != null && Object.hasOwnProperty.call(message, "bigquerySource"))
                                $root.google.cloud.discoveryengine.v1beta.BigQuerySource.encode(message.bigquerySource, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.errorConfig != null && Object.hasOwnProperty.call(message, "errorConfig"))
                                $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.encode(message.errorConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.reconciliationMode != null && Object.hasOwnProperty.call(message, "reconciliationMode"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.reconciliationMode);
                            if (message.autoGenerateIds != null && Object.hasOwnProperty.call(message, "autoGenerateIds"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.autoGenerateIds);
                            if (message.idField != null && Object.hasOwnProperty.call(message, "idField"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.idField);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsRequest} message ImportDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportDocumentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest} ImportDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.inlineSource = $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.gcsSource = $root.google.cloud.discoveryengine.v1beta.GcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.bigquerySource = $root.google.cloud.discoveryengine.v1beta.BigQuerySource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.reconciliationMode = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.autoGenerateIds = reader.bool();
                                        break;
                                    }
                                case 9: {
                                        message.idField = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportDocumentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest} ImportDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportDocumentsRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportDocumentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.inlineSource != null && message.hasOwnProperty("inlineSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource.verify(message.inlineSource);
                                    if (error)
                                        return "inlineSource." + error;
                                }
                            }
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1beta.GcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.bigquerySource != null && message.hasOwnProperty("bigquerySource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1beta.BigQuerySource.verify(message.bigquerySource);
                                    if (error)
                                        return "bigquerySource." + error;
                                }
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.verify(message.errorConfig);
                                if (error)
                                    return "errorConfig." + error;
                            }
                            if (message.reconciliationMode != null && message.hasOwnProperty("reconciliationMode"))
                                switch (message.reconciliationMode) {
                                default:
                                    return "reconciliationMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.autoGenerateIds != null && message.hasOwnProperty("autoGenerateIds"))
                                if (typeof message.autoGenerateIds !== "boolean")
                                    return "autoGenerateIds: boolean expected";
                            if (message.idField != null && message.hasOwnProperty("idField"))
                                if (!$util.isString(message.idField))
                                    return "idField: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportDocumentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest} ImportDocumentsRequest
                         */
                        ImportDocumentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest();
                            if (object.inlineSource != null) {
                                if (typeof object.inlineSource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.inlineSource: object expected");
                                message.inlineSource = $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource.fromObject(object.inlineSource);
                            }
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.gcsSource: object expected");
                                message.gcsSource = $root.google.cloud.discoveryengine.v1beta.GcsSource.fromObject(object.gcsSource);
                            }
                            if (object.bigquerySource != null) {
                                if (typeof object.bigquerySource !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.bigquerySource: object expected");
                                message.bigquerySource = $root.google.cloud.discoveryengine.v1beta.BigQuerySource.fromObject(object.bigquerySource);
                            }
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.errorConfig != null) {
                                if (typeof object.errorConfig !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.errorConfig: object expected");
                                message.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.fromObject(object.errorConfig);
                            }
                            switch (object.reconciliationMode) {
                            default:
                                if (typeof object.reconciliationMode === "number") {
                                    message.reconciliationMode = object.reconciliationMode;
                                    break;
                                }
                                break;
                            case "RECONCILIATION_MODE_UNSPECIFIED":
                            case 0:
                                message.reconciliationMode = 0;
                                break;
                            case "INCREMENTAL":
                            case 1:
                                message.reconciliationMode = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.reconciliationMode = 2;
                                break;
                            }
                            if (object.autoGenerateIds != null)
                                message.autoGenerateIds = Boolean(object.autoGenerateIds);
                            if (object.idField != null)
                                message.idField = String(object.idField);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportDocumentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest} message ImportDocumentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportDocumentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.errorConfig = null;
                                object.reconciliationMode = options.enums === String ? "RECONCILIATION_MODE_UNSPECIFIED" : 0;
                                object.autoGenerateIds = false;
                                object.idField = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.inlineSource != null && message.hasOwnProperty("inlineSource")) {
                                object.inlineSource = $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource.toObject(message.inlineSource, options);
                                if (options.oneofs)
                                    object.source = "inlineSource";
                            }
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.cloud.discoveryengine.v1beta.GcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            if (message.bigquerySource != null && message.hasOwnProperty("bigquerySource")) {
                                object.bigquerySource = $root.google.cloud.discoveryengine.v1beta.BigQuerySource.toObject(message.bigquerySource, options);
                                if (options.oneofs)
                                    object.source = "bigquerySource";
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig"))
                                object.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.toObject(message.errorConfig, options);
                            if (message.reconciliationMode != null && message.hasOwnProperty("reconciliationMode"))
                                object.reconciliationMode = options.enums === String ? $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.ReconciliationMode[message.reconciliationMode] === undefined ? message.reconciliationMode : $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.ReconciliationMode[message.reconciliationMode] : message.reconciliationMode;
                            if (message.autoGenerateIds != null && message.hasOwnProperty("autoGenerateIds"))
                                object.autoGenerateIds = message.autoGenerateIds;
                            if (message.idField != null && message.hasOwnProperty("idField"))
                                object.idField = message.idField;
                            return object;
                        };
    
                        /**
                         * Converts this ImportDocumentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportDocumentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportDocumentsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportDocumentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ImportDocumentsRequest";
                        };
    
                        ImportDocumentsRequest.InlineSource = (function() {
    
                            /**
                             * Properties of an InlineSource.
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                             * @interface IInlineSource
                             * @property {Array.<google.cloud.discoveryengine.v1beta.IDocument>|null} [documents] InlineSource documents
                             */
    
                            /**
                             * Constructs a new InlineSource.
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest
                             * @classdesc Represents an InlineSource.
                             * @implements IInlineSource
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.IInlineSource=} [properties] Properties to set
                             */
                            function InlineSource(properties) {
                                this.documents = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * InlineSource documents.
                             * @member {Array.<google.cloud.discoveryengine.v1beta.IDocument>} documents
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @instance
                             */
                            InlineSource.prototype.documents = $util.emptyArray;
    
                            /**
                             * Creates a new InlineSource instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.IInlineSource=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource} InlineSource instance
                             */
                            InlineSource.create = function create(properties) {
                                return new InlineSource(properties);
                            };
    
                            /**
                             * Encodes the specified InlineSource message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.IInlineSource} message InlineSource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InlineSource.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.documents != null && message.documents.length)
                                    for (var i = 0; i < message.documents.length; ++i)
                                        $root.google.cloud.discoveryengine.v1beta.Document.encode(message.documents[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified InlineSource message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.IInlineSource} message InlineSource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InlineSource.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an InlineSource message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource} InlineSource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InlineSource.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.documents && message.documents.length))
                                                message.documents = [];
                                            message.documents.push($root.google.cloud.discoveryengine.v1beta.Document.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an InlineSource message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource} InlineSource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InlineSource.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an InlineSource message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            InlineSource.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.documents != null && message.hasOwnProperty("documents")) {
                                    if (!Array.isArray(message.documents))
                                        return "documents: array expected";
                                    for (var i = 0; i < message.documents.length; ++i) {
                                        var error = $root.google.cloud.discoveryengine.v1beta.Document.verify(message.documents[i]);
                                        if (error)
                                            return "documents." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an InlineSource message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource} InlineSource
                             */
                            InlineSource.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource();
                                if (object.documents) {
                                    if (!Array.isArray(object.documents))
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource.documents: array expected");
                                    message.documents = [];
                                    for (var i = 0; i < object.documents.length; ++i) {
                                        if (typeof object.documents[i] !== "object")
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource.documents: object expected");
                                        message.documents[i] = $root.google.cloud.discoveryengine.v1beta.Document.fromObject(object.documents[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an InlineSource message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource} message InlineSource
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            InlineSource.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.documents = [];
                                if (message.documents && message.documents.length) {
                                    object.documents = [];
                                    for (var j = 0; j < message.documents.length; ++j)
                                        object.documents[j] = $root.google.cloud.discoveryengine.v1beta.Document.toObject(message.documents[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this InlineSource to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            InlineSource.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for InlineSource
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            InlineSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.InlineSource";
                            };
    
                            return InlineSource;
                        })();
    
                        /**
                         * ReconciliationMode enum.
                         * @name google.cloud.discoveryengine.v1beta.ImportDocumentsRequest.ReconciliationMode
                         * @enum {number}
                         * @property {number} RECONCILIATION_MODE_UNSPECIFIED=0 RECONCILIATION_MODE_UNSPECIFIED value
                         * @property {number} INCREMENTAL=1 INCREMENTAL value
                         * @property {number} FULL=2 FULL value
                         */
                        ImportDocumentsRequest.ReconciliationMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RECONCILIATION_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "INCREMENTAL"] = 1;
                            values[valuesById[2] = "FULL"] = 2;
                            return values;
                        })();
    
                        return ImportDocumentsRequest;
                    })();
    
                    v1beta.ImportDocumentsResponse = (function() {
    
                        /**
                         * Properties of an ImportDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IImportDocumentsResponse
                         * @property {Array.<google.rpc.IStatus>|null} [errorSamples] ImportDocumentsResponse errorSamples
                         * @property {google.cloud.discoveryengine.v1beta.IImportErrorConfig|null} [errorConfig] ImportDocumentsResponse errorConfig
                         */
    
                        /**
                         * Constructs a new ImportDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an ImportDocumentsResponse.
                         * @implements IImportDocumentsResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsResponse=} [properties] Properties to set
                         */
                        function ImportDocumentsResponse(properties) {
                            this.errorSamples = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportDocumentsResponse errorSamples.
                         * @member {Array.<google.rpc.IStatus>} errorSamples
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @instance
                         */
                        ImportDocumentsResponse.prototype.errorSamples = $util.emptyArray;
    
                        /**
                         * ImportDocumentsResponse errorConfig.
                         * @member {google.cloud.discoveryengine.v1beta.IImportErrorConfig|null|undefined} errorConfig
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @instance
                         */
                        ImportDocumentsResponse.prototype.errorConfig = null;
    
                        /**
                         * Creates a new ImportDocumentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsResponse} ImportDocumentsResponse instance
                         */
                        ImportDocumentsResponse.create = function create(properties) {
                            return new ImportDocumentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportDocumentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsResponse} message ImportDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.errorSamples != null && message.errorSamples.length)
                                for (var i = 0; i < message.errorSamples.length; ++i)
                                    $root.google.rpc.Status.encode(message.errorSamples[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.errorConfig != null && Object.hasOwnProperty.call(message, "errorConfig"))
                                $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.encode(message.errorConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportDocumentsResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ImportDocumentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IImportDocumentsResponse} message ImportDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportDocumentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportDocumentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsResponse} ImportDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ImportDocumentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.errorSamples && message.errorSamples.length))
                                            message.errorSamples = [];
                                        message.errorSamples.push($root.google.rpc.Status.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportDocumentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsResponse} ImportDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportDocumentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportDocumentsResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportDocumentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.errorSamples != null && message.hasOwnProperty("errorSamples")) {
                                if (!Array.isArray(message.errorSamples))
                                    return "errorSamples: array expected";
                                for (var i = 0; i < message.errorSamples.length; ++i) {
                                    var error = $root.google.rpc.Status.verify(message.errorSamples[i]);
                                    if (error)
                                        return "errorSamples." + error;
                                }
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.verify(message.errorConfig);
                                if (error)
                                    return "errorConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportDocumentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ImportDocumentsResponse} ImportDocumentsResponse
                         */
                        ImportDocumentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ImportDocumentsResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ImportDocumentsResponse();
                            if (object.errorSamples) {
                                if (!Array.isArray(object.errorSamples))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsResponse.errorSamples: array expected");
                                message.errorSamples = [];
                                for (var i = 0; i < object.errorSamples.length; ++i) {
                                    if (typeof object.errorSamples[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsResponse.errorSamples: object expected");
                                    message.errorSamples[i] = $root.google.rpc.Status.fromObject(object.errorSamples[i]);
                                }
                            }
                            if (object.errorConfig != null) {
                                if (typeof object.errorConfig !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ImportDocumentsResponse.errorConfig: object expected");
                                message.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.fromObject(object.errorConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportDocumentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ImportDocumentsResponse} message ImportDocumentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportDocumentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errorSamples = [];
                            if (options.defaults)
                                object.errorConfig = null;
                            if (message.errorSamples && message.errorSamples.length) {
                                object.errorSamples = [];
                                for (var j = 0; j < message.errorSamples.length; ++j)
                                    object.errorSamples[j] = $root.google.rpc.Status.toObject(message.errorSamples[j], options);
                            }
                            if (message.errorConfig != null && message.hasOwnProperty("errorConfig"))
                                object.errorConfig = $root.google.cloud.discoveryengine.v1beta.ImportErrorConfig.toObject(message.errorConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this ImportDocumentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportDocumentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportDocumentsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ImportDocumentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportDocumentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ImportDocumentsResponse";
                        };
    
                        return ImportDocumentsResponse;
                    })();
    
                    v1beta.UserEvent = (function() {
    
                        /**
                         * Properties of a UserEvent.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IUserEvent
                         * @property {string|null} [eventType] UserEvent eventType
                         * @property {string|null} [userPseudoId] UserEvent userPseudoId
                         * @property {google.protobuf.ITimestamp|null} [eventTime] UserEvent eventTime
                         * @property {google.cloud.discoveryengine.v1beta.IUserInfo|null} [userInfo] UserEvent userInfo
                         * @property {boolean|null} [directUserRequest] UserEvent directUserRequest
                         * @property {string|null} [sessionId] UserEvent sessionId
                         * @property {google.cloud.discoveryengine.v1beta.IPageInfo|null} [pageInfo] UserEvent pageInfo
                         * @property {string|null} [attributionToken] UserEvent attributionToken
                         * @property {string|null} [filter] UserEvent filter
                         * @property {Array.<google.cloud.discoveryengine.v1beta.IDocumentInfo>|null} [documents] UserEvent documents
                         * @property {google.cloud.discoveryengine.v1beta.IPanelInfo|null} [panel] UserEvent panel
                         * @property {google.cloud.discoveryengine.v1beta.ISearchInfo|null} [searchInfo] UserEvent searchInfo
                         * @property {google.cloud.discoveryengine.v1beta.ICompletionInfo|null} [completionInfo] UserEvent completionInfo
                         * @property {google.cloud.discoveryengine.v1beta.ITransactionInfo|null} [transactionInfo] UserEvent transactionInfo
                         * @property {Array.<string>|null} [tagIds] UserEvent tagIds
                         * @property {Array.<string>|null} [promotionIds] UserEvent promotionIds
                         * @property {Object.<string,google.cloud.discoveryengine.v1beta.ICustomAttribute>|null} [attributes] UserEvent attributes
                         * @property {google.cloud.discoveryengine.v1beta.IMediaInfo|null} [mediaInfo] UserEvent mediaInfo
                         */
    
                        /**
                         * Constructs a new UserEvent.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a UserEvent.
                         * @implements IUserEvent
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IUserEvent=} [properties] Properties to set
                         */
                        function UserEvent(properties) {
                            this.documents = [];
                            this.tagIds = [];
                            this.promotionIds = [];
                            this.attributes = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserEvent eventType.
                         * @member {string} eventType
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.eventType = "";
    
                        /**
                         * UserEvent userPseudoId.
                         * @member {string} userPseudoId
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.userPseudoId = "";
    
                        /**
                         * UserEvent eventTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} eventTime
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.eventTime = null;
    
                        /**
                         * UserEvent userInfo.
                         * @member {google.cloud.discoveryengine.v1beta.IUserInfo|null|undefined} userInfo
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.userInfo = null;
    
                        /**
                         * UserEvent directUserRequest.
                         * @member {boolean} directUserRequest
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.directUserRequest = false;
    
                        /**
                         * UserEvent sessionId.
                         * @member {string} sessionId
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.sessionId = "";
    
                        /**
                         * UserEvent pageInfo.
                         * @member {google.cloud.discoveryengine.v1beta.IPageInfo|null|undefined} pageInfo
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.pageInfo = null;
    
                        /**
                         * UserEvent attributionToken.
                         * @member {string} attributionToken
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.attributionToken = "";
    
                        /**
                         * UserEvent filter.
                         * @member {string} filter
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.filter = "";
    
                        /**
                         * UserEvent documents.
                         * @member {Array.<google.cloud.discoveryengine.v1beta.IDocumentInfo>} documents
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.documents = $util.emptyArray;
    
                        /**
                         * UserEvent panel.
                         * @member {google.cloud.discoveryengine.v1beta.IPanelInfo|null|undefined} panel
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.panel = null;
    
                        /**
                         * UserEvent searchInfo.
                         * @member {google.cloud.discoveryengine.v1beta.ISearchInfo|null|undefined} searchInfo
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.searchInfo = null;
    
                        /**
                         * UserEvent completionInfo.
                         * @member {google.cloud.discoveryengine.v1beta.ICompletionInfo|null|undefined} completionInfo
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.completionInfo = null;
    
                        /**
                         * UserEvent transactionInfo.
                         * @member {google.cloud.discoveryengine.v1beta.ITransactionInfo|null|undefined} transactionInfo
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.transactionInfo = null;
    
                        /**
                         * UserEvent tagIds.
                         * @member {Array.<string>} tagIds
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.tagIds = $util.emptyArray;
    
                        /**
                         * UserEvent promotionIds.
                         * @member {Array.<string>} promotionIds
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.promotionIds = $util.emptyArray;
    
                        /**
                         * UserEvent attributes.
                         * @member {Object.<string,google.cloud.discoveryengine.v1beta.ICustomAttribute>} attributes
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.attributes = $util.emptyObject;
    
                        /**
                         * UserEvent mediaInfo.
                         * @member {google.cloud.discoveryengine.v1beta.IMediaInfo|null|undefined} mediaInfo
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         */
                        UserEvent.prototype.mediaInfo = null;
    
                        /**
                         * Creates a new UserEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUserEvent=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.UserEvent} UserEvent instance
                         */
                        UserEvent.create = function create(properties) {
                            return new UserEvent(properties);
                        };
    
                        /**
                         * Encodes the specified UserEvent message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UserEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUserEvent} message UserEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventType != null && Object.hasOwnProperty.call(message, "eventType"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.eventType);
                            if (message.userPseudoId != null && Object.hasOwnProperty.call(message, "userPseudoId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.userPseudoId);
                            if (message.eventTime != null && Object.hasOwnProperty.call(message, "eventTime"))
                                $root.google.protobuf.Timestamp.encode(message.eventTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.userInfo != null && Object.hasOwnProperty.call(message, "userInfo"))
                                $root.google.cloud.discoveryengine.v1beta.UserInfo.encode(message.userInfo, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.directUserRequest != null && Object.hasOwnProperty.call(message, "directUserRequest"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.directUserRequest);
                            if (message.sessionId != null && Object.hasOwnProperty.call(message, "sessionId"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.sessionId);
                            if (message.pageInfo != null && Object.hasOwnProperty.call(message, "pageInfo"))
                                $root.google.cloud.discoveryengine.v1beta.PageInfo.encode(message.pageInfo, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.attributionToken != null && Object.hasOwnProperty.call(message, "attributionToken"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.attributionToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.filter);
                            if (message.documents != null && message.documents.length)
                                for (var i = 0; i < message.documents.length; ++i)
                                    $root.google.cloud.discoveryengine.v1beta.DocumentInfo.encode(message.documents[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.panel != null && Object.hasOwnProperty.call(message, "panel"))
                                $root.google.cloud.discoveryengine.v1beta.PanelInfo.encode(message.panel, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.searchInfo != null && Object.hasOwnProperty.call(message, "searchInfo"))
                                $root.google.cloud.discoveryengine.v1beta.SearchInfo.encode(message.searchInfo, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.completionInfo != null && Object.hasOwnProperty.call(message, "completionInfo"))
                                $root.google.cloud.discoveryengine.v1beta.CompletionInfo.encode(message.completionInfo, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.transactionInfo != null && Object.hasOwnProperty.call(message, "transactionInfo"))
                                $root.google.cloud.discoveryengine.v1beta.TransactionInfo.encode(message.transactionInfo, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.tagIds != null && message.tagIds.length)
                                for (var i = 0; i < message.tagIds.length; ++i)
                                    writer.uint32(/* id 15, wireType 2 =*/122).string(message.tagIds[i]);
                            if (message.promotionIds != null && message.promotionIds.length)
                                for (var i = 0; i < message.promotionIds.length; ++i)
                                    writer.uint32(/* id 16, wireType 2 =*/130).string(message.promotionIds[i]);
                            if (message.attributes != null && Object.hasOwnProperty.call(message, "attributes"))
                                for (var keys = Object.keys(message.attributes), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 17, wireType 2 =*/138).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.discoveryengine.v1beta.CustomAttribute.encode(message.attributes[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.mediaInfo != null && Object.hasOwnProperty.call(message, "mediaInfo"))
                                $root.google.cloud.discoveryengine.v1beta.MediaInfo.encode(message.mediaInfo, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserEvent message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UserEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUserEvent} message UserEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.UserEvent} UserEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.UserEvent(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.eventType = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userPseudoId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.eventTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.userInfo = $root.google.cloud.discoveryengine.v1beta.UserInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.directUserRequest = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.sessionId = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.pageInfo = $root.google.cloud.discoveryengine.v1beta.PageInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.attributionToken = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 10: {
                                        if (!(message.documents && message.documents.length))
                                            message.documents = [];
                                        message.documents.push($root.google.cloud.discoveryengine.v1beta.DocumentInfo.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 11: {
                                        message.panel = $root.google.cloud.discoveryengine.v1beta.PanelInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.searchInfo = $root.google.cloud.discoveryengine.v1beta.SearchInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.completionInfo = $root.google.cloud.discoveryengine.v1beta.CompletionInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.transactionInfo = $root.google.cloud.discoveryengine.v1beta.TransactionInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        if (!(message.tagIds && message.tagIds.length))
                                            message.tagIds = [];
                                        message.tagIds.push(reader.string());
                                        break;
                                    }
                                case 16: {
                                        if (!(message.promotionIds && message.promotionIds.length))
                                            message.promotionIds = [];
                                        message.promotionIds.push(reader.string());
                                        break;
                                    }
                                case 17: {
                                        if (message.attributes === $util.emptyObject)
                                            message.attributes = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.discoveryengine.v1beta.CustomAttribute.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.attributes[key] = value;
                                        break;
                                    }
                                case 18: {
                                        message.mediaInfo = $root.google.cloud.discoveryengine.v1beta.MediaInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.UserEvent} UserEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserEvent message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                if (!$util.isString(message.eventType))
                                    return "eventType: string expected";
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                if (!$util.isString(message.userPseudoId))
                                    return "userPseudoId: string expected";
                            if (message.eventTime != null && message.hasOwnProperty("eventTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.eventTime);
                                if (error)
                                    return "eventTime." + error;
                            }
                            if (message.userInfo != null && message.hasOwnProperty("userInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.UserInfo.verify(message.userInfo);
                                if (error)
                                    return "userInfo." + error;
                            }
                            if (message.directUserRequest != null && message.hasOwnProperty("directUserRequest"))
                                if (typeof message.directUserRequest !== "boolean")
                                    return "directUserRequest: boolean expected";
                            if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                if (!$util.isString(message.sessionId))
                                    return "sessionId: string expected";
                            if (message.pageInfo != null && message.hasOwnProperty("pageInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.PageInfo.verify(message.pageInfo);
                                if (error)
                                    return "pageInfo." + error;
                            }
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                if (!$util.isString(message.attributionToken))
                                    return "attributionToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.documents != null && message.hasOwnProperty("documents")) {
                                if (!Array.isArray(message.documents))
                                    return "documents: array expected";
                                for (var i = 0; i < message.documents.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.DocumentInfo.verify(message.documents[i]);
                                    if (error)
                                        return "documents." + error;
                                }
                            }
                            if (message.panel != null && message.hasOwnProperty("panel")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.PanelInfo.verify(message.panel);
                                if (error)
                                    return "panel." + error;
                            }
                            if (message.searchInfo != null && message.hasOwnProperty("searchInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.SearchInfo.verify(message.searchInfo);
                                if (error)
                                    return "searchInfo." + error;
                            }
                            if (message.completionInfo != null && message.hasOwnProperty("completionInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.CompletionInfo.verify(message.completionInfo);
                                if (error)
                                    return "completionInfo." + error;
                            }
                            if (message.transactionInfo != null && message.hasOwnProperty("transactionInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.TransactionInfo.verify(message.transactionInfo);
                                if (error)
                                    return "transactionInfo." + error;
                            }
                            if (message.tagIds != null && message.hasOwnProperty("tagIds")) {
                                if (!Array.isArray(message.tagIds))
                                    return "tagIds: array expected";
                                for (var i = 0; i < message.tagIds.length; ++i)
                                    if (!$util.isString(message.tagIds[i]))
                                        return "tagIds: string[] expected";
                            }
                            if (message.promotionIds != null && message.hasOwnProperty("promotionIds")) {
                                if (!Array.isArray(message.promotionIds))
                                    return "promotionIds: array expected";
                                for (var i = 0; i < message.promotionIds.length; ++i)
                                    if (!$util.isString(message.promotionIds[i]))
                                        return "promotionIds: string[] expected";
                            }
                            if (message.attributes != null && message.hasOwnProperty("attributes")) {
                                if (!$util.isObject(message.attributes))
                                    return "attributes: object expected";
                                var key = Object.keys(message.attributes);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.CustomAttribute.verify(message.attributes[key[i]]);
                                    if (error)
                                        return "attributes." + error;
                                }
                            }
                            if (message.mediaInfo != null && message.hasOwnProperty("mediaInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.MediaInfo.verify(message.mediaInfo);
                                if (error)
                                    return "mediaInfo." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a UserEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.UserEvent} UserEvent
                         */
                        UserEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.UserEvent)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.UserEvent();
                            if (object.eventType != null)
                                message.eventType = String(object.eventType);
                            if (object.userPseudoId != null)
                                message.userPseudoId = String(object.userPseudoId);
                            if (object.eventTime != null) {
                                if (typeof object.eventTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.eventTime: object expected");
                                message.eventTime = $root.google.protobuf.Timestamp.fromObject(object.eventTime);
                            }
                            if (object.userInfo != null) {
                                if (typeof object.userInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.userInfo: object expected");
                                message.userInfo = $root.google.cloud.discoveryengine.v1beta.UserInfo.fromObject(object.userInfo);
                            }
                            if (object.directUserRequest != null)
                                message.directUserRequest = Boolean(object.directUserRequest);
                            if (object.sessionId != null)
                                message.sessionId = String(object.sessionId);
                            if (object.pageInfo != null) {
                                if (typeof object.pageInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.pageInfo: object expected");
                                message.pageInfo = $root.google.cloud.discoveryengine.v1beta.PageInfo.fromObject(object.pageInfo);
                            }
                            if (object.attributionToken != null)
                                message.attributionToken = String(object.attributionToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.documents) {
                                if (!Array.isArray(object.documents))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.documents: array expected");
                                message.documents = [];
                                for (var i = 0; i < object.documents.length; ++i) {
                                    if (typeof object.documents[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.documents: object expected");
                                    message.documents[i] = $root.google.cloud.discoveryengine.v1beta.DocumentInfo.fromObject(object.documents[i]);
                                }
                            }
                            if (object.panel != null) {
                                if (typeof object.panel !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.panel: object expected");
                                message.panel = $root.google.cloud.discoveryengine.v1beta.PanelInfo.fromObject(object.panel);
                            }
                            if (object.searchInfo != null) {
                                if (typeof object.searchInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.searchInfo: object expected");
                                message.searchInfo = $root.google.cloud.discoveryengine.v1beta.SearchInfo.fromObject(object.searchInfo);
                            }
                            if (object.completionInfo != null) {
                                if (typeof object.completionInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.completionInfo: object expected");
                                message.completionInfo = $root.google.cloud.discoveryengine.v1beta.CompletionInfo.fromObject(object.completionInfo);
                            }
                            if (object.transactionInfo != null) {
                                if (typeof object.transactionInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.transactionInfo: object expected");
                                message.transactionInfo = $root.google.cloud.discoveryengine.v1beta.TransactionInfo.fromObject(object.transactionInfo);
                            }
                            if (object.tagIds) {
                                if (!Array.isArray(object.tagIds))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.tagIds: array expected");
                                message.tagIds = [];
                                for (var i = 0; i < object.tagIds.length; ++i)
                                    message.tagIds[i] = String(object.tagIds[i]);
                            }
                            if (object.promotionIds) {
                                if (!Array.isArray(object.promotionIds))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.promotionIds: array expected");
                                message.promotionIds = [];
                                for (var i = 0; i < object.promotionIds.length; ++i)
                                    message.promotionIds[i] = String(object.promotionIds[i]);
                            }
                            if (object.attributes) {
                                if (typeof object.attributes !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.attributes: object expected");
                                message.attributes = {};
                                for (var keys = Object.keys(object.attributes), i = 0; i < keys.length; ++i) {
                                    if (typeof object.attributes[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.attributes: object expected");
                                    message.attributes[keys[i]] = $root.google.cloud.discoveryengine.v1beta.CustomAttribute.fromObject(object.attributes[keys[i]]);
                                }
                            }
                            if (object.mediaInfo != null) {
                                if (typeof object.mediaInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UserEvent.mediaInfo: object expected");
                                message.mediaInfo = $root.google.cloud.discoveryengine.v1beta.MediaInfo.fromObject(object.mediaInfo);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.UserEvent} message UserEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.documents = [];
                                object.tagIds = [];
                                object.promotionIds = [];
                            }
                            if (options.objects || options.defaults)
                                object.attributes = {};
                            if (options.defaults) {
                                object.eventType = "";
                                object.userPseudoId = "";
                                object.eventTime = null;
                                object.userInfo = null;
                                object.directUserRequest = false;
                                object.sessionId = "";
                                object.pageInfo = null;
                                object.attributionToken = "";
                                object.filter = "";
                                object.panel = null;
                                object.searchInfo = null;
                                object.completionInfo = null;
                                object.transactionInfo = null;
                                object.mediaInfo = null;
                            }
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                object.eventType = message.eventType;
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                object.userPseudoId = message.userPseudoId;
                            if (message.eventTime != null && message.hasOwnProperty("eventTime"))
                                object.eventTime = $root.google.protobuf.Timestamp.toObject(message.eventTime, options);
                            if (message.userInfo != null && message.hasOwnProperty("userInfo"))
                                object.userInfo = $root.google.cloud.discoveryengine.v1beta.UserInfo.toObject(message.userInfo, options);
                            if (message.directUserRequest != null && message.hasOwnProperty("directUserRequest"))
                                object.directUserRequest = message.directUserRequest;
                            if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                                object.sessionId = message.sessionId;
                            if (message.pageInfo != null && message.hasOwnProperty("pageInfo"))
                                object.pageInfo = $root.google.cloud.discoveryengine.v1beta.PageInfo.toObject(message.pageInfo, options);
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                object.attributionToken = message.attributionToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.documents && message.documents.length) {
                                object.documents = [];
                                for (var j = 0; j < message.documents.length; ++j)
                                    object.documents[j] = $root.google.cloud.discoveryengine.v1beta.DocumentInfo.toObject(message.documents[j], options);
                            }
                            if (message.panel != null && message.hasOwnProperty("panel"))
                                object.panel = $root.google.cloud.discoveryengine.v1beta.PanelInfo.toObject(message.panel, options);
                            if (message.searchInfo != null && message.hasOwnProperty("searchInfo"))
                                object.searchInfo = $root.google.cloud.discoveryengine.v1beta.SearchInfo.toObject(message.searchInfo, options);
                            if (message.completionInfo != null && message.hasOwnProperty("completionInfo"))
                                object.completionInfo = $root.google.cloud.discoveryengine.v1beta.CompletionInfo.toObject(message.completionInfo, options);
                            if (message.transactionInfo != null && message.hasOwnProperty("transactionInfo"))
                                object.transactionInfo = $root.google.cloud.discoveryengine.v1beta.TransactionInfo.toObject(message.transactionInfo, options);
                            if (message.tagIds && message.tagIds.length) {
                                object.tagIds = [];
                                for (var j = 0; j < message.tagIds.length; ++j)
                                    object.tagIds[j] = message.tagIds[j];
                            }
                            if (message.promotionIds && message.promotionIds.length) {
                                object.promotionIds = [];
                                for (var j = 0; j < message.promotionIds.length; ++j)
                                    object.promotionIds[j] = message.promotionIds[j];
                            }
                            var keys2;
                            if (message.attributes && (keys2 = Object.keys(message.attributes)).length) {
                                object.attributes = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.attributes[keys2[j]] = $root.google.cloud.discoveryengine.v1beta.CustomAttribute.toObject(message.attributes[keys2[j]], options);
                            }
                            if (message.mediaInfo != null && message.hasOwnProperty("mediaInfo"))
                                object.mediaInfo = $root.google.cloud.discoveryengine.v1beta.MediaInfo.toObject(message.mediaInfo, options);
                            return object;
                        };
    
                        /**
                         * Converts this UserEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.UserEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.UserEvent";
                        };
    
                        return UserEvent;
                    })();
    
                    v1beta.PageInfo = (function() {
    
                        /**
                         * Properties of a PageInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IPageInfo
                         * @property {string|null} [pageviewId] PageInfo pageviewId
                         * @property {string|null} [pageCategory] PageInfo pageCategory
                         * @property {string|null} [uri] PageInfo uri
                         * @property {string|null} [referrerUri] PageInfo referrerUri
                         */
    
                        /**
                         * Constructs a new PageInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a PageInfo.
                         * @implements IPageInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IPageInfo=} [properties] Properties to set
                         */
                        function PageInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PageInfo pageviewId.
                         * @member {string} pageviewId
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @instance
                         */
                        PageInfo.prototype.pageviewId = "";
    
                        /**
                         * PageInfo pageCategory.
                         * @member {string} pageCategory
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @instance
                         */
                        PageInfo.prototype.pageCategory = "";
    
                        /**
                         * PageInfo uri.
                         * @member {string} uri
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @instance
                         */
                        PageInfo.prototype.uri = "";
    
                        /**
                         * PageInfo referrerUri.
                         * @member {string} referrerUri
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @instance
                         */
                        PageInfo.prototype.referrerUri = "";
    
                        /**
                         * Creates a new PageInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPageInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.PageInfo} PageInfo instance
                         */
                        PageInfo.create = function create(properties) {
                            return new PageInfo(properties);
                        };
    
                        /**
                         * Encodes the specified PageInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PageInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPageInfo} message PageInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PageInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pageviewId != null && Object.hasOwnProperty.call(message, "pageviewId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.pageviewId);
                            if (message.pageCategory != null && Object.hasOwnProperty.call(message, "pageCategory"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.pageCategory);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            if (message.referrerUri != null && Object.hasOwnProperty.call(message, "referrerUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.referrerUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PageInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PageInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPageInfo} message PageInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PageInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PageInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.PageInfo} PageInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PageInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.PageInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.pageviewId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageCategory = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.referrerUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PageInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.PageInfo} PageInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PageInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PageInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PageInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pageviewId != null && message.hasOwnProperty("pageviewId"))
                                if (!$util.isString(message.pageviewId))
                                    return "pageviewId: string expected";
                            if (message.pageCategory != null && message.hasOwnProperty("pageCategory"))
                                if (!$util.isString(message.pageCategory))
                                    return "pageCategory: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.referrerUri != null && message.hasOwnProperty("referrerUri"))
                                if (!$util.isString(message.referrerUri))
                                    return "referrerUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PageInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.PageInfo} PageInfo
                         */
                        PageInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.PageInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.PageInfo();
                            if (object.pageviewId != null)
                                message.pageviewId = String(object.pageviewId);
                            if (object.pageCategory != null)
                                message.pageCategory = String(object.pageCategory);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.referrerUri != null)
                                message.referrerUri = String(object.referrerUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PageInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.PageInfo} message PageInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PageInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.pageviewId = "";
                                object.pageCategory = "";
                                object.uri = "";
                                object.referrerUri = "";
                            }
                            if (message.pageviewId != null && message.hasOwnProperty("pageviewId"))
                                object.pageviewId = message.pageviewId;
                            if (message.pageCategory != null && message.hasOwnProperty("pageCategory"))
                                object.pageCategory = message.pageCategory;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.referrerUri != null && message.hasOwnProperty("referrerUri"))
                                object.referrerUri = message.referrerUri;
                            return object;
                        };
    
                        /**
                         * Converts this PageInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PageInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PageInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.PageInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PageInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.PageInfo";
                        };
    
                        return PageInfo;
                    })();
    
                    v1beta.SearchInfo = (function() {
    
                        /**
                         * Properties of a SearchInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ISearchInfo
                         * @property {string|null} [searchQuery] SearchInfo searchQuery
                         * @property {string|null} [orderBy] SearchInfo orderBy
                         * @property {number|null} [offset] SearchInfo offset
                         */
    
                        /**
                         * Constructs a new SearchInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a SearchInfo.
                         * @implements ISearchInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ISearchInfo=} [properties] Properties to set
                         */
                        function SearchInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchInfo searchQuery.
                         * @member {string} searchQuery
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @instance
                         */
                        SearchInfo.prototype.searchQuery = "";
    
                        /**
                         * SearchInfo orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @instance
                         */
                        SearchInfo.prototype.orderBy = "";
    
                        /**
                         * SearchInfo offset.
                         * @member {number|null|undefined} offset
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @instance
                         */
                        SearchInfo.prototype.offset = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SearchInfo _offset.
                         * @member {"offset"|undefined} _offset
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @instance
                         */
                        Object.defineProperty(SearchInfo.prototype, "_offset", {
                            get: $util.oneOfGetter($oneOfFields = ["offset"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SearchInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISearchInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.SearchInfo} SearchInfo instance
                         */
                        SearchInfo.create = function create(properties) {
                            return new SearchInfo(properties);
                        };
    
                        /**
                         * Encodes the specified SearchInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISearchInfo} message SearchInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.searchQuery != null && Object.hasOwnProperty.call(message, "searchQuery"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.searchQuery);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.orderBy);
                            if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.offset);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISearchInfo} message SearchInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.SearchInfo} SearchInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.searchQuery = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.offset = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.SearchInfo} SearchInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.searchQuery != null && message.hasOwnProperty("searchQuery"))
                                if (!$util.isString(message.searchQuery))
                                    return "searchQuery: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            if (message.offset != null && message.hasOwnProperty("offset")) {
                                properties._offset = 1;
                                if (!$util.isInteger(message.offset))
                                    return "offset: integer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.SearchInfo} SearchInfo
                         */
                        SearchInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.SearchInfo();
                            if (object.searchQuery != null)
                                message.searchQuery = String(object.searchQuery);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            if (object.offset != null)
                                message.offset = object.offset | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.SearchInfo} message SearchInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.searchQuery = "";
                                object.orderBy = "";
                            }
                            if (message.searchQuery != null && message.hasOwnProperty("searchQuery"))
                                object.searchQuery = message.searchQuery;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            if (message.offset != null && message.hasOwnProperty("offset")) {
                                object.offset = message.offset;
                                if (options.oneofs)
                                    object._offset = "offset";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SearchInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.SearchInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchInfo";
                        };
    
                        return SearchInfo;
                    })();
    
                    v1beta.CompletionInfo = (function() {
    
                        /**
                         * Properties of a CompletionInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ICompletionInfo
                         * @property {string|null} [selectedSuggestion] CompletionInfo selectedSuggestion
                         * @property {number|null} [selectedPosition] CompletionInfo selectedPosition
                         */
    
                        /**
                         * Constructs a new CompletionInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a CompletionInfo.
                         * @implements ICompletionInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ICompletionInfo=} [properties] Properties to set
                         */
                        function CompletionInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CompletionInfo selectedSuggestion.
                         * @member {string} selectedSuggestion
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @instance
                         */
                        CompletionInfo.prototype.selectedSuggestion = "";
    
                        /**
                         * CompletionInfo selectedPosition.
                         * @member {number} selectedPosition
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @instance
                         */
                        CompletionInfo.prototype.selectedPosition = 0;
    
                        /**
                         * Creates a new CompletionInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICompletionInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.CompletionInfo} CompletionInfo instance
                         */
                        CompletionInfo.create = function create(properties) {
                            return new CompletionInfo(properties);
                        };
    
                        /**
                         * Encodes the specified CompletionInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CompletionInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICompletionInfo} message CompletionInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompletionInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.selectedSuggestion != null && Object.hasOwnProperty.call(message, "selectedSuggestion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.selectedSuggestion);
                            if (message.selectedPosition != null && Object.hasOwnProperty.call(message, "selectedPosition"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.selectedPosition);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CompletionInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CompletionInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICompletionInfo} message CompletionInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CompletionInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CompletionInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.CompletionInfo} CompletionInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompletionInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.CompletionInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.selectedSuggestion = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.selectedPosition = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CompletionInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.CompletionInfo} CompletionInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CompletionInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CompletionInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CompletionInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.selectedSuggestion != null && message.hasOwnProperty("selectedSuggestion"))
                                if (!$util.isString(message.selectedSuggestion))
                                    return "selectedSuggestion: string expected";
                            if (message.selectedPosition != null && message.hasOwnProperty("selectedPosition"))
                                if (!$util.isInteger(message.selectedPosition))
                                    return "selectedPosition: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a CompletionInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.CompletionInfo} CompletionInfo
                         */
                        CompletionInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.CompletionInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.CompletionInfo();
                            if (object.selectedSuggestion != null)
                                message.selectedSuggestion = String(object.selectedSuggestion);
                            if (object.selectedPosition != null)
                                message.selectedPosition = object.selectedPosition | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CompletionInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.CompletionInfo} message CompletionInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CompletionInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.selectedSuggestion = "";
                                object.selectedPosition = 0;
                            }
                            if (message.selectedSuggestion != null && message.hasOwnProperty("selectedSuggestion"))
                                object.selectedSuggestion = message.selectedSuggestion;
                            if (message.selectedPosition != null && message.hasOwnProperty("selectedPosition"))
                                object.selectedPosition = message.selectedPosition;
                            return object;
                        };
    
                        /**
                         * Converts this CompletionInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CompletionInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CompletionInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.CompletionInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CompletionInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.CompletionInfo";
                        };
    
                        return CompletionInfo;
                    })();
    
                    v1beta.TransactionInfo = (function() {
    
                        /**
                         * Properties of a TransactionInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ITransactionInfo
                         * @property {number|null} [value] TransactionInfo value
                         * @property {string|null} [currency] TransactionInfo currency
                         * @property {string|null} [transactionId] TransactionInfo transactionId
                         * @property {number|null} [tax] TransactionInfo tax
                         * @property {number|null} [cost] TransactionInfo cost
                         * @property {number|null} [discountValue] TransactionInfo discountValue
                         */
    
                        /**
                         * Constructs a new TransactionInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a TransactionInfo.
                         * @implements ITransactionInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ITransactionInfo=} [properties] Properties to set
                         */
                        function TransactionInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransactionInfo value.
                         * @member {number|null|undefined} value
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.value = null;
    
                        /**
                         * TransactionInfo currency.
                         * @member {string} currency
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.currency = "";
    
                        /**
                         * TransactionInfo transactionId.
                         * @member {string} transactionId
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.transactionId = "";
    
                        /**
                         * TransactionInfo tax.
                         * @member {number|null|undefined} tax
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.tax = null;
    
                        /**
                         * TransactionInfo cost.
                         * @member {number|null|undefined} cost
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.cost = null;
    
                        /**
                         * TransactionInfo discountValue.
                         * @member {number|null|undefined} discountValue
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        TransactionInfo.prototype.discountValue = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * TransactionInfo _value.
                         * @member {"value"|undefined} _value
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        Object.defineProperty(TransactionInfo.prototype, "_value", {
                            get: $util.oneOfGetter($oneOfFields = ["value"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * TransactionInfo _tax.
                         * @member {"tax"|undefined} _tax
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        Object.defineProperty(TransactionInfo.prototype, "_tax", {
                            get: $util.oneOfGetter($oneOfFields = ["tax"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * TransactionInfo _cost.
                         * @member {"cost"|undefined} _cost
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        Object.defineProperty(TransactionInfo.prototype, "_cost", {
                            get: $util.oneOfGetter($oneOfFields = ["cost"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * TransactionInfo _discountValue.
                         * @member {"discountValue"|undefined} _discountValue
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         */
                        Object.defineProperty(TransactionInfo.prototype, "_discountValue", {
                            get: $util.oneOfGetter($oneOfFields = ["discountValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new TransactionInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ITransactionInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.TransactionInfo} TransactionInfo instance
                         */
                        TransactionInfo.create = function create(properties) {
                            return new TransactionInfo(properties);
                        };
    
                        /**
                         * Encodes the specified TransactionInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.TransactionInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ITransactionInfo} message TransactionInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransactionInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.currency);
                            if (message.transactionId != null && Object.hasOwnProperty.call(message, "transactionId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.transactionId);
                            if (message.tax != null && Object.hasOwnProperty.call(message, "tax"))
                                writer.uint32(/* id 4, wireType 5 =*/37).float(message.tax);
                            if (message.cost != null && Object.hasOwnProperty.call(message, "cost"))
                                writer.uint32(/* id 5, wireType 5 =*/45).float(message.cost);
                            if (message.discountValue != null && Object.hasOwnProperty.call(message, "discountValue"))
                                writer.uint32(/* id 6, wireType 5 =*/53).float(message.discountValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransactionInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.TransactionInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ITransactionInfo} message TransactionInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransactionInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransactionInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.TransactionInfo} TransactionInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransactionInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.TransactionInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.value = reader.float();
                                        break;
                                    }
                                case 2: {
                                        message.currency = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.transactionId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.tax = reader.float();
                                        break;
                                    }
                                case 5: {
                                        message.cost = reader.float();
                                        break;
                                    }
                                case 6: {
                                        message.discountValue = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransactionInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.TransactionInfo} TransactionInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransactionInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransactionInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransactionInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.value != null && message.hasOwnProperty("value")) {
                                properties._value = 1;
                                if (typeof message.value !== "number")
                                    return "value: number expected";
                            }
                            if (message.currency != null && message.hasOwnProperty("currency"))
                                if (!$util.isString(message.currency))
                                    return "currency: string expected";
                            if (message.transactionId != null && message.hasOwnProperty("transactionId"))
                                if (!$util.isString(message.transactionId))
                                    return "transactionId: string expected";
                            if (message.tax != null && message.hasOwnProperty("tax")) {
                                properties._tax = 1;
                                if (typeof message.tax !== "number")
                                    return "tax: number expected";
                            }
                            if (message.cost != null && message.hasOwnProperty("cost")) {
                                properties._cost = 1;
                                if (typeof message.cost !== "number")
                                    return "cost: number expected";
                            }
                            if (message.discountValue != null && message.hasOwnProperty("discountValue")) {
                                properties._discountValue = 1;
                                if (typeof message.discountValue !== "number")
                                    return "discountValue: number expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransactionInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.TransactionInfo} TransactionInfo
                         */
                        TransactionInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.TransactionInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.TransactionInfo();
                            if (object.value != null)
                                message.value = Number(object.value);
                            if (object.currency != null)
                                message.currency = String(object.currency);
                            if (object.transactionId != null)
                                message.transactionId = String(object.transactionId);
                            if (object.tax != null)
                                message.tax = Number(object.tax);
                            if (object.cost != null)
                                message.cost = Number(object.cost);
                            if (object.discountValue != null)
                                message.discountValue = Number(object.discountValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransactionInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.TransactionInfo} message TransactionInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransactionInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.currency = "";
                                object.transactionId = "";
                            }
                            if (message.value != null && message.hasOwnProperty("value")) {
                                object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                                if (options.oneofs)
                                    object._value = "value";
                            }
                            if (message.currency != null && message.hasOwnProperty("currency"))
                                object.currency = message.currency;
                            if (message.transactionId != null && message.hasOwnProperty("transactionId"))
                                object.transactionId = message.transactionId;
                            if (message.tax != null && message.hasOwnProperty("tax")) {
                                object.tax = options.json && !isFinite(message.tax) ? String(message.tax) : message.tax;
                                if (options.oneofs)
                                    object._tax = "tax";
                            }
                            if (message.cost != null && message.hasOwnProperty("cost")) {
                                object.cost = options.json && !isFinite(message.cost) ? String(message.cost) : message.cost;
                                if (options.oneofs)
                                    object._cost = "cost";
                            }
                            if (message.discountValue != null && message.hasOwnProperty("discountValue")) {
                                object.discountValue = options.json && !isFinite(message.discountValue) ? String(message.discountValue) : message.discountValue;
                                if (options.oneofs)
                                    object._discountValue = "discountValue";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TransactionInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransactionInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransactionInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.TransactionInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransactionInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.TransactionInfo";
                        };
    
                        return TransactionInfo;
                    })();
    
                    v1beta.DocumentInfo = (function() {
    
                        /**
                         * Properties of a DocumentInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IDocumentInfo
                         * @property {string|null} [id] DocumentInfo id
                         * @property {string|null} [name] DocumentInfo name
                         * @property {number|null} [quantity] DocumentInfo quantity
                         * @property {Array.<string>|null} [promotionIds] DocumentInfo promotionIds
                         */
    
                        /**
                         * Constructs a new DocumentInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a DocumentInfo.
                         * @implements IDocumentInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IDocumentInfo=} [properties] Properties to set
                         */
                        function DocumentInfo(properties) {
                            this.promotionIds = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DocumentInfo id.
                         * @member {string|null|undefined} id
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @instance
                         */
                        DocumentInfo.prototype.id = null;
    
                        /**
                         * DocumentInfo name.
                         * @member {string|null|undefined} name
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @instance
                         */
                        DocumentInfo.prototype.name = null;
    
                        /**
                         * DocumentInfo quantity.
                         * @member {number|null|undefined} quantity
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @instance
                         */
                        DocumentInfo.prototype.quantity = null;
    
                        /**
                         * DocumentInfo promotionIds.
                         * @member {Array.<string>} promotionIds
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @instance
                         */
                        DocumentInfo.prototype.promotionIds = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DocumentInfo documentDescriptor.
                         * @member {"id"|"name"|undefined} documentDescriptor
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @instance
                         */
                        Object.defineProperty(DocumentInfo.prototype, "documentDescriptor", {
                            get: $util.oneOfGetter($oneOfFields = ["id", "name"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * DocumentInfo _quantity.
                         * @member {"quantity"|undefined} _quantity
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @instance
                         */
                        Object.defineProperty(DocumentInfo.prototype, "_quantity", {
                            get: $util.oneOfGetter($oneOfFields = ["quantity"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DocumentInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDocumentInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.DocumentInfo} DocumentInfo instance
                         */
                        DocumentInfo.create = function create(properties) {
                            return new DocumentInfo(properties);
                        };
    
                        /**
                         * Encodes the specified DocumentInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.DocumentInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDocumentInfo} message DocumentInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                            if (message.quantity != null && Object.hasOwnProperty.call(message, "quantity"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.quantity);
                            if (message.promotionIds != null && message.promotionIds.length)
                                for (var i = 0; i < message.promotionIds.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.promotionIds[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DocumentInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.DocumentInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDocumentInfo} message DocumentInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DocumentInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.DocumentInfo} DocumentInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.DocumentInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.quantity = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.promotionIds && message.promotionIds.length))
                                            message.promotionIds = [];
                                        message.promotionIds.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DocumentInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.DocumentInfo} DocumentInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DocumentInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DocumentInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.id != null && message.hasOwnProperty("id")) {
                                properties.documentDescriptor = 1;
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            }
                            if (message.name != null && message.hasOwnProperty("name")) {
                                if (properties.documentDescriptor === 1)
                                    return "documentDescriptor: multiple values";
                                properties.documentDescriptor = 1;
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            }
                            if (message.quantity != null && message.hasOwnProperty("quantity")) {
                                properties._quantity = 1;
                                if (!$util.isInteger(message.quantity))
                                    return "quantity: integer expected";
                            }
                            if (message.promotionIds != null && message.hasOwnProperty("promotionIds")) {
                                if (!Array.isArray(message.promotionIds))
                                    return "promotionIds: array expected";
                                for (var i = 0; i < message.promotionIds.length; ++i)
                                    if (!$util.isString(message.promotionIds[i]))
                                        return "promotionIds: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DocumentInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.DocumentInfo} DocumentInfo
                         */
                        DocumentInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.DocumentInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.DocumentInfo();
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.quantity != null)
                                message.quantity = object.quantity | 0;
                            if (object.promotionIds) {
                                if (!Array.isArray(object.promotionIds))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.DocumentInfo.promotionIds: array expected");
                                message.promotionIds = [];
                                for (var i = 0; i < object.promotionIds.length; ++i)
                                    message.promotionIds[i] = String(object.promotionIds[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DocumentInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.DocumentInfo} message DocumentInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DocumentInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.promotionIds = [];
                            if (message.id != null && message.hasOwnProperty("id")) {
                                object.id = message.id;
                                if (options.oneofs)
                                    object.documentDescriptor = "id";
                            }
                            if (message.name != null && message.hasOwnProperty("name")) {
                                object.name = message.name;
                                if (options.oneofs)
                                    object.documentDescriptor = "name";
                            }
                            if (message.quantity != null && message.hasOwnProperty("quantity")) {
                                object.quantity = message.quantity;
                                if (options.oneofs)
                                    object._quantity = "quantity";
                            }
                            if (message.promotionIds && message.promotionIds.length) {
                                object.promotionIds = [];
                                for (var j = 0; j < message.promotionIds.length; ++j)
                                    object.promotionIds[j] = message.promotionIds[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DocumentInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DocumentInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DocumentInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.DocumentInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DocumentInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.DocumentInfo";
                        };
    
                        return DocumentInfo;
                    })();
    
                    v1beta.PanelInfo = (function() {
    
                        /**
                         * Properties of a PanelInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IPanelInfo
                         * @property {string|null} [panelId] PanelInfo panelId
                         * @property {string|null} [displayName] PanelInfo displayName
                         * @property {number|null} [panelPosition] PanelInfo panelPosition
                         * @property {number|null} [totalPanels] PanelInfo totalPanels
                         */
    
                        /**
                         * Constructs a new PanelInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a PanelInfo.
                         * @implements IPanelInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IPanelInfo=} [properties] Properties to set
                         */
                        function PanelInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PanelInfo panelId.
                         * @member {string} panelId
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @instance
                         */
                        PanelInfo.prototype.panelId = "";
    
                        /**
                         * PanelInfo displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @instance
                         */
                        PanelInfo.prototype.displayName = "";
    
                        /**
                         * PanelInfo panelPosition.
                         * @member {number|null|undefined} panelPosition
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @instance
                         */
                        PanelInfo.prototype.panelPosition = null;
    
                        /**
                         * PanelInfo totalPanels.
                         * @member {number|null|undefined} totalPanels
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @instance
                         */
                        PanelInfo.prototype.totalPanels = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * PanelInfo _panelPosition.
                         * @member {"panelPosition"|undefined} _panelPosition
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @instance
                         */
                        Object.defineProperty(PanelInfo.prototype, "_panelPosition", {
                            get: $util.oneOfGetter($oneOfFields = ["panelPosition"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * PanelInfo _totalPanels.
                         * @member {"totalPanels"|undefined} _totalPanels
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @instance
                         */
                        Object.defineProperty(PanelInfo.prototype, "_totalPanels", {
                            get: $util.oneOfGetter($oneOfFields = ["totalPanels"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new PanelInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPanelInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.PanelInfo} PanelInfo instance
                         */
                        PanelInfo.create = function create(properties) {
                            return new PanelInfo(properties);
                        };
    
                        /**
                         * Encodes the specified PanelInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PanelInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPanelInfo} message PanelInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PanelInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.panelId != null && Object.hasOwnProperty.call(message, "panelId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.panelId);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.displayName);
                            if (message.panelPosition != null && Object.hasOwnProperty.call(message, "panelPosition"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.panelPosition);
                            if (message.totalPanels != null && Object.hasOwnProperty.call(message, "totalPanels"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.totalPanels);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PanelInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PanelInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPanelInfo} message PanelInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PanelInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PanelInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.PanelInfo} PanelInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PanelInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.PanelInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.panelId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.panelPosition = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.totalPanels = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PanelInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.PanelInfo} PanelInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PanelInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PanelInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PanelInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.panelId != null && message.hasOwnProperty("panelId"))
                                if (!$util.isString(message.panelId))
                                    return "panelId: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.panelPosition != null && message.hasOwnProperty("panelPosition")) {
                                properties._panelPosition = 1;
                                if (!$util.isInteger(message.panelPosition))
                                    return "panelPosition: integer expected";
                            }
                            if (message.totalPanels != null && message.hasOwnProperty("totalPanels")) {
                                properties._totalPanels = 1;
                                if (!$util.isInteger(message.totalPanels))
                                    return "totalPanels: integer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PanelInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.PanelInfo} PanelInfo
                         */
                        PanelInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.PanelInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.PanelInfo();
                            if (object.panelId != null)
                                message.panelId = String(object.panelId);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.panelPosition != null)
                                message.panelPosition = object.panelPosition | 0;
                            if (object.totalPanels != null)
                                message.totalPanels = object.totalPanels | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PanelInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.PanelInfo} message PanelInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PanelInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.panelId = "";
                                object.displayName = "";
                            }
                            if (message.panelId != null && message.hasOwnProperty("panelId"))
                                object.panelId = message.panelId;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.panelPosition != null && message.hasOwnProperty("panelPosition")) {
                                object.panelPosition = message.panelPosition;
                                if (options.oneofs)
                                    object._panelPosition = "panelPosition";
                            }
                            if (message.totalPanels != null && message.hasOwnProperty("totalPanels")) {
                                object.totalPanels = message.totalPanels;
                                if (options.oneofs)
                                    object._totalPanels = "totalPanels";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PanelInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PanelInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PanelInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.PanelInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PanelInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.PanelInfo";
                        };
    
                        return PanelInfo;
                    })();
    
                    v1beta.MediaInfo = (function() {
    
                        /**
                         * Properties of a MediaInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IMediaInfo
                         * @property {google.protobuf.IDuration|null} [mediaProgressDuration] MediaInfo mediaProgressDuration
                         * @property {number|null} [mediaProgressPercentage] MediaInfo mediaProgressPercentage
                         */
    
                        /**
                         * Constructs a new MediaInfo.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a MediaInfo.
                         * @implements IMediaInfo
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IMediaInfo=} [properties] Properties to set
                         */
                        function MediaInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MediaInfo mediaProgressDuration.
                         * @member {google.protobuf.IDuration|null|undefined} mediaProgressDuration
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @instance
                         */
                        MediaInfo.prototype.mediaProgressDuration = null;
    
                        /**
                         * MediaInfo mediaProgressPercentage.
                         * @member {number|null|undefined} mediaProgressPercentage
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @instance
                         */
                        MediaInfo.prototype.mediaProgressPercentage = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MediaInfo _mediaProgressPercentage.
                         * @member {"mediaProgressPercentage"|undefined} _mediaProgressPercentage
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @instance
                         */
                        Object.defineProperty(MediaInfo.prototype, "_mediaProgressPercentage", {
                            get: $util.oneOfGetter($oneOfFields = ["mediaProgressPercentage"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MediaInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IMediaInfo=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.MediaInfo} MediaInfo instance
                         */
                        MediaInfo.create = function create(properties) {
                            return new MediaInfo(properties);
                        };
    
                        /**
                         * Encodes the specified MediaInfo message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.MediaInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IMediaInfo} message MediaInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MediaInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mediaProgressDuration != null && Object.hasOwnProperty.call(message, "mediaProgressDuration"))
                                $root.google.protobuf.Duration.encode(message.mediaProgressDuration, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.mediaProgressPercentage != null && Object.hasOwnProperty.call(message, "mediaProgressPercentage"))
                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.mediaProgressPercentage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MediaInfo message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.MediaInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IMediaInfo} message MediaInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MediaInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MediaInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.MediaInfo} MediaInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MediaInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.MediaInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mediaProgressDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.mediaProgressPercentage = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MediaInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.MediaInfo} MediaInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MediaInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MediaInfo message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MediaInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.mediaProgressDuration != null && message.hasOwnProperty("mediaProgressDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.mediaProgressDuration);
                                if (error)
                                    return "mediaProgressDuration." + error;
                            }
                            if (message.mediaProgressPercentage != null && message.hasOwnProperty("mediaProgressPercentage")) {
                                properties._mediaProgressPercentage = 1;
                                if (typeof message.mediaProgressPercentage !== "number")
                                    return "mediaProgressPercentage: number expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MediaInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.MediaInfo} MediaInfo
                         */
                        MediaInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.MediaInfo)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.MediaInfo();
                            if (object.mediaProgressDuration != null) {
                                if (typeof object.mediaProgressDuration !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.MediaInfo.mediaProgressDuration: object expected");
                                message.mediaProgressDuration = $root.google.protobuf.Duration.fromObject(object.mediaProgressDuration);
                            }
                            if (object.mediaProgressPercentage != null)
                                message.mediaProgressPercentage = Number(object.mediaProgressPercentage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MediaInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.MediaInfo} message MediaInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MediaInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.mediaProgressDuration = null;
                            if (message.mediaProgressDuration != null && message.hasOwnProperty("mediaProgressDuration"))
                                object.mediaProgressDuration = $root.google.protobuf.Duration.toObject(message.mediaProgressDuration, options);
                            if (message.mediaProgressPercentage != null && message.hasOwnProperty("mediaProgressPercentage")) {
                                object.mediaProgressPercentage = options.json && !isFinite(message.mediaProgressPercentage) ? String(message.mediaProgressPercentage) : message.mediaProgressPercentage;
                                if (options.oneofs)
                                    object._mediaProgressPercentage = "mediaProgressPercentage";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MediaInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MediaInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MediaInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.MediaInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MediaInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.MediaInfo";
                        };
    
                        return MediaInfo;
                    })();
    
                    v1beta.PurgeDocumentsRequest = (function() {
    
                        /**
                         * Properties of a PurgeDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IPurgeDocumentsRequest
                         * @property {string|null} [parent] PurgeDocumentsRequest parent
                         * @property {string|null} [filter] PurgeDocumentsRequest filter
                         * @property {boolean|null} [force] PurgeDocumentsRequest force
                         */
    
                        /**
                         * Constructs a new PurgeDocumentsRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a PurgeDocumentsRequest.
                         * @implements IPurgeDocumentsRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsRequest=} [properties] Properties to set
                         */
                        function PurgeDocumentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeDocumentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @instance
                         */
                        PurgeDocumentsRequest.prototype.parent = "";
    
                        /**
                         * PurgeDocumentsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @instance
                         */
                        PurgeDocumentsRequest.prototype.filter = "";
    
                        /**
                         * PurgeDocumentsRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @instance
                         */
                        PurgeDocumentsRequest.prototype.force = false;
    
                        /**
                         * Creates a new PurgeDocumentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest} PurgeDocumentsRequest instance
                         */
                        PurgeDocumentsRequest.create = function create(properties) {
                            return new PurgeDocumentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsRequest} message PurgeDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsRequest} message PurgeDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeDocumentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest} PurgeDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeDocumentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest} PurgeDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeDocumentsRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeDocumentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeDocumentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest} PurgeDocumentsRequest
                         */
                        PurgeDocumentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeDocumentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest} message PurgeDocumentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeDocumentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.force = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeDocumentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeDocumentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeDocumentsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeDocumentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.PurgeDocumentsRequest";
                        };
    
                        return PurgeDocumentsRequest;
                    })();
    
                    v1beta.PurgeDocumentsResponse = (function() {
    
                        /**
                         * Properties of a PurgeDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IPurgeDocumentsResponse
                         * @property {number|Long|null} [purgeCount] PurgeDocumentsResponse purgeCount
                         * @property {Array.<string>|null} [purgeSample] PurgeDocumentsResponse purgeSample
                         */
    
                        /**
                         * Constructs a new PurgeDocumentsResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a PurgeDocumentsResponse.
                         * @implements IPurgeDocumentsResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsResponse=} [properties] Properties to set
                         */
                        function PurgeDocumentsResponse(properties) {
                            this.purgeSample = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeDocumentsResponse purgeCount.
                         * @member {number|Long} purgeCount
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @instance
                         */
                        PurgeDocumentsResponse.prototype.purgeCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * PurgeDocumentsResponse purgeSample.
                         * @member {Array.<string>} purgeSample
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @instance
                         */
                        PurgeDocumentsResponse.prototype.purgeSample = $util.emptyArray;
    
                        /**
                         * Creates a new PurgeDocumentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse} PurgeDocumentsResponse instance
                         */
                        PurgeDocumentsResponse.create = function create(properties) {
                            return new PurgeDocumentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsResponse} message PurgeDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.purgeCount != null && Object.hasOwnProperty.call(message, "purgeCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.purgeCount);
                            if (message.purgeSample != null && message.purgeSample.length)
                                for (var i = 0; i < message.purgeSample.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.purgeSample[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsResponse} message PurgeDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeDocumentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse} PurgeDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.purgeCount = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.purgeSample && message.purgeSample.length))
                                            message.purgeSample = [];
                                        message.purgeSample.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeDocumentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse} PurgeDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeDocumentsResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeDocumentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.purgeCount != null && message.hasOwnProperty("purgeCount"))
                                if (!$util.isInteger(message.purgeCount) && !(message.purgeCount && $util.isInteger(message.purgeCount.low) && $util.isInteger(message.purgeCount.high)))
                                    return "purgeCount: integer|Long expected";
                            if (message.purgeSample != null && message.hasOwnProperty("purgeSample")) {
                                if (!Array.isArray(message.purgeSample))
                                    return "purgeSample: array expected";
                                for (var i = 0; i < message.purgeSample.length; ++i)
                                    if (!$util.isString(message.purgeSample[i]))
                                        return "purgeSample: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PurgeDocumentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse} PurgeDocumentsResponse
                         */
                        PurgeDocumentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse();
                            if (object.purgeCount != null)
                                if ($util.Long)
                                    (message.purgeCount = $util.Long.fromValue(object.purgeCount)).unsigned = false;
                                else if (typeof object.purgeCount === "string")
                                    message.purgeCount = parseInt(object.purgeCount, 10);
                                else if (typeof object.purgeCount === "number")
                                    message.purgeCount = object.purgeCount;
                                else if (typeof object.purgeCount === "object")
                                    message.purgeCount = new $util.LongBits(object.purgeCount.low >>> 0, object.purgeCount.high >>> 0).toNumber();
                            if (object.purgeSample) {
                                if (!Array.isArray(object.purgeSample))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse.purgeSample: array expected");
                                message.purgeSample = [];
                                for (var i = 0; i < object.purgeSample.length; ++i)
                                    message.purgeSample[i] = String(object.purgeSample[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeDocumentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse} message PurgeDocumentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeDocumentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.purgeSample = [];
                            if (options.defaults)
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.purgeCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.purgeCount = options.longs === String ? "0" : 0;
                            if (message.purgeCount != null && message.hasOwnProperty("purgeCount"))
                                if (typeof message.purgeCount === "number")
                                    object.purgeCount = options.longs === String ? String(message.purgeCount) : message.purgeCount;
                                else
                                    object.purgeCount = options.longs === String ? $util.Long.prototype.toString.call(message.purgeCount) : options.longs === Number ? new $util.LongBits(message.purgeCount.low >>> 0, message.purgeCount.high >>> 0).toNumber() : message.purgeCount;
                            if (message.purgeSample && message.purgeSample.length) {
                                object.purgeSample = [];
                                for (var j = 0; j < message.purgeSample.length; ++j)
                                    object.purgeSample[j] = message.purgeSample[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PurgeDocumentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeDocumentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeDocumentsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeDocumentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.PurgeDocumentsResponse";
                        };
    
                        return PurgeDocumentsResponse;
                    })();
    
                    v1beta.PurgeDocumentsMetadata = (function() {
    
                        /**
                         * Properties of a PurgeDocumentsMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IPurgeDocumentsMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] PurgeDocumentsMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] PurgeDocumentsMetadata updateTime
                         * @property {number|Long|null} [successCount] PurgeDocumentsMetadata successCount
                         * @property {number|Long|null} [failureCount] PurgeDocumentsMetadata failureCount
                         */
    
                        /**
                         * Constructs a new PurgeDocumentsMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a PurgeDocumentsMetadata.
                         * @implements IPurgeDocumentsMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsMetadata=} [properties] Properties to set
                         */
                        function PurgeDocumentsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeDocumentsMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @instance
                         */
                        PurgeDocumentsMetadata.prototype.createTime = null;
    
                        /**
                         * PurgeDocumentsMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @instance
                         */
                        PurgeDocumentsMetadata.prototype.updateTime = null;
    
                        /**
                         * PurgeDocumentsMetadata successCount.
                         * @member {number|Long} successCount
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @instance
                         */
                        PurgeDocumentsMetadata.prototype.successCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * PurgeDocumentsMetadata failureCount.
                         * @member {number|Long} failureCount
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @instance
                         */
                        PurgeDocumentsMetadata.prototype.failureCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new PurgeDocumentsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata} PurgeDocumentsMetadata instance
                         */
                        PurgeDocumentsMetadata.create = function create(properties) {
                            return new PurgeDocumentsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsMetadata} message PurgeDocumentsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.successCount != null && Object.hasOwnProperty.call(message, "successCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.successCount);
                            if (message.failureCount != null && Object.hasOwnProperty.call(message, "failureCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.failureCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeDocumentsMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IPurgeDocumentsMetadata} message PurgeDocumentsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeDocumentsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeDocumentsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata} PurgeDocumentsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.successCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.failureCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeDocumentsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata} PurgeDocumentsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeDocumentsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeDocumentsMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeDocumentsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (!$util.isInteger(message.successCount) && !(message.successCount && $util.isInteger(message.successCount.low) && $util.isInteger(message.successCount.high)))
                                    return "successCount: integer|Long expected";
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (!$util.isInteger(message.failureCount) && !(message.failureCount && $util.isInteger(message.failureCount.low) && $util.isInteger(message.failureCount.high)))
                                    return "failureCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeDocumentsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata} PurgeDocumentsMetadata
                         */
                        PurgeDocumentsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.successCount != null)
                                if ($util.Long)
                                    (message.successCount = $util.Long.fromValue(object.successCount)).unsigned = false;
                                else if (typeof object.successCount === "string")
                                    message.successCount = parseInt(object.successCount, 10);
                                else if (typeof object.successCount === "number")
                                    message.successCount = object.successCount;
                                else if (typeof object.successCount === "object")
                                    message.successCount = new $util.LongBits(object.successCount.low >>> 0, object.successCount.high >>> 0).toNumber();
                            if (object.failureCount != null)
                                if ($util.Long)
                                    (message.failureCount = $util.Long.fromValue(object.failureCount)).unsigned = false;
                                else if (typeof object.failureCount === "string")
                                    message.failureCount = parseInt(object.failureCount, 10);
                                else if (typeof object.failureCount === "number")
                                    message.failureCount = object.failureCount;
                                else if (typeof object.failureCount === "object")
                                    message.failureCount = new $util.LongBits(object.failureCount.low >>> 0, object.failureCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeDocumentsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata} message PurgeDocumentsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeDocumentsMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.successCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.successCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.failureCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.failureCount = options.longs === String ? "0" : 0;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.successCount != null && message.hasOwnProperty("successCount"))
                                if (typeof message.successCount === "number")
                                    object.successCount = options.longs === String ? String(message.successCount) : message.successCount;
                                else
                                    object.successCount = options.longs === String ? $util.Long.prototype.toString.call(message.successCount) : options.longs === Number ? new $util.LongBits(message.successCount.low >>> 0, message.successCount.high >>> 0).toNumber() : message.successCount;
                            if (message.failureCount != null && message.hasOwnProperty("failureCount"))
                                if (typeof message.failureCount === "number")
                                    object.failureCount = options.longs === String ? String(message.failureCount) : message.failureCount;
                                else
                                    object.failureCount = options.longs === String ? $util.Long.prototype.toString.call(message.failureCount) : options.longs === Number ? new $util.LongBits(message.failureCount.low >>> 0, message.failureCount.high >>> 0).toNumber() : message.failureCount;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeDocumentsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeDocumentsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeDocumentsMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeDocumentsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.PurgeDocumentsMetadata";
                        };
    
                        return PurgeDocumentsMetadata;
                    })();
    
                    v1beta.RecommendationService = (function() {
    
                        /**
                         * Constructs a new RecommendationService service.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a RecommendationService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function RecommendationService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (RecommendationService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = RecommendationService;
    
                        /**
                         * Creates new RecommendationService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendationService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {RecommendationService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        RecommendationService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.RecommendationService|recommend}.
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendationService
                         * @typedef RecommendCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.RecommendResponse} [response] RecommendResponse
                         */
    
                        /**
                         * Calls Recommend.
                         * @function recommend
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendationService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendRequest} request RecommendRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.RecommendationService.RecommendCallback} callback Node-style callback called with the error, if any, and RecommendResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(RecommendationService.prototype.recommend = function recommend(request, callback) {
                            return this.rpcCall(recommend, $root.google.cloud.discoveryengine.v1beta.RecommendRequest, $root.google.cloud.discoveryengine.v1beta.RecommendResponse, request, callback);
                        }, "name", { value: "Recommend" });
    
                        /**
                         * Calls Recommend.
                         * @function recommend
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendationService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendRequest} request RecommendRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.RecommendResponse>} Promise
                         * @variation 2
                         */
    
                        return RecommendationService;
                    })();
    
                    v1beta.RecommendRequest = (function() {
    
                        /**
                         * Properties of a RecommendRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IRecommendRequest
                         * @property {string|null} [servingConfig] RecommendRequest servingConfig
                         * @property {google.cloud.discoveryengine.v1beta.IUserEvent|null} [userEvent] RecommendRequest userEvent
                         * @property {number|null} [pageSize] RecommendRequest pageSize
                         * @property {string|null} [filter] RecommendRequest filter
                         * @property {boolean|null} [validateOnly] RecommendRequest validateOnly
                         * @property {Object.<string,google.protobuf.IValue>|null} [params] RecommendRequest params
                         * @property {Object.<string,string>|null} [userLabels] RecommendRequest userLabels
                         */
    
                        /**
                         * Constructs a new RecommendRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a RecommendRequest.
                         * @implements IRecommendRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendRequest=} [properties] Properties to set
                         */
                        function RecommendRequest(properties) {
                            this.params = {};
                            this.userLabels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RecommendRequest servingConfig.
                         * @member {string} servingConfig
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @instance
                         */
                        RecommendRequest.prototype.servingConfig = "";
    
                        /**
                         * RecommendRequest userEvent.
                         * @member {google.cloud.discoveryengine.v1beta.IUserEvent|null|undefined} userEvent
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @instance
                         */
                        RecommendRequest.prototype.userEvent = null;
    
                        /**
                         * RecommendRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @instance
                         */
                        RecommendRequest.prototype.pageSize = 0;
    
                        /**
                         * RecommendRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @instance
                         */
                        RecommendRequest.prototype.filter = "";
    
                        /**
                         * RecommendRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @instance
                         */
                        RecommendRequest.prototype.validateOnly = false;
    
                        /**
                         * RecommendRequest params.
                         * @member {Object.<string,google.protobuf.IValue>} params
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @instance
                         */
                        RecommendRequest.prototype.params = $util.emptyObject;
    
                        /**
                         * RecommendRequest userLabels.
                         * @member {Object.<string,string>} userLabels
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @instance
                         */
                        RecommendRequest.prototype.userLabels = $util.emptyObject;
    
                        /**
                         * Creates a new RecommendRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.RecommendRequest} RecommendRequest instance
                         */
                        RecommendRequest.create = function create(properties) {
                            return new RecommendRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RecommendRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.RecommendRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendRequest} message RecommendRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecommendRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.servingConfig != null && Object.hasOwnProperty.call(message, "servingConfig"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.servingConfig);
                            if (message.userEvent != null && Object.hasOwnProperty.call(message, "userEvent"))
                                $root.google.cloud.discoveryengine.v1beta.UserEvent.encode(message.userEvent, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                                for (var keys = Object.keys(message.params), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.protobuf.Value.encode(message.params[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.userLabels != null && Object.hasOwnProperty.call(message, "userLabels"))
                                for (var keys = Object.keys(message.userLabels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.userLabels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RecommendRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.RecommendRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendRequest} message RecommendRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecommendRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RecommendRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.RecommendRequest} RecommendRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecommendRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.RecommendRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.servingConfig = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userEvent = $root.google.cloud.discoveryengine.v1beta.UserEvent.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        if (message.params === $util.emptyObject)
                                            message.params = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.protobuf.Value.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.params[key] = value;
                                        break;
                                    }
                                case 8: {
                                        if (message.userLabels === $util.emptyObject)
                                            message.userLabels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.userLabels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RecommendRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.RecommendRequest} RecommendRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecommendRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RecommendRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RecommendRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.servingConfig != null && message.hasOwnProperty("servingConfig"))
                                if (!$util.isString(message.servingConfig))
                                    return "servingConfig: string expected";
                            if (message.userEvent != null && message.hasOwnProperty("userEvent")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.UserEvent.verify(message.userEvent);
                                if (error)
                                    return "userEvent." + error;
                            }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.params != null && message.hasOwnProperty("params")) {
                                if (!$util.isObject(message.params))
                                    return "params: object expected";
                                var key = Object.keys(message.params);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.protobuf.Value.verify(message.params[key[i]]);
                                    if (error)
                                        return "params." + error;
                                }
                            }
                            if (message.userLabels != null && message.hasOwnProperty("userLabels")) {
                                if (!$util.isObject(message.userLabels))
                                    return "userLabels: object expected";
                                var key = Object.keys(message.userLabels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.userLabels[key[i]]))
                                        return "userLabels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RecommendRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.RecommendRequest} RecommendRequest
                         */
                        RecommendRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.RecommendRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.RecommendRequest();
                            if (object.servingConfig != null)
                                message.servingConfig = String(object.servingConfig);
                            if (object.userEvent != null) {
                                if (typeof object.userEvent !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendRequest.userEvent: object expected");
                                message.userEvent = $root.google.cloud.discoveryengine.v1beta.UserEvent.fromObject(object.userEvent);
                            }
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.params) {
                                if (typeof object.params !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendRequest.params: object expected");
                                message.params = {};
                                for (var keys = Object.keys(object.params), i = 0; i < keys.length; ++i) {
                                    if (typeof object.params[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendRequest.params: object expected");
                                    message.params[keys[i]] = $root.google.protobuf.Value.fromObject(object.params[keys[i]]);
                                }
                            }
                            if (object.userLabels) {
                                if (typeof object.userLabels !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendRequest.userLabels: object expected");
                                message.userLabels = {};
                                for (var keys = Object.keys(object.userLabels), i = 0; i < keys.length; ++i)
                                    message.userLabels[keys[i]] = String(object.userLabels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RecommendRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.RecommendRequest} message RecommendRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RecommendRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.params = {};
                                object.userLabels = {};
                            }
                            if (options.defaults) {
                                object.servingConfig = "";
                                object.userEvent = null;
                                object.pageSize = 0;
                                object.filter = "";
                                object.validateOnly = false;
                            }
                            if (message.servingConfig != null && message.hasOwnProperty("servingConfig"))
                                object.servingConfig = message.servingConfig;
                            if (message.userEvent != null && message.hasOwnProperty("userEvent"))
                                object.userEvent = $root.google.cloud.discoveryengine.v1beta.UserEvent.toObject(message.userEvent, options);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            var keys2;
                            if (message.params && (keys2 = Object.keys(message.params)).length) {
                                object.params = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.params[keys2[j]] = $root.google.protobuf.Value.toObject(message.params[keys2[j]], options);
                            }
                            if (message.userLabels && (keys2 = Object.keys(message.userLabels)).length) {
                                object.userLabels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.userLabels[keys2[j]] = message.userLabels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RecommendRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RecommendRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RecommendRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RecommendRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.RecommendRequest";
                        };
    
                        return RecommendRequest;
                    })();
    
                    v1beta.RecommendResponse = (function() {
    
                        /**
                         * Properties of a RecommendResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IRecommendResponse
                         * @property {Array.<google.cloud.discoveryengine.v1beta.RecommendResponse.IRecommendationResult>|null} [results] RecommendResponse results
                         * @property {string|null} [attributionToken] RecommendResponse attributionToken
                         * @property {Array.<string>|null} [missingIds] RecommendResponse missingIds
                         * @property {boolean|null} [validateOnly] RecommendResponse validateOnly
                         */
    
                        /**
                         * Constructs a new RecommendResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a RecommendResponse.
                         * @implements IRecommendResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendResponse=} [properties] Properties to set
                         */
                        function RecommendResponse(properties) {
                            this.results = [];
                            this.missingIds = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RecommendResponse results.
                         * @member {Array.<google.cloud.discoveryengine.v1beta.RecommendResponse.IRecommendationResult>} results
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @instance
                         */
                        RecommendResponse.prototype.results = $util.emptyArray;
    
                        /**
                         * RecommendResponse attributionToken.
                         * @member {string} attributionToken
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @instance
                         */
                        RecommendResponse.prototype.attributionToken = "";
    
                        /**
                         * RecommendResponse missingIds.
                         * @member {Array.<string>} missingIds
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @instance
                         */
                        RecommendResponse.prototype.missingIds = $util.emptyArray;
    
                        /**
                         * RecommendResponse validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @instance
                         */
                        RecommendResponse.prototype.validateOnly = false;
    
                        /**
                         * Creates a new RecommendResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.RecommendResponse} RecommendResponse instance
                         */
                        RecommendResponse.create = function create(properties) {
                            return new RecommendResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RecommendResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.RecommendResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendResponse} message RecommendResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecommendResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.results != null && message.results.length)
                                for (var i = 0; i < message.results.length; ++i)
                                    $root.google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.encode(message.results[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.attributionToken != null && Object.hasOwnProperty.call(message, "attributionToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.attributionToken);
                            if (message.missingIds != null && message.missingIds.length)
                                for (var i = 0; i < message.missingIds.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.missingIds[i]);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RecommendResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.RecommendResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IRecommendResponse} message RecommendResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RecommendResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RecommendResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.RecommendResponse} RecommendResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecommendResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.RecommendResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.results && message.results.length))
                                            message.results = [];
                                        message.results.push($root.google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.attributionToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.missingIds && message.missingIds.length))
                                            message.missingIds = [];
                                        message.missingIds.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RecommendResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.RecommendResponse} RecommendResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RecommendResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RecommendResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RecommendResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.results != null && message.hasOwnProperty("results")) {
                                if (!Array.isArray(message.results))
                                    return "results: array expected";
                                for (var i = 0; i < message.results.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.verify(message.results[i]);
                                    if (error)
                                        return "results." + error;
                                }
                            }
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                if (!$util.isString(message.attributionToken))
                                    return "attributionToken: string expected";
                            if (message.missingIds != null && message.hasOwnProperty("missingIds")) {
                                if (!Array.isArray(message.missingIds))
                                    return "missingIds: array expected";
                                for (var i = 0; i < message.missingIds.length; ++i)
                                    if (!$util.isString(message.missingIds[i]))
                                        return "missingIds: string[] expected";
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RecommendResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.RecommendResponse} RecommendResponse
                         */
                        RecommendResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.RecommendResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.RecommendResponse();
                            if (object.results) {
                                if (!Array.isArray(object.results))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendResponse.results: array expected");
                                message.results = [];
                                for (var i = 0; i < object.results.length; ++i) {
                                    if (typeof object.results[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendResponse.results: object expected");
                                    message.results[i] = $root.google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.fromObject(object.results[i]);
                                }
                            }
                            if (object.attributionToken != null)
                                message.attributionToken = String(object.attributionToken);
                            if (object.missingIds) {
                                if (!Array.isArray(object.missingIds))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendResponse.missingIds: array expected");
                                message.missingIds = [];
                                for (var i = 0; i < object.missingIds.length; ++i)
                                    message.missingIds[i] = String(object.missingIds[i]);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RecommendResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.RecommendResponse} message RecommendResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RecommendResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.results = [];
                                object.missingIds = [];
                            }
                            if (options.defaults) {
                                object.attributionToken = "";
                                object.validateOnly = false;
                            }
                            if (message.results && message.results.length) {
                                object.results = [];
                                for (var j = 0; j < message.results.length; ++j)
                                    object.results[j] = $root.google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.toObject(message.results[j], options);
                            }
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                object.attributionToken = message.attributionToken;
                            if (message.missingIds && message.missingIds.length) {
                                object.missingIds = [];
                                for (var j = 0; j < message.missingIds.length; ++j)
                                    object.missingIds[j] = message.missingIds[j];
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this RecommendResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RecommendResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RecommendResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RecommendResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.RecommendResponse";
                        };
    
                        RecommendResponse.RecommendationResult = (function() {
    
                            /**
                             * Properties of a RecommendationResult.
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                             * @interface IRecommendationResult
                             * @property {string|null} [id] RecommendationResult id
                             * @property {google.cloud.discoveryengine.v1beta.IDocument|null} [document] RecommendationResult document
                             * @property {Object.<string,google.protobuf.IValue>|null} [metadata] RecommendationResult metadata
                             */
    
                            /**
                             * Constructs a new RecommendationResult.
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse
                             * @classdesc Represents a RecommendationResult.
                             * @implements IRecommendationResult
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.RecommendResponse.IRecommendationResult=} [properties] Properties to set
                             */
                            function RecommendationResult(properties) {
                                this.metadata = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * RecommendationResult id.
                             * @member {string} id
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @instance
                             */
                            RecommendationResult.prototype.id = "";
    
                            /**
                             * RecommendationResult document.
                             * @member {google.cloud.discoveryengine.v1beta.IDocument|null|undefined} document
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @instance
                             */
                            RecommendationResult.prototype.document = null;
    
                            /**
                             * RecommendationResult metadata.
                             * @member {Object.<string,google.protobuf.IValue>} metadata
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @instance
                             */
                            RecommendationResult.prototype.metadata = $util.emptyObject;
    
                            /**
                             * Creates a new RecommendationResult instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.RecommendResponse.IRecommendationResult=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult} RecommendationResult instance
                             */
                            RecommendationResult.create = function create(properties) {
                                return new RecommendationResult(properties);
                            };
    
                            /**
                             * Encodes the specified RecommendationResult message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.RecommendResponse.IRecommendationResult} message RecommendationResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RecommendationResult.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                                if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                    $root.google.cloud.discoveryengine.v1beta.Document.encode(message.document, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                    for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i) {
                                        writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                        $root.google.protobuf.Value.encode(message.metadata[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                    }
                                return writer;
                            };
    
                            /**
                             * Encodes the specified RecommendationResult message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.RecommendResponse.IRecommendationResult} message RecommendationResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RecommendationResult.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a RecommendationResult message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult} RecommendationResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RecommendationResult.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.id = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.document = $root.google.cloud.discoveryengine.v1beta.Document.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            if (message.metadata === $util.emptyObject)
                                                message.metadata = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = null;
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = $root.google.protobuf.Value.decode(reader, reader.uint32());
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.metadata[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a RecommendationResult message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult} RecommendationResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RecommendationResult.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a RecommendationResult message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            RecommendationResult.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.id != null && message.hasOwnProperty("id"))
                                    if (!$util.isString(message.id))
                                        return "id: string expected";
                                if (message.document != null && message.hasOwnProperty("document")) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.Document.verify(message.document);
                                    if (error)
                                        return "document." + error;
                                }
                                if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                    if (!$util.isObject(message.metadata))
                                        return "metadata: object expected";
                                    var key = Object.keys(message.metadata);
                                    for (var i = 0; i < key.length; ++i) {
                                        var error = $root.google.protobuf.Value.verify(message.metadata[key[i]]);
                                        if (error)
                                            return "metadata." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a RecommendationResult message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult} RecommendationResult
                             */
                            RecommendationResult.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult();
                                if (object.id != null)
                                    message.id = String(object.id);
                                if (object.document != null) {
                                    if (typeof object.document !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.document: object expected");
                                    message.document = $root.google.cloud.discoveryengine.v1beta.Document.fromObject(object.document);
                                }
                                if (object.metadata) {
                                    if (typeof object.metadata !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.metadata: object expected");
                                    message.metadata = {};
                                    for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i) {
                                        if (typeof object.metadata[keys[i]] !== "object")
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult.metadata: object expected");
                                        message.metadata[keys[i]] = $root.google.protobuf.Value.fromObject(object.metadata[keys[i]]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a RecommendationResult message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult} message RecommendationResult
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            RecommendationResult.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.objects || options.defaults)
                                    object.metadata = {};
                                if (options.defaults) {
                                    object.id = "";
                                    object.document = null;
                                }
                                if (message.id != null && message.hasOwnProperty("id"))
                                    object.id = message.id;
                                if (message.document != null && message.hasOwnProperty("document"))
                                    object.document = $root.google.cloud.discoveryengine.v1beta.Document.toObject(message.document, options);
                                var keys2;
                                if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                    object.metadata = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.metadata[keys2[j]] = $root.google.protobuf.Value.toObject(message.metadata[keys2[j]], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this RecommendationResult to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            RecommendationResult.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for RecommendationResult
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            RecommendationResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.RecommendResponse.RecommendationResult";
                            };
    
                            return RecommendationResult;
                        })();
    
                        return RecommendResponse;
                    })();
    
                    v1beta.Schema = (function() {
    
                        /**
                         * Properties of a Schema.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ISchema
                         * @property {google.protobuf.IStruct|null} [structSchema] Schema structSchema
                         * @property {string|null} [jsonSchema] Schema jsonSchema
                         * @property {string|null} [name] Schema name
                         */
    
                        /**
                         * Constructs a new Schema.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a Schema.
                         * @implements ISchema
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ISchema=} [properties] Properties to set
                         */
                        function Schema(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Schema structSchema.
                         * @member {google.protobuf.IStruct|null|undefined} structSchema
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @instance
                         */
                        Schema.prototype.structSchema = null;
    
                        /**
                         * Schema jsonSchema.
                         * @member {string|null|undefined} jsonSchema
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @instance
                         */
                        Schema.prototype.jsonSchema = null;
    
                        /**
                         * Schema name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @instance
                         */
                        Schema.prototype.name = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Schema schema.
                         * @member {"structSchema"|"jsonSchema"|undefined} schema
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @instance
                         */
                        Object.defineProperty(Schema.prototype, "schema", {
                            get: $util.oneOfGetter($oneOfFields = ["structSchema", "jsonSchema"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Schema instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISchema=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.Schema} Schema instance
                         */
                        Schema.create = function create(properties) {
                            return new Schema(properties);
                        };
    
                        /**
                         * Encodes the specified Schema message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.Schema.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISchema} message Schema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Schema.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.structSchema != null && Object.hasOwnProperty.call(message, "structSchema"))
                                $root.google.protobuf.Struct.encode(message.structSchema, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.jsonSchema != null && Object.hasOwnProperty.call(message, "jsonSchema"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.jsonSchema);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Schema message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.Schema.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISchema} message Schema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Schema.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Schema message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.Schema} Schema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Schema.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.Schema();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.structSchema = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.jsonSchema = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Schema message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.Schema} Schema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Schema.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Schema message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Schema.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.structSchema != null && message.hasOwnProperty("structSchema")) {
                                properties.schema = 1;
                                {
                                    var error = $root.google.protobuf.Struct.verify(message.structSchema);
                                    if (error)
                                        return "structSchema." + error;
                                }
                            }
                            if (message.jsonSchema != null && message.hasOwnProperty("jsonSchema")) {
                                if (properties.schema === 1)
                                    return "schema: multiple values";
                                properties.schema = 1;
                                if (!$util.isString(message.jsonSchema))
                                    return "jsonSchema: string expected";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Schema message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.Schema} Schema
                         */
                        Schema.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.Schema)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.Schema();
                            if (object.structSchema != null) {
                                if (typeof object.structSchema !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.Schema.structSchema: object expected");
                                message.structSchema = $root.google.protobuf.Struct.fromObject(object.structSchema);
                            }
                            if (object.jsonSchema != null)
                                message.jsonSchema = String(object.jsonSchema);
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Schema message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.Schema} message Schema
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Schema.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.structSchema != null && message.hasOwnProperty("structSchema")) {
                                object.structSchema = $root.google.protobuf.Struct.toObject(message.structSchema, options);
                                if (options.oneofs)
                                    object.schema = "structSchema";
                            }
                            if (message.jsonSchema != null && message.hasOwnProperty("jsonSchema")) {
                                object.jsonSchema = message.jsonSchema;
                                if (options.oneofs)
                                    object.schema = "jsonSchema";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Schema to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Schema.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Schema
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.Schema
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Schema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.Schema";
                        };
    
                        return Schema;
                    })();
    
                    v1beta.SchemaService = (function() {
    
                        /**
                         * Constructs a new SchemaService service.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a SchemaService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SchemaService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SchemaService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SchemaService;
    
                        /**
                         * Creates new SchemaService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SchemaService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SchemaService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.SchemaService|getSchema}.
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @typedef GetSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.Schema} [response] Schema
                         */
    
                        /**
                         * Calls GetSchema.
                         * @function getSchema
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IGetSchemaRequest} request GetSchemaRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.SchemaService.GetSchemaCallback} callback Node-style callback called with the error, if any, and Schema
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.getSchema = function getSchema(request, callback) {
                            return this.rpcCall(getSchema, $root.google.cloud.discoveryengine.v1beta.GetSchemaRequest, $root.google.cloud.discoveryengine.v1beta.Schema, request, callback);
                        }, "name", { value: "GetSchema" });
    
                        /**
                         * Calls GetSchema.
                         * @function getSchema
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IGetSchemaRequest} request GetSchemaRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.Schema>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.SchemaService|listSchemas}.
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @typedef ListSchemasCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.ListSchemasResponse} [response] ListSchemasResponse
                         */
    
                        /**
                         * Calls ListSchemas.
                         * @function listSchemas
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasRequest} request ListSchemasRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.SchemaService.ListSchemasCallback} callback Node-style callback called with the error, if any, and ListSchemasResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.listSchemas = function listSchemas(request, callback) {
                            return this.rpcCall(listSchemas, $root.google.cloud.discoveryengine.v1beta.ListSchemasRequest, $root.google.cloud.discoveryengine.v1beta.ListSchemasResponse, request, callback);
                        }, "name", { value: "ListSchemas" });
    
                        /**
                         * Calls ListSchemas.
                         * @function listSchemas
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasRequest} request ListSchemasRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.ListSchemasResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.SchemaService|createSchema}.
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @typedef CreateSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateSchema.
                         * @function createSchema
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaRequest} request CreateSchemaRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.SchemaService.CreateSchemaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.createSchema = function createSchema(request, callback) {
                            return this.rpcCall(createSchema, $root.google.cloud.discoveryengine.v1beta.CreateSchemaRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateSchema" });
    
                        /**
                         * Calls CreateSchema.
                         * @function createSchema
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaRequest} request CreateSchemaRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.SchemaService|updateSchema}.
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @typedef UpdateSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateSchema.
                         * @function updateSchema
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaRequest} request UpdateSchemaRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.SchemaService.UpdateSchemaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.updateSchema = function updateSchema(request, callback) {
                            return this.rpcCall(updateSchema, $root.google.cloud.discoveryengine.v1beta.UpdateSchemaRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateSchema" });
    
                        /**
                         * Calls UpdateSchema.
                         * @function updateSchema
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaRequest} request UpdateSchemaRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.SchemaService|deleteSchema}.
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @typedef DeleteSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteSchema.
                         * @function deleteSchema
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaRequest} request DeleteSchemaRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.SchemaService.DeleteSchemaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SchemaService.prototype.deleteSchema = function deleteSchema(request, callback) {
                            return this.rpcCall(deleteSchema, $root.google.cloud.discoveryengine.v1beta.DeleteSchemaRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteSchema" });
    
                        /**
                         * Calls DeleteSchema.
                         * @function deleteSchema
                         * @memberof google.cloud.discoveryengine.v1beta.SchemaService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaRequest} request DeleteSchemaRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return SchemaService;
                    })();
    
                    v1beta.GetSchemaRequest = (function() {
    
                        /**
                         * Properties of a GetSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IGetSchemaRequest
                         * @property {string|null} [name] GetSchemaRequest name
                         */
    
                        /**
                         * Constructs a new GetSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a GetSchemaRequest.
                         * @implements IGetSchemaRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IGetSchemaRequest=} [properties] Properties to set
                         */
                        function GetSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetSchemaRequest name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @instance
                         */
                        GetSchemaRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IGetSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.GetSchemaRequest} GetSchemaRequest instance
                         */
                        GetSchemaRequest.create = function create(properties) {
                            return new GetSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetSchemaRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.GetSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IGetSchemaRequest} message GetSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.GetSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IGetSchemaRequest} message GetSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.GetSchemaRequest} GetSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.GetSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.GetSchemaRequest} GetSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.GetSchemaRequest} GetSchemaRequest
                         */
                        GetSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.GetSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.GetSchemaRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.GetSchemaRequest} message GetSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.GetSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.GetSchemaRequest";
                        };
    
                        return GetSchemaRequest;
                    })();
    
                    v1beta.ListSchemasRequest = (function() {
    
                        /**
                         * Properties of a ListSchemasRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IListSchemasRequest
                         * @property {string|null} [parent] ListSchemasRequest parent
                         * @property {number|null} [pageSize] ListSchemasRequest pageSize
                         * @property {string|null} [pageToken] ListSchemasRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListSchemasRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a ListSchemasRequest.
                         * @implements IListSchemasRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasRequest=} [properties] Properties to set
                         */
                        function ListSchemasRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSchemasRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @instance
                         */
                        ListSchemasRequest.prototype.parent = "";
    
                        /**
                         * ListSchemasRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @instance
                         */
                        ListSchemasRequest.prototype.pageSize = 0;
    
                        /**
                         * ListSchemasRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @instance
                         */
                        ListSchemasRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListSchemasRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ListSchemasRequest} ListSchemasRequest instance
                         */
                        ListSchemasRequest.create = function create(properties) {
                            return new ListSchemasRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListSchemasRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ListSchemasRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasRequest} message ListSchemasRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchemasRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSchemasRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ListSchemasRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasRequest} message ListSchemasRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchemasRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSchemasRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ListSchemasRequest} ListSchemasRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchemasRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ListSchemasRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSchemasRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ListSchemasRequest} ListSchemasRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchemasRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSchemasRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSchemasRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSchemasRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ListSchemasRequest} ListSchemasRequest
                         */
                        ListSchemasRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ListSchemasRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ListSchemasRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSchemasRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ListSchemasRequest} message ListSchemasRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSchemasRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSchemasRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSchemasRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSchemasRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSchemasRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ListSchemasRequest";
                        };
    
                        return ListSchemasRequest;
                    })();
    
                    v1beta.ListSchemasResponse = (function() {
    
                        /**
                         * Properties of a ListSchemasResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IListSchemasResponse
                         * @property {Array.<google.cloud.discoveryengine.v1beta.ISchema>|null} [schemas] ListSchemasResponse schemas
                         * @property {string|null} [nextPageToken] ListSchemasResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListSchemasResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a ListSchemasResponse.
                         * @implements IListSchemasResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasResponse=} [properties] Properties to set
                         */
                        function ListSchemasResponse(properties) {
                            this.schemas = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSchemasResponse schemas.
                         * @member {Array.<google.cloud.discoveryengine.v1beta.ISchema>} schemas
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @instance
                         */
                        ListSchemasResponse.prototype.schemas = $util.emptyArray;
    
                        /**
                         * ListSchemasResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @instance
                         */
                        ListSchemasResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListSchemasResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.ListSchemasResponse} ListSchemasResponse instance
                         */
                        ListSchemasResponse.create = function create(properties) {
                            return new ListSchemasResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListSchemasResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ListSchemasResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasResponse} message ListSchemasResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchemasResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schemas != null && message.schemas.length)
                                for (var i = 0; i < message.schemas.length; ++i)
                                    $root.google.cloud.discoveryengine.v1beta.Schema.encode(message.schemas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSchemasResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.ListSchemasResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IListSchemasResponse} message ListSchemasResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchemasResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSchemasResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.ListSchemasResponse} ListSchemasResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchemasResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.ListSchemasResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.schemas && message.schemas.length))
                                            message.schemas = [];
                                        message.schemas.push($root.google.cloud.discoveryengine.v1beta.Schema.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSchemasResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.ListSchemasResponse} ListSchemasResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchemasResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSchemasResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSchemasResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schemas != null && message.hasOwnProperty("schemas")) {
                                if (!Array.isArray(message.schemas))
                                    return "schemas: array expected";
                                for (var i = 0; i < message.schemas.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.Schema.verify(message.schemas[i]);
                                    if (error)
                                        return "schemas." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSchemasResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.ListSchemasResponse} ListSchemasResponse
                         */
                        ListSchemasResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.ListSchemasResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.ListSchemasResponse();
                            if (object.schemas) {
                                if (!Array.isArray(object.schemas))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.ListSchemasResponse.schemas: array expected");
                                message.schemas = [];
                                for (var i = 0; i < object.schemas.length; ++i) {
                                    if (typeof object.schemas[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.ListSchemasResponse.schemas: object expected");
                                    message.schemas[i] = $root.google.cloud.discoveryengine.v1beta.Schema.fromObject(object.schemas[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSchemasResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ListSchemasResponse} message ListSchemasResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSchemasResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.schemas = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.schemas && message.schemas.length) {
                                object.schemas = [];
                                for (var j = 0; j < message.schemas.length; ++j)
                                    object.schemas[j] = $root.google.cloud.discoveryengine.v1beta.Schema.toObject(message.schemas[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSchemasResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSchemasResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSchemasResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.ListSchemasResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSchemasResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.ListSchemasResponse";
                        };
    
                        return ListSchemasResponse;
                    })();
    
                    v1beta.CreateSchemaRequest = (function() {
    
                        /**
                         * Properties of a CreateSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ICreateSchemaRequest
                         * @property {string|null} [parent] CreateSchemaRequest parent
                         * @property {google.cloud.discoveryengine.v1beta.ISchema|null} [schema] CreateSchemaRequest schema
                         * @property {string|null} [schemaId] CreateSchemaRequest schemaId
                         */
    
                        /**
                         * Constructs a new CreateSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a CreateSchemaRequest.
                         * @implements ICreateSchemaRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaRequest=} [properties] Properties to set
                         */
                        function CreateSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateSchemaRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @instance
                         */
                        CreateSchemaRequest.prototype.parent = "";
    
                        /**
                         * CreateSchemaRequest schema.
                         * @member {google.cloud.discoveryengine.v1beta.ISchema|null|undefined} schema
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @instance
                         */
                        CreateSchemaRequest.prototype.schema = null;
    
                        /**
                         * CreateSchemaRequest schemaId.
                         * @member {string} schemaId
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @instance
                         */
                        CreateSchemaRequest.prototype.schemaId = "";
    
                        /**
                         * Creates a new CreateSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.CreateSchemaRequest} CreateSchemaRequest instance
                         */
                        CreateSchemaRequest.create = function create(properties) {
                            return new CreateSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateSchemaRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CreateSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaRequest} message CreateSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                $root.google.cloud.discoveryengine.v1beta.Schema.encode(message.schema, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.schemaId != null && Object.hasOwnProperty.call(message, "schemaId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.schemaId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CreateSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaRequest} message CreateSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.CreateSchemaRequest} CreateSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.CreateSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.schema = $root.google.cloud.discoveryengine.v1beta.Schema.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.schemaId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.CreateSchemaRequest} CreateSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.schema != null && message.hasOwnProperty("schema")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.Schema.verify(message.schema);
                                if (error)
                                    return "schema." + error;
                            }
                            if (message.schemaId != null && message.hasOwnProperty("schemaId"))
                                if (!$util.isString(message.schemaId))
                                    return "schemaId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.CreateSchemaRequest} CreateSchemaRequest
                         */
                        CreateSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.CreateSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.CreateSchemaRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.schema != null) {
                                if (typeof object.schema !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.CreateSchemaRequest.schema: object expected");
                                message.schema = $root.google.cloud.discoveryengine.v1beta.Schema.fromObject(object.schema);
                            }
                            if (object.schemaId != null)
                                message.schemaId = String(object.schemaId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.CreateSchemaRequest} message CreateSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.schema = null;
                                object.schemaId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.schema != null && message.hasOwnProperty("schema"))
                                object.schema = $root.google.cloud.discoveryengine.v1beta.Schema.toObject(message.schema, options);
                            if (message.schemaId != null && message.hasOwnProperty("schemaId"))
                                object.schemaId = message.schemaId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.CreateSchemaRequest";
                        };
    
                        return CreateSchemaRequest;
                    })();
    
                    v1beta.UpdateSchemaRequest = (function() {
    
                        /**
                         * Properties of an UpdateSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IUpdateSchemaRequest
                         * @property {google.cloud.discoveryengine.v1beta.ISchema|null} [schema] UpdateSchemaRequest schema
                         * @property {boolean|null} [allowMissing] UpdateSchemaRequest allowMissing
                         */
    
                        /**
                         * Constructs a new UpdateSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an UpdateSchemaRequest.
                         * @implements IUpdateSchemaRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaRequest=} [properties] Properties to set
                         */
                        function UpdateSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateSchemaRequest schema.
                         * @member {google.cloud.discoveryengine.v1beta.ISchema|null|undefined} schema
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @instance
                         */
                        UpdateSchemaRequest.prototype.schema = null;
    
                        /**
                         * UpdateSchemaRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @instance
                         */
                        UpdateSchemaRequest.prototype.allowMissing = false;
    
                        /**
                         * Creates a new UpdateSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateSchemaRequest} UpdateSchemaRequest instance
                         */
                        UpdateSchemaRequest.create = function create(properties) {
                            return new UpdateSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateSchemaRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UpdateSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaRequest} message UpdateSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                                $root.google.cloud.discoveryengine.v1beta.Schema.encode(message.schema, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.allowMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UpdateSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaRequest} message UpdateSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateSchemaRequest} UpdateSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.UpdateSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.schema = $root.google.cloud.discoveryengine.v1beta.Schema.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateSchemaRequest} UpdateSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schema != null && message.hasOwnProperty("schema")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.Schema.verify(message.schema);
                                if (error)
                                    return "schema." + error;
                            }
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateSchemaRequest} UpdateSchemaRequest
                         */
                        UpdateSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.UpdateSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.UpdateSchemaRequest();
                            if (object.schema != null) {
                                if (typeof object.schema !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UpdateSchemaRequest.schema: object expected");
                                message.schema = $root.google.cloud.discoveryengine.v1beta.Schema.fromObject(object.schema);
                            }
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.UpdateSchemaRequest} message UpdateSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.schema = null;
                                object.allowMissing = false;
                            }
                            if (message.schema != null && message.hasOwnProperty("schema"))
                                object.schema = $root.google.cloud.discoveryengine.v1beta.Schema.toObject(message.schema, options);
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.UpdateSchemaRequest";
                        };
    
                        return UpdateSchemaRequest;
                    })();
    
                    v1beta.DeleteSchemaRequest = (function() {
    
                        /**
                         * Properties of a DeleteSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IDeleteSchemaRequest
                         * @property {string|null} [name] DeleteSchemaRequest name
                         */
    
                        /**
                         * Constructs a new DeleteSchemaRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a DeleteSchemaRequest.
                         * @implements IDeleteSchemaRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaRequest=} [properties] Properties to set
                         */
                        function DeleteSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteSchemaRequest name.
                         * @member {string} name
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @instance
                         */
                        DeleteSchemaRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteSchemaRequest} DeleteSchemaRequest instance
                         */
                        DeleteSchemaRequest.create = function create(properties) {
                            return new DeleteSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteSchemaRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.DeleteSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaRequest} message DeleteSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.DeleteSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaRequest} message DeleteSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteSchemaRequest} DeleteSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.DeleteSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteSchemaRequest} DeleteSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteSchemaRequest} DeleteSchemaRequest
                         */
                        DeleteSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.DeleteSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.DeleteSchemaRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.DeleteSchemaRequest} message DeleteSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.DeleteSchemaRequest";
                        };
    
                        return DeleteSchemaRequest;
                    })();
    
                    v1beta.CreateSchemaMetadata = (function() {
    
                        /**
                         * Properties of a CreateSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ICreateSchemaMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] CreateSchemaMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] CreateSchemaMetadata updateTime
                         */
    
                        /**
                         * Constructs a new CreateSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a CreateSchemaMetadata.
                         * @implements ICreateSchemaMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaMetadata=} [properties] Properties to set
                         */
                        function CreateSchemaMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateSchemaMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @instance
                         */
                        CreateSchemaMetadata.prototype.createTime = null;
    
                        /**
                         * CreateSchemaMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @instance
                         */
                        CreateSchemaMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new CreateSchemaMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.CreateSchemaMetadata} CreateSchemaMetadata instance
                         */
                        CreateSchemaMetadata.create = function create(properties) {
                            return new CreateSchemaMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified CreateSchemaMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CreateSchemaMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaMetadata} message CreateSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSchemaMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateSchemaMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CreateSchemaMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICreateSchemaMetadata} message CreateSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSchemaMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateSchemaMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.CreateSchemaMetadata} CreateSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSchemaMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.CreateSchemaMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateSchemaMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.CreateSchemaMetadata} CreateSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSchemaMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateSchemaMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateSchemaMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateSchemaMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.CreateSchemaMetadata} CreateSchemaMetadata
                         */
                        CreateSchemaMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.CreateSchemaMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.CreateSchemaMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.CreateSchemaMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.CreateSchemaMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateSchemaMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.CreateSchemaMetadata} message CreateSchemaMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateSchemaMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateSchemaMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateSchemaMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateSchemaMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.CreateSchemaMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateSchemaMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.CreateSchemaMetadata";
                        };
    
                        return CreateSchemaMetadata;
                    })();
    
                    v1beta.UpdateSchemaMetadata = (function() {
    
                        /**
                         * Properties of an UpdateSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IUpdateSchemaMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] UpdateSchemaMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] UpdateSchemaMetadata updateTime
                         */
    
                        /**
                         * Constructs a new UpdateSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents an UpdateSchemaMetadata.
                         * @implements IUpdateSchemaMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaMetadata=} [properties] Properties to set
                         */
                        function UpdateSchemaMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateSchemaMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @instance
                         */
                        UpdateSchemaMetadata.prototype.createTime = null;
    
                        /**
                         * UpdateSchemaMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @instance
                         */
                        UpdateSchemaMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new UpdateSchemaMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata} UpdateSchemaMetadata instance
                         */
                        UpdateSchemaMetadata.create = function create(properties) {
                            return new UpdateSchemaMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateSchemaMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaMetadata} message UpdateSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSchemaMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateSchemaMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IUpdateSchemaMetadata} message UpdateSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSchemaMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateSchemaMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata} UpdateSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSchemaMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateSchemaMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata} UpdateSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSchemaMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateSchemaMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateSchemaMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateSchemaMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata} UpdateSchemaMetadata
                         */
                        UpdateSchemaMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateSchemaMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata} message UpdateSchemaMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateSchemaMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateSchemaMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateSchemaMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateSchemaMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateSchemaMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.UpdateSchemaMetadata";
                        };
    
                        return UpdateSchemaMetadata;
                    })();
    
                    v1beta.DeleteSchemaMetadata = (function() {
    
                        /**
                         * Properties of a DeleteSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IDeleteSchemaMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] DeleteSchemaMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] DeleteSchemaMetadata updateTime
                         */
    
                        /**
                         * Constructs a new DeleteSchemaMetadata.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a DeleteSchemaMetadata.
                         * @implements IDeleteSchemaMetadata
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaMetadata=} [properties] Properties to set
                         */
                        function DeleteSchemaMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteSchemaMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @instance
                         */
                        DeleteSchemaMetadata.prototype.createTime = null;
    
                        /**
                         * DeleteSchemaMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @instance
                         */
                        DeleteSchemaMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new DeleteSchemaMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaMetadata=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata} DeleteSchemaMetadata instance
                         */
                        DeleteSchemaMetadata.create = function create(properties) {
                            return new DeleteSchemaMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteSchemaMetadata message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaMetadata} message DeleteSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSchemaMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteSchemaMetadata message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IDeleteSchemaMetadata} message DeleteSchemaMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSchemaMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteSchemaMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata} DeleteSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSchemaMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteSchemaMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata} DeleteSchemaMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSchemaMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteSchemaMetadata message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteSchemaMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeleteSchemaMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata} DeleteSchemaMetadata
                         */
                        DeleteSchemaMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteSchemaMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata} message DeleteSchemaMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteSchemaMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeleteSchemaMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteSchemaMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteSchemaMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteSchemaMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.DeleteSchemaMetadata";
                        };
    
                        return DeleteSchemaMetadata;
                    })();
    
                    v1beta.SearchService = (function() {
    
                        /**
                         * Constructs a new SearchService service.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a SearchService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SearchService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SearchService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SearchService;
    
                        /**
                         * Creates new SearchService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.SearchService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SearchService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SearchService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.SearchService|search}.
                         * @memberof google.cloud.discoveryengine.v1beta.SearchService
                         * @typedef SearchCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.SearchResponse} [response] SearchResponse
                         */
    
                        /**
                         * Calls Search.
                         * @function search
                         * @memberof google.cloud.discoveryengine.v1beta.SearchService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ISearchRequest} request SearchRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.SearchService.SearchCallback} callback Node-style callback called with the error, if any, and SearchResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SearchService.prototype.search = function search(request, callback) {
                            return this.rpcCall(search, $root.google.cloud.discoveryengine.v1beta.SearchRequest, $root.google.cloud.discoveryengine.v1beta.SearchResponse, request, callback);
                        }, "name", { value: "Search" });
    
                        /**
                         * Calls Search.
                         * @function search
                         * @memberof google.cloud.discoveryengine.v1beta.SearchService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ISearchRequest} request SearchRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.SearchResponse>} Promise
                         * @variation 2
                         */
    
                        return SearchService;
                    })();
    
                    v1beta.SearchRequest = (function() {
    
                        /**
                         * Properties of a SearchRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ISearchRequest
                         * @property {string|null} [servingConfig] SearchRequest servingConfig
                         * @property {string|null} [branch] SearchRequest branch
                         * @property {string|null} [query] SearchRequest query
                         * @property {number|null} [pageSize] SearchRequest pageSize
                         * @property {string|null} [pageToken] SearchRequest pageToken
                         * @property {number|null} [offset] SearchRequest offset
                         * @property {string|null} [filter] SearchRequest filter
                         * @property {string|null} [orderBy] SearchRequest orderBy
                         * @property {google.cloud.discoveryengine.v1beta.IUserInfo|null} [userInfo] SearchRequest userInfo
                         * @property {Array.<google.cloud.discoveryengine.v1beta.SearchRequest.IFacetSpec>|null} [facetSpecs] SearchRequest facetSpecs
                         * @property {google.cloud.discoveryengine.v1beta.SearchRequest.IBoostSpec|null} [boostSpec] SearchRequest boostSpec
                         * @property {Object.<string,google.protobuf.IValue>|null} [params] SearchRequest params
                         * @property {google.cloud.discoveryengine.v1beta.SearchRequest.IQueryExpansionSpec|null} [queryExpansionSpec] SearchRequest queryExpansionSpec
                         * @property {google.cloud.discoveryengine.v1beta.SearchRequest.ISpellCorrectionSpec|null} [spellCorrectionSpec] SearchRequest spellCorrectionSpec
                         * @property {string|null} [userPseudoId] SearchRequest userPseudoId
                         * @property {google.cloud.discoveryengine.v1beta.SearchRequest.IContentSearchSpec|null} [contentSearchSpec] SearchRequest contentSearchSpec
                         * @property {boolean|null} [safeSearch] SearchRequest safeSearch
                         * @property {Object.<string,string>|null} [userLabels] SearchRequest userLabels
                         */
    
                        /**
                         * Constructs a new SearchRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a SearchRequest.
                         * @implements ISearchRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ISearchRequest=} [properties] Properties to set
                         */
                        function SearchRequest(properties) {
                            this.facetSpecs = [];
                            this.params = {};
                            this.userLabels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchRequest servingConfig.
                         * @member {string} servingConfig
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.servingConfig = "";
    
                        /**
                         * SearchRequest branch.
                         * @member {string} branch
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.branch = "";
    
                        /**
                         * SearchRequest query.
                         * @member {string} query
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.query = "";
    
                        /**
                         * SearchRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.pageSize = 0;
    
                        /**
                         * SearchRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.pageToken = "";
    
                        /**
                         * SearchRequest offset.
                         * @member {number} offset
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.offset = 0;
    
                        /**
                         * SearchRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.filter = "";
    
                        /**
                         * SearchRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.orderBy = "";
    
                        /**
                         * SearchRequest userInfo.
                         * @member {google.cloud.discoveryengine.v1beta.IUserInfo|null|undefined} userInfo
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.userInfo = null;
    
                        /**
                         * SearchRequest facetSpecs.
                         * @member {Array.<google.cloud.discoveryengine.v1beta.SearchRequest.IFacetSpec>} facetSpecs
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.facetSpecs = $util.emptyArray;
    
                        /**
                         * SearchRequest boostSpec.
                         * @member {google.cloud.discoveryengine.v1beta.SearchRequest.IBoostSpec|null|undefined} boostSpec
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.boostSpec = null;
    
                        /**
                         * SearchRequest params.
                         * @member {Object.<string,google.protobuf.IValue>} params
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.params = $util.emptyObject;
    
                        /**
                         * SearchRequest queryExpansionSpec.
                         * @member {google.cloud.discoveryengine.v1beta.SearchRequest.IQueryExpansionSpec|null|undefined} queryExpansionSpec
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.queryExpansionSpec = null;
    
                        /**
                         * SearchRequest spellCorrectionSpec.
                         * @member {google.cloud.discoveryengine.v1beta.SearchRequest.ISpellCorrectionSpec|null|undefined} spellCorrectionSpec
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.spellCorrectionSpec = null;
    
                        /**
                         * SearchRequest userPseudoId.
                         * @member {string} userPseudoId
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.userPseudoId = "";
    
                        /**
                         * SearchRequest contentSearchSpec.
                         * @member {google.cloud.discoveryengine.v1beta.SearchRequest.IContentSearchSpec|null|undefined} contentSearchSpec
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.contentSearchSpec = null;
    
                        /**
                         * SearchRequest safeSearch.
                         * @member {boolean} safeSearch
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.safeSearch = false;
    
                        /**
                         * SearchRequest userLabels.
                         * @member {Object.<string,string>} userLabels
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         */
                        SearchRequest.prototype.userLabels = $util.emptyObject;
    
                        /**
                         * Creates a new SearchRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISearchRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.SearchRequest} SearchRequest instance
                         */
                        SearchRequest.create = function create(properties) {
                            return new SearchRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISearchRequest} message SearchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.servingConfig != null && Object.hasOwnProperty.call(message, "servingConfig"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.servingConfig);
                            if (message.branch != null && Object.hasOwnProperty.call(message, "branch"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.branch);
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.query);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pageToken);
                            if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.offset);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.orderBy);
                            if (message.facetSpecs != null && message.facetSpecs.length)
                                for (var i = 0; i < message.facetSpecs.length; ++i)
                                    $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.encode(message.facetSpecs[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.boostSpec != null && Object.hasOwnProperty.call(message, "boostSpec"))
                                $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.encode(message.boostSpec, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                                for (var keys = Object.keys(message.params), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 11, wireType 2 =*/90).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.protobuf.Value.encode(message.params[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.queryExpansionSpec != null && Object.hasOwnProperty.call(message, "queryExpansionSpec"))
                                $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.encode(message.queryExpansionSpec, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.spellCorrectionSpec != null && Object.hasOwnProperty.call(message, "spellCorrectionSpec"))
                                $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.encode(message.spellCorrectionSpec, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.userPseudoId != null && Object.hasOwnProperty.call(message, "userPseudoId"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.userPseudoId);
                            if (message.safeSearch != null && Object.hasOwnProperty.call(message, "safeSearch"))
                                writer.uint32(/* id 20, wireType 0 =*/160).bool(message.safeSearch);
                            if (message.userInfo != null && Object.hasOwnProperty.call(message, "userInfo"))
                                $root.google.cloud.discoveryengine.v1beta.UserInfo.encode(message.userInfo, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.userLabels != null && Object.hasOwnProperty.call(message, "userLabels"))
                                for (var keys = Object.keys(message.userLabels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 22, wireType 2 =*/178).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.userLabels[keys[i]]).ldelim();
                            if (message.contentSearchSpec != null && Object.hasOwnProperty.call(message, "contentSearchSpec"))
                                $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.encode(message.contentSearchSpec, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISearchRequest} message SearchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.SearchRequest} SearchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.servingConfig = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.branch = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.query = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.offset = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                case 21: {
                                        message.userInfo = $root.google.cloud.discoveryengine.v1beta.UserInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (!(message.facetSpecs && message.facetSpecs.length))
                                            message.facetSpecs = [];
                                        message.facetSpecs.push($root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.boostSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        if (message.params === $util.emptyObject)
                                            message.params = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.protobuf.Value.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.params[key] = value;
                                        break;
                                    }
                                case 13: {
                                        message.queryExpansionSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.spellCorrectionSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.userPseudoId = reader.string();
                                        break;
                                    }
                                case 24: {
                                        message.contentSearchSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 20: {
                                        message.safeSearch = reader.bool();
                                        break;
                                    }
                                case 22: {
                                        if (message.userLabels === $util.emptyObject)
                                            message.userLabels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.userLabels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.SearchRequest} SearchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.servingConfig != null && message.hasOwnProperty("servingConfig"))
                                if (!$util.isString(message.servingConfig))
                                    return "servingConfig: string expected";
                            if (message.branch != null && message.hasOwnProperty("branch"))
                                if (!$util.isString(message.branch))
                                    return "branch: string expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (!$util.isInteger(message.offset))
                                    return "offset: integer expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            if (message.userInfo != null && message.hasOwnProperty("userInfo")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.UserInfo.verify(message.userInfo);
                                if (error)
                                    return "userInfo." + error;
                            }
                            if (message.facetSpecs != null && message.hasOwnProperty("facetSpecs")) {
                                if (!Array.isArray(message.facetSpecs))
                                    return "facetSpecs: array expected";
                                for (var i = 0; i < message.facetSpecs.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.verify(message.facetSpecs[i]);
                                    if (error)
                                        return "facetSpecs." + error;
                                }
                            }
                            if (message.boostSpec != null && message.hasOwnProperty("boostSpec")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.verify(message.boostSpec);
                                if (error)
                                    return "boostSpec." + error;
                            }
                            if (message.params != null && message.hasOwnProperty("params")) {
                                if (!$util.isObject(message.params))
                                    return "params: object expected";
                                var key = Object.keys(message.params);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.protobuf.Value.verify(message.params[key[i]]);
                                    if (error)
                                        return "params." + error;
                                }
                            }
                            if (message.queryExpansionSpec != null && message.hasOwnProperty("queryExpansionSpec")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.verify(message.queryExpansionSpec);
                                if (error)
                                    return "queryExpansionSpec." + error;
                            }
                            if (message.spellCorrectionSpec != null && message.hasOwnProperty("spellCorrectionSpec")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.verify(message.spellCorrectionSpec);
                                if (error)
                                    return "spellCorrectionSpec." + error;
                            }
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                if (!$util.isString(message.userPseudoId))
                                    return "userPseudoId: string expected";
                            if (message.contentSearchSpec != null && message.hasOwnProperty("contentSearchSpec")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.verify(message.contentSearchSpec);
                                if (error)
                                    return "contentSearchSpec." + error;
                            }
                            if (message.safeSearch != null && message.hasOwnProperty("safeSearch"))
                                if (typeof message.safeSearch !== "boolean")
                                    return "safeSearch: boolean expected";
                            if (message.userLabels != null && message.hasOwnProperty("userLabels")) {
                                if (!$util.isObject(message.userLabels))
                                    return "userLabels: object expected";
                                var key = Object.keys(message.userLabels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.userLabels[key[i]]))
                                        return "userLabels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.SearchRequest} SearchRequest
                         */
                        SearchRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest();
                            if (object.servingConfig != null)
                                message.servingConfig = String(object.servingConfig);
                            if (object.branch != null)
                                message.branch = String(object.branch);
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.offset != null)
                                message.offset = object.offset | 0;
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            if (object.userInfo != null) {
                                if (typeof object.userInfo !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.userInfo: object expected");
                                message.userInfo = $root.google.cloud.discoveryengine.v1beta.UserInfo.fromObject(object.userInfo);
                            }
                            if (object.facetSpecs) {
                                if (!Array.isArray(object.facetSpecs))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.facetSpecs: array expected");
                                message.facetSpecs = [];
                                for (var i = 0; i < object.facetSpecs.length; ++i) {
                                    if (typeof object.facetSpecs[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.facetSpecs: object expected");
                                    message.facetSpecs[i] = $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.fromObject(object.facetSpecs[i]);
                                }
                            }
                            if (object.boostSpec != null) {
                                if (typeof object.boostSpec !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.boostSpec: object expected");
                                message.boostSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.fromObject(object.boostSpec);
                            }
                            if (object.params) {
                                if (typeof object.params !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.params: object expected");
                                message.params = {};
                                for (var keys = Object.keys(object.params), i = 0; i < keys.length; ++i) {
                                    if (typeof object.params[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.params: object expected");
                                    message.params[keys[i]] = $root.google.protobuf.Value.fromObject(object.params[keys[i]]);
                                }
                            }
                            if (object.queryExpansionSpec != null) {
                                if (typeof object.queryExpansionSpec !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.queryExpansionSpec: object expected");
                                message.queryExpansionSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.fromObject(object.queryExpansionSpec);
                            }
                            if (object.spellCorrectionSpec != null) {
                                if (typeof object.spellCorrectionSpec !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.spellCorrectionSpec: object expected");
                                message.spellCorrectionSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.fromObject(object.spellCorrectionSpec);
                            }
                            if (object.userPseudoId != null)
                                message.userPseudoId = String(object.userPseudoId);
                            if (object.contentSearchSpec != null) {
                                if (typeof object.contentSearchSpec !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.contentSearchSpec: object expected");
                                message.contentSearchSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.fromObject(object.contentSearchSpec);
                            }
                            if (object.safeSearch != null)
                                message.safeSearch = Boolean(object.safeSearch);
                            if (object.userLabels) {
                                if (typeof object.userLabels !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.userLabels: object expected");
                                message.userLabels = {};
                                for (var keys = Object.keys(object.userLabels), i = 0; i < keys.length; ++i)
                                    message.userLabels[keys[i]] = String(object.userLabels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.SearchRequest} message SearchRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.facetSpecs = [];
                            if (options.objects || options.defaults) {
                                object.params = {};
                                object.userLabels = {};
                            }
                            if (options.defaults) {
                                object.servingConfig = "";
                                object.branch = "";
                                object.query = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.offset = 0;
                                object.filter = "";
                                object.orderBy = "";
                                object.boostSpec = null;
                                object.queryExpansionSpec = null;
                                object.spellCorrectionSpec = null;
                                object.userPseudoId = "";
                                object.safeSearch = false;
                                object.userInfo = null;
                                object.contentSearchSpec = null;
                            }
                            if (message.servingConfig != null && message.hasOwnProperty("servingConfig"))
                                object.servingConfig = message.servingConfig;
                            if (message.branch != null && message.hasOwnProperty("branch"))
                                object.branch = message.branch;
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                object.offset = message.offset;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            if (message.facetSpecs && message.facetSpecs.length) {
                                object.facetSpecs = [];
                                for (var j = 0; j < message.facetSpecs.length; ++j)
                                    object.facetSpecs[j] = $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.toObject(message.facetSpecs[j], options);
                            }
                            if (message.boostSpec != null && message.hasOwnProperty("boostSpec"))
                                object.boostSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.toObject(message.boostSpec, options);
                            var keys2;
                            if (message.params && (keys2 = Object.keys(message.params)).length) {
                                object.params = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.params[keys2[j]] = $root.google.protobuf.Value.toObject(message.params[keys2[j]], options);
                            }
                            if (message.queryExpansionSpec != null && message.hasOwnProperty("queryExpansionSpec"))
                                object.queryExpansionSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.toObject(message.queryExpansionSpec, options);
                            if (message.spellCorrectionSpec != null && message.hasOwnProperty("spellCorrectionSpec"))
                                object.spellCorrectionSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.toObject(message.spellCorrectionSpec, options);
                            if (message.userPseudoId != null && message.hasOwnProperty("userPseudoId"))
                                object.userPseudoId = message.userPseudoId;
                            if (message.safeSearch != null && message.hasOwnProperty("safeSearch"))
                                object.safeSearch = message.safeSearch;
                            if (message.userInfo != null && message.hasOwnProperty("userInfo"))
                                object.userInfo = $root.google.cloud.discoveryengine.v1beta.UserInfo.toObject(message.userInfo, options);
                            if (message.userLabels && (keys2 = Object.keys(message.userLabels)).length) {
                                object.userLabels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.userLabels[keys2[j]] = message.userLabels[keys2[j]];
                            }
                            if (message.contentSearchSpec != null && message.hasOwnProperty("contentSearchSpec"))
                                object.contentSearchSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.toObject(message.contentSearchSpec, options);
                            return object;
                        };
    
                        /**
                         * Converts this SearchRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest";
                        };
    
                        SearchRequest.FacetSpec = (function() {
    
                            /**
                             * Properties of a FacetSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @interface IFacetSpec
                             * @property {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.IFacetKey|null} [facetKey] FacetSpec facetKey
                             * @property {number|null} [limit] FacetSpec limit
                             * @property {Array.<string>|null} [excludedFilterKeys] FacetSpec excludedFilterKeys
                             * @property {boolean|null} [enableDynamicPosition] FacetSpec enableDynamicPosition
                             */
    
                            /**
                             * Constructs a new FacetSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @classdesc Represents a FacetSpec.
                             * @implements IFacetSpec
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IFacetSpec=} [properties] Properties to set
                             */
                            function FacetSpec(properties) {
                                this.excludedFilterKeys = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FacetSpec facetKey.
                             * @member {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.IFacetKey|null|undefined} facetKey
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @instance
                             */
                            FacetSpec.prototype.facetKey = null;
    
                            /**
                             * FacetSpec limit.
                             * @member {number} limit
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @instance
                             */
                            FacetSpec.prototype.limit = 0;
    
                            /**
                             * FacetSpec excludedFilterKeys.
                             * @member {Array.<string>} excludedFilterKeys
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @instance
                             */
                            FacetSpec.prototype.excludedFilterKeys = $util.emptyArray;
    
                            /**
                             * FacetSpec enableDynamicPosition.
                             * @member {boolean} enableDynamicPosition
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @instance
                             */
                            FacetSpec.prototype.enableDynamicPosition = false;
    
                            /**
                             * Creates a new FacetSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IFacetSpec=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec} FacetSpec instance
                             */
                            FacetSpec.create = function create(properties) {
                                return new FacetSpec(properties);
                            };
    
                            /**
                             * Encodes the specified FacetSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IFacetSpec} message FacetSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FacetSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.facetKey != null && Object.hasOwnProperty.call(message, "facetKey"))
                                    $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.encode(message.facetKey, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.limit != null && Object.hasOwnProperty.call(message, "limit"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.limit);
                                if (message.excludedFilterKeys != null && message.excludedFilterKeys.length)
                                    for (var i = 0; i < message.excludedFilterKeys.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.excludedFilterKeys[i]);
                                if (message.enableDynamicPosition != null && Object.hasOwnProperty.call(message, "enableDynamicPosition"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.enableDynamicPosition);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FacetSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IFacetSpec} message FacetSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FacetSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FacetSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec} FacetSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FacetSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.facetKey = $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.limit = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.excludedFilterKeys && message.excludedFilterKeys.length))
                                                message.excludedFilterKeys = [];
                                            message.excludedFilterKeys.push(reader.string());
                                            break;
                                        }
                                    case 4: {
                                            message.enableDynamicPosition = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FacetSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec} FacetSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FacetSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FacetSpec message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FacetSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.facetKey != null && message.hasOwnProperty("facetKey")) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.verify(message.facetKey);
                                    if (error)
                                        return "facetKey." + error;
                                }
                                if (message.limit != null && message.hasOwnProperty("limit"))
                                    if (!$util.isInteger(message.limit))
                                        return "limit: integer expected";
                                if (message.excludedFilterKeys != null && message.hasOwnProperty("excludedFilterKeys")) {
                                    if (!Array.isArray(message.excludedFilterKeys))
                                        return "excludedFilterKeys: array expected";
                                    for (var i = 0; i < message.excludedFilterKeys.length; ++i)
                                        if (!$util.isString(message.excludedFilterKeys[i]))
                                            return "excludedFilterKeys: string[] expected";
                                }
                                if (message.enableDynamicPosition != null && message.hasOwnProperty("enableDynamicPosition"))
                                    if (typeof message.enableDynamicPosition !== "boolean")
                                        return "enableDynamicPosition: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a FacetSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec} FacetSpec
                             */
                            FacetSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec();
                                if (object.facetKey != null) {
                                    if (typeof object.facetKey !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.facetKey: object expected");
                                    message.facetKey = $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.fromObject(object.facetKey);
                                }
                                if (object.limit != null)
                                    message.limit = object.limit | 0;
                                if (object.excludedFilterKeys) {
                                    if (!Array.isArray(object.excludedFilterKeys))
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.excludedFilterKeys: array expected");
                                    message.excludedFilterKeys = [];
                                    for (var i = 0; i < object.excludedFilterKeys.length; ++i)
                                        message.excludedFilterKeys[i] = String(object.excludedFilterKeys[i]);
                                }
                                if (object.enableDynamicPosition != null)
                                    message.enableDynamicPosition = Boolean(object.enableDynamicPosition);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FacetSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec} message FacetSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FacetSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.excludedFilterKeys = [];
                                if (options.defaults) {
                                    object.facetKey = null;
                                    object.limit = 0;
                                    object.enableDynamicPosition = false;
                                }
                                if (message.facetKey != null && message.hasOwnProperty("facetKey"))
                                    object.facetKey = $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.toObject(message.facetKey, options);
                                if (message.limit != null && message.hasOwnProperty("limit"))
                                    object.limit = message.limit;
                                if (message.excludedFilterKeys && message.excludedFilterKeys.length) {
                                    object.excludedFilterKeys = [];
                                    for (var j = 0; j < message.excludedFilterKeys.length; ++j)
                                        object.excludedFilterKeys[j] = message.excludedFilterKeys[j];
                                }
                                if (message.enableDynamicPosition != null && message.hasOwnProperty("enableDynamicPosition"))
                                    object.enableDynamicPosition = message.enableDynamicPosition;
                                return object;
                            };
    
                            /**
                             * Converts this FacetSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FacetSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FacetSpec
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FacetSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec";
                            };
    
                            FacetSpec.FacetKey = (function() {
    
                                /**
                                 * Properties of a FacetKey.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                                 * @interface IFacetKey
                                 * @property {string|null} [key] FacetKey key
                                 * @property {Array.<google.cloud.discoveryengine.v1beta.IInterval>|null} [intervals] FacetKey intervals
                                 * @property {Array.<string>|null} [restrictedValues] FacetKey restrictedValues
                                 * @property {Array.<string>|null} [prefixes] FacetKey prefixes
                                 * @property {Array.<string>|null} [contains] FacetKey contains
                                 * @property {boolean|null} [caseInsensitive] FacetKey caseInsensitive
                                 * @property {string|null} [orderBy] FacetKey orderBy
                                 */
    
                                /**
                                 * Constructs a new FacetKey.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec
                                 * @classdesc Represents a FacetKey.
                                 * @implements IFacetKey
                                 * @constructor
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.IFacetKey=} [properties] Properties to set
                                 */
                                function FacetKey(properties) {
                                    this.intervals = [];
                                    this.restrictedValues = [];
                                    this.prefixes = [];
                                    this.contains = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * FacetKey key.
                                 * @member {string} key
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @instance
                                 */
                                FacetKey.prototype.key = "";
    
                                /**
                                 * FacetKey intervals.
                                 * @member {Array.<google.cloud.discoveryengine.v1beta.IInterval>} intervals
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @instance
                                 */
                                FacetKey.prototype.intervals = $util.emptyArray;
    
                                /**
                                 * FacetKey restrictedValues.
                                 * @member {Array.<string>} restrictedValues
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @instance
                                 */
                                FacetKey.prototype.restrictedValues = $util.emptyArray;
    
                                /**
                                 * FacetKey prefixes.
                                 * @member {Array.<string>} prefixes
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @instance
                                 */
                                FacetKey.prototype.prefixes = $util.emptyArray;
    
                                /**
                                 * FacetKey contains.
                                 * @member {Array.<string>} contains
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @instance
                                 */
                                FacetKey.prototype.contains = $util.emptyArray;
    
                                /**
                                 * FacetKey caseInsensitive.
                                 * @member {boolean} caseInsensitive
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @instance
                                 */
                                FacetKey.prototype.caseInsensitive = false;
    
                                /**
                                 * FacetKey orderBy.
                                 * @member {string} orderBy
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @instance
                                 */
                                FacetKey.prototype.orderBy = "";
    
                                /**
                                 * Creates a new FacetKey instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.IFacetKey=} [properties] Properties to set
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey} FacetKey instance
                                 */
                                FacetKey.create = function create(properties) {
                                    return new FacetKey(properties);
                                };
    
                                /**
                                 * Encodes the specified FacetKey message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.IFacetKey} message FacetKey message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FacetKey.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                                    if (message.intervals != null && message.intervals.length)
                                        for (var i = 0; i < message.intervals.length; ++i)
                                            $root.google.cloud.discoveryengine.v1beta.Interval.encode(message.intervals[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.restrictedValues != null && message.restrictedValues.length)
                                        for (var i = 0; i < message.restrictedValues.length; ++i)
                                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.restrictedValues[i]);
                                    if (message.prefixes != null && message.prefixes.length)
                                        for (var i = 0; i < message.prefixes.length; ++i)
                                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.prefixes[i]);
                                    if (message.contains != null && message.contains.length)
                                        for (var i = 0; i < message.contains.length; ++i)
                                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.contains[i]);
                                    if (message.caseInsensitive != null && Object.hasOwnProperty.call(message, "caseInsensitive"))
                                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.caseInsensitive);
                                    if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.orderBy);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified FacetKey message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.IFacetKey} message FacetKey message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FacetKey.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a FacetKey message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey} FacetKey
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FacetKey.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.key = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.intervals && message.intervals.length))
                                                    message.intervals = [];
                                                message.intervals.push($root.google.cloud.discoveryengine.v1beta.Interval.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.restrictedValues && message.restrictedValues.length))
                                                    message.restrictedValues = [];
                                                message.restrictedValues.push(reader.string());
                                                break;
                                            }
                                        case 4: {
                                                if (!(message.prefixes && message.prefixes.length))
                                                    message.prefixes = [];
                                                message.prefixes.push(reader.string());
                                                break;
                                            }
                                        case 5: {
                                                if (!(message.contains && message.contains.length))
                                                    message.contains = [];
                                                message.contains.push(reader.string());
                                                break;
                                            }
                                        case 6: {
                                                message.caseInsensitive = reader.bool();
                                                break;
                                            }
                                        case 7: {
                                                message.orderBy = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a FacetKey message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey} FacetKey
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FacetKey.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a FacetKey message.
                                 * @function verify
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                FacetKey.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.key != null && message.hasOwnProperty("key"))
                                        if (!$util.isString(message.key))
                                            return "key: string expected";
                                    if (message.intervals != null && message.hasOwnProperty("intervals")) {
                                        if (!Array.isArray(message.intervals))
                                            return "intervals: array expected";
                                        for (var i = 0; i < message.intervals.length; ++i) {
                                            var error = $root.google.cloud.discoveryengine.v1beta.Interval.verify(message.intervals[i]);
                                            if (error)
                                                return "intervals." + error;
                                        }
                                    }
                                    if (message.restrictedValues != null && message.hasOwnProperty("restrictedValues")) {
                                        if (!Array.isArray(message.restrictedValues))
                                            return "restrictedValues: array expected";
                                        for (var i = 0; i < message.restrictedValues.length; ++i)
                                            if (!$util.isString(message.restrictedValues[i]))
                                                return "restrictedValues: string[] expected";
                                    }
                                    if (message.prefixes != null && message.hasOwnProperty("prefixes")) {
                                        if (!Array.isArray(message.prefixes))
                                            return "prefixes: array expected";
                                        for (var i = 0; i < message.prefixes.length; ++i)
                                            if (!$util.isString(message.prefixes[i]))
                                                return "prefixes: string[] expected";
                                    }
                                    if (message.contains != null && message.hasOwnProperty("contains")) {
                                        if (!Array.isArray(message.contains))
                                            return "contains: array expected";
                                        for (var i = 0; i < message.contains.length; ++i)
                                            if (!$util.isString(message.contains[i]))
                                                return "contains: string[] expected";
                                    }
                                    if (message.caseInsensitive != null && message.hasOwnProperty("caseInsensitive"))
                                        if (typeof message.caseInsensitive !== "boolean")
                                            return "caseInsensitive: boolean expected";
                                    if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                        if (!$util.isString(message.orderBy))
                                            return "orderBy: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a FacetKey message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey} FacetKey
                                 */
                                FacetKey.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey)
                                        return object;
                                    var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey();
                                    if (object.key != null)
                                        message.key = String(object.key);
                                    if (object.intervals) {
                                        if (!Array.isArray(object.intervals))
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.intervals: array expected");
                                        message.intervals = [];
                                        for (var i = 0; i < object.intervals.length; ++i) {
                                            if (typeof object.intervals[i] !== "object")
                                                throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.intervals: object expected");
                                            message.intervals[i] = $root.google.cloud.discoveryengine.v1beta.Interval.fromObject(object.intervals[i]);
                                        }
                                    }
                                    if (object.restrictedValues) {
                                        if (!Array.isArray(object.restrictedValues))
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.restrictedValues: array expected");
                                        message.restrictedValues = [];
                                        for (var i = 0; i < object.restrictedValues.length; ++i)
                                            message.restrictedValues[i] = String(object.restrictedValues[i]);
                                    }
                                    if (object.prefixes) {
                                        if (!Array.isArray(object.prefixes))
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.prefixes: array expected");
                                        message.prefixes = [];
                                        for (var i = 0; i < object.prefixes.length; ++i)
                                            message.prefixes[i] = String(object.prefixes[i]);
                                    }
                                    if (object.contains) {
                                        if (!Array.isArray(object.contains))
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey.contains: array expected");
                                        message.contains = [];
                                        for (var i = 0; i < object.contains.length; ++i)
                                            message.contains[i] = String(object.contains[i]);
                                    }
                                    if (object.caseInsensitive != null)
                                        message.caseInsensitive = Boolean(object.caseInsensitive);
                                    if (object.orderBy != null)
                                        message.orderBy = String(object.orderBy);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a FacetKey message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey} message FacetKey
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                FacetKey.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults) {
                                        object.intervals = [];
                                        object.restrictedValues = [];
                                        object.prefixes = [];
                                        object.contains = [];
                                    }
                                    if (options.defaults) {
                                        object.key = "";
                                        object.caseInsensitive = false;
                                        object.orderBy = "";
                                    }
                                    if (message.key != null && message.hasOwnProperty("key"))
                                        object.key = message.key;
                                    if (message.intervals && message.intervals.length) {
                                        object.intervals = [];
                                        for (var j = 0; j < message.intervals.length; ++j)
                                            object.intervals[j] = $root.google.cloud.discoveryengine.v1beta.Interval.toObject(message.intervals[j], options);
                                    }
                                    if (message.restrictedValues && message.restrictedValues.length) {
                                        object.restrictedValues = [];
                                        for (var j = 0; j < message.restrictedValues.length; ++j)
                                            object.restrictedValues[j] = message.restrictedValues[j];
                                    }
                                    if (message.prefixes && message.prefixes.length) {
                                        object.prefixes = [];
                                        for (var j = 0; j < message.prefixes.length; ++j)
                                            object.prefixes[j] = message.prefixes[j];
                                    }
                                    if (message.contains && message.contains.length) {
                                        object.contains = [];
                                        for (var j = 0; j < message.contains.length; ++j)
                                            object.contains[j] = message.contains[j];
                                    }
                                    if (message.caseInsensitive != null && message.hasOwnProperty("caseInsensitive"))
                                        object.caseInsensitive = message.caseInsensitive;
                                    if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                        object.orderBy = message.orderBy;
                                    return object;
                                };
    
                                /**
                                 * Converts this FacetKey to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                FacetKey.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for FacetKey
                                 * @function getTypeUrl
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                FacetKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.FacetSpec.FacetKey";
                                };
    
                                return FacetKey;
                            })();
    
                            return FacetSpec;
                        })();
    
                        SearchRequest.BoostSpec = (function() {
    
                            /**
                             * Properties of a BoostSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @interface IBoostSpec
                             * @property {Array.<google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.IConditionBoostSpec>|null} [conditionBoostSpecs] BoostSpec conditionBoostSpecs
                             */
    
                            /**
                             * Constructs a new BoostSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @classdesc Represents a BoostSpec.
                             * @implements IBoostSpec
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IBoostSpec=} [properties] Properties to set
                             */
                            function BoostSpec(properties) {
                                this.conditionBoostSpecs = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BoostSpec conditionBoostSpecs.
                             * @member {Array.<google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.IConditionBoostSpec>} conditionBoostSpecs
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @instance
                             */
                            BoostSpec.prototype.conditionBoostSpecs = $util.emptyArray;
    
                            /**
                             * Creates a new BoostSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IBoostSpec=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec} BoostSpec instance
                             */
                            BoostSpec.create = function create(properties) {
                                return new BoostSpec(properties);
                            };
    
                            /**
                             * Encodes the specified BoostSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IBoostSpec} message BoostSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BoostSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.conditionBoostSpecs != null && message.conditionBoostSpecs.length)
                                    for (var i = 0; i < message.conditionBoostSpecs.length; ++i)
                                        $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec.encode(message.conditionBoostSpecs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BoostSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IBoostSpec} message BoostSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BoostSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BoostSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec} BoostSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BoostSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.conditionBoostSpecs && message.conditionBoostSpecs.length))
                                                message.conditionBoostSpecs = [];
                                            message.conditionBoostSpecs.push($root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BoostSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec} BoostSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BoostSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BoostSpec message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BoostSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.conditionBoostSpecs != null && message.hasOwnProperty("conditionBoostSpecs")) {
                                    if (!Array.isArray(message.conditionBoostSpecs))
                                        return "conditionBoostSpecs: array expected";
                                    for (var i = 0; i < message.conditionBoostSpecs.length; ++i) {
                                        var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec.verify(message.conditionBoostSpecs[i]);
                                        if (error)
                                            return "conditionBoostSpecs." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BoostSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec} BoostSpec
                             */
                            BoostSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec();
                                if (object.conditionBoostSpecs) {
                                    if (!Array.isArray(object.conditionBoostSpecs))
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.conditionBoostSpecs: array expected");
                                    message.conditionBoostSpecs = [];
                                    for (var i = 0; i < object.conditionBoostSpecs.length; ++i) {
                                        if (typeof object.conditionBoostSpecs[i] !== "object")
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.conditionBoostSpecs: object expected");
                                        message.conditionBoostSpecs[i] = $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec.fromObject(object.conditionBoostSpecs[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BoostSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec} message BoostSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BoostSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.conditionBoostSpecs = [];
                                if (message.conditionBoostSpecs && message.conditionBoostSpecs.length) {
                                    object.conditionBoostSpecs = [];
                                    for (var j = 0; j < message.conditionBoostSpecs.length; ++j)
                                        object.conditionBoostSpecs[j] = $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec.toObject(message.conditionBoostSpecs[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this BoostSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BoostSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BoostSpec
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BoostSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec";
                            };
    
                            BoostSpec.ConditionBoostSpec = (function() {
    
                                /**
                                 * Properties of a ConditionBoostSpec.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                                 * @interface IConditionBoostSpec
                                 * @property {string|null} [condition] ConditionBoostSpec condition
                                 * @property {number|null} [boost] ConditionBoostSpec boost
                                 */
    
                                /**
                                 * Constructs a new ConditionBoostSpec.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec
                                 * @classdesc Represents a ConditionBoostSpec.
                                 * @implements IConditionBoostSpec
                                 * @constructor
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.IConditionBoostSpec=} [properties] Properties to set
                                 */
                                function ConditionBoostSpec(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ConditionBoostSpec condition.
                                 * @member {string} condition
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @instance
                                 */
                                ConditionBoostSpec.prototype.condition = "";
    
                                /**
                                 * ConditionBoostSpec boost.
                                 * @member {number} boost
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @instance
                                 */
                                ConditionBoostSpec.prototype.boost = 0;
    
                                /**
                                 * Creates a new ConditionBoostSpec instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.IConditionBoostSpec=} [properties] Properties to set
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec} ConditionBoostSpec instance
                                 */
                                ConditionBoostSpec.create = function create(properties) {
                                    return new ConditionBoostSpec(properties);
                                };
    
                                /**
                                 * Encodes the specified ConditionBoostSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.IConditionBoostSpec} message ConditionBoostSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ConditionBoostSpec.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.condition);
                                    if (message.boost != null && Object.hasOwnProperty.call(message, "boost"))
                                        writer.uint32(/* id 2, wireType 5 =*/21).float(message.boost);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ConditionBoostSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.IConditionBoostSpec} message ConditionBoostSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ConditionBoostSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a ConditionBoostSpec message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec} ConditionBoostSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ConditionBoostSpec.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.condition = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.boost = reader.float();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a ConditionBoostSpec message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec} ConditionBoostSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ConditionBoostSpec.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a ConditionBoostSpec message.
                                 * @function verify
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ConditionBoostSpec.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.condition != null && message.hasOwnProperty("condition"))
                                        if (!$util.isString(message.condition))
                                            return "condition: string expected";
                                    if (message.boost != null && message.hasOwnProperty("boost"))
                                        if (typeof message.boost !== "number")
                                            return "boost: number expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a ConditionBoostSpec message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec} ConditionBoostSpec
                                 */
                                ConditionBoostSpec.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec)
                                        return object;
                                    var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec();
                                    if (object.condition != null)
                                        message.condition = String(object.condition);
                                    if (object.boost != null)
                                        message.boost = Number(object.boost);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a ConditionBoostSpec message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec} message ConditionBoostSpec
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ConditionBoostSpec.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.condition = "";
                                        object.boost = 0;
                                    }
                                    if (message.condition != null && message.hasOwnProperty("condition"))
                                        object.condition = message.condition;
                                    if (message.boost != null && message.hasOwnProperty("boost"))
                                        object.boost = options.json && !isFinite(message.boost) ? String(message.boost) : message.boost;
                                    return object;
                                };
    
                                /**
                                 * Converts this ConditionBoostSpec to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ConditionBoostSpec.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ConditionBoostSpec
                                 * @function getTypeUrl
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ConditionBoostSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.BoostSpec.ConditionBoostSpec";
                                };
    
                                return ConditionBoostSpec;
                            })();
    
                            return BoostSpec;
                        })();
    
                        SearchRequest.QueryExpansionSpec = (function() {
    
                            /**
                             * Properties of a QueryExpansionSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @interface IQueryExpansionSpec
                             * @property {google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.Condition|null} [condition] QueryExpansionSpec condition
                             */
    
                            /**
                             * Constructs a new QueryExpansionSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @classdesc Represents a QueryExpansionSpec.
                             * @implements IQueryExpansionSpec
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IQueryExpansionSpec=} [properties] Properties to set
                             */
                            function QueryExpansionSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * QueryExpansionSpec condition.
                             * @member {google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.Condition} condition
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @instance
                             */
                            QueryExpansionSpec.prototype.condition = 0;
    
                            /**
                             * Creates a new QueryExpansionSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IQueryExpansionSpec=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec} QueryExpansionSpec instance
                             */
                            QueryExpansionSpec.create = function create(properties) {
                                return new QueryExpansionSpec(properties);
                            };
    
                            /**
                             * Encodes the specified QueryExpansionSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IQueryExpansionSpec} message QueryExpansionSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            QueryExpansionSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.condition);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified QueryExpansionSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IQueryExpansionSpec} message QueryExpansionSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            QueryExpansionSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a QueryExpansionSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec} QueryExpansionSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            QueryExpansionSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.condition = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a QueryExpansionSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec} QueryExpansionSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            QueryExpansionSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a QueryExpansionSpec message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            QueryExpansionSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.condition != null && message.hasOwnProperty("condition"))
                                    switch (message.condition) {
                                    default:
                                        return "condition: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a QueryExpansionSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec} QueryExpansionSpec
                             */
                            QueryExpansionSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec();
                                switch (object.condition) {
                                default:
                                    if (typeof object.condition === "number") {
                                        message.condition = object.condition;
                                        break;
                                    }
                                    break;
                                case "CONDITION_UNSPECIFIED":
                                case 0:
                                    message.condition = 0;
                                    break;
                                case "DISABLED":
                                case 1:
                                    message.condition = 1;
                                    break;
                                case "AUTO":
                                case 2:
                                    message.condition = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a QueryExpansionSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec} message QueryExpansionSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            QueryExpansionSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.condition = options.enums === String ? "CONDITION_UNSPECIFIED" : 0;
                                if (message.condition != null && message.hasOwnProperty("condition"))
                                    object.condition = options.enums === String ? $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.Condition[message.condition] === undefined ? message.condition : $root.google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.Condition[message.condition] : message.condition;
                                return object;
                            };
    
                            /**
                             * Converts this QueryExpansionSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            QueryExpansionSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for QueryExpansionSpec
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            QueryExpansionSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec";
                            };
    
                            /**
                             * Condition enum.
                             * @name google.cloud.discoveryengine.v1beta.SearchRequest.QueryExpansionSpec.Condition
                             * @enum {number}
                             * @property {number} CONDITION_UNSPECIFIED=0 CONDITION_UNSPECIFIED value
                             * @property {number} DISABLED=1 DISABLED value
                             * @property {number} AUTO=2 AUTO value
                             */
                            QueryExpansionSpec.Condition = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "CONDITION_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "DISABLED"] = 1;
                                values[valuesById[2] = "AUTO"] = 2;
                                return values;
                            })();
    
                            return QueryExpansionSpec;
                        })();
    
                        SearchRequest.SpellCorrectionSpec = (function() {
    
                            /**
                             * Properties of a SpellCorrectionSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @interface ISpellCorrectionSpec
                             * @property {google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.Mode|null} [mode] SpellCorrectionSpec mode
                             */
    
                            /**
                             * Constructs a new SpellCorrectionSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @classdesc Represents a SpellCorrectionSpec.
                             * @implements ISpellCorrectionSpec
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ISpellCorrectionSpec=} [properties] Properties to set
                             */
                            function SpellCorrectionSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SpellCorrectionSpec mode.
                             * @member {google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.Mode} mode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @instance
                             */
                            SpellCorrectionSpec.prototype.mode = 0;
    
                            /**
                             * Creates a new SpellCorrectionSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ISpellCorrectionSpec=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec} SpellCorrectionSpec instance
                             */
                            SpellCorrectionSpec.create = function create(properties) {
                                return new SpellCorrectionSpec(properties);
                            };
    
                            /**
                             * Encodes the specified SpellCorrectionSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ISpellCorrectionSpec} message SpellCorrectionSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SpellCorrectionSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SpellCorrectionSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ISpellCorrectionSpec} message SpellCorrectionSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SpellCorrectionSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SpellCorrectionSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec} SpellCorrectionSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SpellCorrectionSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.mode = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SpellCorrectionSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec} SpellCorrectionSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SpellCorrectionSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SpellCorrectionSpec message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SpellCorrectionSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    switch (message.mode) {
                                    default:
                                        return "mode: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a SpellCorrectionSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec} SpellCorrectionSpec
                             */
                            SpellCorrectionSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec();
                                switch (object.mode) {
                                default:
                                    if (typeof object.mode === "number") {
                                        message.mode = object.mode;
                                        break;
                                    }
                                    break;
                                case "MODE_UNSPECIFIED":
                                case 0:
                                    message.mode = 0;
                                    break;
                                case "SUGGESTION_ONLY":
                                case 1:
                                    message.mode = 1;
                                    break;
                                case "AUTO":
                                case 2:
                                    message.mode = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SpellCorrectionSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec} message SpellCorrectionSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SpellCorrectionSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.mode = options.enums === String ? "MODE_UNSPECIFIED" : 0;
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    object.mode = options.enums === String ? $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.Mode[message.mode] === undefined ? message.mode : $root.google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.Mode[message.mode] : message.mode;
                                return object;
                            };
    
                            /**
                             * Converts this SpellCorrectionSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SpellCorrectionSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SpellCorrectionSpec
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SpellCorrectionSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec";
                            };
    
                            /**
                             * Mode enum.
                             * @name google.cloud.discoveryengine.v1beta.SearchRequest.SpellCorrectionSpec.Mode
                             * @enum {number}
                             * @property {number} MODE_UNSPECIFIED=0 MODE_UNSPECIFIED value
                             * @property {number} SUGGESTION_ONLY=1 SUGGESTION_ONLY value
                             * @property {number} AUTO=2 AUTO value
                             */
                            SpellCorrectionSpec.Mode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "MODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SUGGESTION_ONLY"] = 1;
                                values[valuesById[2] = "AUTO"] = 2;
                                return values;
                            })();
    
                            return SpellCorrectionSpec;
                        })();
    
                        SearchRequest.ContentSearchSpec = (function() {
    
                            /**
                             * Properties of a ContentSearchSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @interface IContentSearchSpec
                             * @property {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISnippetSpec|null} [snippetSpec] ContentSearchSpec snippetSpec
                             * @property {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISummarySpec|null} [summarySpec] ContentSearchSpec summarySpec
                             * @property {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.IExtractiveContentSpec|null} [extractiveContentSpec] ContentSearchSpec extractiveContentSpec
                             */
    
                            /**
                             * Constructs a new ContentSearchSpec.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest
                             * @classdesc Represents a ContentSearchSpec.
                             * @implements IContentSearchSpec
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IContentSearchSpec=} [properties] Properties to set
                             */
                            function ContentSearchSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ContentSearchSpec snippetSpec.
                             * @member {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISnippetSpec|null|undefined} snippetSpec
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @instance
                             */
                            ContentSearchSpec.prototype.snippetSpec = null;
    
                            /**
                             * ContentSearchSpec summarySpec.
                             * @member {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISummarySpec|null|undefined} summarySpec
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @instance
                             */
                            ContentSearchSpec.prototype.summarySpec = null;
    
                            /**
                             * ContentSearchSpec extractiveContentSpec.
                             * @member {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.IExtractiveContentSpec|null|undefined} extractiveContentSpec
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @instance
                             */
                            ContentSearchSpec.prototype.extractiveContentSpec = null;
    
                            /**
                             * Creates a new ContentSearchSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IContentSearchSpec=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec} ContentSearchSpec instance
                             */
                            ContentSearchSpec.create = function create(properties) {
                                return new ContentSearchSpec(properties);
                            };
    
                            /**
                             * Encodes the specified ContentSearchSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IContentSearchSpec} message ContentSearchSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ContentSearchSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.snippetSpec != null && Object.hasOwnProperty.call(message, "snippetSpec"))
                                    $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec.encode(message.snippetSpec, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.summarySpec != null && Object.hasOwnProperty.call(message, "summarySpec"))
                                    $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec.encode(message.summarySpec, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.extractiveContentSpec != null && Object.hasOwnProperty.call(message, "extractiveContentSpec"))
                                    $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec.encode(message.extractiveContentSpec, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ContentSearchSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.IContentSearchSpec} message ContentSearchSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ContentSearchSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ContentSearchSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec} ContentSearchSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ContentSearchSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.snippetSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.summarySpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.extractiveContentSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ContentSearchSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec} ContentSearchSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ContentSearchSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ContentSearchSpec message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ContentSearchSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.snippetSpec != null && message.hasOwnProperty("snippetSpec")) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec.verify(message.snippetSpec);
                                    if (error)
                                        return "snippetSpec." + error;
                                }
                                if (message.summarySpec != null && message.hasOwnProperty("summarySpec")) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec.verify(message.summarySpec);
                                    if (error)
                                        return "summarySpec." + error;
                                }
                                if (message.extractiveContentSpec != null && message.hasOwnProperty("extractiveContentSpec")) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec.verify(message.extractiveContentSpec);
                                    if (error)
                                        return "extractiveContentSpec." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ContentSearchSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec} ContentSearchSpec
                             */
                            ContentSearchSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec();
                                if (object.snippetSpec != null) {
                                    if (typeof object.snippetSpec !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.snippetSpec: object expected");
                                    message.snippetSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec.fromObject(object.snippetSpec);
                                }
                                if (object.summarySpec != null) {
                                    if (typeof object.summarySpec !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.summarySpec: object expected");
                                    message.summarySpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec.fromObject(object.summarySpec);
                                }
                                if (object.extractiveContentSpec != null) {
                                    if (typeof object.extractiveContentSpec !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.extractiveContentSpec: object expected");
                                    message.extractiveContentSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec.fromObject(object.extractiveContentSpec);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ContentSearchSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec} message ContentSearchSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ContentSearchSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.snippetSpec = null;
                                    object.summarySpec = null;
                                    object.extractiveContentSpec = null;
                                }
                                if (message.snippetSpec != null && message.hasOwnProperty("snippetSpec"))
                                    object.snippetSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec.toObject(message.snippetSpec, options);
                                if (message.summarySpec != null && message.hasOwnProperty("summarySpec"))
                                    object.summarySpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec.toObject(message.summarySpec, options);
                                if (message.extractiveContentSpec != null && message.hasOwnProperty("extractiveContentSpec"))
                                    object.extractiveContentSpec = $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec.toObject(message.extractiveContentSpec, options);
                                return object;
                            };
    
                            /**
                             * Converts this ContentSearchSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ContentSearchSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ContentSearchSpec
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ContentSearchSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec";
                            };
    
                            ContentSearchSpec.SnippetSpec = (function() {
    
                                /**
                                 * Properties of a SnippetSpec.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                                 * @interface ISnippetSpec
                                 * @property {number|null} [maxSnippetCount] SnippetSpec maxSnippetCount
                                 * @property {boolean|null} [referenceOnly] SnippetSpec referenceOnly
                                 */
    
                                /**
                                 * Constructs a new SnippetSpec.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                                 * @classdesc Represents a SnippetSpec.
                                 * @implements ISnippetSpec
                                 * @constructor
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISnippetSpec=} [properties] Properties to set
                                 */
                                function SnippetSpec(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * SnippetSpec maxSnippetCount.
                                 * @member {number} maxSnippetCount
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @instance
                                 */
                                SnippetSpec.prototype.maxSnippetCount = 0;
    
                                /**
                                 * SnippetSpec referenceOnly.
                                 * @member {boolean} referenceOnly
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @instance
                                 */
                                SnippetSpec.prototype.referenceOnly = false;
    
                                /**
                                 * Creates a new SnippetSpec instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISnippetSpec=} [properties] Properties to set
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec} SnippetSpec instance
                                 */
                                SnippetSpec.create = function create(properties) {
                                    return new SnippetSpec(properties);
                                };
    
                                /**
                                 * Encodes the specified SnippetSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISnippetSpec} message SnippetSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SnippetSpec.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.maxSnippetCount != null && Object.hasOwnProperty.call(message, "maxSnippetCount"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxSnippetCount);
                                    if (message.referenceOnly != null && Object.hasOwnProperty.call(message, "referenceOnly"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.referenceOnly);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified SnippetSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISnippetSpec} message SnippetSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SnippetSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a SnippetSpec message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec} SnippetSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SnippetSpec.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.maxSnippetCount = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.referenceOnly = reader.bool();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a SnippetSpec message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec} SnippetSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SnippetSpec.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a SnippetSpec message.
                                 * @function verify
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                SnippetSpec.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.maxSnippetCount != null && message.hasOwnProperty("maxSnippetCount"))
                                        if (!$util.isInteger(message.maxSnippetCount))
                                            return "maxSnippetCount: integer expected";
                                    if (message.referenceOnly != null && message.hasOwnProperty("referenceOnly"))
                                        if (typeof message.referenceOnly !== "boolean")
                                            return "referenceOnly: boolean expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a SnippetSpec message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec} SnippetSpec
                                 */
                                SnippetSpec.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec)
                                        return object;
                                    var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec();
                                    if (object.maxSnippetCount != null)
                                        message.maxSnippetCount = object.maxSnippetCount | 0;
                                    if (object.referenceOnly != null)
                                        message.referenceOnly = Boolean(object.referenceOnly);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a SnippetSpec message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec} message SnippetSpec
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                SnippetSpec.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.maxSnippetCount = 0;
                                        object.referenceOnly = false;
                                    }
                                    if (message.maxSnippetCount != null && message.hasOwnProperty("maxSnippetCount"))
                                        object.maxSnippetCount = message.maxSnippetCount;
                                    if (message.referenceOnly != null && message.hasOwnProperty("referenceOnly"))
                                        object.referenceOnly = message.referenceOnly;
                                    return object;
                                };
    
                                /**
                                 * Converts this SnippetSpec to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                SnippetSpec.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for SnippetSpec
                                 * @function getTypeUrl
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                SnippetSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SnippetSpec";
                                };
    
                                return SnippetSpec;
                            })();
    
                            ContentSearchSpec.SummarySpec = (function() {
    
                                /**
                                 * Properties of a SummarySpec.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                                 * @interface ISummarySpec
                                 * @property {number|null} [summaryResultCount] SummarySpec summaryResultCount
                                 */
    
                                /**
                                 * Constructs a new SummarySpec.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                                 * @classdesc Represents a SummarySpec.
                                 * @implements ISummarySpec
                                 * @constructor
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISummarySpec=} [properties] Properties to set
                                 */
                                function SummarySpec(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * SummarySpec summaryResultCount.
                                 * @member {number} summaryResultCount
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @instance
                                 */
                                SummarySpec.prototype.summaryResultCount = 0;
    
                                /**
                                 * Creates a new SummarySpec instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISummarySpec=} [properties] Properties to set
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec} SummarySpec instance
                                 */
                                SummarySpec.create = function create(properties) {
                                    return new SummarySpec(properties);
                                };
    
                                /**
                                 * Encodes the specified SummarySpec message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISummarySpec} message SummarySpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SummarySpec.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.summaryResultCount != null && Object.hasOwnProperty.call(message, "summaryResultCount"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.summaryResultCount);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified SummarySpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ISummarySpec} message SummarySpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SummarySpec.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a SummarySpec message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec} SummarySpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SummarySpec.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.summaryResultCount = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a SummarySpec message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec} SummarySpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SummarySpec.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a SummarySpec message.
                                 * @function verify
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                SummarySpec.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.summaryResultCount != null && message.hasOwnProperty("summaryResultCount"))
                                        if (!$util.isInteger(message.summaryResultCount))
                                            return "summaryResultCount: integer expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a SummarySpec message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec} SummarySpec
                                 */
                                SummarySpec.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec)
                                        return object;
                                    var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec();
                                    if (object.summaryResultCount != null)
                                        message.summaryResultCount = object.summaryResultCount | 0;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a SummarySpec message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec} message SummarySpec
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                SummarySpec.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.summaryResultCount = 0;
                                    if (message.summaryResultCount != null && message.hasOwnProperty("summaryResultCount"))
                                        object.summaryResultCount = message.summaryResultCount;
                                    return object;
                                };
    
                                /**
                                 * Converts this SummarySpec to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                SummarySpec.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for SummarySpec
                                 * @function getTypeUrl
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                SummarySpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.SummarySpec";
                                };
    
                                return SummarySpec;
                            })();
    
                            ContentSearchSpec.ExtractiveContentSpec = (function() {
    
                                /**
                                 * Properties of an ExtractiveContentSpec.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                                 * @interface IExtractiveContentSpec
                                 * @property {number|null} [maxExtractiveAnswerCount] ExtractiveContentSpec maxExtractiveAnswerCount
                                 * @property {number|null} [maxExtractiveSegmentCount] ExtractiveContentSpec maxExtractiveSegmentCount
                                 */
    
                                /**
                                 * Constructs a new ExtractiveContentSpec.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec
                                 * @classdesc Represents an ExtractiveContentSpec.
                                 * @implements IExtractiveContentSpec
                                 * @constructor
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.IExtractiveContentSpec=} [properties] Properties to set
                                 */
                                function ExtractiveContentSpec(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ExtractiveContentSpec maxExtractiveAnswerCount.
                                 * @member {number} maxExtractiveAnswerCount
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @instance
                                 */
                                ExtractiveContentSpec.prototype.maxExtractiveAnswerCount = 0;
    
                                /**
                                 * ExtractiveContentSpec maxExtractiveSegmentCount.
                                 * @member {number} maxExtractiveSegmentCount
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @instance
                                 */
                                ExtractiveContentSpec.prototype.maxExtractiveSegmentCount = 0;
    
                                /**
                                 * Creates a new ExtractiveContentSpec instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.IExtractiveContentSpec=} [properties] Properties to set
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec} ExtractiveContentSpec instance
                                 */
                                ExtractiveContentSpec.create = function create(properties) {
                                    return new ExtractiveContentSpec(properties);
                                };
    
                                /**
                                 * Encodes the specified ExtractiveContentSpec message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.IExtractiveContentSpec} message ExtractiveContentSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ExtractiveContentSpec.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.maxExtractiveAnswerCount != null && Object.hasOwnProperty.call(message, "maxExtractiveAnswerCount"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxExtractiveAnswerCount);
                                    if (message.maxExtractiveSegmentCount != null && Object.hasOwnProperty.call(message, "maxExtractiveSegmentCount"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxExtractiveSegmentCount);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ExtractiveContentSpec message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.IExtractiveContentSpec} message ExtractiveContentSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ExtractiveContentSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an ExtractiveContentSpec message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec} ExtractiveContentSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ExtractiveContentSpec.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.maxExtractiveAnswerCount = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.maxExtractiveSegmentCount = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an ExtractiveContentSpec message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec} ExtractiveContentSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ExtractiveContentSpec.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an ExtractiveContentSpec message.
                                 * @function verify
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ExtractiveContentSpec.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.maxExtractiveAnswerCount != null && message.hasOwnProperty("maxExtractiveAnswerCount"))
                                        if (!$util.isInteger(message.maxExtractiveAnswerCount))
                                            return "maxExtractiveAnswerCount: integer expected";
                                    if (message.maxExtractiveSegmentCount != null && message.hasOwnProperty("maxExtractiveSegmentCount"))
                                        if (!$util.isInteger(message.maxExtractiveSegmentCount))
                                            return "maxExtractiveSegmentCount: integer expected";
                                    return null;
                                };
    
                                /**
                                 * Creates an ExtractiveContentSpec message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec} ExtractiveContentSpec
                                 */
                                ExtractiveContentSpec.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec)
                                        return object;
                                    var message = new $root.google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec();
                                    if (object.maxExtractiveAnswerCount != null)
                                        message.maxExtractiveAnswerCount = object.maxExtractiveAnswerCount | 0;
                                    if (object.maxExtractiveSegmentCount != null)
                                        message.maxExtractiveSegmentCount = object.maxExtractiveSegmentCount | 0;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an ExtractiveContentSpec message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec} message ExtractiveContentSpec
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ExtractiveContentSpec.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.maxExtractiveAnswerCount = 0;
                                        object.maxExtractiveSegmentCount = 0;
                                    }
                                    if (message.maxExtractiveAnswerCount != null && message.hasOwnProperty("maxExtractiveAnswerCount"))
                                        object.maxExtractiveAnswerCount = message.maxExtractiveAnswerCount;
                                    if (message.maxExtractiveSegmentCount != null && message.hasOwnProperty("maxExtractiveSegmentCount"))
                                        object.maxExtractiveSegmentCount = message.maxExtractiveSegmentCount;
                                    return object;
                                };
    
                                /**
                                 * Converts this ExtractiveContentSpec to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ExtractiveContentSpec.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ExtractiveContentSpec
                                 * @function getTypeUrl
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ExtractiveContentSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchRequest.ContentSearchSpec.ExtractiveContentSpec";
                                };
    
                                return ExtractiveContentSpec;
                            })();
    
                            return ContentSearchSpec;
                        })();
    
                        return SearchRequest;
                    })();
    
                    v1beta.SearchResponse = (function() {
    
                        /**
                         * Properties of a SearchResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ISearchResponse
                         * @property {Array.<google.cloud.discoveryengine.v1beta.SearchResponse.ISearchResult>|null} [results] SearchResponse results
                         * @property {Array.<google.cloud.discoveryengine.v1beta.SearchResponse.IFacet>|null} [facets] SearchResponse facets
                         * @property {google.cloud.discoveryengine.v1beta.SearchResponse.IGuidedSearchResult|null} [guidedSearchResult] SearchResponse guidedSearchResult
                         * @property {number|null} [totalSize] SearchResponse totalSize
                         * @property {string|null} [attributionToken] SearchResponse attributionToken
                         * @property {string|null} [redirectUri] SearchResponse redirectUri
                         * @property {string|null} [nextPageToken] SearchResponse nextPageToken
                         * @property {string|null} [correctedQuery] SearchResponse correctedQuery
                         * @property {google.cloud.discoveryengine.v1beta.SearchResponse.ISummary|null} [summary] SearchResponse summary
                         * @property {Array.<string>|null} [appliedControls] SearchResponse appliedControls
                         */
    
                        /**
                         * Constructs a new SearchResponse.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a SearchResponse.
                         * @implements ISearchResponse
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ISearchResponse=} [properties] Properties to set
                         */
                        function SearchResponse(properties) {
                            this.results = [];
                            this.facets = [];
                            this.appliedControls = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchResponse results.
                         * @member {Array.<google.cloud.discoveryengine.v1beta.SearchResponse.ISearchResult>} results
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.results = $util.emptyArray;
    
                        /**
                         * SearchResponse facets.
                         * @member {Array.<google.cloud.discoveryengine.v1beta.SearchResponse.IFacet>} facets
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.facets = $util.emptyArray;
    
                        /**
                         * SearchResponse guidedSearchResult.
                         * @member {google.cloud.discoveryengine.v1beta.SearchResponse.IGuidedSearchResult|null|undefined} guidedSearchResult
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.guidedSearchResult = null;
    
                        /**
                         * SearchResponse totalSize.
                         * @member {number} totalSize
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.totalSize = 0;
    
                        /**
                         * SearchResponse attributionToken.
                         * @member {string} attributionToken
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.attributionToken = "";
    
                        /**
                         * SearchResponse redirectUri.
                         * @member {string} redirectUri
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.redirectUri = "";
    
                        /**
                         * SearchResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.nextPageToken = "";
    
                        /**
                         * SearchResponse correctedQuery.
                         * @member {string} correctedQuery
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.correctedQuery = "";
    
                        /**
                         * SearchResponse summary.
                         * @member {google.cloud.discoveryengine.v1beta.SearchResponse.ISummary|null|undefined} summary
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.summary = null;
    
                        /**
                         * SearchResponse appliedControls.
                         * @member {Array.<string>} appliedControls
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         */
                        SearchResponse.prototype.appliedControls = $util.emptyArray;
    
                        /**
                         * Creates a new SearchResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISearchResponse=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.SearchResponse} SearchResponse instance
                         */
                        SearchResponse.create = function create(properties) {
                            return new SearchResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchResponse message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISearchResponse} message SearchResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.results != null && message.results.length)
                                for (var i = 0; i < message.results.length; ++i)
                                    $root.google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult.encode(message.results[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.facets != null && message.facets.length)
                                for (var i = 0; i < message.facets.length; ++i)
                                    $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.encode(message.facets[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.totalSize != null && Object.hasOwnProperty.call(message, "totalSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.totalSize);
                            if (message.attributionToken != null && Object.hasOwnProperty.call(message, "attributionToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.attributionToken);
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.nextPageToken);
                            if (message.correctedQuery != null && Object.hasOwnProperty.call(message, "correctedQuery"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.correctedQuery);
                            if (message.guidedSearchResult != null && Object.hasOwnProperty.call(message, "guidedSearchResult"))
                                $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.encode(message.guidedSearchResult, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.summary != null && Object.hasOwnProperty.call(message, "summary"))
                                $root.google.cloud.discoveryengine.v1beta.SearchResponse.Summary.encode(message.summary, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.appliedControls != null && message.appliedControls.length)
                                for (var i = 0; i < message.appliedControls.length; ++i)
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.appliedControls[i]);
                            if (message.redirectUri != null && Object.hasOwnProperty.call(message, "redirectUri"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.redirectUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchResponse message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ISearchResponse} message SearchResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.SearchResponse} SearchResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.results && message.results.length))
                                            message.results = [];
                                        message.results.push($root.google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.facets && message.facets.length))
                                            message.facets = [];
                                        message.facets.push($root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        message.guidedSearchResult = $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.totalSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.attributionToken = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.redirectUri = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.correctedQuery = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.summary = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Summary.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        if (!(message.appliedControls && message.appliedControls.length))
                                            message.appliedControls = [];
                                        message.appliedControls.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.SearchResponse} SearchResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchResponse message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.results != null && message.hasOwnProperty("results")) {
                                if (!Array.isArray(message.results))
                                    return "results: array expected";
                                for (var i = 0; i < message.results.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult.verify(message.results[i]);
                                    if (error)
                                        return "results." + error;
                                }
                            }
                            if (message.facets != null && message.hasOwnProperty("facets")) {
                                if (!Array.isArray(message.facets))
                                    return "facets: array expected";
                                for (var i = 0; i < message.facets.length; ++i) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.verify(message.facets[i]);
                                    if (error)
                                        return "facets." + error;
                                }
                            }
                            if (message.guidedSearchResult != null && message.hasOwnProperty("guidedSearchResult")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.verify(message.guidedSearchResult);
                                if (error)
                                    return "guidedSearchResult." + error;
                            }
                            if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                                if (!$util.isInteger(message.totalSize))
                                    return "totalSize: integer expected";
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                if (!$util.isString(message.attributionToken))
                                    return "attributionToken: string expected";
                            if (message.redirectUri != null && message.hasOwnProperty("redirectUri"))
                                if (!$util.isString(message.redirectUri))
                                    return "redirectUri: string expected";
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.correctedQuery != null && message.hasOwnProperty("correctedQuery"))
                                if (!$util.isString(message.correctedQuery))
                                    return "correctedQuery: string expected";
                            if (message.summary != null && message.hasOwnProperty("summary")) {
                                var error = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Summary.verify(message.summary);
                                if (error)
                                    return "summary." + error;
                            }
                            if (message.appliedControls != null && message.hasOwnProperty("appliedControls")) {
                                if (!Array.isArray(message.appliedControls))
                                    return "appliedControls: array expected";
                                for (var i = 0; i < message.appliedControls.length; ++i)
                                    if (!$util.isString(message.appliedControls[i]))
                                        return "appliedControls: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.SearchResponse} SearchResponse
                         */
                        SearchResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchResponse)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse();
                            if (object.results) {
                                if (!Array.isArray(object.results))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.results: array expected");
                                message.results = [];
                                for (var i = 0; i < object.results.length; ++i) {
                                    if (typeof object.results[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.results: object expected");
                                    message.results[i] = $root.google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult.fromObject(object.results[i]);
                                }
                            }
                            if (object.facets) {
                                if (!Array.isArray(object.facets))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.facets: array expected");
                                message.facets = [];
                                for (var i = 0; i < object.facets.length; ++i) {
                                    if (typeof object.facets[i] !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.facets: object expected");
                                    message.facets[i] = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.fromObject(object.facets[i]);
                                }
                            }
                            if (object.guidedSearchResult != null) {
                                if (typeof object.guidedSearchResult !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.guidedSearchResult: object expected");
                                message.guidedSearchResult = $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.fromObject(object.guidedSearchResult);
                            }
                            if (object.totalSize != null)
                                message.totalSize = object.totalSize | 0;
                            if (object.attributionToken != null)
                                message.attributionToken = String(object.attributionToken);
                            if (object.redirectUri != null)
                                message.redirectUri = String(object.redirectUri);
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.correctedQuery != null)
                                message.correctedQuery = String(object.correctedQuery);
                            if (object.summary != null) {
                                if (typeof object.summary !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.summary: object expected");
                                message.summary = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Summary.fromObject(object.summary);
                            }
                            if (object.appliedControls) {
                                if (!Array.isArray(object.appliedControls))
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.appliedControls: array expected");
                                message.appliedControls = [];
                                for (var i = 0; i < object.appliedControls.length; ++i)
                                    message.appliedControls[i] = String(object.appliedControls[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.SearchResponse} message SearchResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.results = [];
                                object.facets = [];
                                object.appliedControls = [];
                            }
                            if (options.defaults) {
                                object.totalSize = 0;
                                object.attributionToken = "";
                                object.nextPageToken = "";
                                object.correctedQuery = "";
                                object.guidedSearchResult = null;
                                object.summary = null;
                                object.redirectUri = "";
                            }
                            if (message.results && message.results.length) {
                                object.results = [];
                                for (var j = 0; j < message.results.length; ++j)
                                    object.results[j] = $root.google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult.toObject(message.results[j], options);
                            }
                            if (message.facets && message.facets.length) {
                                object.facets = [];
                                for (var j = 0; j < message.facets.length; ++j)
                                    object.facets[j] = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.toObject(message.facets[j], options);
                            }
                            if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                                object.totalSize = message.totalSize;
                            if (message.attributionToken != null && message.hasOwnProperty("attributionToken"))
                                object.attributionToken = message.attributionToken;
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.correctedQuery != null && message.hasOwnProperty("correctedQuery"))
                                object.correctedQuery = message.correctedQuery;
                            if (message.guidedSearchResult != null && message.hasOwnProperty("guidedSearchResult"))
                                object.guidedSearchResult = $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.toObject(message.guidedSearchResult, options);
                            if (message.summary != null && message.hasOwnProperty("summary"))
                                object.summary = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Summary.toObject(message.summary, options);
                            if (message.appliedControls && message.appliedControls.length) {
                                object.appliedControls = [];
                                for (var j = 0; j < message.appliedControls.length; ++j)
                                    object.appliedControls[j] = message.appliedControls[j];
                            }
                            if (message.redirectUri != null && message.hasOwnProperty("redirectUri"))
                                object.redirectUri = message.redirectUri;
                            return object;
                        };
    
                        /**
                         * Converts this SearchResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchResponse";
                        };
    
                        SearchResponse.SearchResult = (function() {
    
                            /**
                             * Properties of a SearchResult.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                             * @interface ISearchResult
                             * @property {string|null} [id] SearchResult id
                             * @property {google.cloud.discoveryengine.v1beta.IDocument|null} [document] SearchResult document
                             */
    
                            /**
                             * Constructs a new SearchResult.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                             * @classdesc Represents a SearchResult.
                             * @implements ISearchResult
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.ISearchResult=} [properties] Properties to set
                             */
                            function SearchResult(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SearchResult id.
                             * @member {string} id
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @instance
                             */
                            SearchResult.prototype.id = "";
    
                            /**
                             * SearchResult document.
                             * @member {google.cloud.discoveryengine.v1beta.IDocument|null|undefined} document
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @instance
                             */
                            SearchResult.prototype.document = null;
    
                            /**
                             * Creates a new SearchResult instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.ISearchResult=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult} SearchResult instance
                             */
                            SearchResult.create = function create(properties) {
                                return new SearchResult(properties);
                            };
    
                            /**
                             * Encodes the specified SearchResult message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.ISearchResult} message SearchResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SearchResult.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                                if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                    $root.google.cloud.discoveryengine.v1beta.Document.encode(message.document, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SearchResult message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.ISearchResult} message SearchResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SearchResult.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SearchResult message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult} SearchResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SearchResult.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.id = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.document = $root.google.cloud.discoveryengine.v1beta.Document.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SearchResult message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult} SearchResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SearchResult.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SearchResult message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SearchResult.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.id != null && message.hasOwnProperty("id"))
                                    if (!$util.isString(message.id))
                                        return "id: string expected";
                                if (message.document != null && message.hasOwnProperty("document")) {
                                    var error = $root.google.cloud.discoveryengine.v1beta.Document.verify(message.document);
                                    if (error)
                                        return "document." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SearchResult message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult} SearchResult
                             */
                            SearchResult.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult();
                                if (object.id != null)
                                    message.id = String(object.id);
                                if (object.document != null) {
                                    if (typeof object.document !== "object")
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult.document: object expected");
                                    message.document = $root.google.cloud.discoveryengine.v1beta.Document.fromObject(object.document);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SearchResult message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult} message SearchResult
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SearchResult.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.id = "";
                                    object.document = null;
                                }
                                if (message.id != null && message.hasOwnProperty("id"))
                                    object.id = message.id;
                                if (message.document != null && message.hasOwnProperty("document"))
                                    object.document = $root.google.cloud.discoveryengine.v1beta.Document.toObject(message.document, options);
                                return object;
                            };
    
                            /**
                             * Converts this SearchResult to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SearchResult.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SearchResult
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SearchResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchResponse.SearchResult";
                            };
    
                            return SearchResult;
                        })();
    
                        SearchResponse.Facet = (function() {
    
                            /**
                             * Properties of a Facet.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                             * @interface IFacet
                             * @property {string|null} [key] Facet key
                             * @property {Array.<google.cloud.discoveryengine.v1beta.SearchResponse.Facet.IFacetValue>|null} [values] Facet values
                             * @property {boolean|null} [dynamicFacet] Facet dynamicFacet
                             */
    
                            /**
                             * Constructs a new Facet.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                             * @classdesc Represents a Facet.
                             * @implements IFacet
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.IFacet=} [properties] Properties to set
                             */
                            function Facet(properties) {
                                this.values = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Facet key.
                             * @member {string} key
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @instance
                             */
                            Facet.prototype.key = "";
    
                            /**
                             * Facet values.
                             * @member {Array.<google.cloud.discoveryengine.v1beta.SearchResponse.Facet.IFacetValue>} values
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @instance
                             */
                            Facet.prototype.values = $util.emptyArray;
    
                            /**
                             * Facet dynamicFacet.
                             * @member {boolean} dynamicFacet
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @instance
                             */
                            Facet.prototype.dynamicFacet = false;
    
                            /**
                             * Creates a new Facet instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.IFacet=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Facet} Facet instance
                             */
                            Facet.create = function create(properties) {
                                return new Facet(properties);
                            };
    
                            /**
                             * Encodes the specified Facet message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.Facet.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.IFacet} message Facet message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Facet.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                                if (message.values != null && message.values.length)
                                    for (var i = 0; i < message.values.length; ++i)
                                        $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue.encode(message.values[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.dynamicFacet != null && Object.hasOwnProperty.call(message, "dynamicFacet"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.dynamicFacet);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Facet message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.Facet.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.IFacet} message Facet message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Facet.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Facet message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Facet} Facet
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Facet.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.key = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.values && message.values.length))
                                                message.values = [];
                                            message.values.push($root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 3: {
                                            message.dynamicFacet = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Facet message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Facet} Facet
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Facet.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Facet message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Facet.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.key != null && message.hasOwnProperty("key"))
                                    if (!$util.isString(message.key))
                                        return "key: string expected";
                                if (message.values != null && message.hasOwnProperty("values")) {
                                    if (!Array.isArray(message.values))
                                        return "values: array expected";
                                    for (var i = 0; i < message.values.length; ++i) {
                                        var error = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue.verify(message.values[i]);
                                        if (error)
                                            return "values." + error;
                                    }
                                }
                                if (message.dynamicFacet != null && message.hasOwnProperty("dynamicFacet"))
                                    if (typeof message.dynamicFacet !== "boolean")
                                        return "dynamicFacet: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a Facet message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Facet} Facet
                             */
                            Facet.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet();
                                if (object.key != null)
                                    message.key = String(object.key);
                                if (object.values) {
                                    if (!Array.isArray(object.values))
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.Facet.values: array expected");
                                    message.values = [];
                                    for (var i = 0; i < object.values.length; ++i) {
                                        if (typeof object.values[i] !== "object")
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.Facet.values: object expected");
                                        message.values[i] = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue.fromObject(object.values[i]);
                                    }
                                }
                                if (object.dynamicFacet != null)
                                    message.dynamicFacet = Boolean(object.dynamicFacet);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Facet message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.Facet} message Facet
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Facet.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.values = [];
                                if (options.defaults) {
                                    object.key = "";
                                    object.dynamicFacet = false;
                                }
                                if (message.key != null && message.hasOwnProperty("key"))
                                    object.key = message.key;
                                if (message.values && message.values.length) {
                                    object.values = [];
                                    for (var j = 0; j < message.values.length; ++j)
                                        object.values[j] = $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue.toObject(message.values[j], options);
                                }
                                if (message.dynamicFacet != null && message.hasOwnProperty("dynamicFacet"))
                                    object.dynamicFacet = message.dynamicFacet;
                                return object;
                            };
    
                            /**
                             * Converts this Facet to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Facet.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Facet
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Facet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchResponse.Facet";
                            };
    
                            Facet.FacetValue = (function() {
    
                                /**
                                 * Properties of a FacetValue.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                                 * @interface IFacetValue
                                 * @property {string|null} [value] FacetValue value
                                 * @property {google.cloud.discoveryengine.v1beta.IInterval|null} [interval] FacetValue interval
                                 * @property {number|Long|null} [count] FacetValue count
                                 */
    
                                /**
                                 * Constructs a new FacetValue.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet
                                 * @classdesc Represents a FacetValue.
                                 * @implements IFacetValue
                                 * @constructor
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.Facet.IFacetValue=} [properties] Properties to set
                                 */
                                function FacetValue(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * FacetValue value.
                                 * @member {string|null|undefined} value
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @instance
                                 */
                                FacetValue.prototype.value = null;
    
                                /**
                                 * FacetValue interval.
                                 * @member {google.cloud.discoveryengine.v1beta.IInterval|null|undefined} interval
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @instance
                                 */
                                FacetValue.prototype.interval = null;
    
                                /**
                                 * FacetValue count.
                                 * @member {number|Long} count
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @instance
                                 */
                                FacetValue.prototype.count = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * FacetValue facetValue.
                                 * @member {"value"|"interval"|undefined} facetValue
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @instance
                                 */
                                Object.defineProperty(FacetValue.prototype, "facetValue", {
                                    get: $util.oneOfGetter($oneOfFields = ["value", "interval"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new FacetValue instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.Facet.IFacetValue=} [properties] Properties to set
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue} FacetValue instance
                                 */
                                FacetValue.create = function create(properties) {
                                    return new FacetValue(properties);
                                };
    
                                /**
                                 * Encodes the specified FacetValue message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.Facet.IFacetValue} message FacetValue message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FacetValue.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                                    if (message.interval != null && Object.hasOwnProperty.call(message, "interval"))
                                        $root.google.cloud.discoveryengine.v1beta.Interval.encode(message.interval, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.count != null && Object.hasOwnProperty.call(message, "count"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int64(message.count);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified FacetValue message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.Facet.IFacetValue} message FacetValue message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FacetValue.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a FacetValue message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue} FacetValue
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FacetValue.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.value = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.interval = $root.google.cloud.discoveryengine.v1beta.Interval.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                message.count = reader.int64();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a FacetValue message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue} FacetValue
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FacetValue.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a FacetValue message.
                                 * @function verify
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                FacetValue.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.value != null && message.hasOwnProperty("value")) {
                                        properties.facetValue = 1;
                                        if (!$util.isString(message.value))
                                            return "value: string expected";
                                    }
                                    if (message.interval != null && message.hasOwnProperty("interval")) {
                                        if (properties.facetValue === 1)
                                            return "facetValue: multiple values";
                                        properties.facetValue = 1;
                                        {
                                            var error = $root.google.cloud.discoveryengine.v1beta.Interval.verify(message.interval);
                                            if (error)
                                                return "interval." + error;
                                        }
                                    }
                                    if (message.count != null && message.hasOwnProperty("count"))
                                        if (!$util.isInteger(message.count) && !(message.count && $util.isInteger(message.count.low) && $util.isInteger(message.count.high)))
                                            return "count: integer|Long expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a FacetValue message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue} FacetValue
                                 */
                                FacetValue.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue)
                                        return object;
                                    var message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue();
                                    if (object.value != null)
                                        message.value = String(object.value);
                                    if (object.interval != null) {
                                        if (typeof object.interval !== "object")
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue.interval: object expected");
                                        message.interval = $root.google.cloud.discoveryengine.v1beta.Interval.fromObject(object.interval);
                                    }
                                    if (object.count != null)
                                        if ($util.Long)
                                            (message.count = $util.Long.fromValue(object.count)).unsigned = false;
                                        else if (typeof object.count === "string")
                                            message.count = parseInt(object.count, 10);
                                        else if (typeof object.count === "number")
                                            message.count = object.count;
                                        else if (typeof object.count === "object")
                                            message.count = new $util.LongBits(object.count.low >>> 0, object.count.high >>> 0).toNumber();
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a FacetValue message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue} message FacetValue
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                FacetValue.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        if ($util.Long) {
                                            var long = new $util.Long(0, 0, false);
                                            object.count = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                        } else
                                            object.count = options.longs === String ? "0" : 0;
                                    if (message.value != null && message.hasOwnProperty("value")) {
                                        object.value = message.value;
                                        if (options.oneofs)
                                            object.facetValue = "value";
                                    }
                                    if (message.interval != null && message.hasOwnProperty("interval")) {
                                        object.interval = $root.google.cloud.discoveryengine.v1beta.Interval.toObject(message.interval, options);
                                        if (options.oneofs)
                                            object.facetValue = "interval";
                                    }
                                    if (message.count != null && message.hasOwnProperty("count"))
                                        if (typeof message.count === "number")
                                            object.count = options.longs === String ? String(message.count) : message.count;
                                        else
                                            object.count = options.longs === String ? $util.Long.prototype.toString.call(message.count) : options.longs === Number ? new $util.LongBits(message.count.low >>> 0, message.count.high >>> 0).toNumber() : message.count;
                                    return object;
                                };
    
                                /**
                                 * Converts this FacetValue to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                FacetValue.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for FacetValue
                                 * @function getTypeUrl
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                FacetValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchResponse.Facet.FacetValue";
                                };
    
                                return FacetValue;
                            })();
    
                            return Facet;
                        })();
    
                        SearchResponse.GuidedSearchResult = (function() {
    
                            /**
                             * Properties of a GuidedSearchResult.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                             * @interface IGuidedSearchResult
                             * @property {Array.<google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.IRefinementAttribute>|null} [refinementAttributes] GuidedSearchResult refinementAttributes
                             */
    
                            /**
                             * Constructs a new GuidedSearchResult.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                             * @classdesc Represents a GuidedSearchResult.
                             * @implements IGuidedSearchResult
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.IGuidedSearchResult=} [properties] Properties to set
                             */
                            function GuidedSearchResult(properties) {
                                this.refinementAttributes = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GuidedSearchResult refinementAttributes.
                             * @member {Array.<google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.IRefinementAttribute>} refinementAttributes
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @instance
                             */
                            GuidedSearchResult.prototype.refinementAttributes = $util.emptyArray;
    
                            /**
                             * Creates a new GuidedSearchResult instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.IGuidedSearchResult=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult} GuidedSearchResult instance
                             */
                            GuidedSearchResult.create = function create(properties) {
                                return new GuidedSearchResult(properties);
                            };
    
                            /**
                             * Encodes the specified GuidedSearchResult message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.IGuidedSearchResult} message GuidedSearchResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GuidedSearchResult.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.refinementAttributes != null && message.refinementAttributes.length)
                                    for (var i = 0; i < message.refinementAttributes.length; ++i)
                                        $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute.encode(message.refinementAttributes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GuidedSearchResult message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.IGuidedSearchResult} message GuidedSearchResult message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GuidedSearchResult.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GuidedSearchResult message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult} GuidedSearchResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GuidedSearchResult.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.refinementAttributes && message.refinementAttributes.length))
                                                message.refinementAttributes = [];
                                            message.refinementAttributes.push($root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GuidedSearchResult message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult} GuidedSearchResult
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GuidedSearchResult.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GuidedSearchResult message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GuidedSearchResult.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.refinementAttributes != null && message.hasOwnProperty("refinementAttributes")) {
                                    if (!Array.isArray(message.refinementAttributes))
                                        return "refinementAttributes: array expected";
                                    for (var i = 0; i < message.refinementAttributes.length; ++i) {
                                        var error = $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute.verify(message.refinementAttributes[i]);
                                        if (error)
                                            return "refinementAttributes." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GuidedSearchResult message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult} GuidedSearchResult
                             */
                            GuidedSearchResult.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult();
                                if (object.refinementAttributes) {
                                    if (!Array.isArray(object.refinementAttributes))
                                        throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.refinementAttributes: array expected");
                                    message.refinementAttributes = [];
                                    for (var i = 0; i < object.refinementAttributes.length; ++i) {
                                        if (typeof object.refinementAttributes[i] !== "object")
                                            throw TypeError(".google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.refinementAttributes: object expected");
                                        message.refinementAttributes[i] = $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute.fromObject(object.refinementAttributes[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GuidedSearchResult message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult} message GuidedSearchResult
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GuidedSearchResult.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.refinementAttributes = [];
                                if (message.refinementAttributes && message.refinementAttributes.length) {
                                    object.refinementAttributes = [];
                                    for (var j = 0; j < message.refinementAttributes.length; ++j)
                                        object.refinementAttributes[j] = $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute.toObject(message.refinementAttributes[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this GuidedSearchResult to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GuidedSearchResult.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GuidedSearchResult
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GuidedSearchResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult";
                            };
    
                            GuidedSearchResult.RefinementAttribute = (function() {
    
                                /**
                                 * Properties of a RefinementAttribute.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                                 * @interface IRefinementAttribute
                                 * @property {string|null} [attributeKey] RefinementAttribute attributeKey
                                 * @property {string|null} [attributeValue] RefinementAttribute attributeValue
                                 */
    
                                /**
                                 * Constructs a new RefinementAttribute.
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult
                                 * @classdesc Represents a RefinementAttribute.
                                 * @implements IRefinementAttribute
                                 * @constructor
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.IRefinementAttribute=} [properties] Properties to set
                                 */
                                function RefinementAttribute(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * RefinementAttribute attributeKey.
                                 * @member {string} attributeKey
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @instance
                                 */
                                RefinementAttribute.prototype.attributeKey = "";
    
                                /**
                                 * RefinementAttribute attributeValue.
                                 * @member {string} attributeValue
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @instance
                                 */
                                RefinementAttribute.prototype.attributeValue = "";
    
                                /**
                                 * Creates a new RefinementAttribute instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.IRefinementAttribute=} [properties] Properties to set
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute} RefinementAttribute instance
                                 */
                                RefinementAttribute.create = function create(properties) {
                                    return new RefinementAttribute(properties);
                                };
    
                                /**
                                 * Encodes the specified RefinementAttribute message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.IRefinementAttribute} message RefinementAttribute message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RefinementAttribute.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.attributeKey != null && Object.hasOwnProperty.call(message, "attributeKey"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.attributeKey);
                                    if (message.attributeValue != null && Object.hasOwnProperty.call(message, "attributeValue"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.attributeValue);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified RefinementAttribute message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.IRefinementAttribute} message RefinementAttribute message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RefinementAttribute.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a RefinementAttribute message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute} RefinementAttribute
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RefinementAttribute.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.attributeKey = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.attributeValue = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a RefinementAttribute message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute} RefinementAttribute
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RefinementAttribute.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a RefinementAttribute message.
                                 * @function verify
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                RefinementAttribute.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.attributeKey != null && message.hasOwnProperty("attributeKey"))
                                        if (!$util.isString(message.attributeKey))
                                            return "attributeKey: string expected";
                                    if (message.attributeValue != null && message.hasOwnProperty("attributeValue"))
                                        if (!$util.isString(message.attributeValue))
                                            return "attributeValue: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a RefinementAttribute message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute} RefinementAttribute
                                 */
                                RefinementAttribute.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute)
                                        return object;
                                    var message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute();
                                    if (object.attributeKey != null)
                                        message.attributeKey = String(object.attributeKey);
                                    if (object.attributeValue != null)
                                        message.attributeValue = String(object.attributeValue);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a RefinementAttribute message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @static
                                 * @param {google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute} message RefinementAttribute
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                RefinementAttribute.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.attributeKey = "";
                                        object.attributeValue = "";
                                    }
                                    if (message.attributeKey != null && message.hasOwnProperty("attributeKey"))
                                        object.attributeKey = message.attributeKey;
                                    if (message.attributeValue != null && message.hasOwnProperty("attributeValue"))
                                        object.attributeValue = message.attributeValue;
                                    return object;
                                };
    
                                /**
                                 * Converts this RefinementAttribute to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                RefinementAttribute.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for RefinementAttribute
                                 * @function getTypeUrl
                                 * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                RefinementAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchResponse.GuidedSearchResult.RefinementAttribute";
                                };
    
                                return RefinementAttribute;
                            })();
    
                            return GuidedSearchResult;
                        })();
    
                        SearchResponse.Summary = (function() {
    
                            /**
                             * Properties of a Summary.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                             * @interface ISummary
                             * @property {string|null} [summaryText] Summary summaryText
                             */
    
                            /**
                             * Constructs a new Summary.
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse
                             * @classdesc Represents a Summary.
                             * @implements ISummary
                             * @constructor
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.ISummary=} [properties] Properties to set
                             */
                            function Summary(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Summary summaryText.
                             * @member {string} summaryText
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @instance
                             */
                            Summary.prototype.summaryText = "";
    
                            /**
                             * Creates a new Summary instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.ISummary=} [properties] Properties to set
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Summary} Summary instance
                             */
                            Summary.create = function create(properties) {
                                return new Summary(properties);
                            };
    
                            /**
                             * Encodes the specified Summary message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.Summary.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.ISummary} message Summary message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Summary.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.summaryText != null && Object.hasOwnProperty.call(message, "summaryText"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.summaryText);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Summary message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.SearchResponse.Summary.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.ISummary} message Summary message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Summary.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Summary message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Summary} Summary
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Summary.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.Summary();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.summaryText = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Summary message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Summary} Summary
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Summary.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Summary message.
                             * @function verify
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Summary.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.summaryText != null && message.hasOwnProperty("summaryText"))
                                    if (!$util.isString(message.summaryText))
                                        return "summaryText: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Summary message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.discoveryengine.v1beta.SearchResponse.Summary} Summary
                             */
                            Summary.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.discoveryengine.v1beta.SearchResponse.Summary)
                                    return object;
                                var message = new $root.google.cloud.discoveryengine.v1beta.SearchResponse.Summary();
                                if (object.summaryText != null)
                                    message.summaryText = String(object.summaryText);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Summary message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @static
                             * @param {google.cloud.discoveryengine.v1beta.SearchResponse.Summary} message Summary
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Summary.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.summaryText = "";
                                if (message.summaryText != null && message.hasOwnProperty("summaryText"))
                                    object.summaryText = message.summaryText;
                                return object;
                            };
    
                            /**
                             * Converts this Summary to JSON.
                             * @function toJSON
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Summary.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Summary
                             * @function getTypeUrl
                             * @memberof google.cloud.discoveryengine.v1beta.SearchResponse.Summary
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Summary.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.SearchResponse.Summary";
                            };
    
                            return Summary;
                        })();
    
                        return SearchResponse;
                    })();
    
                    v1beta.UserEventService = (function() {
    
                        /**
                         * Constructs a new UserEventService service.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a UserEventService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function UserEventService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (UserEventService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = UserEventService;
    
                        /**
                         * Creates new UserEventService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {UserEventService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        UserEventService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.UserEventService|writeUserEvent}.
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @typedef WriteUserEventCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.discoveryengine.v1beta.UserEvent} [response] UserEvent
                         */
    
                        /**
                         * Calls WriteUserEvent.
                         * @function writeUserEvent
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IWriteUserEventRequest} request WriteUserEventRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.UserEventService.WriteUserEventCallback} callback Node-style callback called with the error, if any, and UserEvent
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(UserEventService.prototype.writeUserEvent = function writeUserEvent(request, callback) {
                            return this.rpcCall(writeUserEvent, $root.google.cloud.discoveryengine.v1beta.WriteUserEventRequest, $root.google.cloud.discoveryengine.v1beta.UserEvent, request, callback);
                        }, "name", { value: "WriteUserEvent" });
    
                        /**
                         * Calls WriteUserEvent.
                         * @function writeUserEvent
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IWriteUserEventRequest} request WriteUserEventRequest message or plain object
                         * @returns {Promise<google.cloud.discoveryengine.v1beta.UserEvent>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.UserEventService|collectUserEvent}.
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @typedef CollectUserEventCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.api.HttpBody} [response] HttpBody
                         */
    
                        /**
                         * Calls CollectUserEvent.
                         * @function collectUserEvent
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ICollectUserEventRequest} request CollectUserEventRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.UserEventService.CollectUserEventCallback} callback Node-style callback called with the error, if any, and HttpBody
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(UserEventService.prototype.collectUserEvent = function collectUserEvent(request, callback) {
                            return this.rpcCall(collectUserEvent, $root.google.cloud.discoveryengine.v1beta.CollectUserEventRequest, $root.google.api.HttpBody, request, callback);
                        }, "name", { value: "CollectUserEvent" });
    
                        /**
                         * Calls CollectUserEvent.
                         * @function collectUserEvent
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.ICollectUserEventRequest} request CollectUserEventRequest message or plain object
                         * @returns {Promise<google.api.HttpBody>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.discoveryengine.v1beta.UserEventService|importUserEvents}.
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @typedef ImportUserEventsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ImportUserEvents.
                         * @function importUserEvents
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsRequest} request ImportUserEventsRequest message or plain object
                         * @param {google.cloud.discoveryengine.v1beta.UserEventService.ImportUserEventsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(UserEventService.prototype.importUserEvents = function importUserEvents(request, callback) {
                            return this.rpcCall(importUserEvents, $root.google.cloud.discoveryengine.v1beta.ImportUserEventsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ImportUserEvents" });
    
                        /**
                         * Calls ImportUserEvents.
                         * @function importUserEvents
                         * @memberof google.cloud.discoveryengine.v1beta.UserEventService
                         * @instance
                         * @param {google.cloud.discoveryengine.v1beta.IImportUserEventsRequest} request ImportUserEventsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return UserEventService;
                    })();
    
                    v1beta.WriteUserEventRequest = (function() {
    
                        /**
                         * Properties of a WriteUserEventRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface IWriteUserEventRequest
                         * @property {string|null} [parent] WriteUserEventRequest parent
                         * @property {google.cloud.discoveryengine.v1beta.IUserEvent|null} [userEvent] WriteUserEventRequest userEvent
                         */
    
                        /**
                         * Constructs a new WriteUserEventRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a WriteUserEventRequest.
                         * @implements IWriteUserEventRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.IWriteUserEventRequest=} [properties] Properties to set
                         */
                        function WriteUserEventRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WriteUserEventRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @instance
                         */
                        WriteUserEventRequest.prototype.parent = "";
    
                        /**
                         * WriteUserEventRequest userEvent.
                         * @member {google.cloud.discoveryengine.v1beta.IUserEvent|null|undefined} userEvent
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @instance
                         */
                        WriteUserEventRequest.prototype.userEvent = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * WriteUserEventRequest _userEvent.
                         * @member {"userEvent"|undefined} _userEvent
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @instance
                         */
                        Object.defineProperty(WriteUserEventRequest.prototype, "_userEvent", {
                            get: $util.oneOfGetter($oneOfFields = ["userEvent"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new WriteUserEventRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IWriteUserEventRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.WriteUserEventRequest} WriteUserEventRequest instance
                         */
                        WriteUserEventRequest.create = function create(properties) {
                            return new WriteUserEventRequest(properties);
                        };
    
                        /**
                         * Encodes the specified WriteUserEventRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.WriteUserEventRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IWriteUserEventRequest} message WriteUserEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WriteUserEventRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.userEvent != null && Object.hasOwnProperty.call(message, "userEvent"))
                                $root.google.cloud.discoveryengine.v1beta.UserEvent.encode(message.userEvent, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WriteUserEventRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.WriteUserEventRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.IWriteUserEventRequest} message WriteUserEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WriteUserEventRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WriteUserEventRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.WriteUserEventRequest} WriteUserEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WriteUserEventRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.WriteUserEventRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userEvent = $root.google.cloud.discoveryengine.v1beta.UserEvent.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WriteUserEventRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.WriteUserEventRequest} WriteUserEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WriteUserEventRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WriteUserEventRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WriteUserEventRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.userEvent != null && message.hasOwnProperty("userEvent")) {
                                properties._userEvent = 1;
                                {
                                    var error = $root.google.cloud.discoveryengine.v1beta.UserEvent.verify(message.userEvent);
                                    if (error)
                                        return "userEvent." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a WriteUserEventRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.WriteUserEventRequest} WriteUserEventRequest
                         */
                        WriteUserEventRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.WriteUserEventRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.WriteUserEventRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.userEvent != null) {
                                if (typeof object.userEvent !== "object")
                                    throw TypeError(".google.cloud.discoveryengine.v1beta.WriteUserEventRequest.userEvent: object expected");
                                message.userEvent = $root.google.cloud.discoveryengine.v1beta.UserEvent.fromObject(object.userEvent);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WriteUserEventRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.WriteUserEventRequest} message WriteUserEventRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WriteUserEventRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.parent = "";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.userEvent != null && message.hasOwnProperty("userEvent")) {
                                object.userEvent = $root.google.cloud.discoveryengine.v1beta.UserEvent.toObject(message.userEvent, options);
                                if (options.oneofs)
                                    object._userEvent = "userEvent";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this WriteUserEventRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WriteUserEventRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WriteUserEventRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.WriteUserEventRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WriteUserEventRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.WriteUserEventRequest";
                        };
    
                        return WriteUserEventRequest;
                    })();
    
                    v1beta.CollectUserEventRequest = (function() {
    
                        /**
                         * Properties of a CollectUserEventRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @interface ICollectUserEventRequest
                         * @property {string|null} [parent] CollectUserEventRequest parent
                         * @property {string|null} [userEvent] CollectUserEventRequest userEvent
                         * @property {string|null} [uri] CollectUserEventRequest uri
                         * @property {number|Long|null} [ets] CollectUserEventRequest ets
                         */
    
                        /**
                         * Constructs a new CollectUserEventRequest.
                         * @memberof google.cloud.discoveryengine.v1beta
                         * @classdesc Represents a CollectUserEventRequest.
                         * @implements ICollectUserEventRequest
                         * @constructor
                         * @param {google.cloud.discoveryengine.v1beta.ICollectUserEventRequest=} [properties] Properties to set
                         */
                        function CollectUserEventRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CollectUserEventRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @instance
                         */
                        CollectUserEventRequest.prototype.parent = "";
    
                        /**
                         * CollectUserEventRequest userEvent.
                         * @member {string} userEvent
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @instance
                         */
                        CollectUserEventRequest.prototype.userEvent = "";
    
                        /**
                         * CollectUserEventRequest uri.
                         * @member {string|null|undefined} uri
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @instance
                         */
                        CollectUserEventRequest.prototype.uri = null;
    
                        /**
                         * CollectUserEventRequest ets.
                         * @member {number|Long|null|undefined} ets
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @instance
                         */
                        CollectUserEventRequest.prototype.ets = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CollectUserEventRequest _uri.
                         * @member {"uri"|undefined} _uri
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @instance
                         */
                        Object.defineProperty(CollectUserEventRequest.prototype, "_uri", {
                            get: $util.oneOfGetter($oneOfFields = ["uri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CollectUserEventRequest _ets.
                         * @member {"ets"|undefined} _ets
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @instance
                         */
                        Object.defineProperty(CollectUserEventRequest.prototype, "_ets", {
                            get: $util.oneOfGetter($oneOfFields = ["ets"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CollectUserEventRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICollectUserEventRequest=} [properties] Properties to set
                         * @returns {google.cloud.discoveryengine.v1beta.CollectUserEventRequest} CollectUserEventRequest instance
                         */
                        CollectUserEventRequest.create = function create(properties) {
                            return new CollectUserEventRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CollectUserEventRequest message. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CollectUserEventRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICollectUserEventRequest} message CollectUserEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CollectUserEventRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.userEvent != null && Object.hasOwnProperty.call(message, "userEvent"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.userEvent);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            if (message.ets != null && Object.hasOwnProperty.call(message, "ets"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.ets);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CollectUserEventRequest message, length delimited. Does not implicitly {@link google.cloud.discoveryengine.v1beta.CollectUserEventRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.ICollectUserEventRequest} message CollectUserEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CollectUserEventRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CollectUserEventRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.discoveryengine.v1beta.CollectUserEventRequest} CollectUserEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CollectUserEventRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.discoveryengine.v1beta.CollectUserEventRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.userEvent = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.ets = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CollectUserEventRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.discoveryengine.v1beta.CollectUserEventRequest} CollectUserEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CollectUserEventRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CollectUserEventRequest message.
                         * @function verify
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CollectUserEventRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.userEvent != null && message.hasOwnProperty("userEvent"))
                                if (!$util.isString(message.userEvent))
                                    return "userEvent: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                properties._uri = 1;
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            }
                            if (message.ets != null && message.hasOwnProperty("ets")) {
                                properties._ets = 1;
                                if (!$util.isInteger(message.ets) && !(message.ets && $util.isInteger(message.ets.low) && $util.isInteger(message.ets.high)))
                                    return "ets: integer|Long expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CollectUserEventRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.discoveryengine.v1beta.CollectUserEventRequest} CollectUserEventRequest
                         */
                        CollectUserEventRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.discoveryengine.v1beta.CollectUserEventRequest)
                                return object;
                            var message = new $root.google.cloud.discoveryengine.v1beta.CollectUserEventRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.userEvent != null)
                                message.userEvent = String(object.userEvent);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.ets != null)
                                if ($util.Long)
                                    (message.ets = $util.Long.fromValue(object.ets)).unsigned = false;
                                else if (typeof object.ets === "string")
                                    message.ets = parseInt(object.ets, 10);
                                else if (typeof object.ets === "number")
                                    message.ets = object.ets;
                                else if (typeof object.ets === "object")
                                    message.ets = new $util.LongBits(object.ets.low >>> 0, object.ets.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CollectUserEventRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @static
                         * @param {google.cloud.discoveryengine.v1beta.CollectUserEventRequest} message CollectUserEventRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CollectUserEventRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.userEvent = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.userEvent != null && message.hasOwnProperty("userEvent"))
                                object.userEvent = message.userEvent;
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                object.uri = message.uri;
                                if (options.oneofs)
                                    object._uri = "uri";
                            }
                            if (message.ets != null && message.hasOwnProperty("ets")) {
                                if (typeof message.ets === "number")
                                    object.ets = options.longs === String ? String(message.ets) : message.ets;
                                else
                                    object.ets = options.longs === String ? $util.Long.prototype.toString.call(message.ets) : options.longs === Number ? new $util.LongBits(message.ets.low >>> 0, message.ets.high >>> 0).toNumber() : message.ets;
                                if (options.oneofs)
                                    object._ets = "ets";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CollectUserEventRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CollectUserEventRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CollectUserEventRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.discoveryengine.v1beta.CollectUserEventRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CollectUserEventRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.discoveryengine.v1beta.CollectUserEventRequest";
                        };
    
                        return CollectUserEventRequest;
                    })();
    
                    return v1beta;
                })();
    
                return discoveryengine;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.HttpBody = (function() {
    
                /**
                 * Properties of a HttpBody.
                 * @memberof google.api
                 * @interface IHttpBody
                 * @property {string|null} [contentType] HttpBody contentType
                 * @property {Uint8Array|null} [data] HttpBody data
                 * @property {Array.<google.protobuf.IAny>|null} [extensions] HttpBody extensions
                 */
    
                /**
                 * Constructs a new HttpBody.
                 * @memberof google.api
                 * @classdesc Represents a HttpBody.
                 * @implements IHttpBody
                 * @constructor
                 * @param {google.api.IHttpBody=} [properties] Properties to set
                 */
                function HttpBody(properties) {
                    this.extensions = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpBody contentType.
                 * @member {string} contentType
                 * @memberof google.api.HttpBody
                 * @instance
                 */
                HttpBody.prototype.contentType = "";
    
                /**
                 * HttpBody data.
                 * @member {Uint8Array} data
                 * @memberof google.api.HttpBody
                 * @instance
                 */
                HttpBody.prototype.data = $util.newBuffer([]);
    
                /**
                 * HttpBody extensions.
                 * @member {Array.<google.protobuf.IAny>} extensions
                 * @memberof google.api.HttpBody
                 * @instance
                 */
                HttpBody.prototype.extensions = $util.emptyArray;
    
                /**
                 * Creates a new HttpBody instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {google.api.IHttpBody=} [properties] Properties to set
                 * @returns {google.api.HttpBody} HttpBody instance
                 */
                HttpBody.create = function create(properties) {
                    return new HttpBody(properties);
                };
    
                /**
                 * Encodes the specified HttpBody message. Does not implicitly {@link google.api.HttpBody.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {google.api.IHttpBody} message HttpBody message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpBody.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.contentType != null && Object.hasOwnProperty.call(message, "contentType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.contentType);
                    if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);
                    if (message.extensions != null && message.extensions.length)
                        for (var i = 0; i < message.extensions.length; ++i)
                            $root.google.protobuf.Any.encode(message.extensions[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpBody message, length delimited. Does not implicitly {@link google.api.HttpBody.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {google.api.IHttpBody} message HttpBody message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpBody.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpBody message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpBody} HttpBody
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpBody.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpBody();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.contentType = reader.string();
                                break;
                            }
                        case 2: {
                                message.data = reader.bytes();
                                break;
                            }
                        case 3: {
                                if (!(message.extensions && message.extensions.length))
                                    message.extensions = [];
                                message.extensions.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpBody message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpBody} HttpBody
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpBody.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpBody message.
                 * @function verify
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpBody.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.contentType != null && message.hasOwnProperty("contentType"))
                        if (!$util.isString(message.contentType))
                            return "contentType: string expected";
                    if (message.data != null && message.hasOwnProperty("data"))
                        if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                            return "data: buffer expected";
                    if (message.extensions != null && message.hasOwnProperty("extensions")) {
                        if (!Array.isArray(message.extensions))
                            return "extensions: array expected";
                        for (var i = 0; i < message.extensions.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.extensions[i]);
                            if (error)
                                return "extensions." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpBody message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpBody} HttpBody
                 */
                HttpBody.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpBody)
                        return object;
                    var message = new $root.google.api.HttpBody();
                    if (object.contentType != null)
                        message.contentType = String(object.contentType);
                    if (object.data != null)
                        if (typeof object.data === "string")
                            $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                        else if (object.data.length >= 0)
                            message.data = object.data;
                    if (object.extensions) {
                        if (!Array.isArray(object.extensions))
                            throw TypeError(".google.api.HttpBody.extensions: array expected");
                        message.extensions = [];
                        for (var i = 0; i < object.extensions.length; ++i) {
                            if (typeof object.extensions[i] !== "object")
                                throw TypeError(".google.api.HttpBody.extensions: object expected");
                            message.extensions[i] = $root.google.protobuf.Any.fromObject(object.extensions[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpBody message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {google.api.HttpBody} message HttpBody
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpBody.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.extensions = [];
                    if (options.defaults) {
                        object.contentType = "";
                        if (options.bytes === String)
                            object.data = "";
                        else {
                            object.data = [];
                            if (options.bytes !== Array)
                                object.data = $util.newBuffer(object.data);
                        }
                    }
                    if (message.contentType != null && message.hasOwnProperty("contentType"))
                        object.contentType = message.contentType;
                    if (message.data != null && message.hasOwnProperty("data"))
                        object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                    if (message.extensions && message.extensions.length) {
                        object.extensions = [];
                        for (var j = 0; j < message.extensions.length; ++j)
                            object.extensions[j] = $root.google.protobuf.Any.toObject(message.extensions[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this HttpBody to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpBody
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpBody.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpBody
                 * @function getTypeUrl
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpBody.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpBody";
                };
    
                return HttpBody;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Struct = (function() {
    
                /**
                 * Properties of a Struct.
                 * @memberof google.protobuf
                 * @interface IStruct
                 * @property {Object.<string,google.protobuf.IValue>|null} [fields] Struct fields
                 */
    
                /**
                 * Constructs a new Struct.
                 * @memberof google.protobuf
                 * @classdesc Represents a Struct.
                 * @implements IStruct
                 * @constructor
                 * @param {google.protobuf.IStruct=} [properties] Properties to set
                 */
                function Struct(properties) {
                    this.fields = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Struct fields.
                 * @member {Object.<string,google.protobuf.IValue>} fields
                 * @memberof google.protobuf.Struct
                 * @instance
                 */
                Struct.prototype.fields = $util.emptyObject;
    
                /**
                 * Creates a new Struct instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct=} [properties] Properties to set
                 * @returns {google.protobuf.Struct} Struct instance
                 */
                Struct.create = function create(properties) {
                    return new Struct(properties);
                };
    
                /**
                 * Encodes the specified Struct message. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct} message Struct message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Struct.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.fields != null && Object.hasOwnProperty.call(message, "fields"))
                        for (var keys = Object.keys(message.fields), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.google.protobuf.Value.encode(message.fields[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    return writer;
                };
    
                /**
                 * Encodes the specified Struct message, length delimited. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct} message Struct message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Struct.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Struct message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Struct} Struct
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Struct.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Struct(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (message.fields === $util.emptyObject)
                                    message.fields = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = null;
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = $root.google.protobuf.Value.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.fields[key] = value;
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Struct message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Struct} Struct
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Struct.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Struct message.
                 * @function verify
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Struct.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.fields != null && message.hasOwnProperty("fields")) {
                        if (!$util.isObject(message.fields))
                            return "fields: object expected";
                        var key = Object.keys(message.fields);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.google.protobuf.Value.verify(message.fields[key[i]]);
                            if (error)
                                return "fields." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Struct message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Struct} Struct
                 */
                Struct.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Struct)
                        return object;
                    var message = new $root.google.protobuf.Struct();
                    if (object.fields) {
                        if (typeof object.fields !== "object")
                            throw TypeError(".google.protobuf.Struct.fields: object expected");
                        message.fields = {};
                        for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {
                            if (typeof object.fields[keys[i]] !== "object")
                                throw TypeError(".google.protobuf.Struct.fields: object expected");
                            message.fields[keys[i]] = $root.google.protobuf.Value.fromObject(object.fields[keys[i]]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Struct message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.Struct} message Struct
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Struct.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.fields = {};
                    var keys2;
                    if (message.fields && (keys2 = Object.keys(message.fields)).length) {
                        object.fields = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.fields[keys2[j]] = $root.google.protobuf.Value.toObject(message.fields[keys2[j]], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Struct to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Struct
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Struct.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Struct
                 * @function getTypeUrl
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Struct.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Struct";
                };
    
                return Struct;
            })();
    
            protobuf.Value = (function() {
    
                /**
                 * Properties of a Value.
                 * @memberof google.protobuf
                 * @interface IValue
                 * @property {google.protobuf.NullValue|null} [nullValue] Value nullValue
                 * @property {number|null} [numberValue] Value numberValue
                 * @property {string|null} [stringValue] Value stringValue
                 * @property {boolean|null} [boolValue] Value boolValue
                 * @property {google.protobuf.IStruct|null} [structValue] Value structValue
                 * @property {google.protobuf.IListValue|null} [listValue] Value listValue
                 */
    
                /**
                 * Constructs a new Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a Value.
                 * @implements IValue
                 * @constructor
                 * @param {google.protobuf.IValue=} [properties] Properties to set
                 */
                function Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Value nullValue.
                 * @member {google.protobuf.NullValue|null|undefined} nullValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.nullValue = null;
    
                /**
                 * Value numberValue.
                 * @member {number|null|undefined} numberValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.numberValue = null;
    
                /**
                 * Value stringValue.
                 * @member {string|null|undefined} stringValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.stringValue = null;
    
                /**
                 * Value boolValue.
                 * @member {boolean|null|undefined} boolValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.boolValue = null;
    
                /**
                 * Value structValue.
                 * @member {google.protobuf.IStruct|null|undefined} structValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.structValue = null;
    
                /**
                 * Value listValue.
                 * @member {google.protobuf.IListValue|null|undefined} listValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.listValue = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Value kind.
                 * @member {"nullValue"|"numberValue"|"stringValue"|"boolValue"|"structValue"|"listValue"|undefined} kind
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Object.defineProperty(Value.prototype, "kind", {
                    get: $util.oneOfGetter($oneOfFields = ["nullValue", "numberValue", "stringValue", "boolValue", "structValue", "listValue"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue=} [properties] Properties to set
                 * @returns {google.protobuf.Value} Value instance
                 */
                Value.create = function create(properties) {
                    return new Value(properties);
                };
    
                /**
                 * Encodes the specified Value message. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.nullValue != null && Object.hasOwnProperty.call(message, "nullValue"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.nullValue);
                    if (message.numberValue != null && Object.hasOwnProperty.call(message, "numberValue"))
                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.numberValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValue);
                    if (message.boolValue != null && Object.hasOwnProperty.call(message, "boolValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.boolValue);
                    if (message.structValue != null && Object.hasOwnProperty.call(message, "structValue"))
                        $root.google.protobuf.Struct.encode(message.structValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.listValue != null && Object.hasOwnProperty.call(message, "listValue"))
                        $root.google.protobuf.ListValue.encode(message.listValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Value message, length delimited. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.nullValue = reader.int32();
                                break;
                            }
                        case 2: {
                                message.numberValue = reader.double();
                                break;
                            }
                        case 3: {
                                message.stringValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.boolValue = reader.bool();
                                break;
                            }
                        case 5: {
                                message.structValue = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                break;
                            }
                        case 6: {
                                message.listValue = $root.google.protobuf.ListValue.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Value message.
                 * @function verify
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                        properties.kind = 1;
                        switch (message.nullValue) {
                        default:
                            return "nullValue: enum value expected";
                        case 0:
                            break;
                        }
                    }
                    if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (typeof message.numberValue !== "number")
                            return "numberValue: number expected";
                    }
                    if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (!$util.isString(message.stringValue))
                            return "stringValue: string expected";
                    }
                    if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (typeof message.boolValue !== "boolean")
                            return "boolValue: boolean expected";
                    }
                    if (message.structValue != null && message.hasOwnProperty("structValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        {
                            var error = $root.google.protobuf.Struct.verify(message.structValue);
                            if (error)
                                return "structValue." + error;
                        }
                    }
                    if (message.listValue != null && message.hasOwnProperty("listValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        {
                            var error = $root.google.protobuf.ListValue.verify(message.listValue);
                            if (error)
                                return "listValue." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Value} Value
                 */
                Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Value)
                        return object;
                    var message = new $root.google.protobuf.Value();
                    switch (object.nullValue) {
                    default:
                        if (typeof object.nullValue === "number") {
                            message.nullValue = object.nullValue;
                            break;
                        }
                        break;
                    case "NULL_VALUE":
                    case 0:
                        message.nullValue = 0;
                        break;
                    }
                    if (object.numberValue != null)
                        message.numberValue = Number(object.numberValue);
                    if (object.stringValue != null)
                        message.stringValue = String(object.stringValue);
                    if (object.boolValue != null)
                        message.boolValue = Boolean(object.boolValue);
                    if (object.structValue != null) {
                        if (typeof object.structValue !== "object")
                            throw TypeError(".google.protobuf.Value.structValue: object expected");
                        message.structValue = $root.google.protobuf.Struct.fromObject(object.structValue);
                    }
                    if (object.listValue != null) {
                        if (typeof object.listValue !== "object")
                            throw TypeError(".google.protobuf.Value.listValue: object expected");
                        message.listValue = $root.google.protobuf.ListValue.fromObject(object.listValue);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.Value} message Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                        object.nullValue = options.enums === String ? $root.google.protobuf.NullValue[message.nullValue] === undefined ? message.nullValue : $root.google.protobuf.NullValue[message.nullValue] : message.nullValue;
                        if (options.oneofs)
                            object.kind = "nullValue";
                    }
                    if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                        object.numberValue = options.json && !isFinite(message.numberValue) ? String(message.numberValue) : message.numberValue;
                        if (options.oneofs)
                            object.kind = "numberValue";
                    }
                    if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                        object.stringValue = message.stringValue;
                        if (options.oneofs)
                            object.kind = "stringValue";
                    }
                    if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                        object.boolValue = message.boolValue;
                        if (options.oneofs)
                            object.kind = "boolValue";
                    }
                    if (message.structValue != null && message.hasOwnProperty("structValue")) {
                        object.structValue = $root.google.protobuf.Struct.toObject(message.structValue, options);
                        if (options.oneofs)
                            object.kind = "structValue";
                    }
                    if (message.listValue != null && message.hasOwnProperty("listValue")) {
                        object.listValue = $root.google.protobuf.ListValue.toObject(message.listValue, options);
                        if (options.oneofs)
                            object.kind = "listValue";
                    }
                    return object;
                };
    
                /**
                 * Converts this Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Value";
                };
    
                return Value;
            })();
    
            /**
             * NullValue enum.
             * @name google.protobuf.NullValue
             * @enum {number}
             * @property {number} NULL_VALUE=0 NULL_VALUE value
             */
            protobuf.NullValue = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "NULL_VALUE"] = 0;
                return values;
            })();
    
            protobuf.ListValue = (function() {
    
                /**
                 * Properties of a ListValue.
                 * @memberof google.protobuf
                 * @interface IListValue
                 * @property {Array.<google.protobuf.IValue>|null} [values] ListValue values
                 */
    
                /**
                 * Constructs a new ListValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a ListValue.
                 * @implements IListValue
                 * @constructor
                 * @param {google.protobuf.IListValue=} [properties] Properties to set
                 */
                function ListValue(properties) {
                    this.values = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListValue values.
                 * @member {Array.<google.protobuf.IValue>} values
                 * @memberof google.protobuf.ListValue
                 * @instance
                 */
                ListValue.prototype.values = $util.emptyArray;
    
                /**
                 * Creates a new ListValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue=} [properties] Properties to set
                 * @returns {google.protobuf.ListValue} ListValue instance
                 */
                ListValue.create = function create(properties) {
                    return new ListValue(properties);
                };
    
                /**
                 * Encodes the specified ListValue message. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.values != null && message.values.length)
                        for (var i = 0; i < message.values.length; ++i)
                            $root.google.protobuf.Value.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ListValue message, length delimited. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ListValue} ListValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ListValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.values && message.values.length))
                                    message.values = [];
                                message.values.push($root.google.protobuf.Value.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ListValue} ListValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListValue message.
                 * @function verify
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.values != null && message.hasOwnProperty("values")) {
                        if (!Array.isArray(message.values))
                            return "values: array expected";
                        for (var i = 0; i < message.values.length; ++i) {
                            var error = $root.google.protobuf.Value.verify(message.values[i]);
                            if (error)
                                return "values." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ListValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ListValue} ListValue
                 */
                ListValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ListValue)
                        return object;
                    var message = new $root.google.protobuf.ListValue();
                    if (object.values) {
                        if (!Array.isArray(object.values))
                            throw TypeError(".google.protobuf.ListValue.values: array expected");
                        message.values = [];
                        for (var i = 0; i < object.values.length; ++i) {
                            if (typeof object.values[i] !== "object")
                                throw TypeError(".google.protobuf.ListValue.values: object expected");
                            message.values[i] = $root.google.protobuf.Value.fromObject(object.values[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.ListValue} message ListValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.values = [];
                    if (message.values && message.values.length) {
                        object.values = [];
                        for (var j = 0; j < message.values.length; ++j)
                            object.values[j] = $root.google.protobuf.Value.toObject(message.values[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ListValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ListValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ListValue";
                };
    
                return ListValue;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            return protobuf;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Date = (function() {
    
                /**
                 * Properties of a Date.
                 * @memberof google.type
                 * @interface IDate
                 * @property {number|null} [year] Date year
                 * @property {number|null} [month] Date month
                 * @property {number|null} [day] Date day
                 */
    
                /**
                 * Constructs a new Date.
                 * @memberof google.type
                 * @classdesc Represents a Date.
                 * @implements IDate
                 * @constructor
                 * @param {google.type.IDate=} [properties] Properties to set
                 */
                function Date(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Date year.
                 * @member {number} year
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.year = 0;
    
                /**
                 * Date month.
                 * @member {number} month
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.month = 0;
    
                /**
                 * Date day.
                 * @member {number} day
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.day = 0;
    
                /**
                 * Creates a new Date instance using the specified properties.
                 * @function create
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate=} [properties] Properties to set
                 * @returns {google.type.Date} Date instance
                 */
                Date.create = function create(properties) {
                    return new Date(properties);
                };
    
                /**
                 * Encodes the specified Date message. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.year != null && Object.hasOwnProperty.call(message, "year"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.year);
                    if (message.month != null && Object.hasOwnProperty.call(message, "month"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.month);
                    if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day);
                    return writer;
                };
    
                /**
                 * Encodes the specified Date message, length delimited. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Date();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.year = reader.int32();
                                break;
                            }
                        case 2: {
                                message.month = reader.int32();
                                break;
                            }
                        case 3: {
                                message.day = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Date message.
                 * @function verify
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Date.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.year != null && message.hasOwnProperty("year"))
                        if (!$util.isInteger(message.year))
                            return "year: integer expected";
                    if (message.month != null && message.hasOwnProperty("month"))
                        if (!$util.isInteger(message.month))
                            return "month: integer expected";
                    if (message.day != null && message.hasOwnProperty("day"))
                        if (!$util.isInteger(message.day))
                            return "day: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Date message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Date} Date
                 */
                Date.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Date)
                        return object;
                    var message = new $root.google.type.Date();
                    if (object.year != null)
                        message.year = object.year | 0;
                    if (object.month != null)
                        message.month = object.month | 0;
                    if (object.day != null)
                        message.day = object.day | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Date message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.Date} message Date
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Date.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.year = 0;
                        object.month = 0;
                        object.day = 0;
                    }
                    if (message.year != null && message.hasOwnProperty("year"))
                        object.year = message.year;
                    if (message.month != null && message.hasOwnProperty("month"))
                        object.month = message.month;
                    if (message.day != null && message.hasOwnProperty("day"))
                        object.day = message.day;
                    return object;
                };
    
                /**
                 * Converts this Date to JSON.
                 * @function toJSON
                 * @memberof google.type.Date
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Date.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Date
                 * @function getTypeUrl
                 * @memberof google.type.Date
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Date.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Date";
                };
    
                return Date;
            })();
    
            return type;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        return google;
    })();

    return $root;
});
