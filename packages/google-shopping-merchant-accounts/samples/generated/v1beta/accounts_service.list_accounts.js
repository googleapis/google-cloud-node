// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main() {
  // [START merchantapi_v1beta_generated_AccountsService_ListAccounts_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Optional. The maximum number of accounts to return. The service may return
   *  fewer than this value.  If unspecified, at most 250 accounts are returned.
   *  The maximum value is 500; values above 500 are coerced to 500.
   */
  // const pageSize = 1234
  /**
   *  Optional. A page token, received from a previous `ListAccounts` call.
   *  Provide this to retrieve the subsequent page.
   *  When paginating, all other parameters provided to `ListAccounts` must match
   *  the call that provided the page token.
   */
  // const pageToken = 'abc123'
  /**
   *  Optional. Returns only accounts that match the
   *  filter (/merchant/api/guides/accounts/filter).
   *  For more details, see the
   *  filter syntax reference (/merchant/api/guides/accounts/filter-syntax).
   */
  // const filter = 'abc123'

  // Imports the Accounts library
  const {AccountsServiceClient} = require('@google-shopping/accounts').v1beta;

  // Instantiates a client
  const accountsClient = new AccountsServiceClient();

  async function callListAccounts() {
    // Construct request
    const request = {
    };

    // Run request
    const iterable = accountsClient.listAccountsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListAccounts();
  // [END merchantapi_v1beta_generated_AccountsService_ListAccounts_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
