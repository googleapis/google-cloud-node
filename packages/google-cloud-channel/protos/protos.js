// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_channel_protos || ($protobuf.roots._google_cloud_channel_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.channel = (function() {
    
                /**
                 * Namespace channel.
                 * @memberof google.cloud
                 * @namespace
                 */
                var channel = {};
    
                channel.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.channel
                     * @namespace
                     */
                    var v1 = {};
    
                    /**
                     * ChannelPartnerLinkView enum.
                     * @name google.cloud.channel.v1.ChannelPartnerLinkView
                     * @enum {number}
                     * @property {number} UNSPECIFIED=0 UNSPECIFIED value
                     * @property {number} BASIC=1 BASIC value
                     * @property {number} FULL=2 FULL value
                     */
                    v1.ChannelPartnerLinkView = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNSPECIFIED"] = 0;
                        values[valuesById[1] = "BASIC"] = 1;
                        values[valuesById[2] = "FULL"] = 2;
                        return values;
                    })();
    
                    /**
                     * ChannelPartnerLinkState enum.
                     * @name google.cloud.channel.v1.ChannelPartnerLinkState
                     * @enum {number}
                     * @property {number} CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED=0 CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED value
                     * @property {number} INVITED=1 INVITED value
                     * @property {number} ACTIVE=2 ACTIVE value
                     * @property {number} REVOKED=3 REVOKED value
                     * @property {number} SUSPENDED=4 SUSPENDED value
                     */
                    v1.ChannelPartnerLinkState = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "INVITED"] = 1;
                        values[valuesById[2] = "ACTIVE"] = 2;
                        values[valuesById[3] = "REVOKED"] = 3;
                        values[valuesById[4] = "SUSPENDED"] = 4;
                        return values;
                    })();
    
                    v1.ChannelPartnerLink = (function() {
    
                        /**
                         * Properties of a ChannelPartnerLink.
                         * @memberof google.cloud.channel.v1
                         * @interface IChannelPartnerLink
                         * @property {string|null} [name] ChannelPartnerLink name
                         * @property {string|null} [resellerCloudIdentityId] ChannelPartnerLink resellerCloudIdentityId
                         * @property {google.cloud.channel.v1.ChannelPartnerLinkState|null} [linkState] ChannelPartnerLink linkState
                         * @property {string|null} [inviteLinkUri] ChannelPartnerLink inviteLinkUri
                         * @property {google.protobuf.ITimestamp|null} [createTime] ChannelPartnerLink createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] ChannelPartnerLink updateTime
                         * @property {string|null} [publicId] ChannelPartnerLink publicId
                         * @property {google.cloud.channel.v1.ICloudIdentityInfo|null} [channelPartnerCloudIdentityInfo] ChannelPartnerLink channelPartnerCloudIdentityInfo
                         */
    
                        /**
                         * Constructs a new ChannelPartnerLink.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ChannelPartnerLink.
                         * @implements IChannelPartnerLink
                         * @constructor
                         * @param {google.cloud.channel.v1.IChannelPartnerLink=} [properties] Properties to set
                         */
                        function ChannelPartnerLink(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ChannelPartnerLink name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @instance
                         */
                        ChannelPartnerLink.prototype.name = "";
    
                        /**
                         * ChannelPartnerLink resellerCloudIdentityId.
                         * @member {string} resellerCloudIdentityId
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @instance
                         */
                        ChannelPartnerLink.prototype.resellerCloudIdentityId = "";
    
                        /**
                         * ChannelPartnerLink linkState.
                         * @member {google.cloud.channel.v1.ChannelPartnerLinkState} linkState
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @instance
                         */
                        ChannelPartnerLink.prototype.linkState = 0;
    
                        /**
                         * ChannelPartnerLink inviteLinkUri.
                         * @member {string} inviteLinkUri
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @instance
                         */
                        ChannelPartnerLink.prototype.inviteLinkUri = "";
    
                        /**
                         * ChannelPartnerLink createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @instance
                         */
                        ChannelPartnerLink.prototype.createTime = null;
    
                        /**
                         * ChannelPartnerLink updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @instance
                         */
                        ChannelPartnerLink.prototype.updateTime = null;
    
                        /**
                         * ChannelPartnerLink publicId.
                         * @member {string} publicId
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @instance
                         */
                        ChannelPartnerLink.prototype.publicId = "";
    
                        /**
                         * ChannelPartnerLink channelPartnerCloudIdentityInfo.
                         * @member {google.cloud.channel.v1.ICloudIdentityInfo|null|undefined} channelPartnerCloudIdentityInfo
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @instance
                         */
                        ChannelPartnerLink.prototype.channelPartnerCloudIdentityInfo = null;
    
                        /**
                         * Creates a new ChannelPartnerLink instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @static
                         * @param {google.cloud.channel.v1.IChannelPartnerLink=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ChannelPartnerLink} ChannelPartnerLink instance
                         */
                        ChannelPartnerLink.create = function create(properties) {
                            return new ChannelPartnerLink(properties);
                        };
    
                        /**
                         * Encodes the specified ChannelPartnerLink message. Does not implicitly {@link google.cloud.channel.v1.ChannelPartnerLink.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @static
                         * @param {google.cloud.channel.v1.IChannelPartnerLink} message ChannelPartnerLink message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChannelPartnerLink.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.resellerCloudIdentityId != null && Object.hasOwnProperty.call(message, "resellerCloudIdentityId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.resellerCloudIdentityId);
                            if (message.linkState != null && Object.hasOwnProperty.call(message, "linkState"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.linkState);
                            if (message.inviteLinkUri != null && Object.hasOwnProperty.call(message, "inviteLinkUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.inviteLinkUri);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.publicId != null && Object.hasOwnProperty.call(message, "publicId"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.publicId);
                            if (message.channelPartnerCloudIdentityInfo != null && Object.hasOwnProperty.call(message, "channelPartnerCloudIdentityInfo"))
                                $root.google.cloud.channel.v1.CloudIdentityInfo.encode(message.channelPartnerCloudIdentityInfo, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ChannelPartnerLink message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ChannelPartnerLink.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @static
                         * @param {google.cloud.channel.v1.IChannelPartnerLink} message ChannelPartnerLink message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChannelPartnerLink.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ChannelPartnerLink message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ChannelPartnerLink} ChannelPartnerLink
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChannelPartnerLink.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ChannelPartnerLink();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.resellerCloudIdentityId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.linkState = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.inviteLinkUri = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.publicId = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.channelPartnerCloudIdentityInfo = $root.google.cloud.channel.v1.CloudIdentityInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ChannelPartnerLink message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ChannelPartnerLink} ChannelPartnerLink
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChannelPartnerLink.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ChannelPartnerLink message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ChannelPartnerLink.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.resellerCloudIdentityId != null && message.hasOwnProperty("resellerCloudIdentityId"))
                                if (!$util.isString(message.resellerCloudIdentityId))
                                    return "resellerCloudIdentityId: string expected";
                            if (message.linkState != null && message.hasOwnProperty("linkState"))
                                switch (message.linkState) {
                                default:
                                    return "linkState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.inviteLinkUri != null && message.hasOwnProperty("inviteLinkUri"))
                                if (!$util.isString(message.inviteLinkUri))
                                    return "inviteLinkUri: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.publicId != null && message.hasOwnProperty("publicId"))
                                if (!$util.isString(message.publicId))
                                    return "publicId: string expected";
                            if (message.channelPartnerCloudIdentityInfo != null && message.hasOwnProperty("channelPartnerCloudIdentityInfo")) {
                                var error = $root.google.cloud.channel.v1.CloudIdentityInfo.verify(message.channelPartnerCloudIdentityInfo);
                                if (error)
                                    return "channelPartnerCloudIdentityInfo." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ChannelPartnerLink message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ChannelPartnerLink} ChannelPartnerLink
                         */
                        ChannelPartnerLink.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ChannelPartnerLink)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ChannelPartnerLink();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.resellerCloudIdentityId != null)
                                message.resellerCloudIdentityId = String(object.resellerCloudIdentityId);
                            switch (object.linkState) {
                            default:
                                if (typeof object.linkState === "number") {
                                    message.linkState = object.linkState;
                                    break;
                                }
                                break;
                            case "CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED":
                            case 0:
                                message.linkState = 0;
                                break;
                            case "INVITED":
                            case 1:
                                message.linkState = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.linkState = 2;
                                break;
                            case "REVOKED":
                            case 3:
                                message.linkState = 3;
                                break;
                            case "SUSPENDED":
                            case 4:
                                message.linkState = 4;
                                break;
                            }
                            if (object.inviteLinkUri != null)
                                message.inviteLinkUri = String(object.inviteLinkUri);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ChannelPartnerLink.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ChannelPartnerLink.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.publicId != null)
                                message.publicId = String(object.publicId);
                            if (object.channelPartnerCloudIdentityInfo != null) {
                                if (typeof object.channelPartnerCloudIdentityInfo !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ChannelPartnerLink.channelPartnerCloudIdentityInfo: object expected");
                                message.channelPartnerCloudIdentityInfo = $root.google.cloud.channel.v1.CloudIdentityInfo.fromObject(object.channelPartnerCloudIdentityInfo);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ChannelPartnerLink message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @static
                         * @param {google.cloud.channel.v1.ChannelPartnerLink} message ChannelPartnerLink
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ChannelPartnerLink.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.resellerCloudIdentityId = "";
                                object.linkState = options.enums === String ? "CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED" : 0;
                                object.inviteLinkUri = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.publicId = "";
                                object.channelPartnerCloudIdentityInfo = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.resellerCloudIdentityId != null && message.hasOwnProperty("resellerCloudIdentityId"))
                                object.resellerCloudIdentityId = message.resellerCloudIdentityId;
                            if (message.linkState != null && message.hasOwnProperty("linkState"))
                                object.linkState = options.enums === String ? $root.google.cloud.channel.v1.ChannelPartnerLinkState[message.linkState] === undefined ? message.linkState : $root.google.cloud.channel.v1.ChannelPartnerLinkState[message.linkState] : message.linkState;
                            if (message.inviteLinkUri != null && message.hasOwnProperty("inviteLinkUri"))
                                object.inviteLinkUri = message.inviteLinkUri;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.publicId != null && message.hasOwnProperty("publicId"))
                                object.publicId = message.publicId;
                            if (message.channelPartnerCloudIdentityInfo != null && message.hasOwnProperty("channelPartnerCloudIdentityInfo"))
                                object.channelPartnerCloudIdentityInfo = $root.google.cloud.channel.v1.CloudIdentityInfo.toObject(message.channelPartnerCloudIdentityInfo, options);
                            return object;
                        };
    
                        /**
                         * Converts this ChannelPartnerLink to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ChannelPartnerLink.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ChannelPartnerLink
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ChannelPartnerLink
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ChannelPartnerLink.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ChannelPartnerLink";
                        };
    
                        return ChannelPartnerLink;
                    })();
    
                    v1.EduData = (function() {
    
                        /**
                         * Properties of an EduData.
                         * @memberof google.cloud.channel.v1
                         * @interface IEduData
                         * @property {google.cloud.channel.v1.EduData.InstituteType|null} [instituteType] EduData instituteType
                         * @property {google.cloud.channel.v1.EduData.InstituteSize|null} [instituteSize] EduData instituteSize
                         * @property {string|null} [website] EduData website
                         */
    
                        /**
                         * Constructs a new EduData.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an EduData.
                         * @implements IEduData
                         * @constructor
                         * @param {google.cloud.channel.v1.IEduData=} [properties] Properties to set
                         */
                        function EduData(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EduData instituteType.
                         * @member {google.cloud.channel.v1.EduData.InstituteType} instituteType
                         * @memberof google.cloud.channel.v1.EduData
                         * @instance
                         */
                        EduData.prototype.instituteType = 0;
    
                        /**
                         * EduData instituteSize.
                         * @member {google.cloud.channel.v1.EduData.InstituteSize} instituteSize
                         * @memberof google.cloud.channel.v1.EduData
                         * @instance
                         */
                        EduData.prototype.instituteSize = 0;
    
                        /**
                         * EduData website.
                         * @member {string} website
                         * @memberof google.cloud.channel.v1.EduData
                         * @instance
                         */
                        EduData.prototype.website = "";
    
                        /**
                         * Creates a new EduData instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.EduData
                         * @static
                         * @param {google.cloud.channel.v1.IEduData=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.EduData} EduData instance
                         */
                        EduData.create = function create(properties) {
                            return new EduData(properties);
                        };
    
                        /**
                         * Encodes the specified EduData message. Does not implicitly {@link google.cloud.channel.v1.EduData.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.EduData
                         * @static
                         * @param {google.cloud.channel.v1.IEduData} message EduData message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EduData.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instituteType != null && Object.hasOwnProperty.call(message, "instituteType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.instituteType);
                            if (message.instituteSize != null && Object.hasOwnProperty.call(message, "instituteSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.instituteSize);
                            if (message.website != null && Object.hasOwnProperty.call(message, "website"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.website);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EduData message, length delimited. Does not implicitly {@link google.cloud.channel.v1.EduData.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.EduData
                         * @static
                         * @param {google.cloud.channel.v1.IEduData} message EduData message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EduData.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EduData message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.EduData
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.EduData} EduData
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EduData.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.EduData();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.instituteType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.instituteSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.website = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EduData message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.EduData
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.EduData} EduData
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EduData.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EduData message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.EduData
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EduData.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instituteType != null && message.hasOwnProperty("instituteType"))
                                switch (message.instituteType) {
                                default:
                                    return "instituteType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.instituteSize != null && message.hasOwnProperty("instituteSize"))
                                switch (message.instituteSize) {
                                default:
                                    return "instituteSize: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.website != null && message.hasOwnProperty("website"))
                                if (!$util.isString(message.website))
                                    return "website: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EduData message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.EduData
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.EduData} EduData
                         */
                        EduData.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.EduData)
                                return object;
                            var message = new $root.google.cloud.channel.v1.EduData();
                            switch (object.instituteType) {
                            default:
                                if (typeof object.instituteType === "number") {
                                    message.instituteType = object.instituteType;
                                    break;
                                }
                                break;
                            case "INSTITUTE_TYPE_UNSPECIFIED":
                            case 0:
                                message.instituteType = 0;
                                break;
                            case "K12":
                            case 1:
                                message.instituteType = 1;
                                break;
                            case "UNIVERSITY":
                            case 2:
                                message.instituteType = 2;
                                break;
                            }
                            switch (object.instituteSize) {
                            default:
                                if (typeof object.instituteSize === "number") {
                                    message.instituteSize = object.instituteSize;
                                    break;
                                }
                                break;
                            case "INSTITUTE_SIZE_UNSPECIFIED":
                            case 0:
                                message.instituteSize = 0;
                                break;
                            case "SIZE_1_100":
                            case 1:
                                message.instituteSize = 1;
                                break;
                            case "SIZE_101_500":
                            case 2:
                                message.instituteSize = 2;
                                break;
                            case "SIZE_501_1000":
                            case 3:
                                message.instituteSize = 3;
                                break;
                            case "SIZE_1001_2000":
                            case 4:
                                message.instituteSize = 4;
                                break;
                            case "SIZE_2001_5000":
                            case 5:
                                message.instituteSize = 5;
                                break;
                            case "SIZE_5001_10000":
                            case 6:
                                message.instituteSize = 6;
                                break;
                            case "SIZE_10001_OR_MORE":
                            case 7:
                                message.instituteSize = 7;
                                break;
                            }
                            if (object.website != null)
                                message.website = String(object.website);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EduData message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.EduData
                         * @static
                         * @param {google.cloud.channel.v1.EduData} message EduData
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EduData.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instituteType = options.enums === String ? "INSTITUTE_TYPE_UNSPECIFIED" : 0;
                                object.instituteSize = options.enums === String ? "INSTITUTE_SIZE_UNSPECIFIED" : 0;
                                object.website = "";
                            }
                            if (message.instituteType != null && message.hasOwnProperty("instituteType"))
                                object.instituteType = options.enums === String ? $root.google.cloud.channel.v1.EduData.InstituteType[message.instituteType] === undefined ? message.instituteType : $root.google.cloud.channel.v1.EduData.InstituteType[message.instituteType] : message.instituteType;
                            if (message.instituteSize != null && message.hasOwnProperty("instituteSize"))
                                object.instituteSize = options.enums === String ? $root.google.cloud.channel.v1.EduData.InstituteSize[message.instituteSize] === undefined ? message.instituteSize : $root.google.cloud.channel.v1.EduData.InstituteSize[message.instituteSize] : message.instituteSize;
                            if (message.website != null && message.hasOwnProperty("website"))
                                object.website = message.website;
                            return object;
                        };
    
                        /**
                         * Converts this EduData to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.EduData
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EduData.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EduData
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.EduData
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EduData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.EduData";
                        };
    
                        /**
                         * InstituteType enum.
                         * @name google.cloud.channel.v1.EduData.InstituteType
                         * @enum {number}
                         * @property {number} INSTITUTE_TYPE_UNSPECIFIED=0 INSTITUTE_TYPE_UNSPECIFIED value
                         * @property {number} K12=1 K12 value
                         * @property {number} UNIVERSITY=2 UNIVERSITY value
                         */
                        EduData.InstituteType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "INSTITUTE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "K12"] = 1;
                            values[valuesById[2] = "UNIVERSITY"] = 2;
                            return values;
                        })();
    
                        /**
                         * InstituteSize enum.
                         * @name google.cloud.channel.v1.EduData.InstituteSize
                         * @enum {number}
                         * @property {number} INSTITUTE_SIZE_UNSPECIFIED=0 INSTITUTE_SIZE_UNSPECIFIED value
                         * @property {number} SIZE_1_100=1 SIZE_1_100 value
                         * @property {number} SIZE_101_500=2 SIZE_101_500 value
                         * @property {number} SIZE_501_1000=3 SIZE_501_1000 value
                         * @property {number} SIZE_1001_2000=4 SIZE_1001_2000 value
                         * @property {number} SIZE_2001_5000=5 SIZE_2001_5000 value
                         * @property {number} SIZE_5001_10000=6 SIZE_5001_10000 value
                         * @property {number} SIZE_10001_OR_MORE=7 SIZE_10001_OR_MORE value
                         */
                        EduData.InstituteSize = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "INSTITUTE_SIZE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SIZE_1_100"] = 1;
                            values[valuesById[2] = "SIZE_101_500"] = 2;
                            values[valuesById[3] = "SIZE_501_1000"] = 3;
                            values[valuesById[4] = "SIZE_1001_2000"] = 4;
                            values[valuesById[5] = "SIZE_2001_5000"] = 5;
                            values[valuesById[6] = "SIZE_5001_10000"] = 6;
                            values[valuesById[7] = "SIZE_10001_OR_MORE"] = 7;
                            return values;
                        })();
    
                        return EduData;
                    })();
    
                    v1.CloudIdentityInfo = (function() {
    
                        /**
                         * Properties of a CloudIdentityInfo.
                         * @memberof google.cloud.channel.v1
                         * @interface ICloudIdentityInfo
                         * @property {google.cloud.channel.v1.CloudIdentityInfo.CustomerType|null} [customerType] CloudIdentityInfo customerType
                         * @property {string|null} [primaryDomain] CloudIdentityInfo primaryDomain
                         * @property {boolean|null} [isDomainVerified] CloudIdentityInfo isDomainVerified
                         * @property {string|null} [alternateEmail] CloudIdentityInfo alternateEmail
                         * @property {string|null} [phoneNumber] CloudIdentityInfo phoneNumber
                         * @property {string|null} [languageCode] CloudIdentityInfo languageCode
                         * @property {string|null} [adminConsoleUri] CloudIdentityInfo adminConsoleUri
                         * @property {google.cloud.channel.v1.IEduData|null} [eduData] CloudIdentityInfo eduData
                         */
    
                        /**
                         * Constructs a new CloudIdentityInfo.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CloudIdentityInfo.
                         * @implements ICloudIdentityInfo
                         * @constructor
                         * @param {google.cloud.channel.v1.ICloudIdentityInfo=} [properties] Properties to set
                         */
                        function CloudIdentityInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudIdentityInfo customerType.
                         * @member {google.cloud.channel.v1.CloudIdentityInfo.CustomerType} customerType
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @instance
                         */
                        CloudIdentityInfo.prototype.customerType = 0;
    
                        /**
                         * CloudIdentityInfo primaryDomain.
                         * @member {string} primaryDomain
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @instance
                         */
                        CloudIdentityInfo.prototype.primaryDomain = "";
    
                        /**
                         * CloudIdentityInfo isDomainVerified.
                         * @member {boolean} isDomainVerified
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @instance
                         */
                        CloudIdentityInfo.prototype.isDomainVerified = false;
    
                        /**
                         * CloudIdentityInfo alternateEmail.
                         * @member {string} alternateEmail
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @instance
                         */
                        CloudIdentityInfo.prototype.alternateEmail = "";
    
                        /**
                         * CloudIdentityInfo phoneNumber.
                         * @member {string} phoneNumber
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @instance
                         */
                        CloudIdentityInfo.prototype.phoneNumber = "";
    
                        /**
                         * CloudIdentityInfo languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @instance
                         */
                        CloudIdentityInfo.prototype.languageCode = "";
    
                        /**
                         * CloudIdentityInfo adminConsoleUri.
                         * @member {string} adminConsoleUri
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @instance
                         */
                        CloudIdentityInfo.prototype.adminConsoleUri = "";
    
                        /**
                         * CloudIdentityInfo eduData.
                         * @member {google.cloud.channel.v1.IEduData|null|undefined} eduData
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @instance
                         */
                        CloudIdentityInfo.prototype.eduData = null;
    
                        /**
                         * Creates a new CloudIdentityInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @static
                         * @param {google.cloud.channel.v1.ICloudIdentityInfo=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CloudIdentityInfo} CloudIdentityInfo instance
                         */
                        CloudIdentityInfo.create = function create(properties) {
                            return new CloudIdentityInfo(properties);
                        };
    
                        /**
                         * Encodes the specified CloudIdentityInfo message. Does not implicitly {@link google.cloud.channel.v1.CloudIdentityInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @static
                         * @param {google.cloud.channel.v1.ICloudIdentityInfo} message CloudIdentityInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudIdentityInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customerType != null && Object.hasOwnProperty.call(message, "customerType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.customerType);
                            if (message.isDomainVerified != null && Object.hasOwnProperty.call(message, "isDomainVerified"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isDomainVerified);
                            if (message.alternateEmail != null && Object.hasOwnProperty.call(message, "alternateEmail"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.alternateEmail);
                            if (message.phoneNumber != null && Object.hasOwnProperty.call(message, "phoneNumber"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.phoneNumber);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.languageCode);
                            if (message.primaryDomain != null && Object.hasOwnProperty.call(message, "primaryDomain"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.primaryDomain);
                            if (message.adminConsoleUri != null && Object.hasOwnProperty.call(message, "adminConsoleUri"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.adminConsoleUri);
                            if (message.eduData != null && Object.hasOwnProperty.call(message, "eduData"))
                                $root.google.cloud.channel.v1.EduData.encode(message.eduData, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudIdentityInfo message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CloudIdentityInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @static
                         * @param {google.cloud.channel.v1.ICloudIdentityInfo} message CloudIdentityInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudIdentityInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudIdentityInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CloudIdentityInfo} CloudIdentityInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudIdentityInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CloudIdentityInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customerType = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.primaryDomain = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.isDomainVerified = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.alternateEmail = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.phoneNumber = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.adminConsoleUri = reader.string();
                                        break;
                                    }
                                case 22: {
                                        message.eduData = $root.google.cloud.channel.v1.EduData.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudIdentityInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CloudIdentityInfo} CloudIdentityInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudIdentityInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudIdentityInfo message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudIdentityInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customerType != null && message.hasOwnProperty("customerType"))
                                switch (message.customerType) {
                                default:
                                    return "customerType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.primaryDomain != null && message.hasOwnProperty("primaryDomain"))
                                if (!$util.isString(message.primaryDomain))
                                    return "primaryDomain: string expected";
                            if (message.isDomainVerified != null && message.hasOwnProperty("isDomainVerified"))
                                if (typeof message.isDomainVerified !== "boolean")
                                    return "isDomainVerified: boolean expected";
                            if (message.alternateEmail != null && message.hasOwnProperty("alternateEmail"))
                                if (!$util.isString(message.alternateEmail))
                                    return "alternateEmail: string expected";
                            if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                if (!$util.isString(message.phoneNumber))
                                    return "phoneNumber: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            if (message.adminConsoleUri != null && message.hasOwnProperty("adminConsoleUri"))
                                if (!$util.isString(message.adminConsoleUri))
                                    return "adminConsoleUri: string expected";
                            if (message.eduData != null && message.hasOwnProperty("eduData")) {
                                var error = $root.google.cloud.channel.v1.EduData.verify(message.eduData);
                                if (error)
                                    return "eduData." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CloudIdentityInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CloudIdentityInfo} CloudIdentityInfo
                         */
                        CloudIdentityInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CloudIdentityInfo)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CloudIdentityInfo();
                            switch (object.customerType) {
                            default:
                                if (typeof object.customerType === "number") {
                                    message.customerType = object.customerType;
                                    break;
                                }
                                break;
                            case "CUSTOMER_TYPE_UNSPECIFIED":
                            case 0:
                                message.customerType = 0;
                                break;
                            case "DOMAIN":
                            case 1:
                                message.customerType = 1;
                                break;
                            case "TEAM":
                            case 2:
                                message.customerType = 2;
                                break;
                            }
                            if (object.primaryDomain != null)
                                message.primaryDomain = String(object.primaryDomain);
                            if (object.isDomainVerified != null)
                                message.isDomainVerified = Boolean(object.isDomainVerified);
                            if (object.alternateEmail != null)
                                message.alternateEmail = String(object.alternateEmail);
                            if (object.phoneNumber != null)
                                message.phoneNumber = String(object.phoneNumber);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            if (object.adminConsoleUri != null)
                                message.adminConsoleUri = String(object.adminConsoleUri);
                            if (object.eduData != null) {
                                if (typeof object.eduData !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CloudIdentityInfo.eduData: object expected");
                                message.eduData = $root.google.cloud.channel.v1.EduData.fromObject(object.eduData);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudIdentityInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @static
                         * @param {google.cloud.channel.v1.CloudIdentityInfo} message CloudIdentityInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudIdentityInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.customerType = options.enums === String ? "CUSTOMER_TYPE_UNSPECIFIED" : 0;
                                object.isDomainVerified = false;
                                object.alternateEmail = "";
                                object.phoneNumber = "";
                                object.languageCode = "";
                                object.primaryDomain = "";
                                object.adminConsoleUri = "";
                                object.eduData = null;
                            }
                            if (message.customerType != null && message.hasOwnProperty("customerType"))
                                object.customerType = options.enums === String ? $root.google.cloud.channel.v1.CloudIdentityInfo.CustomerType[message.customerType] === undefined ? message.customerType : $root.google.cloud.channel.v1.CloudIdentityInfo.CustomerType[message.customerType] : message.customerType;
                            if (message.isDomainVerified != null && message.hasOwnProperty("isDomainVerified"))
                                object.isDomainVerified = message.isDomainVerified;
                            if (message.alternateEmail != null && message.hasOwnProperty("alternateEmail"))
                                object.alternateEmail = message.alternateEmail;
                            if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                object.phoneNumber = message.phoneNumber;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            if (message.primaryDomain != null && message.hasOwnProperty("primaryDomain"))
                                object.primaryDomain = message.primaryDomain;
                            if (message.adminConsoleUri != null && message.hasOwnProperty("adminConsoleUri"))
                                object.adminConsoleUri = message.adminConsoleUri;
                            if (message.eduData != null && message.hasOwnProperty("eduData"))
                                object.eduData = $root.google.cloud.channel.v1.EduData.toObject(message.eduData, options);
                            return object;
                        };
    
                        /**
                         * Converts this CloudIdentityInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudIdentityInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudIdentityInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CloudIdentityInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudIdentityInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CloudIdentityInfo";
                        };
    
                        /**
                         * CustomerType enum.
                         * @name google.cloud.channel.v1.CloudIdentityInfo.CustomerType
                         * @enum {number}
                         * @property {number} CUSTOMER_TYPE_UNSPECIFIED=0 CUSTOMER_TYPE_UNSPECIFIED value
                         * @property {number} DOMAIN=1 DOMAIN value
                         * @property {number} TEAM=2 TEAM value
                         */
                        CloudIdentityInfo.CustomerType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "CUSTOMER_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DOMAIN"] = 1;
                            values[valuesById[2] = "TEAM"] = 2;
                            return values;
                        })();
    
                        return CloudIdentityInfo;
                    })();
    
                    v1.Value = (function() {
    
                        /**
                         * Properties of a Value.
                         * @memberof google.cloud.channel.v1
                         * @interface IValue
                         * @property {number|Long|null} [int64Value] Value int64Value
                         * @property {string|null} [stringValue] Value stringValue
                         * @property {number|null} [doubleValue] Value doubleValue
                         * @property {google.protobuf.IAny|null} [protoValue] Value protoValue
                         * @property {boolean|null} [boolValue] Value boolValue
                         */
    
                        /**
                         * Constructs a new Value.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Value.
                         * @implements IValue
                         * @constructor
                         * @param {google.cloud.channel.v1.IValue=} [properties] Properties to set
                         */
                        function Value(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Value int64Value.
                         * @member {number|Long|null|undefined} int64Value
                         * @memberof google.cloud.channel.v1.Value
                         * @instance
                         */
                        Value.prototype.int64Value = null;
    
                        /**
                         * Value stringValue.
                         * @member {string|null|undefined} stringValue
                         * @memberof google.cloud.channel.v1.Value
                         * @instance
                         */
                        Value.prototype.stringValue = null;
    
                        /**
                         * Value doubleValue.
                         * @member {number|null|undefined} doubleValue
                         * @memberof google.cloud.channel.v1.Value
                         * @instance
                         */
                        Value.prototype.doubleValue = null;
    
                        /**
                         * Value protoValue.
                         * @member {google.protobuf.IAny|null|undefined} protoValue
                         * @memberof google.cloud.channel.v1.Value
                         * @instance
                         */
                        Value.prototype.protoValue = null;
    
                        /**
                         * Value boolValue.
                         * @member {boolean|null|undefined} boolValue
                         * @memberof google.cloud.channel.v1.Value
                         * @instance
                         */
                        Value.prototype.boolValue = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Value kind.
                         * @member {"int64Value"|"stringValue"|"doubleValue"|"protoValue"|"boolValue"|undefined} kind
                         * @memberof google.cloud.channel.v1.Value
                         * @instance
                         */
                        Object.defineProperty(Value.prototype, "kind", {
                            get: $util.oneOfGetter($oneOfFields = ["int64Value", "stringValue", "doubleValue", "protoValue", "boolValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Value instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Value
                         * @static
                         * @param {google.cloud.channel.v1.IValue=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Value} Value instance
                         */
                        Value.create = function create(properties) {
                            return new Value(properties);
                        };
    
                        /**
                         * Encodes the specified Value message. Does not implicitly {@link google.cloud.channel.v1.Value.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Value
                         * @static
                         * @param {google.cloud.channel.v1.IValue} message Value message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Value.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.int64Value != null && Object.hasOwnProperty.call(message, "int64Value"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.int64Value);
                            if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.stringValue);
                            if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                                writer.uint32(/* id 3, wireType 1 =*/25).double(message.doubleValue);
                            if (message.protoValue != null && Object.hasOwnProperty.call(message, "protoValue"))
                                $root.google.protobuf.Any.encode(message.protoValue, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.boolValue != null && Object.hasOwnProperty.call(message, "boolValue"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.boolValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Value message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Value.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Value
                         * @static
                         * @param {google.cloud.channel.v1.IValue} message Value message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Value.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Value message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Value
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Value} Value
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Value.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Value();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.int64Value = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.stringValue = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.doubleValue = reader.double();
                                        break;
                                    }
                                case 4: {
                                        message.protoValue = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.boolValue = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Value message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Value
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Value} Value
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Value.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Value message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Value
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Value.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                                properties.kind = 1;
                                if (!$util.isInteger(message.int64Value) && !(message.int64Value && $util.isInteger(message.int64Value.low) && $util.isInteger(message.int64Value.high)))
                                    return "int64Value: integer|Long expected";
                            }
                            if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                if (!$util.isString(message.stringValue))
                                    return "stringValue: string expected";
                            }
                            if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                if (typeof message.doubleValue !== "number")
                                    return "doubleValue: number expected";
                            }
                            if (message.protoValue != null && message.hasOwnProperty("protoValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                {
                                    var error = $root.google.protobuf.Any.verify(message.protoValue);
                                    if (error)
                                        return "protoValue." + error;
                                }
                            }
                            if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                if (typeof message.boolValue !== "boolean")
                                    return "boolValue: boolean expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Value message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Value
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Value} Value
                         */
                        Value.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Value)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Value();
                            if (object.int64Value != null)
                                if ($util.Long)
                                    (message.int64Value = $util.Long.fromValue(object.int64Value)).unsigned = false;
                                else if (typeof object.int64Value === "string")
                                    message.int64Value = parseInt(object.int64Value, 10);
                                else if (typeof object.int64Value === "number")
                                    message.int64Value = object.int64Value;
                                else if (typeof object.int64Value === "object")
                                    message.int64Value = new $util.LongBits(object.int64Value.low >>> 0, object.int64Value.high >>> 0).toNumber();
                            if (object.stringValue != null)
                                message.stringValue = String(object.stringValue);
                            if (object.doubleValue != null)
                                message.doubleValue = Number(object.doubleValue);
                            if (object.protoValue != null) {
                                if (typeof object.protoValue !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Value.protoValue: object expected");
                                message.protoValue = $root.google.protobuf.Any.fromObject(object.protoValue);
                            }
                            if (object.boolValue != null)
                                message.boolValue = Boolean(object.boolValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Value message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Value
                         * @static
                         * @param {google.cloud.channel.v1.Value} message Value
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Value.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.int64Value != null && message.hasOwnProperty("int64Value")) {
                                if (typeof message.int64Value === "number")
                                    object.int64Value = options.longs === String ? String(message.int64Value) : message.int64Value;
                                else
                                    object.int64Value = options.longs === String ? $util.Long.prototype.toString.call(message.int64Value) : options.longs === Number ? new $util.LongBits(message.int64Value.low >>> 0, message.int64Value.high >>> 0).toNumber() : message.int64Value;
                                if (options.oneofs)
                                    object.kind = "int64Value";
                            }
                            if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                                object.stringValue = message.stringValue;
                                if (options.oneofs)
                                    object.kind = "stringValue";
                            }
                            if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                                object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                                if (options.oneofs)
                                    object.kind = "doubleValue";
                            }
                            if (message.protoValue != null && message.hasOwnProperty("protoValue")) {
                                object.protoValue = $root.google.protobuf.Any.toObject(message.protoValue, options);
                                if (options.oneofs)
                                    object.kind = "protoValue";
                            }
                            if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                                object.boolValue = message.boolValue;
                                if (options.oneofs)
                                    object.kind = "boolValue";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Value to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Value
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Value.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Value
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Value
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Value";
                        };
    
                        return Value;
                    })();
    
                    v1.AdminUser = (function() {
    
                        /**
                         * Properties of an AdminUser.
                         * @memberof google.cloud.channel.v1
                         * @interface IAdminUser
                         * @property {string|null} [email] AdminUser email
                         * @property {string|null} [givenName] AdminUser givenName
                         * @property {string|null} [familyName] AdminUser familyName
                         */
    
                        /**
                         * Constructs a new AdminUser.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an AdminUser.
                         * @implements IAdminUser
                         * @constructor
                         * @param {google.cloud.channel.v1.IAdminUser=} [properties] Properties to set
                         */
                        function AdminUser(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AdminUser email.
                         * @member {string} email
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @instance
                         */
                        AdminUser.prototype.email = "";
    
                        /**
                         * AdminUser givenName.
                         * @member {string} givenName
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @instance
                         */
                        AdminUser.prototype.givenName = "";
    
                        /**
                         * AdminUser familyName.
                         * @member {string} familyName
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @instance
                         */
                        AdminUser.prototype.familyName = "";
    
                        /**
                         * Creates a new AdminUser instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @static
                         * @param {google.cloud.channel.v1.IAdminUser=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.AdminUser} AdminUser instance
                         */
                        AdminUser.create = function create(properties) {
                            return new AdminUser(properties);
                        };
    
                        /**
                         * Encodes the specified AdminUser message. Does not implicitly {@link google.cloud.channel.v1.AdminUser.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @static
                         * @param {google.cloud.channel.v1.IAdminUser} message AdminUser message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdminUser.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.email != null && Object.hasOwnProperty.call(message, "email"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.email);
                            if (message.givenName != null && Object.hasOwnProperty.call(message, "givenName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.givenName);
                            if (message.familyName != null && Object.hasOwnProperty.call(message, "familyName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.familyName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdminUser message, length delimited. Does not implicitly {@link google.cloud.channel.v1.AdminUser.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @static
                         * @param {google.cloud.channel.v1.IAdminUser} message AdminUser message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdminUser.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdminUser message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.AdminUser} AdminUser
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdminUser.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.AdminUser();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.email = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.givenName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.familyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdminUser message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.AdminUser} AdminUser
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdminUser.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdminUser message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdminUser.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.email != null && message.hasOwnProperty("email"))
                                if (!$util.isString(message.email))
                                    return "email: string expected";
                            if (message.givenName != null && message.hasOwnProperty("givenName"))
                                if (!$util.isString(message.givenName))
                                    return "givenName: string expected";
                            if (message.familyName != null && message.hasOwnProperty("familyName"))
                                if (!$util.isString(message.familyName))
                                    return "familyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AdminUser message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.AdminUser} AdminUser
                         */
                        AdminUser.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.AdminUser)
                                return object;
                            var message = new $root.google.cloud.channel.v1.AdminUser();
                            if (object.email != null)
                                message.email = String(object.email);
                            if (object.givenName != null)
                                message.givenName = String(object.givenName);
                            if (object.familyName != null)
                                message.familyName = String(object.familyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AdminUser message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @static
                         * @param {google.cloud.channel.v1.AdminUser} message AdminUser
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdminUser.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.email = "";
                                object.givenName = "";
                                object.familyName = "";
                            }
                            if (message.email != null && message.hasOwnProperty("email"))
                                object.email = message.email;
                            if (message.givenName != null && message.hasOwnProperty("givenName"))
                                object.givenName = message.givenName;
                            if (message.familyName != null && message.hasOwnProperty("familyName"))
                                object.familyName = message.familyName;
                            return object;
                        };
    
                        /**
                         * Converts this AdminUser to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdminUser.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AdminUser
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.AdminUser
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AdminUser.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.AdminUser";
                        };
    
                        return AdminUser;
                    })();
    
                    v1.Customer = (function() {
    
                        /**
                         * Properties of a Customer.
                         * @memberof google.cloud.channel.v1
                         * @interface ICustomer
                         * @property {string|null} [name] Customer name
                         * @property {string|null} [orgDisplayName] Customer orgDisplayName
                         * @property {google.type.IPostalAddress|null} [orgPostalAddress] Customer orgPostalAddress
                         * @property {google.cloud.channel.v1.IContactInfo|null} [primaryContactInfo] Customer primaryContactInfo
                         * @property {string|null} [alternateEmail] Customer alternateEmail
                         * @property {string|null} [domain] Customer domain
                         * @property {google.protobuf.ITimestamp|null} [createTime] Customer createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Customer updateTime
                         * @property {string|null} [cloudIdentityId] Customer cloudIdentityId
                         * @property {string|null} [languageCode] Customer languageCode
                         * @property {google.cloud.channel.v1.ICloudIdentityInfo|null} [cloudIdentityInfo] Customer cloudIdentityInfo
                         * @property {string|null} [channelPartnerId] Customer channelPartnerId
                         */
    
                        /**
                         * Constructs a new Customer.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Customer.
                         * @implements ICustomer
                         * @constructor
                         * @param {google.cloud.channel.v1.ICustomer=} [properties] Properties to set
                         */
                        function Customer(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Customer name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.name = "";
    
                        /**
                         * Customer orgDisplayName.
                         * @member {string} orgDisplayName
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.orgDisplayName = "";
    
                        /**
                         * Customer orgPostalAddress.
                         * @member {google.type.IPostalAddress|null|undefined} orgPostalAddress
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.orgPostalAddress = null;
    
                        /**
                         * Customer primaryContactInfo.
                         * @member {google.cloud.channel.v1.IContactInfo|null|undefined} primaryContactInfo
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.primaryContactInfo = null;
    
                        /**
                         * Customer alternateEmail.
                         * @member {string} alternateEmail
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.alternateEmail = "";
    
                        /**
                         * Customer domain.
                         * @member {string} domain
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.domain = "";
    
                        /**
                         * Customer createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.createTime = null;
    
                        /**
                         * Customer updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.updateTime = null;
    
                        /**
                         * Customer cloudIdentityId.
                         * @member {string} cloudIdentityId
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.cloudIdentityId = "";
    
                        /**
                         * Customer languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.languageCode = "";
    
                        /**
                         * Customer cloudIdentityInfo.
                         * @member {google.cloud.channel.v1.ICloudIdentityInfo|null|undefined} cloudIdentityInfo
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.cloudIdentityInfo = null;
    
                        /**
                         * Customer channelPartnerId.
                         * @member {string} channelPartnerId
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         */
                        Customer.prototype.channelPartnerId = "";
    
                        /**
                         * Creates a new Customer instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Customer
                         * @static
                         * @param {google.cloud.channel.v1.ICustomer=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Customer} Customer instance
                         */
                        Customer.create = function create(properties) {
                            return new Customer(properties);
                        };
    
                        /**
                         * Encodes the specified Customer message. Does not implicitly {@link google.cloud.channel.v1.Customer.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Customer
                         * @static
                         * @param {google.cloud.channel.v1.ICustomer} message Customer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Customer.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.orgDisplayName != null && Object.hasOwnProperty.call(message, "orgDisplayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.orgDisplayName);
                            if (message.orgPostalAddress != null && Object.hasOwnProperty.call(message, "orgPostalAddress"))
                                $root.google.type.PostalAddress.encode(message.orgPostalAddress, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.primaryContactInfo != null && Object.hasOwnProperty.call(message, "primaryContactInfo"))
                                $root.google.cloud.channel.v1.ContactInfo.encode(message.primaryContactInfo, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.alternateEmail != null && Object.hasOwnProperty.call(message, "alternateEmail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.alternateEmail);
                            if (message.domain != null && Object.hasOwnProperty.call(message, "domain"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.domain);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.cloudIdentityId != null && Object.hasOwnProperty.call(message, "cloudIdentityId"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.cloudIdentityId);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.languageCode);
                            if (message.cloudIdentityInfo != null && Object.hasOwnProperty.call(message, "cloudIdentityInfo"))
                                $root.google.cloud.channel.v1.CloudIdentityInfo.encode(message.cloudIdentityInfo, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.channelPartnerId != null && Object.hasOwnProperty.call(message, "channelPartnerId"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.channelPartnerId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Customer message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Customer.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Customer
                         * @static
                         * @param {google.cloud.channel.v1.ICustomer} message Customer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Customer.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Customer message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Customer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Customer} Customer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Customer.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Customer();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.orgDisplayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.orgPostalAddress = $root.google.type.PostalAddress.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.primaryContactInfo = $root.google.cloud.channel.v1.ContactInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.alternateEmail = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.domain = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.cloudIdentityId = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.cloudIdentityInfo = $root.google.cloud.channel.v1.CloudIdentityInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.channelPartnerId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Customer message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Customer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Customer} Customer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Customer.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Customer message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Customer
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Customer.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.orgDisplayName != null && message.hasOwnProperty("orgDisplayName"))
                                if (!$util.isString(message.orgDisplayName))
                                    return "orgDisplayName: string expected";
                            if (message.orgPostalAddress != null && message.hasOwnProperty("orgPostalAddress")) {
                                var error = $root.google.type.PostalAddress.verify(message.orgPostalAddress);
                                if (error)
                                    return "orgPostalAddress." + error;
                            }
                            if (message.primaryContactInfo != null && message.hasOwnProperty("primaryContactInfo")) {
                                var error = $root.google.cloud.channel.v1.ContactInfo.verify(message.primaryContactInfo);
                                if (error)
                                    return "primaryContactInfo." + error;
                            }
                            if (message.alternateEmail != null && message.hasOwnProperty("alternateEmail"))
                                if (!$util.isString(message.alternateEmail))
                                    return "alternateEmail: string expected";
                            if (message.domain != null && message.hasOwnProperty("domain"))
                                if (!$util.isString(message.domain))
                                    return "domain: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.cloudIdentityId != null && message.hasOwnProperty("cloudIdentityId"))
                                if (!$util.isString(message.cloudIdentityId))
                                    return "cloudIdentityId: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            if (message.cloudIdentityInfo != null && message.hasOwnProperty("cloudIdentityInfo")) {
                                var error = $root.google.cloud.channel.v1.CloudIdentityInfo.verify(message.cloudIdentityInfo);
                                if (error)
                                    return "cloudIdentityInfo." + error;
                            }
                            if (message.channelPartnerId != null && message.hasOwnProperty("channelPartnerId"))
                                if (!$util.isString(message.channelPartnerId))
                                    return "channelPartnerId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Customer message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Customer
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Customer} Customer
                         */
                        Customer.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Customer)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Customer();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.orgDisplayName != null)
                                message.orgDisplayName = String(object.orgDisplayName);
                            if (object.orgPostalAddress != null) {
                                if (typeof object.orgPostalAddress !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Customer.orgPostalAddress: object expected");
                                message.orgPostalAddress = $root.google.type.PostalAddress.fromObject(object.orgPostalAddress);
                            }
                            if (object.primaryContactInfo != null) {
                                if (typeof object.primaryContactInfo !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Customer.primaryContactInfo: object expected");
                                message.primaryContactInfo = $root.google.cloud.channel.v1.ContactInfo.fromObject(object.primaryContactInfo);
                            }
                            if (object.alternateEmail != null)
                                message.alternateEmail = String(object.alternateEmail);
                            if (object.domain != null)
                                message.domain = String(object.domain);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Customer.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Customer.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.cloudIdentityId != null)
                                message.cloudIdentityId = String(object.cloudIdentityId);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            if (object.cloudIdentityInfo != null) {
                                if (typeof object.cloudIdentityInfo !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Customer.cloudIdentityInfo: object expected");
                                message.cloudIdentityInfo = $root.google.cloud.channel.v1.CloudIdentityInfo.fromObject(object.cloudIdentityInfo);
                            }
                            if (object.channelPartnerId != null)
                                message.channelPartnerId = String(object.channelPartnerId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Customer message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Customer
                         * @static
                         * @param {google.cloud.channel.v1.Customer} message Customer
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Customer.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.orgDisplayName = "";
                                object.orgPostalAddress = null;
                                object.primaryContactInfo = null;
                                object.alternateEmail = "";
                                object.domain = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.cloudIdentityId = "";
                                object.languageCode = "";
                                object.cloudIdentityInfo = null;
                                object.channelPartnerId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.orgDisplayName != null && message.hasOwnProperty("orgDisplayName"))
                                object.orgDisplayName = message.orgDisplayName;
                            if (message.orgPostalAddress != null && message.hasOwnProperty("orgPostalAddress"))
                                object.orgPostalAddress = $root.google.type.PostalAddress.toObject(message.orgPostalAddress, options);
                            if (message.primaryContactInfo != null && message.hasOwnProperty("primaryContactInfo"))
                                object.primaryContactInfo = $root.google.cloud.channel.v1.ContactInfo.toObject(message.primaryContactInfo, options);
                            if (message.alternateEmail != null && message.hasOwnProperty("alternateEmail"))
                                object.alternateEmail = message.alternateEmail;
                            if (message.domain != null && message.hasOwnProperty("domain"))
                                object.domain = message.domain;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.cloudIdentityId != null && message.hasOwnProperty("cloudIdentityId"))
                                object.cloudIdentityId = message.cloudIdentityId;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            if (message.cloudIdentityInfo != null && message.hasOwnProperty("cloudIdentityInfo"))
                                object.cloudIdentityInfo = $root.google.cloud.channel.v1.CloudIdentityInfo.toObject(message.cloudIdentityInfo, options);
                            if (message.channelPartnerId != null && message.hasOwnProperty("channelPartnerId"))
                                object.channelPartnerId = message.channelPartnerId;
                            return object;
                        };
    
                        /**
                         * Converts this Customer to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Customer
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Customer.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Customer
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Customer
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Customer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Customer";
                        };
    
                        return Customer;
                    })();
    
                    v1.ContactInfo = (function() {
    
                        /**
                         * Properties of a ContactInfo.
                         * @memberof google.cloud.channel.v1
                         * @interface IContactInfo
                         * @property {string|null} [firstName] ContactInfo firstName
                         * @property {string|null} [lastName] ContactInfo lastName
                         * @property {string|null} [displayName] ContactInfo displayName
                         * @property {string|null} [email] ContactInfo email
                         * @property {string|null} [title] ContactInfo title
                         * @property {string|null} [phone] ContactInfo phone
                         */
    
                        /**
                         * Constructs a new ContactInfo.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ContactInfo.
                         * @implements IContactInfo
                         * @constructor
                         * @param {google.cloud.channel.v1.IContactInfo=} [properties] Properties to set
                         */
                        function ContactInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContactInfo firstName.
                         * @member {string} firstName
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @instance
                         */
                        ContactInfo.prototype.firstName = "";
    
                        /**
                         * ContactInfo lastName.
                         * @member {string} lastName
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @instance
                         */
                        ContactInfo.prototype.lastName = "";
    
                        /**
                         * ContactInfo displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @instance
                         */
                        ContactInfo.prototype.displayName = "";
    
                        /**
                         * ContactInfo email.
                         * @member {string} email
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @instance
                         */
                        ContactInfo.prototype.email = "";
    
                        /**
                         * ContactInfo title.
                         * @member {string} title
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @instance
                         */
                        ContactInfo.prototype.title = "";
    
                        /**
                         * ContactInfo phone.
                         * @member {string} phone
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @instance
                         */
                        ContactInfo.prototype.phone = "";
    
                        /**
                         * Creates a new ContactInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @static
                         * @param {google.cloud.channel.v1.IContactInfo=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ContactInfo} ContactInfo instance
                         */
                        ContactInfo.create = function create(properties) {
                            return new ContactInfo(properties);
                        };
    
                        /**
                         * Encodes the specified ContactInfo message. Does not implicitly {@link google.cloud.channel.v1.ContactInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @static
                         * @param {google.cloud.channel.v1.IContactInfo} message ContactInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContactInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.firstName != null && Object.hasOwnProperty.call(message, "firstName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.firstName);
                            if (message.lastName != null && Object.hasOwnProperty.call(message, "lastName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.lastName);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.displayName);
                            if (message.email != null && Object.hasOwnProperty.call(message, "email"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.email);
                            if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.title);
                            if (message.phone != null && Object.hasOwnProperty.call(message, "phone"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.phone);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContactInfo message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ContactInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @static
                         * @param {google.cloud.channel.v1.IContactInfo} message ContactInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContactInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContactInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ContactInfo} ContactInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContactInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ContactInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.firstName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.lastName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.email = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.title = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.phone = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContactInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ContactInfo} ContactInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContactInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContactInfo message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContactInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.firstName != null && message.hasOwnProperty("firstName"))
                                if (!$util.isString(message.firstName))
                                    return "firstName: string expected";
                            if (message.lastName != null && message.hasOwnProperty("lastName"))
                                if (!$util.isString(message.lastName))
                                    return "lastName: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.email != null && message.hasOwnProperty("email"))
                                if (!$util.isString(message.email))
                                    return "email: string expected";
                            if (message.title != null && message.hasOwnProperty("title"))
                                if (!$util.isString(message.title))
                                    return "title: string expected";
                            if (message.phone != null && message.hasOwnProperty("phone"))
                                if (!$util.isString(message.phone))
                                    return "phone: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ContactInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ContactInfo} ContactInfo
                         */
                        ContactInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ContactInfo)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ContactInfo();
                            if (object.firstName != null)
                                message.firstName = String(object.firstName);
                            if (object.lastName != null)
                                message.lastName = String(object.lastName);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.email != null)
                                message.email = String(object.email);
                            if (object.title != null)
                                message.title = String(object.title);
                            if (object.phone != null)
                                message.phone = String(object.phone);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContactInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @static
                         * @param {google.cloud.channel.v1.ContactInfo} message ContactInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContactInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.firstName = "";
                                object.lastName = "";
                                object.displayName = "";
                                object.email = "";
                                object.title = "";
                                object.phone = "";
                            }
                            if (message.firstName != null && message.hasOwnProperty("firstName"))
                                object.firstName = message.firstName;
                            if (message.lastName != null && message.hasOwnProperty("lastName"))
                                object.lastName = message.lastName;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.email != null && message.hasOwnProperty("email"))
                                object.email = message.email;
                            if (message.title != null && message.hasOwnProperty("title"))
                                object.title = message.title;
                            if (message.phone != null && message.hasOwnProperty("phone"))
                                object.phone = message.phone;
                            return object;
                        };
    
                        /**
                         * Converts this ContactInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContactInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContactInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ContactInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContactInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ContactInfo";
                        };
    
                        return ContactInfo;
                    })();
    
                    v1.Entitlement = (function() {
    
                        /**
                         * Properties of an Entitlement.
                         * @memberof google.cloud.channel.v1
                         * @interface IEntitlement
                         * @property {string|null} [name] Entitlement name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Entitlement createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Entitlement updateTime
                         * @property {string|null} [offer] Entitlement offer
                         * @property {google.cloud.channel.v1.ICommitmentSettings|null} [commitmentSettings] Entitlement commitmentSettings
                         * @property {google.cloud.channel.v1.Entitlement.ProvisioningState|null} [provisioningState] Entitlement provisioningState
                         * @property {google.cloud.channel.v1.IProvisionedService|null} [provisionedService] Entitlement provisionedService
                         * @property {Array.<google.cloud.channel.v1.Entitlement.SuspensionReason>|null} [suspensionReasons] Entitlement suspensionReasons
                         * @property {string|null} [purchaseOrderId] Entitlement purchaseOrderId
                         * @property {google.cloud.channel.v1.ITrialSettings|null} [trialSettings] Entitlement trialSettings
                         * @property {google.cloud.channel.v1.IAssociationInfo|null} [associationInfo] Entitlement associationInfo
                         * @property {Array.<google.cloud.channel.v1.IParameter>|null} [parameters] Entitlement parameters
                         */
    
                        /**
                         * Constructs a new Entitlement.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an Entitlement.
                         * @implements IEntitlement
                         * @constructor
                         * @param {google.cloud.channel.v1.IEntitlement=} [properties] Properties to set
                         */
                        function Entitlement(properties) {
                            this.suspensionReasons = [];
                            this.parameters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Entitlement name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.name = "";
    
                        /**
                         * Entitlement createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.createTime = null;
    
                        /**
                         * Entitlement updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.updateTime = null;
    
                        /**
                         * Entitlement offer.
                         * @member {string} offer
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.offer = "";
    
                        /**
                         * Entitlement commitmentSettings.
                         * @member {google.cloud.channel.v1.ICommitmentSettings|null|undefined} commitmentSettings
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.commitmentSettings = null;
    
                        /**
                         * Entitlement provisioningState.
                         * @member {google.cloud.channel.v1.Entitlement.ProvisioningState} provisioningState
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.provisioningState = 0;
    
                        /**
                         * Entitlement provisionedService.
                         * @member {google.cloud.channel.v1.IProvisionedService|null|undefined} provisionedService
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.provisionedService = null;
    
                        /**
                         * Entitlement suspensionReasons.
                         * @member {Array.<google.cloud.channel.v1.Entitlement.SuspensionReason>} suspensionReasons
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.suspensionReasons = $util.emptyArray;
    
                        /**
                         * Entitlement purchaseOrderId.
                         * @member {string} purchaseOrderId
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.purchaseOrderId = "";
    
                        /**
                         * Entitlement trialSettings.
                         * @member {google.cloud.channel.v1.ITrialSettings|null|undefined} trialSettings
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.trialSettings = null;
    
                        /**
                         * Entitlement associationInfo.
                         * @member {google.cloud.channel.v1.IAssociationInfo|null|undefined} associationInfo
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.associationInfo = null;
    
                        /**
                         * Entitlement parameters.
                         * @member {Array.<google.cloud.channel.v1.IParameter>} parameters
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         */
                        Entitlement.prototype.parameters = $util.emptyArray;
    
                        /**
                         * Creates a new Entitlement instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @static
                         * @param {google.cloud.channel.v1.IEntitlement=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Entitlement} Entitlement instance
                         */
                        Entitlement.create = function create(properties) {
                            return new Entitlement(properties);
                        };
    
                        /**
                         * Encodes the specified Entitlement message. Does not implicitly {@link google.cloud.channel.v1.Entitlement.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @static
                         * @param {google.cloud.channel.v1.IEntitlement} message Entitlement message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Entitlement.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.offer != null && Object.hasOwnProperty.call(message, "offer"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.offer);
                            if (message.commitmentSettings != null && Object.hasOwnProperty.call(message, "commitmentSettings"))
                                $root.google.cloud.channel.v1.CommitmentSettings.encode(message.commitmentSettings, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.provisioningState != null && Object.hasOwnProperty.call(message, "provisioningState"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.provisioningState);
                            if (message.provisionedService != null && Object.hasOwnProperty.call(message, "provisionedService"))
                                $root.google.cloud.channel.v1.ProvisionedService.encode(message.provisionedService, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.suspensionReasons != null && message.suspensionReasons.length) {
                                writer.uint32(/* id 18, wireType 2 =*/146).fork();
                                for (var i = 0; i < message.suspensionReasons.length; ++i)
                                    writer.int32(message.suspensionReasons[i]);
                                writer.ldelim();
                            }
                            if (message.purchaseOrderId != null && Object.hasOwnProperty.call(message, "purchaseOrderId"))
                                writer.uint32(/* id 19, wireType 2 =*/154).string(message.purchaseOrderId);
                            if (message.trialSettings != null && Object.hasOwnProperty.call(message, "trialSettings"))
                                $root.google.cloud.channel.v1.TrialSettings.encode(message.trialSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.associationInfo != null && Object.hasOwnProperty.call(message, "associationInfo"))
                                $root.google.cloud.channel.v1.AssociationInfo.encode(message.associationInfo, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.parameters != null && message.parameters.length)
                                for (var i = 0; i < message.parameters.length; ++i)
                                    $root.google.cloud.channel.v1.Parameter.encode(message.parameters[i], writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Entitlement message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Entitlement.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @static
                         * @param {google.cloud.channel.v1.IEntitlement} message Entitlement message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Entitlement.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Entitlement message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Entitlement} Entitlement
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Entitlement.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Entitlement();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.offer = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.commitmentSettings = $root.google.cloud.channel.v1.CommitmentSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.provisioningState = reader.int32();
                                        break;
                                    }
                                case 16: {
                                        message.provisionedService = $root.google.cloud.channel.v1.ProvisionedService.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        if (!(message.suspensionReasons && message.suspensionReasons.length))
                                            message.suspensionReasons = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.suspensionReasons.push(reader.int32());
                                        } else
                                            message.suspensionReasons.push(reader.int32());
                                        break;
                                    }
                                case 19: {
                                        message.purchaseOrderId = reader.string();
                                        break;
                                    }
                                case 21: {
                                        message.trialSettings = $root.google.cloud.channel.v1.TrialSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 23: {
                                        message.associationInfo = $root.google.cloud.channel.v1.AssociationInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 26: {
                                        if (!(message.parameters && message.parameters.length))
                                            message.parameters = [];
                                        message.parameters.push($root.google.cloud.channel.v1.Parameter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Entitlement message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Entitlement} Entitlement
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Entitlement.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Entitlement message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Entitlement.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.offer != null && message.hasOwnProperty("offer"))
                                if (!$util.isString(message.offer))
                                    return "offer: string expected";
                            if (message.commitmentSettings != null && message.hasOwnProperty("commitmentSettings")) {
                                var error = $root.google.cloud.channel.v1.CommitmentSettings.verify(message.commitmentSettings);
                                if (error)
                                    return "commitmentSettings." + error;
                            }
                            if (message.provisioningState != null && message.hasOwnProperty("provisioningState"))
                                switch (message.provisioningState) {
                                default:
                                    return "provisioningState: enum value expected";
                                case 0:
                                case 1:
                                case 5:
                                    break;
                                }
                            if (message.provisionedService != null && message.hasOwnProperty("provisionedService")) {
                                var error = $root.google.cloud.channel.v1.ProvisionedService.verify(message.provisionedService);
                                if (error)
                                    return "provisionedService." + error;
                            }
                            if (message.suspensionReasons != null && message.hasOwnProperty("suspensionReasons")) {
                                if (!Array.isArray(message.suspensionReasons))
                                    return "suspensionReasons: array expected";
                                for (var i = 0; i < message.suspensionReasons.length; ++i)
                                    switch (message.suspensionReasons[i]) {
                                    default:
                                        return "suspensionReasons: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 100:
                                        break;
                                    }
                            }
                            if (message.purchaseOrderId != null && message.hasOwnProperty("purchaseOrderId"))
                                if (!$util.isString(message.purchaseOrderId))
                                    return "purchaseOrderId: string expected";
                            if (message.trialSettings != null && message.hasOwnProperty("trialSettings")) {
                                var error = $root.google.cloud.channel.v1.TrialSettings.verify(message.trialSettings);
                                if (error)
                                    return "trialSettings." + error;
                            }
                            if (message.associationInfo != null && message.hasOwnProperty("associationInfo")) {
                                var error = $root.google.cloud.channel.v1.AssociationInfo.verify(message.associationInfo);
                                if (error)
                                    return "associationInfo." + error;
                            }
                            if (message.parameters != null && message.hasOwnProperty("parameters")) {
                                if (!Array.isArray(message.parameters))
                                    return "parameters: array expected";
                                for (var i = 0; i < message.parameters.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Parameter.verify(message.parameters[i]);
                                    if (error)
                                        return "parameters." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Entitlement message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Entitlement} Entitlement
                         */
                        Entitlement.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Entitlement)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Entitlement();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Entitlement.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Entitlement.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.offer != null)
                                message.offer = String(object.offer);
                            if (object.commitmentSettings != null) {
                                if (typeof object.commitmentSettings !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Entitlement.commitmentSettings: object expected");
                                message.commitmentSettings = $root.google.cloud.channel.v1.CommitmentSettings.fromObject(object.commitmentSettings);
                            }
                            switch (object.provisioningState) {
                            default:
                                if (typeof object.provisioningState === "number") {
                                    message.provisioningState = object.provisioningState;
                                    break;
                                }
                                break;
                            case "PROVISIONING_STATE_UNSPECIFIED":
                            case 0:
                                message.provisioningState = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.provisioningState = 1;
                                break;
                            case "SUSPENDED":
                            case 5:
                                message.provisioningState = 5;
                                break;
                            }
                            if (object.provisionedService != null) {
                                if (typeof object.provisionedService !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Entitlement.provisionedService: object expected");
                                message.provisionedService = $root.google.cloud.channel.v1.ProvisionedService.fromObject(object.provisionedService);
                            }
                            if (object.suspensionReasons) {
                                if (!Array.isArray(object.suspensionReasons))
                                    throw TypeError(".google.cloud.channel.v1.Entitlement.suspensionReasons: array expected");
                                message.suspensionReasons = [];
                                for (var i = 0; i < object.suspensionReasons.length; ++i)
                                    switch (object.suspensionReasons[i]) {
                                    default:
                                        if (typeof object.suspensionReasons[i] === "number") {
                                            message.suspensionReasons[i] = object.suspensionReasons[i];
                                            break;
                                        }
                                    case "SUSPENSION_REASON_UNSPECIFIED":
                                    case 0:
                                        message.suspensionReasons[i] = 0;
                                        break;
                                    case "RESELLER_INITIATED":
                                    case 1:
                                        message.suspensionReasons[i] = 1;
                                        break;
                                    case "TRIAL_ENDED":
                                    case 2:
                                        message.suspensionReasons[i] = 2;
                                        break;
                                    case "RENEWAL_WITH_TYPE_CANCEL":
                                    case 3:
                                        message.suspensionReasons[i] = 3;
                                        break;
                                    case "PENDING_TOS_ACCEPTANCE":
                                    case 4:
                                        message.suspensionReasons[i] = 4;
                                        break;
                                    case "OTHER":
                                    case 100:
                                        message.suspensionReasons[i] = 100;
                                        break;
                                    }
                            }
                            if (object.purchaseOrderId != null)
                                message.purchaseOrderId = String(object.purchaseOrderId);
                            if (object.trialSettings != null) {
                                if (typeof object.trialSettings !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Entitlement.trialSettings: object expected");
                                message.trialSettings = $root.google.cloud.channel.v1.TrialSettings.fromObject(object.trialSettings);
                            }
                            if (object.associationInfo != null) {
                                if (typeof object.associationInfo !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Entitlement.associationInfo: object expected");
                                message.associationInfo = $root.google.cloud.channel.v1.AssociationInfo.fromObject(object.associationInfo);
                            }
                            if (object.parameters) {
                                if (!Array.isArray(object.parameters))
                                    throw TypeError(".google.cloud.channel.v1.Entitlement.parameters: array expected");
                                message.parameters = [];
                                for (var i = 0; i < object.parameters.length; ++i) {
                                    if (typeof object.parameters[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.Entitlement.parameters: object expected");
                                    message.parameters[i] = $root.google.cloud.channel.v1.Parameter.fromObject(object.parameters[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Entitlement message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @static
                         * @param {google.cloud.channel.v1.Entitlement} message Entitlement
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Entitlement.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.suspensionReasons = [];
                                object.parameters = [];
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.offer = "";
                                object.commitmentSettings = null;
                                object.provisioningState = options.enums === String ? "PROVISIONING_STATE_UNSPECIFIED" : 0;
                                object.provisionedService = null;
                                object.purchaseOrderId = "";
                                object.trialSettings = null;
                                object.associationInfo = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.offer != null && message.hasOwnProperty("offer"))
                                object.offer = message.offer;
                            if (message.commitmentSettings != null && message.hasOwnProperty("commitmentSettings"))
                                object.commitmentSettings = $root.google.cloud.channel.v1.CommitmentSettings.toObject(message.commitmentSettings, options);
                            if (message.provisioningState != null && message.hasOwnProperty("provisioningState"))
                                object.provisioningState = options.enums === String ? $root.google.cloud.channel.v1.Entitlement.ProvisioningState[message.provisioningState] === undefined ? message.provisioningState : $root.google.cloud.channel.v1.Entitlement.ProvisioningState[message.provisioningState] : message.provisioningState;
                            if (message.provisionedService != null && message.hasOwnProperty("provisionedService"))
                                object.provisionedService = $root.google.cloud.channel.v1.ProvisionedService.toObject(message.provisionedService, options);
                            if (message.suspensionReasons && message.suspensionReasons.length) {
                                object.suspensionReasons = [];
                                for (var j = 0; j < message.suspensionReasons.length; ++j)
                                    object.suspensionReasons[j] = options.enums === String ? $root.google.cloud.channel.v1.Entitlement.SuspensionReason[message.suspensionReasons[j]] === undefined ? message.suspensionReasons[j] : $root.google.cloud.channel.v1.Entitlement.SuspensionReason[message.suspensionReasons[j]] : message.suspensionReasons[j];
                            }
                            if (message.purchaseOrderId != null && message.hasOwnProperty("purchaseOrderId"))
                                object.purchaseOrderId = message.purchaseOrderId;
                            if (message.trialSettings != null && message.hasOwnProperty("trialSettings"))
                                object.trialSettings = $root.google.cloud.channel.v1.TrialSettings.toObject(message.trialSettings, options);
                            if (message.associationInfo != null && message.hasOwnProperty("associationInfo"))
                                object.associationInfo = $root.google.cloud.channel.v1.AssociationInfo.toObject(message.associationInfo, options);
                            if (message.parameters && message.parameters.length) {
                                object.parameters = [];
                                for (var j = 0; j < message.parameters.length; ++j)
                                    object.parameters[j] = $root.google.cloud.channel.v1.Parameter.toObject(message.parameters[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Entitlement to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Entitlement.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Entitlement
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Entitlement
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Entitlement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Entitlement";
                        };
    
                        /**
                         * ProvisioningState enum.
                         * @name google.cloud.channel.v1.Entitlement.ProvisioningState
                         * @enum {number}
                         * @property {number} PROVISIONING_STATE_UNSPECIFIED=0 PROVISIONING_STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} SUSPENDED=5 SUSPENDED value
                         */
                        Entitlement.ProvisioningState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PROVISIONING_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[5] = "SUSPENDED"] = 5;
                            return values;
                        })();
    
                        /**
                         * SuspensionReason enum.
                         * @name google.cloud.channel.v1.Entitlement.SuspensionReason
                         * @enum {number}
                         * @property {number} SUSPENSION_REASON_UNSPECIFIED=0 SUSPENSION_REASON_UNSPECIFIED value
                         * @property {number} RESELLER_INITIATED=1 RESELLER_INITIATED value
                         * @property {number} TRIAL_ENDED=2 TRIAL_ENDED value
                         * @property {number} RENEWAL_WITH_TYPE_CANCEL=3 RENEWAL_WITH_TYPE_CANCEL value
                         * @property {number} PENDING_TOS_ACCEPTANCE=4 PENDING_TOS_ACCEPTANCE value
                         * @property {number} OTHER=100 OTHER value
                         */
                        Entitlement.SuspensionReason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SUSPENSION_REASON_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RESELLER_INITIATED"] = 1;
                            values[valuesById[2] = "TRIAL_ENDED"] = 2;
                            values[valuesById[3] = "RENEWAL_WITH_TYPE_CANCEL"] = 3;
                            values[valuesById[4] = "PENDING_TOS_ACCEPTANCE"] = 4;
                            values[valuesById[100] = "OTHER"] = 100;
                            return values;
                        })();
    
                        return Entitlement;
                    })();
    
                    v1.Parameter = (function() {
    
                        /**
                         * Properties of a Parameter.
                         * @memberof google.cloud.channel.v1
                         * @interface IParameter
                         * @property {string|null} [name] Parameter name
                         * @property {google.cloud.channel.v1.IValue|null} [value] Parameter value
                         * @property {boolean|null} [editable] Parameter editable
                         */
    
                        /**
                         * Constructs a new Parameter.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Parameter.
                         * @implements IParameter
                         * @constructor
                         * @param {google.cloud.channel.v1.IParameter=} [properties] Properties to set
                         */
                        function Parameter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Parameter name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.Parameter
                         * @instance
                         */
                        Parameter.prototype.name = "";
    
                        /**
                         * Parameter value.
                         * @member {google.cloud.channel.v1.IValue|null|undefined} value
                         * @memberof google.cloud.channel.v1.Parameter
                         * @instance
                         */
                        Parameter.prototype.value = null;
    
                        /**
                         * Parameter editable.
                         * @member {boolean} editable
                         * @memberof google.cloud.channel.v1.Parameter
                         * @instance
                         */
                        Parameter.prototype.editable = false;
    
                        /**
                         * Creates a new Parameter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Parameter
                         * @static
                         * @param {google.cloud.channel.v1.IParameter=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Parameter} Parameter instance
                         */
                        Parameter.create = function create(properties) {
                            return new Parameter(properties);
                        };
    
                        /**
                         * Encodes the specified Parameter message. Does not implicitly {@link google.cloud.channel.v1.Parameter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Parameter
                         * @static
                         * @param {google.cloud.channel.v1.IParameter} message Parameter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Parameter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                $root.google.cloud.channel.v1.Value.encode(message.value, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.editable != null && Object.hasOwnProperty.call(message, "editable"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.editable);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Parameter message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Parameter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Parameter
                         * @static
                         * @param {google.cloud.channel.v1.IParameter} message Parameter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Parameter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Parameter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Parameter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Parameter} Parameter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Parameter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Parameter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.value = $root.google.cloud.channel.v1.Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.editable = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Parameter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Parameter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Parameter} Parameter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Parameter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Parameter message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Parameter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Parameter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.value != null && message.hasOwnProperty("value")) {
                                var error = $root.google.cloud.channel.v1.Value.verify(message.value);
                                if (error)
                                    return "value." + error;
                            }
                            if (message.editable != null && message.hasOwnProperty("editable"))
                                if (typeof message.editable !== "boolean")
                                    return "editable: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a Parameter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Parameter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Parameter} Parameter
                         */
                        Parameter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Parameter)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Parameter();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.value != null) {
                                if (typeof object.value !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Parameter.value: object expected");
                                message.value = $root.google.cloud.channel.v1.Value.fromObject(object.value);
                            }
                            if (object.editable != null)
                                message.editable = Boolean(object.editable);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Parameter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Parameter
                         * @static
                         * @param {google.cloud.channel.v1.Parameter} message Parameter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Parameter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.value = null;
                                object.editable = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = $root.google.cloud.channel.v1.Value.toObject(message.value, options);
                            if (message.editable != null && message.hasOwnProperty("editable"))
                                object.editable = message.editable;
                            return object;
                        };
    
                        /**
                         * Converts this Parameter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Parameter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Parameter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Parameter
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Parameter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Parameter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Parameter";
                        };
    
                        return Parameter;
                    })();
    
                    v1.AssociationInfo = (function() {
    
                        /**
                         * Properties of an AssociationInfo.
                         * @memberof google.cloud.channel.v1
                         * @interface IAssociationInfo
                         * @property {string|null} [baseEntitlement] AssociationInfo baseEntitlement
                         */
    
                        /**
                         * Constructs a new AssociationInfo.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an AssociationInfo.
                         * @implements IAssociationInfo
                         * @constructor
                         * @param {google.cloud.channel.v1.IAssociationInfo=} [properties] Properties to set
                         */
                        function AssociationInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AssociationInfo baseEntitlement.
                         * @member {string} baseEntitlement
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @instance
                         */
                        AssociationInfo.prototype.baseEntitlement = "";
    
                        /**
                         * Creates a new AssociationInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @static
                         * @param {google.cloud.channel.v1.IAssociationInfo=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.AssociationInfo} AssociationInfo instance
                         */
                        AssociationInfo.create = function create(properties) {
                            return new AssociationInfo(properties);
                        };
    
                        /**
                         * Encodes the specified AssociationInfo message. Does not implicitly {@link google.cloud.channel.v1.AssociationInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @static
                         * @param {google.cloud.channel.v1.IAssociationInfo} message AssociationInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AssociationInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.baseEntitlement != null && Object.hasOwnProperty.call(message, "baseEntitlement"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.baseEntitlement);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AssociationInfo message, length delimited. Does not implicitly {@link google.cloud.channel.v1.AssociationInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @static
                         * @param {google.cloud.channel.v1.IAssociationInfo} message AssociationInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AssociationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AssociationInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.AssociationInfo} AssociationInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AssociationInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.AssociationInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.baseEntitlement = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AssociationInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.AssociationInfo} AssociationInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AssociationInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AssociationInfo message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AssociationInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.baseEntitlement != null && message.hasOwnProperty("baseEntitlement"))
                                if (!$util.isString(message.baseEntitlement))
                                    return "baseEntitlement: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AssociationInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.AssociationInfo} AssociationInfo
                         */
                        AssociationInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.AssociationInfo)
                                return object;
                            var message = new $root.google.cloud.channel.v1.AssociationInfo();
                            if (object.baseEntitlement != null)
                                message.baseEntitlement = String(object.baseEntitlement);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AssociationInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @static
                         * @param {google.cloud.channel.v1.AssociationInfo} message AssociationInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AssociationInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.baseEntitlement = "";
                            if (message.baseEntitlement != null && message.hasOwnProperty("baseEntitlement"))
                                object.baseEntitlement = message.baseEntitlement;
                            return object;
                        };
    
                        /**
                         * Converts this AssociationInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AssociationInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AssociationInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.AssociationInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AssociationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.AssociationInfo";
                        };
    
                        return AssociationInfo;
                    })();
    
                    v1.ProvisionedService = (function() {
    
                        /**
                         * Properties of a ProvisionedService.
                         * @memberof google.cloud.channel.v1
                         * @interface IProvisionedService
                         * @property {string|null} [provisioningId] ProvisionedService provisioningId
                         * @property {string|null} [productId] ProvisionedService productId
                         * @property {string|null} [skuId] ProvisionedService skuId
                         */
    
                        /**
                         * Constructs a new ProvisionedService.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ProvisionedService.
                         * @implements IProvisionedService
                         * @constructor
                         * @param {google.cloud.channel.v1.IProvisionedService=} [properties] Properties to set
                         */
                        function ProvisionedService(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProvisionedService provisioningId.
                         * @member {string} provisioningId
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @instance
                         */
                        ProvisionedService.prototype.provisioningId = "";
    
                        /**
                         * ProvisionedService productId.
                         * @member {string} productId
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @instance
                         */
                        ProvisionedService.prototype.productId = "";
    
                        /**
                         * ProvisionedService skuId.
                         * @member {string} skuId
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @instance
                         */
                        ProvisionedService.prototype.skuId = "";
    
                        /**
                         * Creates a new ProvisionedService instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @static
                         * @param {google.cloud.channel.v1.IProvisionedService=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ProvisionedService} ProvisionedService instance
                         */
                        ProvisionedService.create = function create(properties) {
                            return new ProvisionedService(properties);
                        };
    
                        /**
                         * Encodes the specified ProvisionedService message. Does not implicitly {@link google.cloud.channel.v1.ProvisionedService.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @static
                         * @param {google.cloud.channel.v1.IProvisionedService} message ProvisionedService message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProvisionedService.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.provisioningId != null && Object.hasOwnProperty.call(message, "provisioningId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.provisioningId);
                            if (message.productId != null && Object.hasOwnProperty.call(message, "productId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.productId);
                            if (message.skuId != null && Object.hasOwnProperty.call(message, "skuId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.skuId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProvisionedService message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ProvisionedService.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @static
                         * @param {google.cloud.channel.v1.IProvisionedService} message ProvisionedService message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProvisionedService.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProvisionedService message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ProvisionedService} ProvisionedService
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProvisionedService.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ProvisionedService();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.provisioningId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.productId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.skuId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProvisionedService message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ProvisionedService} ProvisionedService
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProvisionedService.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProvisionedService message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProvisionedService.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.provisioningId != null && message.hasOwnProperty("provisioningId"))
                                if (!$util.isString(message.provisioningId))
                                    return "provisioningId: string expected";
                            if (message.productId != null && message.hasOwnProperty("productId"))
                                if (!$util.isString(message.productId))
                                    return "productId: string expected";
                            if (message.skuId != null && message.hasOwnProperty("skuId"))
                                if (!$util.isString(message.skuId))
                                    return "skuId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ProvisionedService message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ProvisionedService} ProvisionedService
                         */
                        ProvisionedService.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ProvisionedService)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ProvisionedService();
                            if (object.provisioningId != null)
                                message.provisioningId = String(object.provisioningId);
                            if (object.productId != null)
                                message.productId = String(object.productId);
                            if (object.skuId != null)
                                message.skuId = String(object.skuId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProvisionedService message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @static
                         * @param {google.cloud.channel.v1.ProvisionedService} message ProvisionedService
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProvisionedService.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.provisioningId = "";
                                object.productId = "";
                                object.skuId = "";
                            }
                            if (message.provisioningId != null && message.hasOwnProperty("provisioningId"))
                                object.provisioningId = message.provisioningId;
                            if (message.productId != null && message.hasOwnProperty("productId"))
                                object.productId = message.productId;
                            if (message.skuId != null && message.hasOwnProperty("skuId"))
                                object.skuId = message.skuId;
                            return object;
                        };
    
                        /**
                         * Converts this ProvisionedService to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProvisionedService.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ProvisionedService
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ProvisionedService
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ProvisionedService.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ProvisionedService";
                        };
    
                        return ProvisionedService;
                    })();
    
                    v1.CommitmentSettings = (function() {
    
                        /**
                         * Properties of a CommitmentSettings.
                         * @memberof google.cloud.channel.v1
                         * @interface ICommitmentSettings
                         * @property {google.protobuf.ITimestamp|null} [startTime] CommitmentSettings startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] CommitmentSettings endTime
                         * @property {google.cloud.channel.v1.IRenewalSettings|null} [renewalSettings] CommitmentSettings renewalSettings
                         */
    
                        /**
                         * Constructs a new CommitmentSettings.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CommitmentSettings.
                         * @implements ICommitmentSettings
                         * @constructor
                         * @param {google.cloud.channel.v1.ICommitmentSettings=} [properties] Properties to set
                         */
                        function CommitmentSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommitmentSettings startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @instance
                         */
                        CommitmentSettings.prototype.startTime = null;
    
                        /**
                         * CommitmentSettings endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @instance
                         */
                        CommitmentSettings.prototype.endTime = null;
    
                        /**
                         * CommitmentSettings renewalSettings.
                         * @member {google.cloud.channel.v1.IRenewalSettings|null|undefined} renewalSettings
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @instance
                         */
                        CommitmentSettings.prototype.renewalSettings = null;
    
                        /**
                         * Creates a new CommitmentSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @static
                         * @param {google.cloud.channel.v1.ICommitmentSettings=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CommitmentSettings} CommitmentSettings instance
                         */
                        CommitmentSettings.create = function create(properties) {
                            return new CommitmentSettings(properties);
                        };
    
                        /**
                         * Encodes the specified CommitmentSettings message. Does not implicitly {@link google.cloud.channel.v1.CommitmentSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @static
                         * @param {google.cloud.channel.v1.ICommitmentSettings} message CommitmentSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommitmentSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.renewalSettings != null && Object.hasOwnProperty.call(message, "renewalSettings"))
                                $root.google.cloud.channel.v1.RenewalSettings.encode(message.renewalSettings, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommitmentSettings message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CommitmentSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @static
                         * @param {google.cloud.channel.v1.ICommitmentSettings} message CommitmentSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommitmentSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommitmentSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CommitmentSettings} CommitmentSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommitmentSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CommitmentSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.renewalSettings = $root.google.cloud.channel.v1.RenewalSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommitmentSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CommitmentSettings} CommitmentSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommitmentSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommitmentSettings message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommitmentSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.renewalSettings != null && message.hasOwnProperty("renewalSettings")) {
                                var error = $root.google.cloud.channel.v1.RenewalSettings.verify(message.renewalSettings);
                                if (error)
                                    return "renewalSettings." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommitmentSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CommitmentSettings} CommitmentSettings
                         */
                        CommitmentSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CommitmentSettings)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CommitmentSettings();
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CommitmentSettings.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CommitmentSettings.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.renewalSettings != null) {
                                if (typeof object.renewalSettings !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CommitmentSettings.renewalSettings: object expected");
                                message.renewalSettings = $root.google.cloud.channel.v1.RenewalSettings.fromObject(object.renewalSettings);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommitmentSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @static
                         * @param {google.cloud.channel.v1.CommitmentSettings} message CommitmentSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommitmentSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                                object.renewalSettings = null;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.renewalSettings != null && message.hasOwnProperty("renewalSettings"))
                                object.renewalSettings = $root.google.cloud.channel.v1.RenewalSettings.toObject(message.renewalSettings, options);
                            return object;
                        };
    
                        /**
                         * Converts this CommitmentSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommitmentSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CommitmentSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CommitmentSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CommitmentSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CommitmentSettings";
                        };
    
                        return CommitmentSettings;
                    })();
    
                    v1.RenewalSettings = (function() {
    
                        /**
                         * Properties of a RenewalSettings.
                         * @memberof google.cloud.channel.v1
                         * @interface IRenewalSettings
                         * @property {boolean|null} [enableRenewal] RenewalSettings enableRenewal
                         * @property {boolean|null} [resizeUnitCount] RenewalSettings resizeUnitCount
                         * @property {google.cloud.channel.v1.PaymentPlan|null} [paymentPlan] RenewalSettings paymentPlan
                         * @property {google.cloud.channel.v1.IPeriod|null} [paymentCycle] RenewalSettings paymentCycle
                         */
    
                        /**
                         * Constructs a new RenewalSettings.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a RenewalSettings.
                         * @implements IRenewalSettings
                         * @constructor
                         * @param {google.cloud.channel.v1.IRenewalSettings=} [properties] Properties to set
                         */
                        function RenewalSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RenewalSettings enableRenewal.
                         * @member {boolean} enableRenewal
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @instance
                         */
                        RenewalSettings.prototype.enableRenewal = false;
    
                        /**
                         * RenewalSettings resizeUnitCount.
                         * @member {boolean} resizeUnitCount
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @instance
                         */
                        RenewalSettings.prototype.resizeUnitCount = false;
    
                        /**
                         * RenewalSettings paymentPlan.
                         * @member {google.cloud.channel.v1.PaymentPlan} paymentPlan
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @instance
                         */
                        RenewalSettings.prototype.paymentPlan = 0;
    
                        /**
                         * RenewalSettings paymentCycle.
                         * @member {google.cloud.channel.v1.IPeriod|null|undefined} paymentCycle
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @instance
                         */
                        RenewalSettings.prototype.paymentCycle = null;
    
                        /**
                         * Creates a new RenewalSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @static
                         * @param {google.cloud.channel.v1.IRenewalSettings=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.RenewalSettings} RenewalSettings instance
                         */
                        RenewalSettings.create = function create(properties) {
                            return new RenewalSettings(properties);
                        };
    
                        /**
                         * Encodes the specified RenewalSettings message. Does not implicitly {@link google.cloud.channel.v1.RenewalSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @static
                         * @param {google.cloud.channel.v1.IRenewalSettings} message RenewalSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RenewalSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableRenewal != null && Object.hasOwnProperty.call(message, "enableRenewal"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableRenewal);
                            if (message.resizeUnitCount != null && Object.hasOwnProperty.call(message, "resizeUnitCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.resizeUnitCount);
                            if (message.paymentPlan != null && Object.hasOwnProperty.call(message, "paymentPlan"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.paymentPlan);
                            if (message.paymentCycle != null && Object.hasOwnProperty.call(message, "paymentCycle"))
                                $root.google.cloud.channel.v1.Period.encode(message.paymentCycle, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RenewalSettings message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RenewalSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @static
                         * @param {google.cloud.channel.v1.IRenewalSettings} message RenewalSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RenewalSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RenewalSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.RenewalSettings} RenewalSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RenewalSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RenewalSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableRenewal = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.resizeUnitCount = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.paymentPlan = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.paymentCycle = $root.google.cloud.channel.v1.Period.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RenewalSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.RenewalSettings} RenewalSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RenewalSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RenewalSettings message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RenewalSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableRenewal != null && message.hasOwnProperty("enableRenewal"))
                                if (typeof message.enableRenewal !== "boolean")
                                    return "enableRenewal: boolean expected";
                            if (message.resizeUnitCount != null && message.hasOwnProperty("resizeUnitCount"))
                                if (typeof message.resizeUnitCount !== "boolean")
                                    return "resizeUnitCount: boolean expected";
                            if (message.paymentPlan != null && message.hasOwnProperty("paymentPlan"))
                                switch (message.paymentPlan) {
                                default:
                                    return "paymentPlan: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.paymentCycle != null && message.hasOwnProperty("paymentCycle")) {
                                var error = $root.google.cloud.channel.v1.Period.verify(message.paymentCycle);
                                if (error)
                                    return "paymentCycle." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RenewalSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.RenewalSettings} RenewalSettings
                         */
                        RenewalSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.RenewalSettings)
                                return object;
                            var message = new $root.google.cloud.channel.v1.RenewalSettings();
                            if (object.enableRenewal != null)
                                message.enableRenewal = Boolean(object.enableRenewal);
                            if (object.resizeUnitCount != null)
                                message.resizeUnitCount = Boolean(object.resizeUnitCount);
                            switch (object.paymentPlan) {
                            default:
                                if (typeof object.paymentPlan === "number") {
                                    message.paymentPlan = object.paymentPlan;
                                    break;
                                }
                                break;
                            case "PAYMENT_PLAN_UNSPECIFIED":
                            case 0:
                                message.paymentPlan = 0;
                                break;
                            case "COMMITMENT":
                            case 1:
                                message.paymentPlan = 1;
                                break;
                            case "FLEXIBLE":
                            case 2:
                                message.paymentPlan = 2;
                                break;
                            case "FREE":
                            case 3:
                                message.paymentPlan = 3;
                                break;
                            case "TRIAL":
                            case 4:
                                message.paymentPlan = 4;
                                break;
                            case "OFFLINE":
                            case 5:
                                message.paymentPlan = 5;
                                break;
                            }
                            if (object.paymentCycle != null) {
                                if (typeof object.paymentCycle !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RenewalSettings.paymentCycle: object expected");
                                message.paymentCycle = $root.google.cloud.channel.v1.Period.fromObject(object.paymentCycle);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RenewalSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @static
                         * @param {google.cloud.channel.v1.RenewalSettings} message RenewalSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RenewalSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.enableRenewal = false;
                                object.resizeUnitCount = false;
                                object.paymentPlan = options.enums === String ? "PAYMENT_PLAN_UNSPECIFIED" : 0;
                                object.paymentCycle = null;
                            }
                            if (message.enableRenewal != null && message.hasOwnProperty("enableRenewal"))
                                object.enableRenewal = message.enableRenewal;
                            if (message.resizeUnitCount != null && message.hasOwnProperty("resizeUnitCount"))
                                object.resizeUnitCount = message.resizeUnitCount;
                            if (message.paymentPlan != null && message.hasOwnProperty("paymentPlan"))
                                object.paymentPlan = options.enums === String ? $root.google.cloud.channel.v1.PaymentPlan[message.paymentPlan] === undefined ? message.paymentPlan : $root.google.cloud.channel.v1.PaymentPlan[message.paymentPlan] : message.paymentPlan;
                            if (message.paymentCycle != null && message.hasOwnProperty("paymentCycle"))
                                object.paymentCycle = $root.google.cloud.channel.v1.Period.toObject(message.paymentCycle, options);
                            return object;
                        };
    
                        /**
                         * Converts this RenewalSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RenewalSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RenewalSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.RenewalSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RenewalSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.RenewalSettings";
                        };
    
                        return RenewalSettings;
                    })();
    
                    v1.TrialSettings = (function() {
    
                        /**
                         * Properties of a TrialSettings.
                         * @memberof google.cloud.channel.v1
                         * @interface ITrialSettings
                         * @property {boolean|null} [trial] TrialSettings trial
                         * @property {google.protobuf.ITimestamp|null} [endTime] TrialSettings endTime
                         */
    
                        /**
                         * Constructs a new TrialSettings.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a TrialSettings.
                         * @implements ITrialSettings
                         * @constructor
                         * @param {google.cloud.channel.v1.ITrialSettings=} [properties] Properties to set
                         */
                        function TrialSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TrialSettings trial.
                         * @member {boolean} trial
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @instance
                         */
                        TrialSettings.prototype.trial = false;
    
                        /**
                         * TrialSettings endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @instance
                         */
                        TrialSettings.prototype.endTime = null;
    
                        /**
                         * Creates a new TrialSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @static
                         * @param {google.cloud.channel.v1.ITrialSettings=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.TrialSettings} TrialSettings instance
                         */
                        TrialSettings.create = function create(properties) {
                            return new TrialSettings(properties);
                        };
    
                        /**
                         * Encodes the specified TrialSettings message. Does not implicitly {@link google.cloud.channel.v1.TrialSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @static
                         * @param {google.cloud.channel.v1.ITrialSettings} message TrialSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrialSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.trial != null && Object.hasOwnProperty.call(message, "trial"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.trial);
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TrialSettings message, length delimited. Does not implicitly {@link google.cloud.channel.v1.TrialSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @static
                         * @param {google.cloud.channel.v1.ITrialSettings} message TrialSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrialSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TrialSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.TrialSettings} TrialSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrialSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.TrialSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.trial = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TrialSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.TrialSettings} TrialSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrialSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TrialSettings message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TrialSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.trial != null && message.hasOwnProperty("trial"))
                                if (typeof message.trial !== "boolean")
                                    return "trial: boolean expected";
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TrialSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.TrialSettings} TrialSettings
                         */
                        TrialSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.TrialSettings)
                                return object;
                            var message = new $root.google.cloud.channel.v1.TrialSettings();
                            if (object.trial != null)
                                message.trial = Boolean(object.trial);
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.TrialSettings.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TrialSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @static
                         * @param {google.cloud.channel.v1.TrialSettings} message TrialSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TrialSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.trial = false;
                                object.endTime = null;
                            }
                            if (message.trial != null && message.hasOwnProperty("trial"))
                                object.trial = message.trial;
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this TrialSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TrialSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TrialSettings
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.TrialSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TrialSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.TrialSettings";
                        };
    
                        return TrialSettings;
                    })();
    
                    v1.TransferableSku = (function() {
    
                        /**
                         * Properties of a TransferableSku.
                         * @memberof google.cloud.channel.v1
                         * @interface ITransferableSku
                         * @property {google.cloud.channel.v1.ITransferEligibility|null} [transferEligibility] TransferableSku transferEligibility
                         * @property {google.cloud.channel.v1.ISku|null} [sku] TransferableSku sku
                         * @property {google.cloud.channel.v1.ISku|null} [legacySku] TransferableSku legacySku
                         */
    
                        /**
                         * Constructs a new TransferableSku.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a TransferableSku.
                         * @implements ITransferableSku
                         * @constructor
                         * @param {google.cloud.channel.v1.ITransferableSku=} [properties] Properties to set
                         */
                        function TransferableSku(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferableSku transferEligibility.
                         * @member {google.cloud.channel.v1.ITransferEligibility|null|undefined} transferEligibility
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @instance
                         */
                        TransferableSku.prototype.transferEligibility = null;
    
                        /**
                         * TransferableSku sku.
                         * @member {google.cloud.channel.v1.ISku|null|undefined} sku
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @instance
                         */
                        TransferableSku.prototype.sku = null;
    
                        /**
                         * TransferableSku legacySku.
                         * @member {google.cloud.channel.v1.ISku|null|undefined} legacySku
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @instance
                         */
                        TransferableSku.prototype.legacySku = null;
    
                        /**
                         * Creates a new TransferableSku instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @static
                         * @param {google.cloud.channel.v1.ITransferableSku=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.TransferableSku} TransferableSku instance
                         */
                        TransferableSku.create = function create(properties) {
                            return new TransferableSku(properties);
                        };
    
                        /**
                         * Encodes the specified TransferableSku message. Does not implicitly {@link google.cloud.channel.v1.TransferableSku.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @static
                         * @param {google.cloud.channel.v1.ITransferableSku} message TransferableSku message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferableSku.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.transferEligibility != null && Object.hasOwnProperty.call(message, "transferEligibility"))
                                $root.google.cloud.channel.v1.TransferEligibility.encode(message.transferEligibility, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.sku != null && Object.hasOwnProperty.call(message, "sku"))
                                $root.google.cloud.channel.v1.Sku.encode(message.sku, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.legacySku != null && Object.hasOwnProperty.call(message, "legacySku"))
                                $root.google.cloud.channel.v1.Sku.encode(message.legacySku, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferableSku message, length delimited. Does not implicitly {@link google.cloud.channel.v1.TransferableSku.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @static
                         * @param {google.cloud.channel.v1.ITransferableSku} message TransferableSku message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferableSku.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferableSku message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.TransferableSku} TransferableSku
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferableSku.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.TransferableSku();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 9: {
                                        message.transferEligibility = $root.google.cloud.channel.v1.TransferEligibility.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.sku = $root.google.cloud.channel.v1.Sku.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.legacySku = $root.google.cloud.channel.v1.Sku.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferableSku message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.TransferableSku} TransferableSku
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferableSku.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferableSku message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferableSku.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.transferEligibility != null && message.hasOwnProperty("transferEligibility")) {
                                var error = $root.google.cloud.channel.v1.TransferEligibility.verify(message.transferEligibility);
                                if (error)
                                    return "transferEligibility." + error;
                            }
                            if (message.sku != null && message.hasOwnProperty("sku")) {
                                var error = $root.google.cloud.channel.v1.Sku.verify(message.sku);
                                if (error)
                                    return "sku." + error;
                            }
                            if (message.legacySku != null && message.hasOwnProperty("legacySku")) {
                                var error = $root.google.cloud.channel.v1.Sku.verify(message.legacySku);
                                if (error)
                                    return "legacySku." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransferableSku message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.TransferableSku} TransferableSku
                         */
                        TransferableSku.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.TransferableSku)
                                return object;
                            var message = new $root.google.cloud.channel.v1.TransferableSku();
                            if (object.transferEligibility != null) {
                                if (typeof object.transferEligibility !== "object")
                                    throw TypeError(".google.cloud.channel.v1.TransferableSku.transferEligibility: object expected");
                                message.transferEligibility = $root.google.cloud.channel.v1.TransferEligibility.fromObject(object.transferEligibility);
                            }
                            if (object.sku != null) {
                                if (typeof object.sku !== "object")
                                    throw TypeError(".google.cloud.channel.v1.TransferableSku.sku: object expected");
                                message.sku = $root.google.cloud.channel.v1.Sku.fromObject(object.sku);
                            }
                            if (object.legacySku != null) {
                                if (typeof object.legacySku !== "object")
                                    throw TypeError(".google.cloud.channel.v1.TransferableSku.legacySku: object expected");
                                message.legacySku = $root.google.cloud.channel.v1.Sku.fromObject(object.legacySku);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferableSku message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @static
                         * @param {google.cloud.channel.v1.TransferableSku} message TransferableSku
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferableSku.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.transferEligibility = null;
                                object.sku = null;
                                object.legacySku = null;
                            }
                            if (message.transferEligibility != null && message.hasOwnProperty("transferEligibility"))
                                object.transferEligibility = $root.google.cloud.channel.v1.TransferEligibility.toObject(message.transferEligibility, options);
                            if (message.sku != null && message.hasOwnProperty("sku"))
                                object.sku = $root.google.cloud.channel.v1.Sku.toObject(message.sku, options);
                            if (message.legacySku != null && message.hasOwnProperty("legacySku"))
                                object.legacySku = $root.google.cloud.channel.v1.Sku.toObject(message.legacySku, options);
                            return object;
                        };
    
                        /**
                         * Converts this TransferableSku to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferableSku.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferableSku
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.TransferableSku
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferableSku.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.TransferableSku";
                        };
    
                        return TransferableSku;
                    })();
    
                    v1.TransferEligibility = (function() {
    
                        /**
                         * Properties of a TransferEligibility.
                         * @memberof google.cloud.channel.v1
                         * @interface ITransferEligibility
                         * @property {boolean|null} [isEligible] TransferEligibility isEligible
                         * @property {string|null} [description] TransferEligibility description
                         * @property {google.cloud.channel.v1.TransferEligibility.Reason|null} [ineligibilityReason] TransferEligibility ineligibilityReason
                         */
    
                        /**
                         * Constructs a new TransferEligibility.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a TransferEligibility.
                         * @implements ITransferEligibility
                         * @constructor
                         * @param {google.cloud.channel.v1.ITransferEligibility=} [properties] Properties to set
                         */
                        function TransferEligibility(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferEligibility isEligible.
                         * @member {boolean} isEligible
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @instance
                         */
                        TransferEligibility.prototype.isEligible = false;
    
                        /**
                         * TransferEligibility description.
                         * @member {string} description
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @instance
                         */
                        TransferEligibility.prototype.description = "";
    
                        /**
                         * TransferEligibility ineligibilityReason.
                         * @member {google.cloud.channel.v1.TransferEligibility.Reason} ineligibilityReason
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @instance
                         */
                        TransferEligibility.prototype.ineligibilityReason = 0;
    
                        /**
                         * Creates a new TransferEligibility instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEligibility=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.TransferEligibility} TransferEligibility instance
                         */
                        TransferEligibility.create = function create(properties) {
                            return new TransferEligibility(properties);
                        };
    
                        /**
                         * Encodes the specified TransferEligibility message. Does not implicitly {@link google.cloud.channel.v1.TransferEligibility.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEligibility} message TransferEligibility message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferEligibility.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.isEligible != null && Object.hasOwnProperty.call(message, "isEligible"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.isEligible);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.ineligibilityReason != null && Object.hasOwnProperty.call(message, "ineligibilityReason"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.ineligibilityReason);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferEligibility message, length delimited. Does not implicitly {@link google.cloud.channel.v1.TransferEligibility.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEligibility} message TransferEligibility message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferEligibility.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferEligibility message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.TransferEligibility} TransferEligibility
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferEligibility.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.TransferEligibility();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.isEligible = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.ineligibilityReason = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferEligibility message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.TransferEligibility} TransferEligibility
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferEligibility.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferEligibility message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferEligibility.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.isEligible != null && message.hasOwnProperty("isEligible"))
                                if (typeof message.isEligible !== "boolean")
                                    return "isEligible: boolean expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.ineligibilityReason != null && message.hasOwnProperty("ineligibilityReason"))
                                switch (message.ineligibilityReason) {
                                default:
                                    return "ineligibilityReason: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a TransferEligibility message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.TransferEligibility} TransferEligibility
                         */
                        TransferEligibility.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.TransferEligibility)
                                return object;
                            var message = new $root.google.cloud.channel.v1.TransferEligibility();
                            if (object.isEligible != null)
                                message.isEligible = Boolean(object.isEligible);
                            if (object.description != null)
                                message.description = String(object.description);
                            switch (object.ineligibilityReason) {
                            default:
                                if (typeof object.ineligibilityReason === "number") {
                                    message.ineligibilityReason = object.ineligibilityReason;
                                    break;
                                }
                                break;
                            case "REASON_UNSPECIFIED":
                            case 0:
                                message.ineligibilityReason = 0;
                                break;
                            case "PENDING_TOS_ACCEPTANCE":
                            case 1:
                                message.ineligibilityReason = 1;
                                break;
                            case "SKU_NOT_ELIGIBLE":
                            case 2:
                                message.ineligibilityReason = 2;
                                break;
                            case "SKU_SUSPENDED":
                            case 3:
                                message.ineligibilityReason = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferEligibility message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @static
                         * @param {google.cloud.channel.v1.TransferEligibility} message TransferEligibility
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferEligibility.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.isEligible = false;
                                object.description = "";
                                object.ineligibilityReason = options.enums === String ? "REASON_UNSPECIFIED" : 0;
                            }
                            if (message.isEligible != null && message.hasOwnProperty("isEligible"))
                                object.isEligible = message.isEligible;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.ineligibilityReason != null && message.hasOwnProperty("ineligibilityReason"))
                                object.ineligibilityReason = options.enums === String ? $root.google.cloud.channel.v1.TransferEligibility.Reason[message.ineligibilityReason] === undefined ? message.ineligibilityReason : $root.google.cloud.channel.v1.TransferEligibility.Reason[message.ineligibilityReason] : message.ineligibilityReason;
                            return object;
                        };
    
                        /**
                         * Converts this TransferEligibility to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferEligibility.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferEligibility
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.TransferEligibility
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferEligibility.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.TransferEligibility";
                        };
    
                        /**
                         * Reason enum.
                         * @name google.cloud.channel.v1.TransferEligibility.Reason
                         * @enum {number}
                         * @property {number} REASON_UNSPECIFIED=0 REASON_UNSPECIFIED value
                         * @property {number} PENDING_TOS_ACCEPTANCE=1 PENDING_TOS_ACCEPTANCE value
                         * @property {number} SKU_NOT_ELIGIBLE=2 SKU_NOT_ELIGIBLE value
                         * @property {number} SKU_SUSPENDED=3 SKU_SUSPENDED value
                         */
                        TransferEligibility.Reason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "REASON_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PENDING_TOS_ACCEPTANCE"] = 1;
                            values[valuesById[2] = "SKU_NOT_ELIGIBLE"] = 2;
                            values[valuesById[3] = "SKU_SUSPENDED"] = 3;
                            return values;
                        })();
    
                        return TransferEligibility;
                    })();
    
                    /**
                     * PromotionalOrderType enum.
                     * @name google.cloud.channel.v1.PromotionalOrderType
                     * @enum {number}
                     * @property {number} PROMOTIONAL_TYPE_UNSPECIFIED=0 PROMOTIONAL_TYPE_UNSPECIFIED value
                     * @property {number} NEW_UPGRADE=1 NEW_UPGRADE value
                     * @property {number} TRANSFER=2 TRANSFER value
                     * @property {number} PROMOTION_SWITCH=3 PROMOTION_SWITCH value
                     */
                    v1.PromotionalOrderType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "PROMOTIONAL_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "NEW_UPGRADE"] = 1;
                        values[valuesById[2] = "TRANSFER"] = 2;
                        values[valuesById[3] = "PROMOTION_SWITCH"] = 3;
                        return values;
                    })();
    
                    /**
                     * PaymentPlan enum.
                     * @name google.cloud.channel.v1.PaymentPlan
                     * @enum {number}
                     * @property {number} PAYMENT_PLAN_UNSPECIFIED=0 PAYMENT_PLAN_UNSPECIFIED value
                     * @property {number} COMMITMENT=1 COMMITMENT value
                     * @property {number} FLEXIBLE=2 FLEXIBLE value
                     * @property {number} FREE=3 FREE value
                     * @property {number} TRIAL=4 TRIAL value
                     * @property {number} OFFLINE=5 OFFLINE value
                     */
                    v1.PaymentPlan = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "PAYMENT_PLAN_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "COMMITMENT"] = 1;
                        values[valuesById[2] = "FLEXIBLE"] = 2;
                        values[valuesById[3] = "FREE"] = 3;
                        values[valuesById[4] = "TRIAL"] = 4;
                        values[valuesById[5] = "OFFLINE"] = 5;
                        return values;
                    })();
    
                    /**
                     * PaymentType enum.
                     * @name google.cloud.channel.v1.PaymentType
                     * @enum {number}
                     * @property {number} PAYMENT_TYPE_UNSPECIFIED=0 PAYMENT_TYPE_UNSPECIFIED value
                     * @property {number} PREPAY=1 PREPAY value
                     * @property {number} POSTPAY=2 POSTPAY value
                     */
                    v1.PaymentType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "PAYMENT_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PREPAY"] = 1;
                        values[valuesById[2] = "POSTPAY"] = 2;
                        return values;
                    })();
    
                    /**
                     * ResourceType enum.
                     * @name google.cloud.channel.v1.ResourceType
                     * @enum {number}
                     * @property {number} RESOURCE_TYPE_UNSPECIFIED=0 RESOURCE_TYPE_UNSPECIFIED value
                     * @property {number} SEAT=1 SEAT value
                     * @property {number} MAU=2 MAU value
                     * @property {number} GB=3 GB value
                     * @property {number} LICENSED_USER=4 LICENSED_USER value
                     * @property {number} MINUTES=5 MINUTES value
                     * @property {number} IAAS_USAGE=6 IAAS_USAGE value
                     * @property {number} SUBSCRIPTION=7 SUBSCRIPTION value
                     */
                    v1.ResourceType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "RESOURCE_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SEAT"] = 1;
                        values[valuesById[2] = "MAU"] = 2;
                        values[valuesById[3] = "GB"] = 3;
                        values[valuesById[4] = "LICENSED_USER"] = 4;
                        values[valuesById[5] = "MINUTES"] = 5;
                        values[valuesById[6] = "IAAS_USAGE"] = 6;
                        values[valuesById[7] = "SUBSCRIPTION"] = 7;
                        return values;
                    })();
    
                    /**
                     * PeriodType enum.
                     * @name google.cloud.channel.v1.PeriodType
                     * @enum {number}
                     * @property {number} PERIOD_TYPE_UNSPECIFIED=0 PERIOD_TYPE_UNSPECIFIED value
                     * @property {number} DAY=1 DAY value
                     * @property {number} MONTH=2 MONTH value
                     * @property {number} YEAR=3 YEAR value
                     */
                    v1.PeriodType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "PERIOD_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "DAY"] = 1;
                        values[valuesById[2] = "MONTH"] = 2;
                        values[valuesById[3] = "YEAR"] = 3;
                        return values;
                    })();
    
                    v1.Offer = (function() {
    
                        /**
                         * Properties of an Offer.
                         * @memberof google.cloud.channel.v1
                         * @interface IOffer
                         * @property {string|null} [name] Offer name
                         * @property {google.cloud.channel.v1.IMarketingInfo|null} [marketingInfo] Offer marketingInfo
                         * @property {google.cloud.channel.v1.ISku|null} [sku] Offer sku
                         * @property {google.cloud.channel.v1.IPlan|null} [plan] Offer plan
                         * @property {google.cloud.channel.v1.IConstraints|null} [constraints] Offer constraints
                         * @property {Array.<google.cloud.channel.v1.IPriceByResource>|null} [priceByResources] Offer priceByResources
                         * @property {google.protobuf.ITimestamp|null} [startTime] Offer startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] Offer endTime
                         * @property {Array.<google.cloud.channel.v1.IParameterDefinition>|null} [parameterDefinitions] Offer parameterDefinitions
                         * @property {string|null} [dealCode] Offer dealCode
                         */
    
                        /**
                         * Constructs a new Offer.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an Offer.
                         * @implements IOffer
                         * @constructor
                         * @param {google.cloud.channel.v1.IOffer=} [properties] Properties to set
                         */
                        function Offer(properties) {
                            this.priceByResources = [];
                            this.parameterDefinitions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Offer name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.name = "";
    
                        /**
                         * Offer marketingInfo.
                         * @member {google.cloud.channel.v1.IMarketingInfo|null|undefined} marketingInfo
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.marketingInfo = null;
    
                        /**
                         * Offer sku.
                         * @member {google.cloud.channel.v1.ISku|null|undefined} sku
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.sku = null;
    
                        /**
                         * Offer plan.
                         * @member {google.cloud.channel.v1.IPlan|null|undefined} plan
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.plan = null;
    
                        /**
                         * Offer constraints.
                         * @member {google.cloud.channel.v1.IConstraints|null|undefined} constraints
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.constraints = null;
    
                        /**
                         * Offer priceByResources.
                         * @member {Array.<google.cloud.channel.v1.IPriceByResource>} priceByResources
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.priceByResources = $util.emptyArray;
    
                        /**
                         * Offer startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.startTime = null;
    
                        /**
                         * Offer endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.endTime = null;
    
                        /**
                         * Offer parameterDefinitions.
                         * @member {Array.<google.cloud.channel.v1.IParameterDefinition>} parameterDefinitions
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.parameterDefinitions = $util.emptyArray;
    
                        /**
                         * Offer dealCode.
                         * @member {string} dealCode
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         */
                        Offer.prototype.dealCode = "";
    
                        /**
                         * Creates a new Offer instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Offer
                         * @static
                         * @param {google.cloud.channel.v1.IOffer=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Offer} Offer instance
                         */
                        Offer.create = function create(properties) {
                            return new Offer(properties);
                        };
    
                        /**
                         * Encodes the specified Offer message. Does not implicitly {@link google.cloud.channel.v1.Offer.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Offer
                         * @static
                         * @param {google.cloud.channel.v1.IOffer} message Offer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Offer.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.marketingInfo != null && Object.hasOwnProperty.call(message, "marketingInfo"))
                                $root.google.cloud.channel.v1.MarketingInfo.encode(message.marketingInfo, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.sku != null && Object.hasOwnProperty.call(message, "sku"))
                                $root.google.cloud.channel.v1.Sku.encode(message.sku, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.plan != null && Object.hasOwnProperty.call(message, "plan"))
                                $root.google.cloud.channel.v1.Plan.encode(message.plan, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.constraints != null && Object.hasOwnProperty.call(message, "constraints"))
                                $root.google.cloud.channel.v1.Constraints.encode(message.constraints, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.priceByResources != null && message.priceByResources.length)
                                for (var i = 0; i < message.priceByResources.length; ++i)
                                    $root.google.cloud.channel.v1.PriceByResource.encode(message.priceByResources[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.parameterDefinitions != null && message.parameterDefinitions.length)
                                for (var i = 0; i < message.parameterDefinitions.length; ++i)
                                    $root.google.cloud.channel.v1.ParameterDefinition.encode(message.parameterDefinitions[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.dealCode != null && Object.hasOwnProperty.call(message, "dealCode"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.dealCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Offer message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Offer.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Offer
                         * @static
                         * @param {google.cloud.channel.v1.IOffer} message Offer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Offer.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Offer message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Offer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Offer} Offer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Offer.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Offer();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.marketingInfo = $root.google.cloud.channel.v1.MarketingInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.sku = $root.google.cloud.channel.v1.Sku.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.plan = $root.google.cloud.channel.v1.Plan.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.constraints = $root.google.cloud.channel.v1.Constraints.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.priceByResources && message.priceByResources.length))
                                            message.priceByResources = [];
                                        message.priceByResources.push($root.google.cloud.channel.v1.PriceByResource.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 7: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (!(message.parameterDefinitions && message.parameterDefinitions.length))
                                            message.parameterDefinitions = [];
                                        message.parameterDefinitions.push($root.google.cloud.channel.v1.ParameterDefinition.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 12: {
                                        message.dealCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Offer message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Offer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Offer} Offer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Offer.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Offer message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Offer
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Offer.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.marketingInfo != null && message.hasOwnProperty("marketingInfo")) {
                                var error = $root.google.cloud.channel.v1.MarketingInfo.verify(message.marketingInfo);
                                if (error)
                                    return "marketingInfo." + error;
                            }
                            if (message.sku != null && message.hasOwnProperty("sku")) {
                                var error = $root.google.cloud.channel.v1.Sku.verify(message.sku);
                                if (error)
                                    return "sku." + error;
                            }
                            if (message.plan != null && message.hasOwnProperty("plan")) {
                                var error = $root.google.cloud.channel.v1.Plan.verify(message.plan);
                                if (error)
                                    return "plan." + error;
                            }
                            if (message.constraints != null && message.hasOwnProperty("constraints")) {
                                var error = $root.google.cloud.channel.v1.Constraints.verify(message.constraints);
                                if (error)
                                    return "constraints." + error;
                            }
                            if (message.priceByResources != null && message.hasOwnProperty("priceByResources")) {
                                if (!Array.isArray(message.priceByResources))
                                    return "priceByResources: array expected";
                                for (var i = 0; i < message.priceByResources.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.PriceByResource.verify(message.priceByResources[i]);
                                    if (error)
                                        return "priceByResources." + error;
                                }
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.parameterDefinitions != null && message.hasOwnProperty("parameterDefinitions")) {
                                if (!Array.isArray(message.parameterDefinitions))
                                    return "parameterDefinitions: array expected";
                                for (var i = 0; i < message.parameterDefinitions.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.ParameterDefinition.verify(message.parameterDefinitions[i]);
                                    if (error)
                                        return "parameterDefinitions." + error;
                                }
                            }
                            if (message.dealCode != null && message.hasOwnProperty("dealCode"))
                                if (!$util.isString(message.dealCode))
                                    return "dealCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Offer message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Offer
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Offer} Offer
                         */
                        Offer.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Offer)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Offer();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.marketingInfo != null) {
                                if (typeof object.marketingInfo !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Offer.marketingInfo: object expected");
                                message.marketingInfo = $root.google.cloud.channel.v1.MarketingInfo.fromObject(object.marketingInfo);
                            }
                            if (object.sku != null) {
                                if (typeof object.sku !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Offer.sku: object expected");
                                message.sku = $root.google.cloud.channel.v1.Sku.fromObject(object.sku);
                            }
                            if (object.plan != null) {
                                if (typeof object.plan !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Offer.plan: object expected");
                                message.plan = $root.google.cloud.channel.v1.Plan.fromObject(object.plan);
                            }
                            if (object.constraints != null) {
                                if (typeof object.constraints !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Offer.constraints: object expected");
                                message.constraints = $root.google.cloud.channel.v1.Constraints.fromObject(object.constraints);
                            }
                            if (object.priceByResources) {
                                if (!Array.isArray(object.priceByResources))
                                    throw TypeError(".google.cloud.channel.v1.Offer.priceByResources: array expected");
                                message.priceByResources = [];
                                for (var i = 0; i < object.priceByResources.length; ++i) {
                                    if (typeof object.priceByResources[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.Offer.priceByResources: object expected");
                                    message.priceByResources[i] = $root.google.cloud.channel.v1.PriceByResource.fromObject(object.priceByResources[i]);
                                }
                            }
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Offer.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Offer.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.parameterDefinitions) {
                                if (!Array.isArray(object.parameterDefinitions))
                                    throw TypeError(".google.cloud.channel.v1.Offer.parameterDefinitions: array expected");
                                message.parameterDefinitions = [];
                                for (var i = 0; i < object.parameterDefinitions.length; ++i) {
                                    if (typeof object.parameterDefinitions[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.Offer.parameterDefinitions: object expected");
                                    message.parameterDefinitions[i] = $root.google.cloud.channel.v1.ParameterDefinition.fromObject(object.parameterDefinitions[i]);
                                }
                            }
                            if (object.dealCode != null)
                                message.dealCode = String(object.dealCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Offer message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Offer
                         * @static
                         * @param {google.cloud.channel.v1.Offer} message Offer
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Offer.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.priceByResources = [];
                                object.parameterDefinitions = [];
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.marketingInfo = null;
                                object.sku = null;
                                object.plan = null;
                                object.constraints = null;
                                object.startTime = null;
                                object.endTime = null;
                                object.dealCode = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.marketingInfo != null && message.hasOwnProperty("marketingInfo"))
                                object.marketingInfo = $root.google.cloud.channel.v1.MarketingInfo.toObject(message.marketingInfo, options);
                            if (message.sku != null && message.hasOwnProperty("sku"))
                                object.sku = $root.google.cloud.channel.v1.Sku.toObject(message.sku, options);
                            if (message.plan != null && message.hasOwnProperty("plan"))
                                object.plan = $root.google.cloud.channel.v1.Plan.toObject(message.plan, options);
                            if (message.constraints != null && message.hasOwnProperty("constraints"))
                                object.constraints = $root.google.cloud.channel.v1.Constraints.toObject(message.constraints, options);
                            if (message.priceByResources && message.priceByResources.length) {
                                object.priceByResources = [];
                                for (var j = 0; j < message.priceByResources.length; ++j)
                                    object.priceByResources[j] = $root.google.cloud.channel.v1.PriceByResource.toObject(message.priceByResources[j], options);
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.parameterDefinitions && message.parameterDefinitions.length) {
                                object.parameterDefinitions = [];
                                for (var j = 0; j < message.parameterDefinitions.length; ++j)
                                    object.parameterDefinitions[j] = $root.google.cloud.channel.v1.ParameterDefinition.toObject(message.parameterDefinitions[j], options);
                            }
                            if (message.dealCode != null && message.hasOwnProperty("dealCode"))
                                object.dealCode = message.dealCode;
                            return object;
                        };
    
                        /**
                         * Converts this Offer to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Offer
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Offer.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Offer
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Offer
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Offer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Offer";
                        };
    
                        return Offer;
                    })();
    
                    v1.ParameterDefinition = (function() {
    
                        /**
                         * Properties of a ParameterDefinition.
                         * @memberof google.cloud.channel.v1
                         * @interface IParameterDefinition
                         * @property {string|null} [name] ParameterDefinition name
                         * @property {google.cloud.channel.v1.ParameterDefinition.ParameterType|null} [parameterType] ParameterDefinition parameterType
                         * @property {google.cloud.channel.v1.IValue|null} [minValue] ParameterDefinition minValue
                         * @property {google.cloud.channel.v1.IValue|null} [maxValue] ParameterDefinition maxValue
                         * @property {Array.<google.cloud.channel.v1.IValue>|null} [allowedValues] ParameterDefinition allowedValues
                         * @property {boolean|null} [optional] ParameterDefinition optional
                         */
    
                        /**
                         * Constructs a new ParameterDefinition.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ParameterDefinition.
                         * @implements IParameterDefinition
                         * @constructor
                         * @param {google.cloud.channel.v1.IParameterDefinition=} [properties] Properties to set
                         */
                        function ParameterDefinition(properties) {
                            this.allowedValues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ParameterDefinition name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @instance
                         */
                        ParameterDefinition.prototype.name = "";
    
                        /**
                         * ParameterDefinition parameterType.
                         * @member {google.cloud.channel.v1.ParameterDefinition.ParameterType} parameterType
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @instance
                         */
                        ParameterDefinition.prototype.parameterType = 0;
    
                        /**
                         * ParameterDefinition minValue.
                         * @member {google.cloud.channel.v1.IValue|null|undefined} minValue
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @instance
                         */
                        ParameterDefinition.prototype.minValue = null;
    
                        /**
                         * ParameterDefinition maxValue.
                         * @member {google.cloud.channel.v1.IValue|null|undefined} maxValue
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @instance
                         */
                        ParameterDefinition.prototype.maxValue = null;
    
                        /**
                         * ParameterDefinition allowedValues.
                         * @member {Array.<google.cloud.channel.v1.IValue>} allowedValues
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @instance
                         */
                        ParameterDefinition.prototype.allowedValues = $util.emptyArray;
    
                        /**
                         * ParameterDefinition optional.
                         * @member {boolean} optional
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @instance
                         */
                        ParameterDefinition.prototype.optional = false;
    
                        /**
                         * Creates a new ParameterDefinition instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @static
                         * @param {google.cloud.channel.v1.IParameterDefinition=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ParameterDefinition} ParameterDefinition instance
                         */
                        ParameterDefinition.create = function create(properties) {
                            return new ParameterDefinition(properties);
                        };
    
                        /**
                         * Encodes the specified ParameterDefinition message. Does not implicitly {@link google.cloud.channel.v1.ParameterDefinition.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @static
                         * @param {google.cloud.channel.v1.IParameterDefinition} message ParameterDefinition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ParameterDefinition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.parameterType != null && Object.hasOwnProperty.call(message, "parameterType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.parameterType);
                            if (message.minValue != null && Object.hasOwnProperty.call(message, "minValue"))
                                $root.google.cloud.channel.v1.Value.encode(message.minValue, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.maxValue != null && Object.hasOwnProperty.call(message, "maxValue"))
                                $root.google.cloud.channel.v1.Value.encode(message.maxValue, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.allowedValues != null && message.allowedValues.length)
                                for (var i = 0; i < message.allowedValues.length; ++i)
                                    $root.google.cloud.channel.v1.Value.encode(message.allowedValues[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.optional != null && Object.hasOwnProperty.call(message, "optional"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.optional);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ParameterDefinition message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ParameterDefinition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @static
                         * @param {google.cloud.channel.v1.IParameterDefinition} message ParameterDefinition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ParameterDefinition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ParameterDefinition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ParameterDefinition} ParameterDefinition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ParameterDefinition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ParameterDefinition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.parameterType = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.minValue = $root.google.cloud.channel.v1.Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.maxValue = $root.google.cloud.channel.v1.Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.allowedValues && message.allowedValues.length))
                                            message.allowedValues = [];
                                        message.allowedValues.push($root.google.cloud.channel.v1.Value.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.optional = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ParameterDefinition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ParameterDefinition} ParameterDefinition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ParameterDefinition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ParameterDefinition message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ParameterDefinition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.parameterType != null && message.hasOwnProperty("parameterType"))
                                switch (message.parameterType) {
                                default:
                                    return "parameterType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.minValue != null && message.hasOwnProperty("minValue")) {
                                var error = $root.google.cloud.channel.v1.Value.verify(message.minValue);
                                if (error)
                                    return "minValue." + error;
                            }
                            if (message.maxValue != null && message.hasOwnProperty("maxValue")) {
                                var error = $root.google.cloud.channel.v1.Value.verify(message.maxValue);
                                if (error)
                                    return "maxValue." + error;
                            }
                            if (message.allowedValues != null && message.hasOwnProperty("allowedValues")) {
                                if (!Array.isArray(message.allowedValues))
                                    return "allowedValues: array expected";
                                for (var i = 0; i < message.allowedValues.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Value.verify(message.allowedValues[i]);
                                    if (error)
                                        return "allowedValues." + error;
                                }
                            }
                            if (message.optional != null && message.hasOwnProperty("optional"))
                                if (typeof message.optional !== "boolean")
                                    return "optional: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ParameterDefinition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ParameterDefinition} ParameterDefinition
                         */
                        ParameterDefinition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ParameterDefinition)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ParameterDefinition();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.parameterType) {
                            default:
                                if (typeof object.parameterType === "number") {
                                    message.parameterType = object.parameterType;
                                    break;
                                }
                                break;
                            case "PARAMETER_TYPE_UNSPECIFIED":
                            case 0:
                                message.parameterType = 0;
                                break;
                            case "INT64":
                            case 1:
                                message.parameterType = 1;
                                break;
                            case "STRING":
                            case 2:
                                message.parameterType = 2;
                                break;
                            case "DOUBLE":
                            case 3:
                                message.parameterType = 3;
                                break;
                            }
                            if (object.minValue != null) {
                                if (typeof object.minValue !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ParameterDefinition.minValue: object expected");
                                message.minValue = $root.google.cloud.channel.v1.Value.fromObject(object.minValue);
                            }
                            if (object.maxValue != null) {
                                if (typeof object.maxValue !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ParameterDefinition.maxValue: object expected");
                                message.maxValue = $root.google.cloud.channel.v1.Value.fromObject(object.maxValue);
                            }
                            if (object.allowedValues) {
                                if (!Array.isArray(object.allowedValues))
                                    throw TypeError(".google.cloud.channel.v1.ParameterDefinition.allowedValues: array expected");
                                message.allowedValues = [];
                                for (var i = 0; i < object.allowedValues.length; ++i) {
                                    if (typeof object.allowedValues[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ParameterDefinition.allowedValues: object expected");
                                    message.allowedValues[i] = $root.google.cloud.channel.v1.Value.fromObject(object.allowedValues[i]);
                                }
                            }
                            if (object.optional != null)
                                message.optional = Boolean(object.optional);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ParameterDefinition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @static
                         * @param {google.cloud.channel.v1.ParameterDefinition} message ParameterDefinition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ParameterDefinition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.allowedValues = [];
                            if (options.defaults) {
                                object.name = "";
                                object.parameterType = options.enums === String ? "PARAMETER_TYPE_UNSPECIFIED" : 0;
                                object.minValue = null;
                                object.maxValue = null;
                                object.optional = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.parameterType != null && message.hasOwnProperty("parameterType"))
                                object.parameterType = options.enums === String ? $root.google.cloud.channel.v1.ParameterDefinition.ParameterType[message.parameterType] === undefined ? message.parameterType : $root.google.cloud.channel.v1.ParameterDefinition.ParameterType[message.parameterType] : message.parameterType;
                            if (message.minValue != null && message.hasOwnProperty("minValue"))
                                object.minValue = $root.google.cloud.channel.v1.Value.toObject(message.minValue, options);
                            if (message.maxValue != null && message.hasOwnProperty("maxValue"))
                                object.maxValue = $root.google.cloud.channel.v1.Value.toObject(message.maxValue, options);
                            if (message.allowedValues && message.allowedValues.length) {
                                object.allowedValues = [];
                                for (var j = 0; j < message.allowedValues.length; ++j)
                                    object.allowedValues[j] = $root.google.cloud.channel.v1.Value.toObject(message.allowedValues[j], options);
                            }
                            if (message.optional != null && message.hasOwnProperty("optional"))
                                object.optional = message.optional;
                            return object;
                        };
    
                        /**
                         * Converts this ParameterDefinition to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ParameterDefinition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ParameterDefinition
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ParameterDefinition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ParameterDefinition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ParameterDefinition";
                        };
    
                        /**
                         * ParameterType enum.
                         * @name google.cloud.channel.v1.ParameterDefinition.ParameterType
                         * @enum {number}
                         * @property {number} PARAMETER_TYPE_UNSPECIFIED=0 PARAMETER_TYPE_UNSPECIFIED value
                         * @property {number} INT64=1 INT64 value
                         * @property {number} STRING=2 STRING value
                         * @property {number} DOUBLE=3 DOUBLE value
                         */
                        ParameterDefinition.ParameterType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PARAMETER_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "INT64"] = 1;
                            values[valuesById[2] = "STRING"] = 2;
                            values[valuesById[3] = "DOUBLE"] = 3;
                            return values;
                        })();
    
                        return ParameterDefinition;
                    })();
    
                    v1.Constraints = (function() {
    
                        /**
                         * Properties of a Constraints.
                         * @memberof google.cloud.channel.v1
                         * @interface IConstraints
                         * @property {google.cloud.channel.v1.ICustomerConstraints|null} [customerConstraints] Constraints customerConstraints
                         */
    
                        /**
                         * Constructs a new Constraints.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Constraints.
                         * @implements IConstraints
                         * @constructor
                         * @param {google.cloud.channel.v1.IConstraints=} [properties] Properties to set
                         */
                        function Constraints(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Constraints customerConstraints.
                         * @member {google.cloud.channel.v1.ICustomerConstraints|null|undefined} customerConstraints
                         * @memberof google.cloud.channel.v1.Constraints
                         * @instance
                         */
                        Constraints.prototype.customerConstraints = null;
    
                        /**
                         * Creates a new Constraints instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Constraints
                         * @static
                         * @param {google.cloud.channel.v1.IConstraints=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Constraints} Constraints instance
                         */
                        Constraints.create = function create(properties) {
                            return new Constraints(properties);
                        };
    
                        /**
                         * Encodes the specified Constraints message. Does not implicitly {@link google.cloud.channel.v1.Constraints.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Constraints
                         * @static
                         * @param {google.cloud.channel.v1.IConstraints} message Constraints message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Constraints.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customerConstraints != null && Object.hasOwnProperty.call(message, "customerConstraints"))
                                $root.google.cloud.channel.v1.CustomerConstraints.encode(message.customerConstraints, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Constraints message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Constraints.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Constraints
                         * @static
                         * @param {google.cloud.channel.v1.IConstraints} message Constraints message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Constraints.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Constraints message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Constraints
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Constraints} Constraints
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Constraints.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Constraints();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customerConstraints = $root.google.cloud.channel.v1.CustomerConstraints.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Constraints message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Constraints
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Constraints} Constraints
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Constraints.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Constraints message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Constraints
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Constraints.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customerConstraints != null && message.hasOwnProperty("customerConstraints")) {
                                var error = $root.google.cloud.channel.v1.CustomerConstraints.verify(message.customerConstraints);
                                if (error)
                                    return "customerConstraints." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Constraints message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Constraints
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Constraints} Constraints
                         */
                        Constraints.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Constraints)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Constraints();
                            if (object.customerConstraints != null) {
                                if (typeof object.customerConstraints !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Constraints.customerConstraints: object expected");
                                message.customerConstraints = $root.google.cloud.channel.v1.CustomerConstraints.fromObject(object.customerConstraints);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Constraints message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Constraints
                         * @static
                         * @param {google.cloud.channel.v1.Constraints} message Constraints
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Constraints.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.customerConstraints = null;
                            if (message.customerConstraints != null && message.hasOwnProperty("customerConstraints"))
                                object.customerConstraints = $root.google.cloud.channel.v1.CustomerConstraints.toObject(message.customerConstraints, options);
                            return object;
                        };
    
                        /**
                         * Converts this Constraints to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Constraints
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Constraints.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Constraints
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Constraints
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Constraints.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Constraints";
                        };
    
                        return Constraints;
                    })();
    
                    v1.CustomerConstraints = (function() {
    
                        /**
                         * Properties of a CustomerConstraints.
                         * @memberof google.cloud.channel.v1
                         * @interface ICustomerConstraints
                         * @property {Array.<string>|null} [allowedRegions] CustomerConstraints allowedRegions
                         * @property {Array.<google.cloud.channel.v1.CloudIdentityInfo.CustomerType>|null} [allowedCustomerTypes] CustomerConstraints allowedCustomerTypes
                         * @property {Array.<google.cloud.channel.v1.PromotionalOrderType>|null} [promotionalOrderTypes] CustomerConstraints promotionalOrderTypes
                         */
    
                        /**
                         * Constructs a new CustomerConstraints.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CustomerConstraints.
                         * @implements ICustomerConstraints
                         * @constructor
                         * @param {google.cloud.channel.v1.ICustomerConstraints=} [properties] Properties to set
                         */
                        function CustomerConstraints(properties) {
                            this.allowedRegions = [];
                            this.allowedCustomerTypes = [];
                            this.promotionalOrderTypes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CustomerConstraints allowedRegions.
                         * @member {Array.<string>} allowedRegions
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @instance
                         */
                        CustomerConstraints.prototype.allowedRegions = $util.emptyArray;
    
                        /**
                         * CustomerConstraints allowedCustomerTypes.
                         * @member {Array.<google.cloud.channel.v1.CloudIdentityInfo.CustomerType>} allowedCustomerTypes
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @instance
                         */
                        CustomerConstraints.prototype.allowedCustomerTypes = $util.emptyArray;
    
                        /**
                         * CustomerConstraints promotionalOrderTypes.
                         * @member {Array.<google.cloud.channel.v1.PromotionalOrderType>} promotionalOrderTypes
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @instance
                         */
                        CustomerConstraints.prototype.promotionalOrderTypes = $util.emptyArray;
    
                        /**
                         * Creates a new CustomerConstraints instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @static
                         * @param {google.cloud.channel.v1.ICustomerConstraints=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CustomerConstraints} CustomerConstraints instance
                         */
                        CustomerConstraints.create = function create(properties) {
                            return new CustomerConstraints(properties);
                        };
    
                        /**
                         * Encodes the specified CustomerConstraints message. Does not implicitly {@link google.cloud.channel.v1.CustomerConstraints.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @static
                         * @param {google.cloud.channel.v1.ICustomerConstraints} message CustomerConstraints message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomerConstraints.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.allowedRegions != null && message.allowedRegions.length)
                                for (var i = 0; i < message.allowedRegions.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.allowedRegions[i]);
                            if (message.allowedCustomerTypes != null && message.allowedCustomerTypes.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.allowedCustomerTypes.length; ++i)
                                    writer.int32(message.allowedCustomerTypes[i]);
                                writer.ldelim();
                            }
                            if (message.promotionalOrderTypes != null && message.promotionalOrderTypes.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.promotionalOrderTypes.length; ++i)
                                    writer.int32(message.promotionalOrderTypes[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CustomerConstraints message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CustomerConstraints.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @static
                         * @param {google.cloud.channel.v1.ICustomerConstraints} message CustomerConstraints message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomerConstraints.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CustomerConstraints message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CustomerConstraints} CustomerConstraints
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomerConstraints.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CustomerConstraints();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.allowedRegions && message.allowedRegions.length))
                                            message.allowedRegions = [];
                                        message.allowedRegions.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.allowedCustomerTypes && message.allowedCustomerTypes.length))
                                            message.allowedCustomerTypes = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.allowedCustomerTypes.push(reader.int32());
                                        } else
                                            message.allowedCustomerTypes.push(reader.int32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.promotionalOrderTypes && message.promotionalOrderTypes.length))
                                            message.promotionalOrderTypes = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.promotionalOrderTypes.push(reader.int32());
                                        } else
                                            message.promotionalOrderTypes.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CustomerConstraints message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CustomerConstraints} CustomerConstraints
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomerConstraints.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CustomerConstraints message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CustomerConstraints.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.allowedRegions != null && message.hasOwnProperty("allowedRegions")) {
                                if (!Array.isArray(message.allowedRegions))
                                    return "allowedRegions: array expected";
                                for (var i = 0; i < message.allowedRegions.length; ++i)
                                    if (!$util.isString(message.allowedRegions[i]))
                                        return "allowedRegions: string[] expected";
                            }
                            if (message.allowedCustomerTypes != null && message.hasOwnProperty("allowedCustomerTypes")) {
                                if (!Array.isArray(message.allowedCustomerTypes))
                                    return "allowedCustomerTypes: array expected";
                                for (var i = 0; i < message.allowedCustomerTypes.length; ++i)
                                    switch (message.allowedCustomerTypes[i]) {
                                    default:
                                        return "allowedCustomerTypes: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                            }
                            if (message.promotionalOrderTypes != null && message.hasOwnProperty("promotionalOrderTypes")) {
                                if (!Array.isArray(message.promotionalOrderTypes))
                                    return "promotionalOrderTypes: array expected";
                                for (var i = 0; i < message.promotionalOrderTypes.length; ++i)
                                    switch (message.promotionalOrderTypes[i]) {
                                    default:
                                        return "promotionalOrderTypes: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CustomerConstraints message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CustomerConstraints} CustomerConstraints
                         */
                        CustomerConstraints.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CustomerConstraints)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CustomerConstraints();
                            if (object.allowedRegions) {
                                if (!Array.isArray(object.allowedRegions))
                                    throw TypeError(".google.cloud.channel.v1.CustomerConstraints.allowedRegions: array expected");
                                message.allowedRegions = [];
                                for (var i = 0; i < object.allowedRegions.length; ++i)
                                    message.allowedRegions[i] = String(object.allowedRegions[i]);
                            }
                            if (object.allowedCustomerTypes) {
                                if (!Array.isArray(object.allowedCustomerTypes))
                                    throw TypeError(".google.cloud.channel.v1.CustomerConstraints.allowedCustomerTypes: array expected");
                                message.allowedCustomerTypes = [];
                                for (var i = 0; i < object.allowedCustomerTypes.length; ++i)
                                    switch (object.allowedCustomerTypes[i]) {
                                    default:
                                        if (typeof object.allowedCustomerTypes[i] === "number") {
                                            message.allowedCustomerTypes[i] = object.allowedCustomerTypes[i];
                                            break;
                                        }
                                    case "CUSTOMER_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.allowedCustomerTypes[i] = 0;
                                        break;
                                    case "DOMAIN":
                                    case 1:
                                        message.allowedCustomerTypes[i] = 1;
                                        break;
                                    case "TEAM":
                                    case 2:
                                        message.allowedCustomerTypes[i] = 2;
                                        break;
                                    }
                            }
                            if (object.promotionalOrderTypes) {
                                if (!Array.isArray(object.promotionalOrderTypes))
                                    throw TypeError(".google.cloud.channel.v1.CustomerConstraints.promotionalOrderTypes: array expected");
                                message.promotionalOrderTypes = [];
                                for (var i = 0; i < object.promotionalOrderTypes.length; ++i)
                                    switch (object.promotionalOrderTypes[i]) {
                                    default:
                                        if (typeof object.promotionalOrderTypes[i] === "number") {
                                            message.promotionalOrderTypes[i] = object.promotionalOrderTypes[i];
                                            break;
                                        }
                                    case "PROMOTIONAL_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.promotionalOrderTypes[i] = 0;
                                        break;
                                    case "NEW_UPGRADE":
                                    case 1:
                                        message.promotionalOrderTypes[i] = 1;
                                        break;
                                    case "TRANSFER":
                                    case 2:
                                        message.promotionalOrderTypes[i] = 2;
                                        break;
                                    case "PROMOTION_SWITCH":
                                    case 3:
                                        message.promotionalOrderTypes[i] = 3;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CustomerConstraints message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @static
                         * @param {google.cloud.channel.v1.CustomerConstraints} message CustomerConstraints
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CustomerConstraints.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.allowedRegions = [];
                                object.allowedCustomerTypes = [];
                                object.promotionalOrderTypes = [];
                            }
                            if (message.allowedRegions && message.allowedRegions.length) {
                                object.allowedRegions = [];
                                for (var j = 0; j < message.allowedRegions.length; ++j)
                                    object.allowedRegions[j] = message.allowedRegions[j];
                            }
                            if (message.allowedCustomerTypes && message.allowedCustomerTypes.length) {
                                object.allowedCustomerTypes = [];
                                for (var j = 0; j < message.allowedCustomerTypes.length; ++j)
                                    object.allowedCustomerTypes[j] = options.enums === String ? $root.google.cloud.channel.v1.CloudIdentityInfo.CustomerType[message.allowedCustomerTypes[j]] === undefined ? message.allowedCustomerTypes[j] : $root.google.cloud.channel.v1.CloudIdentityInfo.CustomerType[message.allowedCustomerTypes[j]] : message.allowedCustomerTypes[j];
                            }
                            if (message.promotionalOrderTypes && message.promotionalOrderTypes.length) {
                                object.promotionalOrderTypes = [];
                                for (var j = 0; j < message.promotionalOrderTypes.length; ++j)
                                    object.promotionalOrderTypes[j] = options.enums === String ? $root.google.cloud.channel.v1.PromotionalOrderType[message.promotionalOrderTypes[j]] === undefined ? message.promotionalOrderTypes[j] : $root.google.cloud.channel.v1.PromotionalOrderType[message.promotionalOrderTypes[j]] : message.promotionalOrderTypes[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CustomerConstraints to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CustomerConstraints.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CustomerConstraints
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CustomerConstraints
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CustomerConstraints.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CustomerConstraints";
                        };
    
                        return CustomerConstraints;
                    })();
    
                    v1.Plan = (function() {
    
                        /**
                         * Properties of a Plan.
                         * @memberof google.cloud.channel.v1
                         * @interface IPlan
                         * @property {google.cloud.channel.v1.PaymentPlan|null} [paymentPlan] Plan paymentPlan
                         * @property {google.cloud.channel.v1.PaymentType|null} [paymentType] Plan paymentType
                         * @property {google.cloud.channel.v1.IPeriod|null} [paymentCycle] Plan paymentCycle
                         * @property {google.cloud.channel.v1.IPeriod|null} [trialPeriod] Plan trialPeriod
                         * @property {string|null} [billingAccount] Plan billingAccount
                         */
    
                        /**
                         * Constructs a new Plan.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Plan.
                         * @implements IPlan
                         * @constructor
                         * @param {google.cloud.channel.v1.IPlan=} [properties] Properties to set
                         */
                        function Plan(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Plan paymentPlan.
                         * @member {google.cloud.channel.v1.PaymentPlan} paymentPlan
                         * @memberof google.cloud.channel.v1.Plan
                         * @instance
                         */
                        Plan.prototype.paymentPlan = 0;
    
                        /**
                         * Plan paymentType.
                         * @member {google.cloud.channel.v1.PaymentType} paymentType
                         * @memberof google.cloud.channel.v1.Plan
                         * @instance
                         */
                        Plan.prototype.paymentType = 0;
    
                        /**
                         * Plan paymentCycle.
                         * @member {google.cloud.channel.v1.IPeriod|null|undefined} paymentCycle
                         * @memberof google.cloud.channel.v1.Plan
                         * @instance
                         */
                        Plan.prototype.paymentCycle = null;
    
                        /**
                         * Plan trialPeriod.
                         * @member {google.cloud.channel.v1.IPeriod|null|undefined} trialPeriod
                         * @memberof google.cloud.channel.v1.Plan
                         * @instance
                         */
                        Plan.prototype.trialPeriod = null;
    
                        /**
                         * Plan billingAccount.
                         * @member {string} billingAccount
                         * @memberof google.cloud.channel.v1.Plan
                         * @instance
                         */
                        Plan.prototype.billingAccount = "";
    
                        /**
                         * Creates a new Plan instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Plan
                         * @static
                         * @param {google.cloud.channel.v1.IPlan=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Plan} Plan instance
                         */
                        Plan.create = function create(properties) {
                            return new Plan(properties);
                        };
    
                        /**
                         * Encodes the specified Plan message. Does not implicitly {@link google.cloud.channel.v1.Plan.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Plan
                         * @static
                         * @param {google.cloud.channel.v1.IPlan} message Plan message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Plan.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.paymentPlan != null && Object.hasOwnProperty.call(message, "paymentPlan"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.paymentPlan);
                            if (message.paymentType != null && Object.hasOwnProperty.call(message, "paymentType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.paymentType);
                            if (message.paymentCycle != null && Object.hasOwnProperty.call(message, "paymentCycle"))
                                $root.google.cloud.channel.v1.Period.encode(message.paymentCycle, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.trialPeriod != null && Object.hasOwnProperty.call(message, "trialPeriod"))
                                $root.google.cloud.channel.v1.Period.encode(message.trialPeriod, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.billingAccount != null && Object.hasOwnProperty.call(message, "billingAccount"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.billingAccount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Plan message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Plan.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Plan
                         * @static
                         * @param {google.cloud.channel.v1.IPlan} message Plan message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Plan.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Plan message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Plan
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Plan} Plan
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Plan.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Plan();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.paymentPlan = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.paymentType = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.paymentCycle = $root.google.cloud.channel.v1.Period.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.trialPeriod = $root.google.cloud.channel.v1.Period.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.billingAccount = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Plan message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Plan
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Plan} Plan
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Plan.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Plan message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Plan
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Plan.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.paymentPlan != null && message.hasOwnProperty("paymentPlan"))
                                switch (message.paymentPlan) {
                                default:
                                    return "paymentPlan: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.paymentType != null && message.hasOwnProperty("paymentType"))
                                switch (message.paymentType) {
                                default:
                                    return "paymentType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.paymentCycle != null && message.hasOwnProperty("paymentCycle")) {
                                var error = $root.google.cloud.channel.v1.Period.verify(message.paymentCycle);
                                if (error)
                                    return "paymentCycle." + error;
                            }
                            if (message.trialPeriod != null && message.hasOwnProperty("trialPeriod")) {
                                var error = $root.google.cloud.channel.v1.Period.verify(message.trialPeriod);
                                if (error)
                                    return "trialPeriod." + error;
                            }
                            if (message.billingAccount != null && message.hasOwnProperty("billingAccount"))
                                if (!$util.isString(message.billingAccount))
                                    return "billingAccount: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Plan message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Plan
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Plan} Plan
                         */
                        Plan.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Plan)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Plan();
                            switch (object.paymentPlan) {
                            default:
                                if (typeof object.paymentPlan === "number") {
                                    message.paymentPlan = object.paymentPlan;
                                    break;
                                }
                                break;
                            case "PAYMENT_PLAN_UNSPECIFIED":
                            case 0:
                                message.paymentPlan = 0;
                                break;
                            case "COMMITMENT":
                            case 1:
                                message.paymentPlan = 1;
                                break;
                            case "FLEXIBLE":
                            case 2:
                                message.paymentPlan = 2;
                                break;
                            case "FREE":
                            case 3:
                                message.paymentPlan = 3;
                                break;
                            case "TRIAL":
                            case 4:
                                message.paymentPlan = 4;
                                break;
                            case "OFFLINE":
                            case 5:
                                message.paymentPlan = 5;
                                break;
                            }
                            switch (object.paymentType) {
                            default:
                                if (typeof object.paymentType === "number") {
                                    message.paymentType = object.paymentType;
                                    break;
                                }
                                break;
                            case "PAYMENT_TYPE_UNSPECIFIED":
                            case 0:
                                message.paymentType = 0;
                                break;
                            case "PREPAY":
                            case 1:
                                message.paymentType = 1;
                                break;
                            case "POSTPAY":
                            case 2:
                                message.paymentType = 2;
                                break;
                            }
                            if (object.paymentCycle != null) {
                                if (typeof object.paymentCycle !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Plan.paymentCycle: object expected");
                                message.paymentCycle = $root.google.cloud.channel.v1.Period.fromObject(object.paymentCycle);
                            }
                            if (object.trialPeriod != null) {
                                if (typeof object.trialPeriod !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Plan.trialPeriod: object expected");
                                message.trialPeriod = $root.google.cloud.channel.v1.Period.fromObject(object.trialPeriod);
                            }
                            if (object.billingAccount != null)
                                message.billingAccount = String(object.billingAccount);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Plan message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Plan
                         * @static
                         * @param {google.cloud.channel.v1.Plan} message Plan
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Plan.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.paymentPlan = options.enums === String ? "PAYMENT_PLAN_UNSPECIFIED" : 0;
                                object.paymentType = options.enums === String ? "PAYMENT_TYPE_UNSPECIFIED" : 0;
                                object.paymentCycle = null;
                                object.trialPeriod = null;
                                object.billingAccount = "";
                            }
                            if (message.paymentPlan != null && message.hasOwnProperty("paymentPlan"))
                                object.paymentPlan = options.enums === String ? $root.google.cloud.channel.v1.PaymentPlan[message.paymentPlan] === undefined ? message.paymentPlan : $root.google.cloud.channel.v1.PaymentPlan[message.paymentPlan] : message.paymentPlan;
                            if (message.paymentType != null && message.hasOwnProperty("paymentType"))
                                object.paymentType = options.enums === String ? $root.google.cloud.channel.v1.PaymentType[message.paymentType] === undefined ? message.paymentType : $root.google.cloud.channel.v1.PaymentType[message.paymentType] : message.paymentType;
                            if (message.paymentCycle != null && message.hasOwnProperty("paymentCycle"))
                                object.paymentCycle = $root.google.cloud.channel.v1.Period.toObject(message.paymentCycle, options);
                            if (message.trialPeriod != null && message.hasOwnProperty("trialPeriod"))
                                object.trialPeriod = $root.google.cloud.channel.v1.Period.toObject(message.trialPeriod, options);
                            if (message.billingAccount != null && message.hasOwnProperty("billingAccount"))
                                object.billingAccount = message.billingAccount;
                            return object;
                        };
    
                        /**
                         * Converts this Plan to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Plan
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Plan.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Plan
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Plan
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Plan.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Plan";
                        };
    
                        return Plan;
                    })();
    
                    v1.PriceByResource = (function() {
    
                        /**
                         * Properties of a PriceByResource.
                         * @memberof google.cloud.channel.v1
                         * @interface IPriceByResource
                         * @property {google.cloud.channel.v1.ResourceType|null} [resourceType] PriceByResource resourceType
                         * @property {google.cloud.channel.v1.IPrice|null} [price] PriceByResource price
                         * @property {Array.<google.cloud.channel.v1.IPricePhase>|null} [pricePhases] PriceByResource pricePhases
                         */
    
                        /**
                         * Constructs a new PriceByResource.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a PriceByResource.
                         * @implements IPriceByResource
                         * @constructor
                         * @param {google.cloud.channel.v1.IPriceByResource=} [properties] Properties to set
                         */
                        function PriceByResource(properties) {
                            this.pricePhases = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PriceByResource resourceType.
                         * @member {google.cloud.channel.v1.ResourceType} resourceType
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @instance
                         */
                        PriceByResource.prototype.resourceType = 0;
    
                        /**
                         * PriceByResource price.
                         * @member {google.cloud.channel.v1.IPrice|null|undefined} price
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @instance
                         */
                        PriceByResource.prototype.price = null;
    
                        /**
                         * PriceByResource pricePhases.
                         * @member {Array.<google.cloud.channel.v1.IPricePhase>} pricePhases
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @instance
                         */
                        PriceByResource.prototype.pricePhases = $util.emptyArray;
    
                        /**
                         * Creates a new PriceByResource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @static
                         * @param {google.cloud.channel.v1.IPriceByResource=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.PriceByResource} PriceByResource instance
                         */
                        PriceByResource.create = function create(properties) {
                            return new PriceByResource(properties);
                        };
    
                        /**
                         * Encodes the specified PriceByResource message. Does not implicitly {@link google.cloud.channel.v1.PriceByResource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @static
                         * @param {google.cloud.channel.v1.IPriceByResource} message PriceByResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PriceByResource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resourceType != null && Object.hasOwnProperty.call(message, "resourceType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.resourceType);
                            if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                                $root.google.cloud.channel.v1.Price.encode(message.price, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.pricePhases != null && message.pricePhases.length)
                                for (var i = 0; i < message.pricePhases.length; ++i)
                                    $root.google.cloud.channel.v1.PricePhase.encode(message.pricePhases[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PriceByResource message, length delimited. Does not implicitly {@link google.cloud.channel.v1.PriceByResource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @static
                         * @param {google.cloud.channel.v1.IPriceByResource} message PriceByResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PriceByResource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PriceByResource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.PriceByResource} PriceByResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PriceByResource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.PriceByResource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resourceType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.price = $root.google.cloud.channel.v1.Price.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.pricePhases && message.pricePhases.length))
                                            message.pricePhases = [];
                                        message.pricePhases.push($root.google.cloud.channel.v1.PricePhase.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PriceByResource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.PriceByResource} PriceByResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PriceByResource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PriceByResource message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PriceByResource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                                switch (message.resourceType) {
                                default:
                                    return "resourceType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.price != null && message.hasOwnProperty("price")) {
                                var error = $root.google.cloud.channel.v1.Price.verify(message.price);
                                if (error)
                                    return "price." + error;
                            }
                            if (message.pricePhases != null && message.hasOwnProperty("pricePhases")) {
                                if (!Array.isArray(message.pricePhases))
                                    return "pricePhases: array expected";
                                for (var i = 0; i < message.pricePhases.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.PricePhase.verify(message.pricePhases[i]);
                                    if (error)
                                        return "pricePhases." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PriceByResource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.PriceByResource} PriceByResource
                         */
                        PriceByResource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.PriceByResource)
                                return object;
                            var message = new $root.google.cloud.channel.v1.PriceByResource();
                            switch (object.resourceType) {
                            default:
                                if (typeof object.resourceType === "number") {
                                    message.resourceType = object.resourceType;
                                    break;
                                }
                                break;
                            case "RESOURCE_TYPE_UNSPECIFIED":
                            case 0:
                                message.resourceType = 0;
                                break;
                            case "SEAT":
                            case 1:
                                message.resourceType = 1;
                                break;
                            case "MAU":
                            case 2:
                                message.resourceType = 2;
                                break;
                            case "GB":
                            case 3:
                                message.resourceType = 3;
                                break;
                            case "LICENSED_USER":
                            case 4:
                                message.resourceType = 4;
                                break;
                            case "MINUTES":
                            case 5:
                                message.resourceType = 5;
                                break;
                            case "IAAS_USAGE":
                            case 6:
                                message.resourceType = 6;
                                break;
                            case "SUBSCRIPTION":
                            case 7:
                                message.resourceType = 7;
                                break;
                            }
                            if (object.price != null) {
                                if (typeof object.price !== "object")
                                    throw TypeError(".google.cloud.channel.v1.PriceByResource.price: object expected");
                                message.price = $root.google.cloud.channel.v1.Price.fromObject(object.price);
                            }
                            if (object.pricePhases) {
                                if (!Array.isArray(object.pricePhases))
                                    throw TypeError(".google.cloud.channel.v1.PriceByResource.pricePhases: array expected");
                                message.pricePhases = [];
                                for (var i = 0; i < object.pricePhases.length; ++i) {
                                    if (typeof object.pricePhases[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.PriceByResource.pricePhases: object expected");
                                    message.pricePhases[i] = $root.google.cloud.channel.v1.PricePhase.fromObject(object.pricePhases[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PriceByResource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @static
                         * @param {google.cloud.channel.v1.PriceByResource} message PriceByResource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PriceByResource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.pricePhases = [];
                            if (options.defaults) {
                                object.resourceType = options.enums === String ? "RESOURCE_TYPE_UNSPECIFIED" : 0;
                                object.price = null;
                            }
                            if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                                object.resourceType = options.enums === String ? $root.google.cloud.channel.v1.ResourceType[message.resourceType] === undefined ? message.resourceType : $root.google.cloud.channel.v1.ResourceType[message.resourceType] : message.resourceType;
                            if (message.price != null && message.hasOwnProperty("price"))
                                object.price = $root.google.cloud.channel.v1.Price.toObject(message.price, options);
                            if (message.pricePhases && message.pricePhases.length) {
                                object.pricePhases = [];
                                for (var j = 0; j < message.pricePhases.length; ++j)
                                    object.pricePhases[j] = $root.google.cloud.channel.v1.PricePhase.toObject(message.pricePhases[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PriceByResource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PriceByResource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PriceByResource
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.PriceByResource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PriceByResource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.PriceByResource";
                        };
    
                        return PriceByResource;
                    })();
    
                    v1.Price = (function() {
    
                        /**
                         * Properties of a Price.
                         * @memberof google.cloud.channel.v1
                         * @interface IPrice
                         * @property {google.type.IMoney|null} [basePrice] Price basePrice
                         * @property {number|null} [discount] Price discount
                         * @property {google.type.IMoney|null} [effectivePrice] Price effectivePrice
                         * @property {string|null} [externalPriceUri] Price externalPriceUri
                         */
    
                        /**
                         * Constructs a new Price.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Price.
                         * @implements IPrice
                         * @constructor
                         * @param {google.cloud.channel.v1.IPrice=} [properties] Properties to set
                         */
                        function Price(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Price basePrice.
                         * @member {google.type.IMoney|null|undefined} basePrice
                         * @memberof google.cloud.channel.v1.Price
                         * @instance
                         */
                        Price.prototype.basePrice = null;
    
                        /**
                         * Price discount.
                         * @member {number} discount
                         * @memberof google.cloud.channel.v1.Price
                         * @instance
                         */
                        Price.prototype.discount = 0;
    
                        /**
                         * Price effectivePrice.
                         * @member {google.type.IMoney|null|undefined} effectivePrice
                         * @memberof google.cloud.channel.v1.Price
                         * @instance
                         */
                        Price.prototype.effectivePrice = null;
    
                        /**
                         * Price externalPriceUri.
                         * @member {string} externalPriceUri
                         * @memberof google.cloud.channel.v1.Price
                         * @instance
                         */
                        Price.prototype.externalPriceUri = "";
    
                        /**
                         * Creates a new Price instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Price
                         * @static
                         * @param {google.cloud.channel.v1.IPrice=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Price} Price instance
                         */
                        Price.create = function create(properties) {
                            return new Price(properties);
                        };
    
                        /**
                         * Encodes the specified Price message. Does not implicitly {@link google.cloud.channel.v1.Price.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Price
                         * @static
                         * @param {google.cloud.channel.v1.IPrice} message Price message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Price.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.basePrice != null && Object.hasOwnProperty.call(message, "basePrice"))
                                $root.google.type.Money.encode(message.basePrice, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.discount != null && Object.hasOwnProperty.call(message, "discount"))
                                writer.uint32(/* id 2, wireType 1 =*/17).double(message.discount);
                            if (message.effectivePrice != null && Object.hasOwnProperty.call(message, "effectivePrice"))
                                $root.google.type.Money.encode(message.effectivePrice, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.externalPriceUri != null && Object.hasOwnProperty.call(message, "externalPriceUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.externalPriceUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Price message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Price.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Price
                         * @static
                         * @param {google.cloud.channel.v1.IPrice} message Price message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Price.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Price message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Price
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Price} Price
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Price.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Price();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.basePrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.discount = reader.double();
                                        break;
                                    }
                                case 3: {
                                        message.effectivePrice = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.externalPriceUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Price message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Price
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Price} Price
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Price.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Price message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Price
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Price.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.basePrice != null && message.hasOwnProperty("basePrice")) {
                                var error = $root.google.type.Money.verify(message.basePrice);
                                if (error)
                                    return "basePrice." + error;
                            }
                            if (message.discount != null && message.hasOwnProperty("discount"))
                                if (typeof message.discount !== "number")
                                    return "discount: number expected";
                            if (message.effectivePrice != null && message.hasOwnProperty("effectivePrice")) {
                                var error = $root.google.type.Money.verify(message.effectivePrice);
                                if (error)
                                    return "effectivePrice." + error;
                            }
                            if (message.externalPriceUri != null && message.hasOwnProperty("externalPriceUri"))
                                if (!$util.isString(message.externalPriceUri))
                                    return "externalPriceUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Price message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Price
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Price} Price
                         */
                        Price.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Price)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Price();
                            if (object.basePrice != null) {
                                if (typeof object.basePrice !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Price.basePrice: object expected");
                                message.basePrice = $root.google.type.Money.fromObject(object.basePrice);
                            }
                            if (object.discount != null)
                                message.discount = Number(object.discount);
                            if (object.effectivePrice != null) {
                                if (typeof object.effectivePrice !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Price.effectivePrice: object expected");
                                message.effectivePrice = $root.google.type.Money.fromObject(object.effectivePrice);
                            }
                            if (object.externalPriceUri != null)
                                message.externalPriceUri = String(object.externalPriceUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Price message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Price
                         * @static
                         * @param {google.cloud.channel.v1.Price} message Price
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Price.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.basePrice = null;
                                object.discount = 0;
                                object.effectivePrice = null;
                                object.externalPriceUri = "";
                            }
                            if (message.basePrice != null && message.hasOwnProperty("basePrice"))
                                object.basePrice = $root.google.type.Money.toObject(message.basePrice, options);
                            if (message.discount != null && message.hasOwnProperty("discount"))
                                object.discount = options.json && !isFinite(message.discount) ? String(message.discount) : message.discount;
                            if (message.effectivePrice != null && message.hasOwnProperty("effectivePrice"))
                                object.effectivePrice = $root.google.type.Money.toObject(message.effectivePrice, options);
                            if (message.externalPriceUri != null && message.hasOwnProperty("externalPriceUri"))
                                object.externalPriceUri = message.externalPriceUri;
                            return object;
                        };
    
                        /**
                         * Converts this Price to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Price
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Price.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Price
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Price
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Price.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Price";
                        };
    
                        return Price;
                    })();
    
                    v1.PricePhase = (function() {
    
                        /**
                         * Properties of a PricePhase.
                         * @memberof google.cloud.channel.v1
                         * @interface IPricePhase
                         * @property {google.cloud.channel.v1.PeriodType|null} [periodType] PricePhase periodType
                         * @property {number|null} [firstPeriod] PricePhase firstPeriod
                         * @property {number|null} [lastPeriod] PricePhase lastPeriod
                         * @property {google.cloud.channel.v1.IPrice|null} [price] PricePhase price
                         * @property {Array.<google.cloud.channel.v1.IPriceTier>|null} [priceTiers] PricePhase priceTiers
                         */
    
                        /**
                         * Constructs a new PricePhase.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a PricePhase.
                         * @implements IPricePhase
                         * @constructor
                         * @param {google.cloud.channel.v1.IPricePhase=} [properties] Properties to set
                         */
                        function PricePhase(properties) {
                            this.priceTiers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PricePhase periodType.
                         * @member {google.cloud.channel.v1.PeriodType} periodType
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @instance
                         */
                        PricePhase.prototype.periodType = 0;
    
                        /**
                         * PricePhase firstPeriod.
                         * @member {number} firstPeriod
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @instance
                         */
                        PricePhase.prototype.firstPeriod = 0;
    
                        /**
                         * PricePhase lastPeriod.
                         * @member {number} lastPeriod
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @instance
                         */
                        PricePhase.prototype.lastPeriod = 0;
    
                        /**
                         * PricePhase price.
                         * @member {google.cloud.channel.v1.IPrice|null|undefined} price
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @instance
                         */
                        PricePhase.prototype.price = null;
    
                        /**
                         * PricePhase priceTiers.
                         * @member {Array.<google.cloud.channel.v1.IPriceTier>} priceTiers
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @instance
                         */
                        PricePhase.prototype.priceTiers = $util.emptyArray;
    
                        /**
                         * Creates a new PricePhase instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @static
                         * @param {google.cloud.channel.v1.IPricePhase=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.PricePhase} PricePhase instance
                         */
                        PricePhase.create = function create(properties) {
                            return new PricePhase(properties);
                        };
    
                        /**
                         * Encodes the specified PricePhase message. Does not implicitly {@link google.cloud.channel.v1.PricePhase.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @static
                         * @param {google.cloud.channel.v1.IPricePhase} message PricePhase message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PricePhase.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.periodType != null && Object.hasOwnProperty.call(message, "periodType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.periodType);
                            if (message.firstPeriod != null && Object.hasOwnProperty.call(message, "firstPeriod"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.firstPeriod);
                            if (message.lastPeriod != null && Object.hasOwnProperty.call(message, "lastPeriod"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.lastPeriod);
                            if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                                $root.google.cloud.channel.v1.Price.encode(message.price, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.priceTiers != null && message.priceTiers.length)
                                for (var i = 0; i < message.priceTiers.length; ++i)
                                    $root.google.cloud.channel.v1.PriceTier.encode(message.priceTiers[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PricePhase message, length delimited. Does not implicitly {@link google.cloud.channel.v1.PricePhase.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @static
                         * @param {google.cloud.channel.v1.IPricePhase} message PricePhase message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PricePhase.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PricePhase message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.PricePhase} PricePhase
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PricePhase.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.PricePhase();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.periodType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.firstPeriod = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.lastPeriod = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.price = $root.google.cloud.channel.v1.Price.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.priceTiers && message.priceTiers.length))
                                            message.priceTiers = [];
                                        message.priceTiers.push($root.google.cloud.channel.v1.PriceTier.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PricePhase message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.PricePhase} PricePhase
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PricePhase.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PricePhase message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PricePhase.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.periodType != null && message.hasOwnProperty("periodType"))
                                switch (message.periodType) {
                                default:
                                    return "periodType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.firstPeriod != null && message.hasOwnProperty("firstPeriod"))
                                if (!$util.isInteger(message.firstPeriod))
                                    return "firstPeriod: integer expected";
                            if (message.lastPeriod != null && message.hasOwnProperty("lastPeriod"))
                                if (!$util.isInteger(message.lastPeriod))
                                    return "lastPeriod: integer expected";
                            if (message.price != null && message.hasOwnProperty("price")) {
                                var error = $root.google.cloud.channel.v1.Price.verify(message.price);
                                if (error)
                                    return "price." + error;
                            }
                            if (message.priceTiers != null && message.hasOwnProperty("priceTiers")) {
                                if (!Array.isArray(message.priceTiers))
                                    return "priceTiers: array expected";
                                for (var i = 0; i < message.priceTiers.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.PriceTier.verify(message.priceTiers[i]);
                                    if (error)
                                        return "priceTiers." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PricePhase message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.PricePhase} PricePhase
                         */
                        PricePhase.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.PricePhase)
                                return object;
                            var message = new $root.google.cloud.channel.v1.PricePhase();
                            switch (object.periodType) {
                            default:
                                if (typeof object.periodType === "number") {
                                    message.periodType = object.periodType;
                                    break;
                                }
                                break;
                            case "PERIOD_TYPE_UNSPECIFIED":
                            case 0:
                                message.periodType = 0;
                                break;
                            case "DAY":
                            case 1:
                                message.periodType = 1;
                                break;
                            case "MONTH":
                            case 2:
                                message.periodType = 2;
                                break;
                            case "YEAR":
                            case 3:
                                message.periodType = 3;
                                break;
                            }
                            if (object.firstPeriod != null)
                                message.firstPeriod = object.firstPeriod | 0;
                            if (object.lastPeriod != null)
                                message.lastPeriod = object.lastPeriod | 0;
                            if (object.price != null) {
                                if (typeof object.price !== "object")
                                    throw TypeError(".google.cloud.channel.v1.PricePhase.price: object expected");
                                message.price = $root.google.cloud.channel.v1.Price.fromObject(object.price);
                            }
                            if (object.priceTiers) {
                                if (!Array.isArray(object.priceTiers))
                                    throw TypeError(".google.cloud.channel.v1.PricePhase.priceTiers: array expected");
                                message.priceTiers = [];
                                for (var i = 0; i < object.priceTiers.length; ++i) {
                                    if (typeof object.priceTiers[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.PricePhase.priceTiers: object expected");
                                    message.priceTiers[i] = $root.google.cloud.channel.v1.PriceTier.fromObject(object.priceTiers[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PricePhase message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @static
                         * @param {google.cloud.channel.v1.PricePhase} message PricePhase
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PricePhase.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.priceTiers = [];
                            if (options.defaults) {
                                object.periodType = options.enums === String ? "PERIOD_TYPE_UNSPECIFIED" : 0;
                                object.firstPeriod = 0;
                                object.lastPeriod = 0;
                                object.price = null;
                            }
                            if (message.periodType != null && message.hasOwnProperty("periodType"))
                                object.periodType = options.enums === String ? $root.google.cloud.channel.v1.PeriodType[message.periodType] === undefined ? message.periodType : $root.google.cloud.channel.v1.PeriodType[message.periodType] : message.periodType;
                            if (message.firstPeriod != null && message.hasOwnProperty("firstPeriod"))
                                object.firstPeriod = message.firstPeriod;
                            if (message.lastPeriod != null && message.hasOwnProperty("lastPeriod"))
                                object.lastPeriod = message.lastPeriod;
                            if (message.price != null && message.hasOwnProperty("price"))
                                object.price = $root.google.cloud.channel.v1.Price.toObject(message.price, options);
                            if (message.priceTiers && message.priceTiers.length) {
                                object.priceTiers = [];
                                for (var j = 0; j < message.priceTiers.length; ++j)
                                    object.priceTiers[j] = $root.google.cloud.channel.v1.PriceTier.toObject(message.priceTiers[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PricePhase to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PricePhase.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PricePhase
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.PricePhase
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PricePhase.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.PricePhase";
                        };
    
                        return PricePhase;
                    })();
    
                    v1.PriceTier = (function() {
    
                        /**
                         * Properties of a PriceTier.
                         * @memberof google.cloud.channel.v1
                         * @interface IPriceTier
                         * @property {number|null} [firstResource] PriceTier firstResource
                         * @property {number|null} [lastResource] PriceTier lastResource
                         * @property {google.cloud.channel.v1.IPrice|null} [price] PriceTier price
                         */
    
                        /**
                         * Constructs a new PriceTier.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a PriceTier.
                         * @implements IPriceTier
                         * @constructor
                         * @param {google.cloud.channel.v1.IPriceTier=} [properties] Properties to set
                         */
                        function PriceTier(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PriceTier firstResource.
                         * @member {number} firstResource
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @instance
                         */
                        PriceTier.prototype.firstResource = 0;
    
                        /**
                         * PriceTier lastResource.
                         * @member {number} lastResource
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @instance
                         */
                        PriceTier.prototype.lastResource = 0;
    
                        /**
                         * PriceTier price.
                         * @member {google.cloud.channel.v1.IPrice|null|undefined} price
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @instance
                         */
                        PriceTier.prototype.price = null;
    
                        /**
                         * Creates a new PriceTier instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @static
                         * @param {google.cloud.channel.v1.IPriceTier=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.PriceTier} PriceTier instance
                         */
                        PriceTier.create = function create(properties) {
                            return new PriceTier(properties);
                        };
    
                        /**
                         * Encodes the specified PriceTier message. Does not implicitly {@link google.cloud.channel.v1.PriceTier.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @static
                         * @param {google.cloud.channel.v1.IPriceTier} message PriceTier message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PriceTier.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.firstResource != null && Object.hasOwnProperty.call(message, "firstResource"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.firstResource);
                            if (message.lastResource != null && Object.hasOwnProperty.call(message, "lastResource"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.lastResource);
                            if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                                $root.google.cloud.channel.v1.Price.encode(message.price, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PriceTier message, length delimited. Does not implicitly {@link google.cloud.channel.v1.PriceTier.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @static
                         * @param {google.cloud.channel.v1.IPriceTier} message PriceTier message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PriceTier.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PriceTier message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.PriceTier} PriceTier
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PriceTier.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.PriceTier();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.firstResource = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.lastResource = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.price = $root.google.cloud.channel.v1.Price.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PriceTier message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.PriceTier} PriceTier
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PriceTier.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PriceTier message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PriceTier.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.firstResource != null && message.hasOwnProperty("firstResource"))
                                if (!$util.isInteger(message.firstResource))
                                    return "firstResource: integer expected";
                            if (message.lastResource != null && message.hasOwnProperty("lastResource"))
                                if (!$util.isInteger(message.lastResource))
                                    return "lastResource: integer expected";
                            if (message.price != null && message.hasOwnProperty("price")) {
                                var error = $root.google.cloud.channel.v1.Price.verify(message.price);
                                if (error)
                                    return "price." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PriceTier message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.PriceTier} PriceTier
                         */
                        PriceTier.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.PriceTier)
                                return object;
                            var message = new $root.google.cloud.channel.v1.PriceTier();
                            if (object.firstResource != null)
                                message.firstResource = object.firstResource | 0;
                            if (object.lastResource != null)
                                message.lastResource = object.lastResource | 0;
                            if (object.price != null) {
                                if (typeof object.price !== "object")
                                    throw TypeError(".google.cloud.channel.v1.PriceTier.price: object expected");
                                message.price = $root.google.cloud.channel.v1.Price.fromObject(object.price);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PriceTier message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @static
                         * @param {google.cloud.channel.v1.PriceTier} message PriceTier
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PriceTier.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.firstResource = 0;
                                object.lastResource = 0;
                                object.price = null;
                            }
                            if (message.firstResource != null && message.hasOwnProperty("firstResource"))
                                object.firstResource = message.firstResource;
                            if (message.lastResource != null && message.hasOwnProperty("lastResource"))
                                object.lastResource = message.lastResource;
                            if (message.price != null && message.hasOwnProperty("price"))
                                object.price = $root.google.cloud.channel.v1.Price.toObject(message.price, options);
                            return object;
                        };
    
                        /**
                         * Converts this PriceTier to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PriceTier.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PriceTier
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.PriceTier
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PriceTier.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.PriceTier";
                        };
    
                        return PriceTier;
                    })();
    
                    v1.Period = (function() {
    
                        /**
                         * Properties of a Period.
                         * @memberof google.cloud.channel.v1
                         * @interface IPeriod
                         * @property {number|null} [duration] Period duration
                         * @property {google.cloud.channel.v1.PeriodType|null} [periodType] Period periodType
                         */
    
                        /**
                         * Constructs a new Period.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Period.
                         * @implements IPeriod
                         * @constructor
                         * @param {google.cloud.channel.v1.IPeriod=} [properties] Properties to set
                         */
                        function Period(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Period duration.
                         * @member {number} duration
                         * @memberof google.cloud.channel.v1.Period
                         * @instance
                         */
                        Period.prototype.duration = 0;
    
                        /**
                         * Period periodType.
                         * @member {google.cloud.channel.v1.PeriodType} periodType
                         * @memberof google.cloud.channel.v1.Period
                         * @instance
                         */
                        Period.prototype.periodType = 0;
    
                        /**
                         * Creates a new Period instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Period
                         * @static
                         * @param {google.cloud.channel.v1.IPeriod=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Period} Period instance
                         */
                        Period.create = function create(properties) {
                            return new Period(properties);
                        };
    
                        /**
                         * Encodes the specified Period message. Does not implicitly {@link google.cloud.channel.v1.Period.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Period
                         * @static
                         * @param {google.cloud.channel.v1.IPeriod} message Period message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Period.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.duration);
                            if (message.periodType != null && Object.hasOwnProperty.call(message, "periodType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.periodType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Period message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Period.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Period
                         * @static
                         * @param {google.cloud.channel.v1.IPeriod} message Period message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Period.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Period message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Period
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Period} Period
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Period.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Period();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.duration = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.periodType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Period message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Period
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Period} Period
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Period.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Period message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Period
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Period.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.duration != null && message.hasOwnProperty("duration"))
                                if (!$util.isInteger(message.duration))
                                    return "duration: integer expected";
                            if (message.periodType != null && message.hasOwnProperty("periodType"))
                                switch (message.periodType) {
                                default:
                                    return "periodType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Period message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Period
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Period} Period
                         */
                        Period.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Period)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Period();
                            if (object.duration != null)
                                message.duration = object.duration | 0;
                            switch (object.periodType) {
                            default:
                                if (typeof object.periodType === "number") {
                                    message.periodType = object.periodType;
                                    break;
                                }
                                break;
                            case "PERIOD_TYPE_UNSPECIFIED":
                            case 0:
                                message.periodType = 0;
                                break;
                            case "DAY":
                            case 1:
                                message.periodType = 1;
                                break;
                            case "MONTH":
                            case 2:
                                message.periodType = 2;
                                break;
                            case "YEAR":
                            case 3:
                                message.periodType = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Period message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Period
                         * @static
                         * @param {google.cloud.channel.v1.Period} message Period
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Period.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.duration = 0;
                                object.periodType = options.enums === String ? "PERIOD_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.duration != null && message.hasOwnProperty("duration"))
                                object.duration = message.duration;
                            if (message.periodType != null && message.hasOwnProperty("periodType"))
                                object.periodType = options.enums === String ? $root.google.cloud.channel.v1.PeriodType[message.periodType] === undefined ? message.periodType : $root.google.cloud.channel.v1.PeriodType[message.periodType] : message.periodType;
                            return object;
                        };
    
                        /**
                         * Converts this Period to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Period
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Period.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Period
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Period
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Period.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Period";
                        };
    
                        return Period;
                    })();
    
                    /**
                     * MediaType enum.
                     * @name google.cloud.channel.v1.MediaType
                     * @enum {number}
                     * @property {number} MEDIA_TYPE_UNSPECIFIED=0 MEDIA_TYPE_UNSPECIFIED value
                     * @property {number} MEDIA_TYPE_IMAGE=1 MEDIA_TYPE_IMAGE value
                     */
                    v1.MediaType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "MEDIA_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "MEDIA_TYPE_IMAGE"] = 1;
                        return values;
                    })();
    
                    v1.Product = (function() {
    
                        /**
                         * Properties of a Product.
                         * @memberof google.cloud.channel.v1
                         * @interface IProduct
                         * @property {string|null} [name] Product name
                         * @property {google.cloud.channel.v1.IMarketingInfo|null} [marketingInfo] Product marketingInfo
                         */
    
                        /**
                         * Constructs a new Product.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Product.
                         * @implements IProduct
                         * @constructor
                         * @param {google.cloud.channel.v1.IProduct=} [properties] Properties to set
                         */
                        function Product(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Product name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.Product
                         * @instance
                         */
                        Product.prototype.name = "";
    
                        /**
                         * Product marketingInfo.
                         * @member {google.cloud.channel.v1.IMarketingInfo|null|undefined} marketingInfo
                         * @memberof google.cloud.channel.v1.Product
                         * @instance
                         */
                        Product.prototype.marketingInfo = null;
    
                        /**
                         * Creates a new Product instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Product
                         * @static
                         * @param {google.cloud.channel.v1.IProduct=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Product} Product instance
                         */
                        Product.create = function create(properties) {
                            return new Product(properties);
                        };
    
                        /**
                         * Encodes the specified Product message. Does not implicitly {@link google.cloud.channel.v1.Product.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Product
                         * @static
                         * @param {google.cloud.channel.v1.IProduct} message Product message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Product.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.marketingInfo != null && Object.hasOwnProperty.call(message, "marketingInfo"))
                                $root.google.cloud.channel.v1.MarketingInfo.encode(message.marketingInfo, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Product message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Product.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Product
                         * @static
                         * @param {google.cloud.channel.v1.IProduct} message Product message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Product.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Product message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Product
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Product} Product
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Product.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Product();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.marketingInfo = $root.google.cloud.channel.v1.MarketingInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Product message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Product
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Product} Product
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Product.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Product message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Product
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Product.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.marketingInfo != null && message.hasOwnProperty("marketingInfo")) {
                                var error = $root.google.cloud.channel.v1.MarketingInfo.verify(message.marketingInfo);
                                if (error)
                                    return "marketingInfo." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Product message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Product
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Product} Product
                         */
                        Product.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Product)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Product();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.marketingInfo != null) {
                                if (typeof object.marketingInfo !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Product.marketingInfo: object expected");
                                message.marketingInfo = $root.google.cloud.channel.v1.MarketingInfo.fromObject(object.marketingInfo);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Product message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Product
                         * @static
                         * @param {google.cloud.channel.v1.Product} message Product
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Product.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.marketingInfo = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.marketingInfo != null && message.hasOwnProperty("marketingInfo"))
                                object.marketingInfo = $root.google.cloud.channel.v1.MarketingInfo.toObject(message.marketingInfo, options);
                            return object;
                        };
    
                        /**
                         * Converts this Product to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Product
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Product.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Product
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Product
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Product.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Product";
                        };
    
                        return Product;
                    })();
    
                    v1.Sku = (function() {
    
                        /**
                         * Properties of a Sku.
                         * @memberof google.cloud.channel.v1
                         * @interface ISku
                         * @property {string|null} [name] Sku name
                         * @property {google.cloud.channel.v1.IMarketingInfo|null} [marketingInfo] Sku marketingInfo
                         * @property {google.cloud.channel.v1.IProduct|null} [product] Sku product
                         */
    
                        /**
                         * Constructs a new Sku.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Sku.
                         * @implements ISku
                         * @constructor
                         * @param {google.cloud.channel.v1.ISku=} [properties] Properties to set
                         */
                        function Sku(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Sku name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.Sku
                         * @instance
                         */
                        Sku.prototype.name = "";
    
                        /**
                         * Sku marketingInfo.
                         * @member {google.cloud.channel.v1.IMarketingInfo|null|undefined} marketingInfo
                         * @memberof google.cloud.channel.v1.Sku
                         * @instance
                         */
                        Sku.prototype.marketingInfo = null;
    
                        /**
                         * Sku product.
                         * @member {google.cloud.channel.v1.IProduct|null|undefined} product
                         * @memberof google.cloud.channel.v1.Sku
                         * @instance
                         */
                        Sku.prototype.product = null;
    
                        /**
                         * Creates a new Sku instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Sku
                         * @static
                         * @param {google.cloud.channel.v1.ISku=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Sku} Sku instance
                         */
                        Sku.create = function create(properties) {
                            return new Sku(properties);
                        };
    
                        /**
                         * Encodes the specified Sku message. Does not implicitly {@link google.cloud.channel.v1.Sku.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Sku
                         * @static
                         * @param {google.cloud.channel.v1.ISku} message Sku message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Sku.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.marketingInfo != null && Object.hasOwnProperty.call(message, "marketingInfo"))
                                $root.google.cloud.channel.v1.MarketingInfo.encode(message.marketingInfo, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.product != null && Object.hasOwnProperty.call(message, "product"))
                                $root.google.cloud.channel.v1.Product.encode(message.product, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Sku message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Sku.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Sku
                         * @static
                         * @param {google.cloud.channel.v1.ISku} message Sku message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Sku.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Sku message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Sku
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Sku} Sku
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Sku.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Sku();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.marketingInfo = $root.google.cloud.channel.v1.MarketingInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.product = $root.google.cloud.channel.v1.Product.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Sku message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Sku
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Sku} Sku
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Sku.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Sku message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Sku
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Sku.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.marketingInfo != null && message.hasOwnProperty("marketingInfo")) {
                                var error = $root.google.cloud.channel.v1.MarketingInfo.verify(message.marketingInfo);
                                if (error)
                                    return "marketingInfo." + error;
                            }
                            if (message.product != null && message.hasOwnProperty("product")) {
                                var error = $root.google.cloud.channel.v1.Product.verify(message.product);
                                if (error)
                                    return "product." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Sku message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Sku
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Sku} Sku
                         */
                        Sku.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Sku)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Sku();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.marketingInfo != null) {
                                if (typeof object.marketingInfo !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Sku.marketingInfo: object expected");
                                message.marketingInfo = $root.google.cloud.channel.v1.MarketingInfo.fromObject(object.marketingInfo);
                            }
                            if (object.product != null) {
                                if (typeof object.product !== "object")
                                    throw TypeError(".google.cloud.channel.v1.Sku.product: object expected");
                                message.product = $root.google.cloud.channel.v1.Product.fromObject(object.product);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Sku message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Sku
                         * @static
                         * @param {google.cloud.channel.v1.Sku} message Sku
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Sku.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.marketingInfo = null;
                                object.product = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.marketingInfo != null && message.hasOwnProperty("marketingInfo"))
                                object.marketingInfo = $root.google.cloud.channel.v1.MarketingInfo.toObject(message.marketingInfo, options);
                            if (message.product != null && message.hasOwnProperty("product"))
                                object.product = $root.google.cloud.channel.v1.Product.toObject(message.product, options);
                            return object;
                        };
    
                        /**
                         * Converts this Sku to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Sku
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Sku.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Sku
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Sku
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Sku.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Sku";
                        };
    
                        return Sku;
                    })();
    
                    v1.MarketingInfo = (function() {
    
                        /**
                         * Properties of a MarketingInfo.
                         * @memberof google.cloud.channel.v1
                         * @interface IMarketingInfo
                         * @property {string|null} [displayName] MarketingInfo displayName
                         * @property {string|null} [description] MarketingInfo description
                         * @property {google.cloud.channel.v1.IMedia|null} [defaultLogo] MarketingInfo defaultLogo
                         */
    
                        /**
                         * Constructs a new MarketingInfo.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a MarketingInfo.
                         * @implements IMarketingInfo
                         * @constructor
                         * @param {google.cloud.channel.v1.IMarketingInfo=} [properties] Properties to set
                         */
                        function MarketingInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MarketingInfo displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @instance
                         */
                        MarketingInfo.prototype.displayName = "";
    
                        /**
                         * MarketingInfo description.
                         * @member {string} description
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @instance
                         */
                        MarketingInfo.prototype.description = "";
    
                        /**
                         * MarketingInfo defaultLogo.
                         * @member {google.cloud.channel.v1.IMedia|null|undefined} defaultLogo
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @instance
                         */
                        MarketingInfo.prototype.defaultLogo = null;
    
                        /**
                         * Creates a new MarketingInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @static
                         * @param {google.cloud.channel.v1.IMarketingInfo=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.MarketingInfo} MarketingInfo instance
                         */
                        MarketingInfo.create = function create(properties) {
                            return new MarketingInfo(properties);
                        };
    
                        /**
                         * Encodes the specified MarketingInfo message. Does not implicitly {@link google.cloud.channel.v1.MarketingInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @static
                         * @param {google.cloud.channel.v1.IMarketingInfo} message MarketingInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MarketingInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.displayName);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.defaultLogo != null && Object.hasOwnProperty.call(message, "defaultLogo"))
                                $root.google.cloud.channel.v1.Media.encode(message.defaultLogo, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MarketingInfo message, length delimited. Does not implicitly {@link google.cloud.channel.v1.MarketingInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @static
                         * @param {google.cloud.channel.v1.IMarketingInfo} message MarketingInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MarketingInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MarketingInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.MarketingInfo} MarketingInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MarketingInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.MarketingInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.defaultLogo = $root.google.cloud.channel.v1.Media.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MarketingInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.MarketingInfo} MarketingInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MarketingInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MarketingInfo message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MarketingInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.defaultLogo != null && message.hasOwnProperty("defaultLogo")) {
                                var error = $root.google.cloud.channel.v1.Media.verify(message.defaultLogo);
                                if (error)
                                    return "defaultLogo." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MarketingInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.MarketingInfo} MarketingInfo
                         */
                        MarketingInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.MarketingInfo)
                                return object;
                            var message = new $root.google.cloud.channel.v1.MarketingInfo();
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.defaultLogo != null) {
                                if (typeof object.defaultLogo !== "object")
                                    throw TypeError(".google.cloud.channel.v1.MarketingInfo.defaultLogo: object expected");
                                message.defaultLogo = $root.google.cloud.channel.v1.Media.fromObject(object.defaultLogo);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MarketingInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @static
                         * @param {google.cloud.channel.v1.MarketingInfo} message MarketingInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MarketingInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.displayName = "";
                                object.description = "";
                                object.defaultLogo = null;
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.defaultLogo != null && message.hasOwnProperty("defaultLogo"))
                                object.defaultLogo = $root.google.cloud.channel.v1.Media.toObject(message.defaultLogo, options);
                            return object;
                        };
    
                        /**
                         * Converts this MarketingInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MarketingInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MarketingInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.MarketingInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MarketingInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.MarketingInfo";
                        };
    
                        return MarketingInfo;
                    })();
    
                    v1.Media = (function() {
    
                        /**
                         * Properties of a Media.
                         * @memberof google.cloud.channel.v1
                         * @interface IMedia
                         * @property {string|null} [title] Media title
                         * @property {string|null} [content] Media content
                         * @property {google.cloud.channel.v1.MediaType|null} [type] Media type
                         */
    
                        /**
                         * Constructs a new Media.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Media.
                         * @implements IMedia
                         * @constructor
                         * @param {google.cloud.channel.v1.IMedia=} [properties] Properties to set
                         */
                        function Media(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Media title.
                         * @member {string} title
                         * @memberof google.cloud.channel.v1.Media
                         * @instance
                         */
                        Media.prototype.title = "";
    
                        /**
                         * Media content.
                         * @member {string} content
                         * @memberof google.cloud.channel.v1.Media
                         * @instance
                         */
                        Media.prototype.content = "";
    
                        /**
                         * Media type.
                         * @member {google.cloud.channel.v1.MediaType} type
                         * @memberof google.cloud.channel.v1.Media
                         * @instance
                         */
                        Media.prototype.type = 0;
    
                        /**
                         * Creates a new Media instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Media
                         * @static
                         * @param {google.cloud.channel.v1.IMedia=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Media} Media instance
                         */
                        Media.create = function create(properties) {
                            return new Media(properties);
                        };
    
                        /**
                         * Encodes the specified Media message. Does not implicitly {@link google.cloud.channel.v1.Media.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Media
                         * @static
                         * @param {google.cloud.channel.v1.IMedia} message Media message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Media.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Media message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Media.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Media
                         * @static
                         * @param {google.cloud.channel.v1.IMedia} message Media message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Media.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Media message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Media
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Media} Media
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Media.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Media();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.title = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.content = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Media message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Media
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Media} Media
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Media.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Media message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Media
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Media.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.title != null && message.hasOwnProperty("title"))
                                if (!$util.isString(message.title))
                                    return "title: string expected";
                            if (message.content != null && message.hasOwnProperty("content"))
                                if (!$util.isString(message.content))
                                    return "content: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Media message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Media
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Media} Media
                         */
                        Media.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Media)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Media();
                            if (object.title != null)
                                message.title = String(object.title);
                            if (object.content != null)
                                message.content = String(object.content);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "MEDIA_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "MEDIA_TYPE_IMAGE":
                            case 1:
                                message.type = 1;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Media message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Media
                         * @static
                         * @param {google.cloud.channel.v1.Media} message Media
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Media.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.title = "";
                                object.content = "";
                                object.type = options.enums === String ? "MEDIA_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.title != null && message.hasOwnProperty("title"))
                                object.title = message.title;
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = message.content;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.channel.v1.MediaType[message.type] === undefined ? message.type : $root.google.cloud.channel.v1.MediaType[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this Media to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Media
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Media.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Media
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Media
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Media.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Media";
                        };
    
                        return Media;
                    })();
    
                    v1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.channel.v1
                         * @interface IOperationMetadata
                         * @property {google.cloud.channel.v1.OperationMetadata.OperationType|null} [operationType] OperationMetadata operationType
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.channel.v1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata operationType.
                         * @member {google.cloud.channel.v1.OperationMetadata.OperationType} operationType
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.operationType = 0;
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.channel.v1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.channel.v1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.channel.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.operationType != null && Object.hasOwnProperty.call(message, "operationType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.operationType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.channel.v1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.channel.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.operationType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                switch (message.operationType) {
                                default:
                                    return "operationType: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                case 5:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 14:
                                case 15:
                                case 16:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.channel.v1.OperationMetadata();
                            switch (object.operationType) {
                            default:
                                if (typeof object.operationType === "number") {
                                    message.operationType = object.operationType;
                                    break;
                                }
                                break;
                            case "OPERATION_TYPE_UNSPECIFIED":
                            case 0:
                                message.operationType = 0;
                                break;
                            case "CREATE_ENTITLEMENT":
                            case 1:
                                message.operationType = 1;
                                break;
                            case "CHANGE_RENEWAL_SETTINGS":
                            case 3:
                                message.operationType = 3;
                                break;
                            case "START_PAID_SERVICE":
                            case 5:
                                message.operationType = 5;
                                break;
                            case "ACTIVATE_ENTITLEMENT":
                            case 7:
                                message.operationType = 7;
                                break;
                            case "SUSPEND_ENTITLEMENT":
                            case 8:
                                message.operationType = 8;
                                break;
                            case "CANCEL_ENTITLEMENT":
                            case 9:
                                message.operationType = 9;
                                break;
                            case "TRANSFER_ENTITLEMENTS":
                            case 10:
                                message.operationType = 10;
                                break;
                            case "TRANSFER_ENTITLEMENTS_TO_GOOGLE":
                            case 11:
                                message.operationType = 11;
                                break;
                            case "CHANGE_OFFER":
                            case 14:
                                message.operationType = 14;
                                break;
                            case "CHANGE_PARAMETERS":
                            case 15:
                                message.operationType = 15;
                                break;
                            case "PROVISION_CLOUD_IDENTITY":
                            case 16:
                                message.operationType = 16;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.channel.v1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.operationType = options.enums === String ? "OPERATION_TYPE_UNSPECIFIED" : 0;
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                object.operationType = options.enums === String ? $root.google.cloud.channel.v1.OperationMetadata.OperationType[message.operationType] === undefined ? message.operationType : $root.google.cloud.channel.v1.OperationMetadata.OperationType[message.operationType] : message.operationType;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.OperationMetadata";
                        };
    
                        /**
                         * OperationType enum.
                         * @name google.cloud.channel.v1.OperationMetadata.OperationType
                         * @enum {number}
                         * @property {number} OPERATION_TYPE_UNSPECIFIED=0 OPERATION_TYPE_UNSPECIFIED value
                         * @property {number} CREATE_ENTITLEMENT=1 CREATE_ENTITLEMENT value
                         * @property {number} CHANGE_RENEWAL_SETTINGS=3 CHANGE_RENEWAL_SETTINGS value
                         * @property {number} START_PAID_SERVICE=5 START_PAID_SERVICE value
                         * @property {number} ACTIVATE_ENTITLEMENT=7 ACTIVATE_ENTITLEMENT value
                         * @property {number} SUSPEND_ENTITLEMENT=8 SUSPEND_ENTITLEMENT value
                         * @property {number} CANCEL_ENTITLEMENT=9 CANCEL_ENTITLEMENT value
                         * @property {number} TRANSFER_ENTITLEMENTS=10 TRANSFER_ENTITLEMENTS value
                         * @property {number} TRANSFER_ENTITLEMENTS_TO_GOOGLE=11 TRANSFER_ENTITLEMENTS_TO_GOOGLE value
                         * @property {number} CHANGE_OFFER=14 CHANGE_OFFER value
                         * @property {number} CHANGE_PARAMETERS=15 CHANGE_PARAMETERS value
                         * @property {number} PROVISION_CLOUD_IDENTITY=16 PROVISION_CLOUD_IDENTITY value
                         */
                        OperationMetadata.OperationType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "OPERATION_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATE_ENTITLEMENT"] = 1;
                            values[valuesById[3] = "CHANGE_RENEWAL_SETTINGS"] = 3;
                            values[valuesById[5] = "START_PAID_SERVICE"] = 5;
                            values[valuesById[7] = "ACTIVATE_ENTITLEMENT"] = 7;
                            values[valuesById[8] = "SUSPEND_ENTITLEMENT"] = 8;
                            values[valuesById[9] = "CANCEL_ENTITLEMENT"] = 9;
                            values[valuesById[10] = "TRANSFER_ENTITLEMENTS"] = 10;
                            values[valuesById[11] = "TRANSFER_ENTITLEMENTS_TO_GOOGLE"] = 11;
                            values[valuesById[14] = "CHANGE_OFFER"] = 14;
                            values[valuesById[15] = "CHANGE_PARAMETERS"] = 15;
                            values[valuesById[16] = "PROVISION_CLOUD_IDENTITY"] = 16;
                            return values;
                        })();
    
                        return OperationMetadata;
                    })();
    
                    v1.CloudChannelReportsService = (function() {
    
                        /**
                         * Constructs a new CloudChannelReportsService service.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CloudChannelReportsService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudChannelReportsService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudChannelReportsService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudChannelReportsService;
    
                        /**
                         * Creates new CloudChannelReportsService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudChannelReportsService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudChannelReportsService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelReportsService|runReportJob}.
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @typedef RunReportJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RunReportJob.
                         * @function runReportJob
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @instance
                         * @param {google.cloud.channel.v1.IRunReportJobRequest} request RunReportJobRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelReportsService.RunReportJobCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelReportsService.prototype.runReportJob = function runReportJob(request, callback) {
                            return this.rpcCall(runReportJob, $root.google.cloud.channel.v1.RunReportJobRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RunReportJob" });
    
                        /**
                         * Calls RunReportJob.
                         * @function runReportJob
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @instance
                         * @param {google.cloud.channel.v1.IRunReportJobRequest} request RunReportJobRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelReportsService|fetchReportResults}.
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @typedef FetchReportResultsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.FetchReportResultsResponse} [response] FetchReportResultsResponse
                         */
    
                        /**
                         * Calls FetchReportResults.
                         * @function fetchReportResults
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @instance
                         * @param {google.cloud.channel.v1.IFetchReportResultsRequest} request FetchReportResultsRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelReportsService.FetchReportResultsCallback} callback Node-style callback called with the error, if any, and FetchReportResultsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelReportsService.prototype.fetchReportResults = function fetchReportResults(request, callback) {
                            return this.rpcCall(fetchReportResults, $root.google.cloud.channel.v1.FetchReportResultsRequest, $root.google.cloud.channel.v1.FetchReportResultsResponse, request, callback);
                        }, "name", { value: "FetchReportResults" });
    
                        /**
                         * Calls FetchReportResults.
                         * @function fetchReportResults
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @instance
                         * @param {google.cloud.channel.v1.IFetchReportResultsRequest} request FetchReportResultsRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.FetchReportResultsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelReportsService|listReports}.
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @typedef ListReportsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListReportsResponse} [response] ListReportsResponse
                         */
    
                        /**
                         * Calls ListReports.
                         * @function listReports
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @instance
                         * @param {google.cloud.channel.v1.IListReportsRequest} request ListReportsRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelReportsService.ListReportsCallback} callback Node-style callback called with the error, if any, and ListReportsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelReportsService.prototype.listReports = function listReports(request, callback) {
                            return this.rpcCall(listReports, $root.google.cloud.channel.v1.ListReportsRequest, $root.google.cloud.channel.v1.ListReportsResponse, request, callback);
                        }, "name", { value: "ListReports" });
    
                        /**
                         * Calls ListReports.
                         * @function listReports
                         * @memberof google.cloud.channel.v1.CloudChannelReportsService
                         * @instance
                         * @param {google.cloud.channel.v1.IListReportsRequest} request ListReportsRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListReportsResponse>} Promise
                         * @variation 2
                         */
    
                        return CloudChannelReportsService;
                    })();
    
                    v1.RunReportJobRequest = (function() {
    
                        /**
                         * Properties of a RunReportJobRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IRunReportJobRequest
                         * @property {string|null} [name] RunReportJobRequest name
                         * @property {google.cloud.channel.v1.IDateRange|null} [dateRange] RunReportJobRequest dateRange
                         * @property {string|null} [filter] RunReportJobRequest filter
                         * @property {string|null} [languageCode] RunReportJobRequest languageCode
                         */
    
                        /**
                         * Constructs a new RunReportJobRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a RunReportJobRequest.
                         * @implements IRunReportJobRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IRunReportJobRequest=} [properties] Properties to set
                         */
                        function RunReportJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunReportJobRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @instance
                         */
                        RunReportJobRequest.prototype.name = "";
    
                        /**
                         * RunReportJobRequest dateRange.
                         * @member {google.cloud.channel.v1.IDateRange|null|undefined} dateRange
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @instance
                         */
                        RunReportJobRequest.prototype.dateRange = null;
    
                        /**
                         * RunReportJobRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @instance
                         */
                        RunReportJobRequest.prototype.filter = "";
    
                        /**
                         * RunReportJobRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @instance
                         */
                        RunReportJobRequest.prototype.languageCode = "";
    
                        /**
                         * Creates a new RunReportJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @static
                         * @param {google.cloud.channel.v1.IRunReportJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.RunReportJobRequest} RunReportJobRequest instance
                         */
                        RunReportJobRequest.create = function create(properties) {
                            return new RunReportJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunReportJobRequest message. Does not implicitly {@link google.cloud.channel.v1.RunReportJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @static
                         * @param {google.cloud.channel.v1.IRunReportJobRequest} message RunReportJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunReportJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.dateRange != null && Object.hasOwnProperty.call(message, "dateRange"))
                                $root.google.cloud.channel.v1.DateRange.encode(message.dateRange, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.filter);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunReportJobRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RunReportJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @static
                         * @param {google.cloud.channel.v1.IRunReportJobRequest} message RunReportJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunReportJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunReportJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.RunReportJobRequest} RunReportJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunReportJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RunReportJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.dateRange = $root.google.cloud.channel.v1.DateRange.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunReportJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.RunReportJobRequest} RunReportJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunReportJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunReportJobRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunReportJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.dateRange != null && message.hasOwnProperty("dateRange")) {
                                var error = $root.google.cloud.channel.v1.DateRange.verify(message.dateRange);
                                if (error)
                                    return "dateRange." + error;
                            }
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RunReportJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.RunReportJobRequest} RunReportJobRequest
                         */
                        RunReportJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.RunReportJobRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.RunReportJobRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.dateRange != null) {
                                if (typeof object.dateRange !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RunReportJobRequest.dateRange: object expected");
                                message.dateRange = $root.google.cloud.channel.v1.DateRange.fromObject(object.dateRange);
                            }
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunReportJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @static
                         * @param {google.cloud.channel.v1.RunReportJobRequest} message RunReportJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunReportJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.dateRange = null;
                                object.filter = "";
                                object.languageCode = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.dateRange != null && message.hasOwnProperty("dateRange"))
                                object.dateRange = $root.google.cloud.channel.v1.DateRange.toObject(message.dateRange, options);
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this RunReportJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunReportJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunReportJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.RunReportJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunReportJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.RunReportJobRequest";
                        };
    
                        return RunReportJobRequest;
                    })();
    
                    v1.RunReportJobResponse = (function() {
    
                        /**
                         * Properties of a RunReportJobResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IRunReportJobResponse
                         * @property {google.cloud.channel.v1.IReportJob|null} [reportJob] RunReportJobResponse reportJob
                         * @property {google.cloud.channel.v1.IReportResultsMetadata|null} [reportMetadata] RunReportJobResponse reportMetadata
                         */
    
                        /**
                         * Constructs a new RunReportJobResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a RunReportJobResponse.
                         * @implements IRunReportJobResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IRunReportJobResponse=} [properties] Properties to set
                         */
                        function RunReportJobResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunReportJobResponse reportJob.
                         * @member {google.cloud.channel.v1.IReportJob|null|undefined} reportJob
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @instance
                         */
                        RunReportJobResponse.prototype.reportJob = null;
    
                        /**
                         * RunReportJobResponse reportMetadata.
                         * @member {google.cloud.channel.v1.IReportResultsMetadata|null|undefined} reportMetadata
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @instance
                         */
                        RunReportJobResponse.prototype.reportMetadata = null;
    
                        /**
                         * Creates a new RunReportJobResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @static
                         * @param {google.cloud.channel.v1.IRunReportJobResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.RunReportJobResponse} RunReportJobResponse instance
                         */
                        RunReportJobResponse.create = function create(properties) {
                            return new RunReportJobResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RunReportJobResponse message. Does not implicitly {@link google.cloud.channel.v1.RunReportJobResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @static
                         * @param {google.cloud.channel.v1.IRunReportJobResponse} message RunReportJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunReportJobResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reportJob != null && Object.hasOwnProperty.call(message, "reportJob"))
                                $root.google.cloud.channel.v1.ReportJob.encode(message.reportJob, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.reportMetadata != null && Object.hasOwnProperty.call(message, "reportMetadata"))
                                $root.google.cloud.channel.v1.ReportResultsMetadata.encode(message.reportMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunReportJobResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RunReportJobResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @static
                         * @param {google.cloud.channel.v1.IRunReportJobResponse} message RunReportJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunReportJobResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunReportJobResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.RunReportJobResponse} RunReportJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunReportJobResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RunReportJobResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.reportJob = $root.google.cloud.channel.v1.ReportJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.reportMetadata = $root.google.cloud.channel.v1.ReportResultsMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunReportJobResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.RunReportJobResponse} RunReportJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunReportJobResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunReportJobResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunReportJobResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reportJob != null && message.hasOwnProperty("reportJob")) {
                                var error = $root.google.cloud.channel.v1.ReportJob.verify(message.reportJob);
                                if (error)
                                    return "reportJob." + error;
                            }
                            if (message.reportMetadata != null && message.hasOwnProperty("reportMetadata")) {
                                var error = $root.google.cloud.channel.v1.ReportResultsMetadata.verify(message.reportMetadata);
                                if (error)
                                    return "reportMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RunReportJobResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.RunReportJobResponse} RunReportJobResponse
                         */
                        RunReportJobResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.RunReportJobResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.RunReportJobResponse();
                            if (object.reportJob != null) {
                                if (typeof object.reportJob !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RunReportJobResponse.reportJob: object expected");
                                message.reportJob = $root.google.cloud.channel.v1.ReportJob.fromObject(object.reportJob);
                            }
                            if (object.reportMetadata != null) {
                                if (typeof object.reportMetadata !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RunReportJobResponse.reportMetadata: object expected");
                                message.reportMetadata = $root.google.cloud.channel.v1.ReportResultsMetadata.fromObject(object.reportMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunReportJobResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @static
                         * @param {google.cloud.channel.v1.RunReportJobResponse} message RunReportJobResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunReportJobResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.reportJob = null;
                                object.reportMetadata = null;
                            }
                            if (message.reportJob != null && message.hasOwnProperty("reportJob"))
                                object.reportJob = $root.google.cloud.channel.v1.ReportJob.toObject(message.reportJob, options);
                            if (message.reportMetadata != null && message.hasOwnProperty("reportMetadata"))
                                object.reportMetadata = $root.google.cloud.channel.v1.ReportResultsMetadata.toObject(message.reportMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this RunReportJobResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunReportJobResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunReportJobResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.RunReportJobResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunReportJobResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.RunReportJobResponse";
                        };
    
                        return RunReportJobResponse;
                    })();
    
                    v1.FetchReportResultsRequest = (function() {
    
                        /**
                         * Properties of a FetchReportResultsRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IFetchReportResultsRequest
                         * @property {string|null} [reportJob] FetchReportResultsRequest reportJob
                         * @property {number|null} [pageSize] FetchReportResultsRequest pageSize
                         * @property {string|null} [pageToken] FetchReportResultsRequest pageToken
                         */
    
                        /**
                         * Constructs a new FetchReportResultsRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a FetchReportResultsRequest.
                         * @implements IFetchReportResultsRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IFetchReportResultsRequest=} [properties] Properties to set
                         */
                        function FetchReportResultsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchReportResultsRequest reportJob.
                         * @member {string} reportJob
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @instance
                         */
                        FetchReportResultsRequest.prototype.reportJob = "";
    
                        /**
                         * FetchReportResultsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @instance
                         */
                        FetchReportResultsRequest.prototype.pageSize = 0;
    
                        /**
                         * FetchReportResultsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @instance
                         */
                        FetchReportResultsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new FetchReportResultsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IFetchReportResultsRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.FetchReportResultsRequest} FetchReportResultsRequest instance
                         */
                        FetchReportResultsRequest.create = function create(properties) {
                            return new FetchReportResultsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified FetchReportResultsRequest message. Does not implicitly {@link google.cloud.channel.v1.FetchReportResultsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IFetchReportResultsRequest} message FetchReportResultsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchReportResultsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reportJob != null && Object.hasOwnProperty.call(message, "reportJob"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.reportJob);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchReportResultsRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.FetchReportResultsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IFetchReportResultsRequest} message FetchReportResultsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchReportResultsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchReportResultsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.FetchReportResultsRequest} FetchReportResultsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchReportResultsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.FetchReportResultsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.reportJob = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchReportResultsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.FetchReportResultsRequest} FetchReportResultsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchReportResultsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchReportResultsRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchReportResultsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reportJob != null && message.hasOwnProperty("reportJob"))
                                if (!$util.isString(message.reportJob))
                                    return "reportJob: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FetchReportResultsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.FetchReportResultsRequest} FetchReportResultsRequest
                         */
                        FetchReportResultsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.FetchReportResultsRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.FetchReportResultsRequest();
                            if (object.reportJob != null)
                                message.reportJob = String(object.reportJob);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchReportResultsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @static
                         * @param {google.cloud.channel.v1.FetchReportResultsRequest} message FetchReportResultsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchReportResultsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.reportJob = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.reportJob != null && message.hasOwnProperty("reportJob"))
                                object.reportJob = message.reportJob;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this FetchReportResultsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchReportResultsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchReportResultsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.FetchReportResultsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchReportResultsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.FetchReportResultsRequest";
                        };
    
                        return FetchReportResultsRequest;
                    })();
    
                    v1.FetchReportResultsResponse = (function() {
    
                        /**
                         * Properties of a FetchReportResultsResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IFetchReportResultsResponse
                         * @property {google.cloud.channel.v1.IReportResultsMetadata|null} [reportMetadata] FetchReportResultsResponse reportMetadata
                         * @property {Array.<google.cloud.channel.v1.IRow>|null} [rows] FetchReportResultsResponse rows
                         * @property {string|null} [nextPageToken] FetchReportResultsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new FetchReportResultsResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a FetchReportResultsResponse.
                         * @implements IFetchReportResultsResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IFetchReportResultsResponse=} [properties] Properties to set
                         */
                        function FetchReportResultsResponse(properties) {
                            this.rows = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchReportResultsResponse reportMetadata.
                         * @member {google.cloud.channel.v1.IReportResultsMetadata|null|undefined} reportMetadata
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @instance
                         */
                        FetchReportResultsResponse.prototype.reportMetadata = null;
    
                        /**
                         * FetchReportResultsResponse rows.
                         * @member {Array.<google.cloud.channel.v1.IRow>} rows
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @instance
                         */
                        FetchReportResultsResponse.prototype.rows = $util.emptyArray;
    
                        /**
                         * FetchReportResultsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @instance
                         */
                        FetchReportResultsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new FetchReportResultsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IFetchReportResultsResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.FetchReportResultsResponse} FetchReportResultsResponse instance
                         */
                        FetchReportResultsResponse.create = function create(properties) {
                            return new FetchReportResultsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified FetchReportResultsResponse message. Does not implicitly {@link google.cloud.channel.v1.FetchReportResultsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IFetchReportResultsResponse} message FetchReportResultsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchReportResultsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reportMetadata != null && Object.hasOwnProperty.call(message, "reportMetadata"))
                                $root.google.cloud.channel.v1.ReportResultsMetadata.encode(message.reportMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.rows != null && message.rows.length)
                                for (var i = 0; i < message.rows.length; ++i)
                                    $root.google.cloud.channel.v1.Row.encode(message.rows[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchReportResultsResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.FetchReportResultsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IFetchReportResultsResponse} message FetchReportResultsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchReportResultsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchReportResultsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.FetchReportResultsResponse} FetchReportResultsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchReportResultsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.FetchReportResultsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.reportMetadata = $root.google.cloud.channel.v1.ReportResultsMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.rows && message.rows.length))
                                            message.rows = [];
                                        message.rows.push($root.google.cloud.channel.v1.Row.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchReportResultsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.FetchReportResultsResponse} FetchReportResultsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchReportResultsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchReportResultsResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchReportResultsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reportMetadata != null && message.hasOwnProperty("reportMetadata")) {
                                var error = $root.google.cloud.channel.v1.ReportResultsMetadata.verify(message.reportMetadata);
                                if (error)
                                    return "reportMetadata." + error;
                            }
                            if (message.rows != null && message.hasOwnProperty("rows")) {
                                if (!Array.isArray(message.rows))
                                    return "rows: array expected";
                                for (var i = 0; i < message.rows.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Row.verify(message.rows[i]);
                                    if (error)
                                        return "rows." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FetchReportResultsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.FetchReportResultsResponse} FetchReportResultsResponse
                         */
                        FetchReportResultsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.FetchReportResultsResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.FetchReportResultsResponse();
                            if (object.reportMetadata != null) {
                                if (typeof object.reportMetadata !== "object")
                                    throw TypeError(".google.cloud.channel.v1.FetchReportResultsResponse.reportMetadata: object expected");
                                message.reportMetadata = $root.google.cloud.channel.v1.ReportResultsMetadata.fromObject(object.reportMetadata);
                            }
                            if (object.rows) {
                                if (!Array.isArray(object.rows))
                                    throw TypeError(".google.cloud.channel.v1.FetchReportResultsResponse.rows: array expected");
                                message.rows = [];
                                for (var i = 0; i < object.rows.length; ++i) {
                                    if (typeof object.rows[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.FetchReportResultsResponse.rows: object expected");
                                    message.rows[i] = $root.google.cloud.channel.v1.Row.fromObject(object.rows[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchReportResultsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @static
                         * @param {google.cloud.channel.v1.FetchReportResultsResponse} message FetchReportResultsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchReportResultsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.rows = [];
                            if (options.defaults) {
                                object.reportMetadata = null;
                                object.nextPageToken = "";
                            }
                            if (message.reportMetadata != null && message.hasOwnProperty("reportMetadata"))
                                object.reportMetadata = $root.google.cloud.channel.v1.ReportResultsMetadata.toObject(message.reportMetadata, options);
                            if (message.rows && message.rows.length) {
                                object.rows = [];
                                for (var j = 0; j < message.rows.length; ++j)
                                    object.rows[j] = $root.google.cloud.channel.v1.Row.toObject(message.rows[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this FetchReportResultsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchReportResultsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchReportResultsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.FetchReportResultsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchReportResultsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.FetchReportResultsResponse";
                        };
    
                        return FetchReportResultsResponse;
                    })();
    
                    v1.ListReportsRequest = (function() {
    
                        /**
                         * Properties of a ListReportsRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListReportsRequest
                         * @property {string|null} [parent] ListReportsRequest parent
                         * @property {number|null} [pageSize] ListReportsRequest pageSize
                         * @property {string|null} [pageToken] ListReportsRequest pageToken
                         * @property {string|null} [languageCode] ListReportsRequest languageCode
                         */
    
                        /**
                         * Constructs a new ListReportsRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListReportsRequest.
                         * @implements IListReportsRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListReportsRequest=} [properties] Properties to set
                         */
                        function ListReportsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListReportsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @instance
                         */
                        ListReportsRequest.prototype.parent = "";
    
                        /**
                         * ListReportsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @instance
                         */
                        ListReportsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListReportsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @instance
                         */
                        ListReportsRequest.prototype.pageToken = "";
    
                        /**
                         * ListReportsRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @instance
                         */
                        ListReportsRequest.prototype.languageCode = "";
    
                        /**
                         * Creates a new ListReportsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListReportsRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListReportsRequest} ListReportsRequest instance
                         */
                        ListReportsRequest.create = function create(properties) {
                            return new ListReportsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListReportsRequest message. Does not implicitly {@link google.cloud.channel.v1.ListReportsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListReportsRequest} message ListReportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListReportsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListReportsRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListReportsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListReportsRequest} message ListReportsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListReportsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListReportsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListReportsRequest} ListReportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListReportsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListReportsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListReportsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListReportsRequest} ListReportsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListReportsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListReportsRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListReportsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListReportsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListReportsRequest} ListReportsRequest
                         */
                        ListReportsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListReportsRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListReportsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListReportsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListReportsRequest} message ListReportsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListReportsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.languageCode = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this ListReportsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListReportsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListReportsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListReportsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListReportsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListReportsRequest";
                        };
    
                        return ListReportsRequest;
                    })();
    
                    v1.ListReportsResponse = (function() {
    
                        /**
                         * Properties of a ListReportsResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListReportsResponse
                         * @property {Array.<google.cloud.channel.v1.IReport>|null} [reports] ListReportsResponse reports
                         * @property {string|null} [nextPageToken] ListReportsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListReportsResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListReportsResponse.
                         * @implements IListReportsResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListReportsResponse=} [properties] Properties to set
                         */
                        function ListReportsResponse(properties) {
                            this.reports = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListReportsResponse reports.
                         * @member {Array.<google.cloud.channel.v1.IReport>} reports
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @instance
                         */
                        ListReportsResponse.prototype.reports = $util.emptyArray;
    
                        /**
                         * ListReportsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @instance
                         */
                        ListReportsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListReportsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListReportsResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListReportsResponse} ListReportsResponse instance
                         */
                        ListReportsResponse.create = function create(properties) {
                            return new ListReportsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListReportsResponse message. Does not implicitly {@link google.cloud.channel.v1.ListReportsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListReportsResponse} message ListReportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListReportsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reports != null && message.reports.length)
                                for (var i = 0; i < message.reports.length; ++i)
                                    $root.google.cloud.channel.v1.Report.encode(message.reports[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListReportsResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListReportsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListReportsResponse} message ListReportsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListReportsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListReportsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListReportsResponse} ListReportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListReportsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListReportsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.reports && message.reports.length))
                                            message.reports = [];
                                        message.reports.push($root.google.cloud.channel.v1.Report.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListReportsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListReportsResponse} ListReportsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListReportsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListReportsResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListReportsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reports != null && message.hasOwnProperty("reports")) {
                                if (!Array.isArray(message.reports))
                                    return "reports: array expected";
                                for (var i = 0; i < message.reports.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Report.verify(message.reports[i]);
                                    if (error)
                                        return "reports." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListReportsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListReportsResponse} ListReportsResponse
                         */
                        ListReportsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListReportsResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListReportsResponse();
                            if (object.reports) {
                                if (!Array.isArray(object.reports))
                                    throw TypeError(".google.cloud.channel.v1.ListReportsResponse.reports: array expected");
                                message.reports = [];
                                for (var i = 0; i < object.reports.length; ++i) {
                                    if (typeof object.reports[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListReportsResponse.reports: object expected");
                                    message.reports[i] = $root.google.cloud.channel.v1.Report.fromObject(object.reports[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListReportsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListReportsResponse} message ListReportsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListReportsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.reports = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.reports && message.reports.length) {
                                object.reports = [];
                                for (var j = 0; j < message.reports.length; ++j)
                                    object.reports[j] = $root.google.cloud.channel.v1.Report.toObject(message.reports[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListReportsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListReportsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListReportsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListReportsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListReportsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListReportsResponse";
                        };
    
                        return ListReportsResponse;
                    })();
    
                    v1.ReportJob = (function() {
    
                        /**
                         * Properties of a ReportJob.
                         * @memberof google.cloud.channel.v1
                         * @interface IReportJob
                         * @property {string|null} [name] ReportJob name
                         * @property {google.cloud.channel.v1.IReportStatus|null} [reportStatus] ReportJob reportStatus
                         */
    
                        /**
                         * Constructs a new ReportJob.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ReportJob.
                         * @implements IReportJob
                         * @constructor
                         * @param {google.cloud.channel.v1.IReportJob=} [properties] Properties to set
                         */
                        function ReportJob(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReportJob name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @instance
                         */
                        ReportJob.prototype.name = "";
    
                        /**
                         * ReportJob reportStatus.
                         * @member {google.cloud.channel.v1.IReportStatus|null|undefined} reportStatus
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @instance
                         */
                        ReportJob.prototype.reportStatus = null;
    
                        /**
                         * Creates a new ReportJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @static
                         * @param {google.cloud.channel.v1.IReportJob=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ReportJob} ReportJob instance
                         */
                        ReportJob.create = function create(properties) {
                            return new ReportJob(properties);
                        };
    
                        /**
                         * Encodes the specified ReportJob message. Does not implicitly {@link google.cloud.channel.v1.ReportJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @static
                         * @param {google.cloud.channel.v1.IReportJob} message ReportJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.reportStatus != null && Object.hasOwnProperty.call(message, "reportStatus"))
                                $root.google.cloud.channel.v1.ReportStatus.encode(message.reportStatus, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReportJob message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ReportJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @static
                         * @param {google.cloud.channel.v1.IReportJob} message ReportJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReportJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ReportJob} ReportJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ReportJob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.reportStatus = $root.google.cloud.channel.v1.ReportStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReportJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ReportJob} ReportJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReportJob message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReportJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.reportStatus != null && message.hasOwnProperty("reportStatus")) {
                                var error = $root.google.cloud.channel.v1.ReportStatus.verify(message.reportStatus);
                                if (error)
                                    return "reportStatus." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReportJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ReportJob} ReportJob
                         */
                        ReportJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ReportJob)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ReportJob();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.reportStatus != null) {
                                if (typeof object.reportStatus !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportJob.reportStatus: object expected");
                                message.reportStatus = $root.google.cloud.channel.v1.ReportStatus.fromObject(object.reportStatus);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReportJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @static
                         * @param {google.cloud.channel.v1.ReportJob} message ReportJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReportJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.reportStatus = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.reportStatus != null && message.hasOwnProperty("reportStatus"))
                                object.reportStatus = $root.google.cloud.channel.v1.ReportStatus.toObject(message.reportStatus, options);
                            return object;
                        };
    
                        /**
                         * Converts this ReportJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReportJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReportJob
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ReportJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReportJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ReportJob";
                        };
    
                        return ReportJob;
                    })();
    
                    v1.ReportResultsMetadata = (function() {
    
                        /**
                         * Properties of a ReportResultsMetadata.
                         * @memberof google.cloud.channel.v1
                         * @interface IReportResultsMetadata
                         * @property {google.cloud.channel.v1.IReport|null} [report] ReportResultsMetadata report
                         * @property {number|Long|null} [rowCount] ReportResultsMetadata rowCount
                         * @property {google.cloud.channel.v1.IDateRange|null} [dateRange] ReportResultsMetadata dateRange
                         * @property {google.cloud.channel.v1.IDateRange|null} [precedingDateRange] ReportResultsMetadata precedingDateRange
                         */
    
                        /**
                         * Constructs a new ReportResultsMetadata.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ReportResultsMetadata.
                         * @implements IReportResultsMetadata
                         * @constructor
                         * @param {google.cloud.channel.v1.IReportResultsMetadata=} [properties] Properties to set
                         */
                        function ReportResultsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReportResultsMetadata report.
                         * @member {google.cloud.channel.v1.IReport|null|undefined} report
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @instance
                         */
                        ReportResultsMetadata.prototype.report = null;
    
                        /**
                         * ReportResultsMetadata rowCount.
                         * @member {number|Long} rowCount
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @instance
                         */
                        ReportResultsMetadata.prototype.rowCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * ReportResultsMetadata dateRange.
                         * @member {google.cloud.channel.v1.IDateRange|null|undefined} dateRange
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @instance
                         */
                        ReportResultsMetadata.prototype.dateRange = null;
    
                        /**
                         * ReportResultsMetadata precedingDateRange.
                         * @member {google.cloud.channel.v1.IDateRange|null|undefined} precedingDateRange
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @instance
                         */
                        ReportResultsMetadata.prototype.precedingDateRange = null;
    
                        /**
                         * Creates a new ReportResultsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @static
                         * @param {google.cloud.channel.v1.IReportResultsMetadata=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ReportResultsMetadata} ReportResultsMetadata instance
                         */
                        ReportResultsMetadata.create = function create(properties) {
                            return new ReportResultsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ReportResultsMetadata message. Does not implicitly {@link google.cloud.channel.v1.ReportResultsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @static
                         * @param {google.cloud.channel.v1.IReportResultsMetadata} message ReportResultsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportResultsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.report != null && Object.hasOwnProperty.call(message, "report"))
                                $root.google.cloud.channel.v1.Report.encode(message.report, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.rowCount != null && Object.hasOwnProperty.call(message, "rowCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.rowCount);
                            if (message.dateRange != null && Object.hasOwnProperty.call(message, "dateRange"))
                                $root.google.cloud.channel.v1.DateRange.encode(message.dateRange, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.precedingDateRange != null && Object.hasOwnProperty.call(message, "precedingDateRange"))
                                $root.google.cloud.channel.v1.DateRange.encode(message.precedingDateRange, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReportResultsMetadata message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ReportResultsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @static
                         * @param {google.cloud.channel.v1.IReportResultsMetadata} message ReportResultsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportResultsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReportResultsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ReportResultsMetadata} ReportResultsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportResultsMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ReportResultsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.report = $root.google.cloud.channel.v1.Report.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.rowCount = reader.int64();
                                        break;
                                    }
                                case 3: {
                                        message.dateRange = $root.google.cloud.channel.v1.DateRange.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.precedingDateRange = $root.google.cloud.channel.v1.DateRange.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReportResultsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ReportResultsMetadata} ReportResultsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportResultsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReportResultsMetadata message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReportResultsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.report != null && message.hasOwnProperty("report")) {
                                var error = $root.google.cloud.channel.v1.Report.verify(message.report);
                                if (error)
                                    return "report." + error;
                            }
                            if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                if (!$util.isInteger(message.rowCount) && !(message.rowCount && $util.isInteger(message.rowCount.low) && $util.isInteger(message.rowCount.high)))
                                    return "rowCount: integer|Long expected";
                            if (message.dateRange != null && message.hasOwnProperty("dateRange")) {
                                var error = $root.google.cloud.channel.v1.DateRange.verify(message.dateRange);
                                if (error)
                                    return "dateRange." + error;
                            }
                            if (message.precedingDateRange != null && message.hasOwnProperty("precedingDateRange")) {
                                var error = $root.google.cloud.channel.v1.DateRange.verify(message.precedingDateRange);
                                if (error)
                                    return "precedingDateRange." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReportResultsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ReportResultsMetadata} ReportResultsMetadata
                         */
                        ReportResultsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ReportResultsMetadata)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ReportResultsMetadata();
                            if (object.report != null) {
                                if (typeof object.report !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportResultsMetadata.report: object expected");
                                message.report = $root.google.cloud.channel.v1.Report.fromObject(object.report);
                            }
                            if (object.rowCount != null)
                                if ($util.Long)
                                    (message.rowCount = $util.Long.fromValue(object.rowCount)).unsigned = false;
                                else if (typeof object.rowCount === "string")
                                    message.rowCount = parseInt(object.rowCount, 10);
                                else if (typeof object.rowCount === "number")
                                    message.rowCount = object.rowCount;
                                else if (typeof object.rowCount === "object")
                                    message.rowCount = new $util.LongBits(object.rowCount.low >>> 0, object.rowCount.high >>> 0).toNumber();
                            if (object.dateRange != null) {
                                if (typeof object.dateRange !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportResultsMetadata.dateRange: object expected");
                                message.dateRange = $root.google.cloud.channel.v1.DateRange.fromObject(object.dateRange);
                            }
                            if (object.precedingDateRange != null) {
                                if (typeof object.precedingDateRange !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportResultsMetadata.precedingDateRange: object expected");
                                message.precedingDateRange = $root.google.cloud.channel.v1.DateRange.fromObject(object.precedingDateRange);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReportResultsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @static
                         * @param {google.cloud.channel.v1.ReportResultsMetadata} message ReportResultsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReportResultsMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.report = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.rowCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.rowCount = options.longs === String ? "0" : 0;
                                object.dateRange = null;
                                object.precedingDateRange = null;
                            }
                            if (message.report != null && message.hasOwnProperty("report"))
                                object.report = $root.google.cloud.channel.v1.Report.toObject(message.report, options);
                            if (message.rowCount != null && message.hasOwnProperty("rowCount"))
                                if (typeof message.rowCount === "number")
                                    object.rowCount = options.longs === String ? String(message.rowCount) : message.rowCount;
                                else
                                    object.rowCount = options.longs === String ? $util.Long.prototype.toString.call(message.rowCount) : options.longs === Number ? new $util.LongBits(message.rowCount.low >>> 0, message.rowCount.high >>> 0).toNumber() : message.rowCount;
                            if (message.dateRange != null && message.hasOwnProperty("dateRange"))
                                object.dateRange = $root.google.cloud.channel.v1.DateRange.toObject(message.dateRange, options);
                            if (message.precedingDateRange != null && message.hasOwnProperty("precedingDateRange"))
                                object.precedingDateRange = $root.google.cloud.channel.v1.DateRange.toObject(message.precedingDateRange, options);
                            return object;
                        };
    
                        /**
                         * Converts this ReportResultsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReportResultsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReportResultsMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ReportResultsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReportResultsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ReportResultsMetadata";
                        };
    
                        return ReportResultsMetadata;
                    })();
    
                    v1.Column = (function() {
    
                        /**
                         * Properties of a Column.
                         * @memberof google.cloud.channel.v1
                         * @interface IColumn
                         * @property {string|null} [columnId] Column columnId
                         * @property {string|null} [displayName] Column displayName
                         * @property {google.cloud.channel.v1.Column.DataType|null} [dataType] Column dataType
                         */
    
                        /**
                         * Constructs a new Column.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Column.
                         * @implements IColumn
                         * @constructor
                         * @param {google.cloud.channel.v1.IColumn=} [properties] Properties to set
                         */
                        function Column(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Column columnId.
                         * @member {string} columnId
                         * @memberof google.cloud.channel.v1.Column
                         * @instance
                         */
                        Column.prototype.columnId = "";
    
                        /**
                         * Column displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.channel.v1.Column
                         * @instance
                         */
                        Column.prototype.displayName = "";
    
                        /**
                         * Column dataType.
                         * @member {google.cloud.channel.v1.Column.DataType} dataType
                         * @memberof google.cloud.channel.v1.Column
                         * @instance
                         */
                        Column.prototype.dataType = 0;
    
                        /**
                         * Creates a new Column instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Column
                         * @static
                         * @param {google.cloud.channel.v1.IColumn=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Column} Column instance
                         */
                        Column.create = function create(properties) {
                            return new Column(properties);
                        };
    
                        /**
                         * Encodes the specified Column message. Does not implicitly {@link google.cloud.channel.v1.Column.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Column
                         * @static
                         * @param {google.cloud.channel.v1.IColumn} message Column message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Column.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.columnId != null && Object.hasOwnProperty.call(message, "columnId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.columnId);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.dataType != null && Object.hasOwnProperty.call(message, "dataType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.dataType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Column message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Column.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Column
                         * @static
                         * @param {google.cloud.channel.v1.IColumn} message Column message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Column.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Column message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Column
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Column} Column
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Column.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Column();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.columnId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.dataType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Column message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Column
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Column} Column
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Column.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Column message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Column
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Column.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.columnId != null && message.hasOwnProperty("columnId"))
                                if (!$util.isString(message.columnId))
                                    return "columnId: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                switch (message.dataType) {
                                default:
                                    return "dataType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Column message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Column
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Column} Column
                         */
                        Column.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Column)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Column();
                            if (object.columnId != null)
                                message.columnId = String(object.columnId);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            switch (object.dataType) {
                            default:
                                if (typeof object.dataType === "number") {
                                    message.dataType = object.dataType;
                                    break;
                                }
                                break;
                            case "DATA_TYPE_UNSPECIFIED":
                            case 0:
                                message.dataType = 0;
                                break;
                            case "STRING":
                            case 1:
                                message.dataType = 1;
                                break;
                            case "INT":
                            case 2:
                                message.dataType = 2;
                                break;
                            case "DECIMAL":
                            case 3:
                                message.dataType = 3;
                                break;
                            case "MONEY":
                            case 4:
                                message.dataType = 4;
                                break;
                            case "DATE":
                            case 5:
                                message.dataType = 5;
                                break;
                            case "DATE_TIME":
                            case 6:
                                message.dataType = 6;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Column message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Column
                         * @static
                         * @param {google.cloud.channel.v1.Column} message Column
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Column.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.columnId = "";
                                object.displayName = "";
                                object.dataType = options.enums === String ? "DATA_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.columnId != null && message.hasOwnProperty("columnId"))
                                object.columnId = message.columnId;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.dataType != null && message.hasOwnProperty("dataType"))
                                object.dataType = options.enums === String ? $root.google.cloud.channel.v1.Column.DataType[message.dataType] === undefined ? message.dataType : $root.google.cloud.channel.v1.Column.DataType[message.dataType] : message.dataType;
                            return object;
                        };
    
                        /**
                         * Converts this Column to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Column
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Column.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Column
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Column
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Column.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Column";
                        };
    
                        /**
                         * DataType enum.
                         * @name google.cloud.channel.v1.Column.DataType
                         * @enum {number}
                         * @property {number} DATA_TYPE_UNSPECIFIED=0 DATA_TYPE_UNSPECIFIED value
                         * @property {number} STRING=1 STRING value
                         * @property {number} INT=2 INT value
                         * @property {number} DECIMAL=3 DECIMAL value
                         * @property {number} MONEY=4 MONEY value
                         * @property {number} DATE=5 DATE value
                         * @property {number} DATE_TIME=6 DATE_TIME value
                         */
                        Column.DataType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DATA_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STRING"] = 1;
                            values[valuesById[2] = "INT"] = 2;
                            values[valuesById[3] = "DECIMAL"] = 3;
                            values[valuesById[4] = "MONEY"] = 4;
                            values[valuesById[5] = "DATE"] = 5;
                            values[valuesById[6] = "DATE_TIME"] = 6;
                            return values;
                        })();
    
                        return Column;
                    })();
    
                    v1.DateRange = (function() {
    
                        /**
                         * Properties of a DateRange.
                         * @memberof google.cloud.channel.v1
                         * @interface IDateRange
                         * @property {google.type.IDateTime|null} [usageStartDateTime] DateRange usageStartDateTime
                         * @property {google.type.IDateTime|null} [usageEndDateTime] DateRange usageEndDateTime
                         * @property {google.type.IDate|null} [invoiceStartDate] DateRange invoiceStartDate
                         * @property {google.type.IDate|null} [invoiceEndDate] DateRange invoiceEndDate
                         */
    
                        /**
                         * Constructs a new DateRange.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a DateRange.
                         * @implements IDateRange
                         * @constructor
                         * @param {google.cloud.channel.v1.IDateRange=} [properties] Properties to set
                         */
                        function DateRange(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DateRange usageStartDateTime.
                         * @member {google.type.IDateTime|null|undefined} usageStartDateTime
                         * @memberof google.cloud.channel.v1.DateRange
                         * @instance
                         */
                        DateRange.prototype.usageStartDateTime = null;
    
                        /**
                         * DateRange usageEndDateTime.
                         * @member {google.type.IDateTime|null|undefined} usageEndDateTime
                         * @memberof google.cloud.channel.v1.DateRange
                         * @instance
                         */
                        DateRange.prototype.usageEndDateTime = null;
    
                        /**
                         * DateRange invoiceStartDate.
                         * @member {google.type.IDate|null|undefined} invoiceStartDate
                         * @memberof google.cloud.channel.v1.DateRange
                         * @instance
                         */
                        DateRange.prototype.invoiceStartDate = null;
    
                        /**
                         * DateRange invoiceEndDate.
                         * @member {google.type.IDate|null|undefined} invoiceEndDate
                         * @memberof google.cloud.channel.v1.DateRange
                         * @instance
                         */
                        DateRange.prototype.invoiceEndDate = null;
    
                        /**
                         * Creates a new DateRange instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.DateRange
                         * @static
                         * @param {google.cloud.channel.v1.IDateRange=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.DateRange} DateRange instance
                         */
                        DateRange.create = function create(properties) {
                            return new DateRange(properties);
                        };
    
                        /**
                         * Encodes the specified DateRange message. Does not implicitly {@link google.cloud.channel.v1.DateRange.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.DateRange
                         * @static
                         * @param {google.cloud.channel.v1.IDateRange} message DateRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateRange.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.usageStartDateTime != null && Object.hasOwnProperty.call(message, "usageStartDateTime"))
                                $root.google.type.DateTime.encode(message.usageStartDateTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.usageEndDateTime != null && Object.hasOwnProperty.call(message, "usageEndDateTime"))
                                $root.google.type.DateTime.encode(message.usageEndDateTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.invoiceStartDate != null && Object.hasOwnProperty.call(message, "invoiceStartDate"))
                                $root.google.type.Date.encode(message.invoiceStartDate, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.invoiceEndDate != null && Object.hasOwnProperty.call(message, "invoiceEndDate"))
                                $root.google.type.Date.encode(message.invoiceEndDate, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DateRange message, length delimited. Does not implicitly {@link google.cloud.channel.v1.DateRange.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.DateRange
                         * @static
                         * @param {google.cloud.channel.v1.IDateRange} message DateRange message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateRange.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DateRange message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.DateRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.DateRange} DateRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateRange.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.DateRange();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.usageStartDateTime = $root.google.type.DateTime.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.usageEndDateTime = $root.google.type.DateTime.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.invoiceStartDate = $root.google.type.Date.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.invoiceEndDate = $root.google.type.Date.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DateRange message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.DateRange
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.DateRange} DateRange
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateRange.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DateRange message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.DateRange
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DateRange.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.usageStartDateTime != null && message.hasOwnProperty("usageStartDateTime")) {
                                var error = $root.google.type.DateTime.verify(message.usageStartDateTime);
                                if (error)
                                    return "usageStartDateTime." + error;
                            }
                            if (message.usageEndDateTime != null && message.hasOwnProperty("usageEndDateTime")) {
                                var error = $root.google.type.DateTime.verify(message.usageEndDateTime);
                                if (error)
                                    return "usageEndDateTime." + error;
                            }
                            if (message.invoiceStartDate != null && message.hasOwnProperty("invoiceStartDate")) {
                                var error = $root.google.type.Date.verify(message.invoiceStartDate);
                                if (error)
                                    return "invoiceStartDate." + error;
                            }
                            if (message.invoiceEndDate != null && message.hasOwnProperty("invoiceEndDate")) {
                                var error = $root.google.type.Date.verify(message.invoiceEndDate);
                                if (error)
                                    return "invoiceEndDate." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DateRange message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.DateRange
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.DateRange} DateRange
                         */
                        DateRange.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.DateRange)
                                return object;
                            var message = new $root.google.cloud.channel.v1.DateRange();
                            if (object.usageStartDateTime != null) {
                                if (typeof object.usageStartDateTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.DateRange.usageStartDateTime: object expected");
                                message.usageStartDateTime = $root.google.type.DateTime.fromObject(object.usageStartDateTime);
                            }
                            if (object.usageEndDateTime != null) {
                                if (typeof object.usageEndDateTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.DateRange.usageEndDateTime: object expected");
                                message.usageEndDateTime = $root.google.type.DateTime.fromObject(object.usageEndDateTime);
                            }
                            if (object.invoiceStartDate != null) {
                                if (typeof object.invoiceStartDate !== "object")
                                    throw TypeError(".google.cloud.channel.v1.DateRange.invoiceStartDate: object expected");
                                message.invoiceStartDate = $root.google.type.Date.fromObject(object.invoiceStartDate);
                            }
                            if (object.invoiceEndDate != null) {
                                if (typeof object.invoiceEndDate !== "object")
                                    throw TypeError(".google.cloud.channel.v1.DateRange.invoiceEndDate: object expected");
                                message.invoiceEndDate = $root.google.type.Date.fromObject(object.invoiceEndDate);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DateRange message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.DateRange
                         * @static
                         * @param {google.cloud.channel.v1.DateRange} message DateRange
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DateRange.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.usageStartDateTime = null;
                                object.usageEndDateTime = null;
                                object.invoiceStartDate = null;
                                object.invoiceEndDate = null;
                            }
                            if (message.usageStartDateTime != null && message.hasOwnProperty("usageStartDateTime"))
                                object.usageStartDateTime = $root.google.type.DateTime.toObject(message.usageStartDateTime, options);
                            if (message.usageEndDateTime != null && message.hasOwnProperty("usageEndDateTime"))
                                object.usageEndDateTime = $root.google.type.DateTime.toObject(message.usageEndDateTime, options);
                            if (message.invoiceStartDate != null && message.hasOwnProperty("invoiceStartDate"))
                                object.invoiceStartDate = $root.google.type.Date.toObject(message.invoiceStartDate, options);
                            if (message.invoiceEndDate != null && message.hasOwnProperty("invoiceEndDate"))
                                object.invoiceEndDate = $root.google.type.Date.toObject(message.invoiceEndDate, options);
                            return object;
                        };
    
                        /**
                         * Converts this DateRange to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.DateRange
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DateRange.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DateRange
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.DateRange
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DateRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.DateRange";
                        };
    
                        return DateRange;
                    })();
    
                    v1.Row = (function() {
    
                        /**
                         * Properties of a Row.
                         * @memberof google.cloud.channel.v1
                         * @interface IRow
                         * @property {Array.<google.cloud.channel.v1.IReportValue>|null} [values] Row values
                         */
    
                        /**
                         * Constructs a new Row.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Row.
                         * @implements IRow
                         * @constructor
                         * @param {google.cloud.channel.v1.IRow=} [properties] Properties to set
                         */
                        function Row(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Row values.
                         * @member {Array.<google.cloud.channel.v1.IReportValue>} values
                         * @memberof google.cloud.channel.v1.Row
                         * @instance
                         */
                        Row.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new Row instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Row
                         * @static
                         * @param {google.cloud.channel.v1.IRow=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Row} Row instance
                         */
                        Row.create = function create(properties) {
                            return new Row(properties);
                        };
    
                        /**
                         * Encodes the specified Row message. Does not implicitly {@link google.cloud.channel.v1.Row.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Row
                         * @static
                         * @param {google.cloud.channel.v1.IRow} message Row message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Row.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    $root.google.cloud.channel.v1.ReportValue.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Row message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Row.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Row
                         * @static
                         * @param {google.cloud.channel.v1.IRow} message Row message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Row.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Row message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Row
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Row} Row
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Row.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Row();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push($root.google.cloud.channel.v1.ReportValue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Row message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Row
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Row} Row
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Row.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Row message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Row
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Row.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.ReportValue.verify(message.values[i]);
                                    if (error)
                                        return "values." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Row message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Row
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Row} Row
                         */
                        Row.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Row)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Row();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.channel.v1.Row.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i) {
                                    if (typeof object.values[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.Row.values: object expected");
                                    message.values[i] = $root.google.cloud.channel.v1.ReportValue.fromObject(object.values[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Row message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Row
                         * @static
                         * @param {google.cloud.channel.v1.Row} message Row
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Row.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = $root.google.cloud.channel.v1.ReportValue.toObject(message.values[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Row to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Row
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Row.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Row
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Row
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Row.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Row";
                        };
    
                        return Row;
                    })();
    
                    v1.ReportValue = (function() {
    
                        /**
                         * Properties of a ReportValue.
                         * @memberof google.cloud.channel.v1
                         * @interface IReportValue
                         * @property {string|null} [stringValue] ReportValue stringValue
                         * @property {number|Long|null} [intValue] ReportValue intValue
                         * @property {google.type.IDecimal|null} [decimalValue] ReportValue decimalValue
                         * @property {google.type.IMoney|null} [moneyValue] ReportValue moneyValue
                         * @property {google.type.IDate|null} [dateValue] ReportValue dateValue
                         * @property {google.type.IDateTime|null} [dateTimeValue] ReportValue dateTimeValue
                         */
    
                        /**
                         * Constructs a new ReportValue.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ReportValue.
                         * @implements IReportValue
                         * @constructor
                         * @param {google.cloud.channel.v1.IReportValue=} [properties] Properties to set
                         */
                        function ReportValue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReportValue stringValue.
                         * @member {string|null|undefined} stringValue
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @instance
                         */
                        ReportValue.prototype.stringValue = null;
    
                        /**
                         * ReportValue intValue.
                         * @member {number|Long|null|undefined} intValue
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @instance
                         */
                        ReportValue.prototype.intValue = null;
    
                        /**
                         * ReportValue decimalValue.
                         * @member {google.type.IDecimal|null|undefined} decimalValue
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @instance
                         */
                        ReportValue.prototype.decimalValue = null;
    
                        /**
                         * ReportValue moneyValue.
                         * @member {google.type.IMoney|null|undefined} moneyValue
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @instance
                         */
                        ReportValue.prototype.moneyValue = null;
    
                        /**
                         * ReportValue dateValue.
                         * @member {google.type.IDate|null|undefined} dateValue
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @instance
                         */
                        ReportValue.prototype.dateValue = null;
    
                        /**
                         * ReportValue dateTimeValue.
                         * @member {google.type.IDateTime|null|undefined} dateTimeValue
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @instance
                         */
                        ReportValue.prototype.dateTimeValue = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ReportValue value.
                         * @member {"stringValue"|"intValue"|"decimalValue"|"moneyValue"|"dateValue"|"dateTimeValue"|undefined} value
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @instance
                         */
                        Object.defineProperty(ReportValue.prototype, "value", {
                            get: $util.oneOfGetter($oneOfFields = ["stringValue", "intValue", "decimalValue", "moneyValue", "dateValue", "dateTimeValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ReportValue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @static
                         * @param {google.cloud.channel.v1.IReportValue=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ReportValue} ReportValue instance
                         */
                        ReportValue.create = function create(properties) {
                            return new ReportValue(properties);
                        };
    
                        /**
                         * Encodes the specified ReportValue message. Does not implicitly {@link google.cloud.channel.v1.ReportValue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @static
                         * @param {google.cloud.channel.v1.IReportValue} message ReportValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportValue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.stringValue);
                            if (message.intValue != null && Object.hasOwnProperty.call(message, "intValue"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.intValue);
                            if (message.decimalValue != null && Object.hasOwnProperty.call(message, "decimalValue"))
                                $root.google.type.Decimal.encode(message.decimalValue, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.moneyValue != null && Object.hasOwnProperty.call(message, "moneyValue"))
                                $root.google.type.Money.encode(message.moneyValue, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.dateValue != null && Object.hasOwnProperty.call(message, "dateValue"))
                                $root.google.type.Date.encode(message.dateValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.dateTimeValue != null && Object.hasOwnProperty.call(message, "dateTimeValue"))
                                $root.google.type.DateTime.encode(message.dateTimeValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReportValue message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ReportValue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @static
                         * @param {google.cloud.channel.v1.IReportValue} message ReportValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportValue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReportValue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ReportValue} ReportValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportValue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ReportValue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.stringValue = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.intValue = reader.int64();
                                        break;
                                    }
                                case 3: {
                                        message.decimalValue = $root.google.type.Decimal.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.moneyValue = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.dateValue = $root.google.type.Date.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.dateTimeValue = $root.google.type.DateTime.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReportValue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ReportValue} ReportValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportValue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReportValue message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReportValue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                                properties.value = 1;
                                if (!$util.isString(message.stringValue))
                                    return "stringValue: string expected";
                            }
                            if (message.intValue != null && message.hasOwnProperty("intValue")) {
                                if (properties.value === 1)
                                    return "value: multiple values";
                                properties.value = 1;
                                if (!$util.isInteger(message.intValue) && !(message.intValue && $util.isInteger(message.intValue.low) && $util.isInteger(message.intValue.high)))
                                    return "intValue: integer|Long expected";
                            }
                            if (message.decimalValue != null && message.hasOwnProperty("decimalValue")) {
                                if (properties.value === 1)
                                    return "value: multiple values";
                                properties.value = 1;
                                {
                                    var error = $root.google.type.Decimal.verify(message.decimalValue);
                                    if (error)
                                        return "decimalValue." + error;
                                }
                            }
                            if (message.moneyValue != null && message.hasOwnProperty("moneyValue")) {
                                if (properties.value === 1)
                                    return "value: multiple values";
                                properties.value = 1;
                                {
                                    var error = $root.google.type.Money.verify(message.moneyValue);
                                    if (error)
                                        return "moneyValue." + error;
                                }
                            }
                            if (message.dateValue != null && message.hasOwnProperty("dateValue")) {
                                if (properties.value === 1)
                                    return "value: multiple values";
                                properties.value = 1;
                                {
                                    var error = $root.google.type.Date.verify(message.dateValue);
                                    if (error)
                                        return "dateValue." + error;
                                }
                            }
                            if (message.dateTimeValue != null && message.hasOwnProperty("dateTimeValue")) {
                                if (properties.value === 1)
                                    return "value: multiple values";
                                properties.value = 1;
                                {
                                    var error = $root.google.type.DateTime.verify(message.dateTimeValue);
                                    if (error)
                                        return "dateTimeValue." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReportValue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ReportValue} ReportValue
                         */
                        ReportValue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ReportValue)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ReportValue();
                            if (object.stringValue != null)
                                message.stringValue = String(object.stringValue);
                            if (object.intValue != null)
                                if ($util.Long)
                                    (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;
                                else if (typeof object.intValue === "string")
                                    message.intValue = parseInt(object.intValue, 10);
                                else if (typeof object.intValue === "number")
                                    message.intValue = object.intValue;
                                else if (typeof object.intValue === "object")
                                    message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();
                            if (object.decimalValue != null) {
                                if (typeof object.decimalValue !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportValue.decimalValue: object expected");
                                message.decimalValue = $root.google.type.Decimal.fromObject(object.decimalValue);
                            }
                            if (object.moneyValue != null) {
                                if (typeof object.moneyValue !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportValue.moneyValue: object expected");
                                message.moneyValue = $root.google.type.Money.fromObject(object.moneyValue);
                            }
                            if (object.dateValue != null) {
                                if (typeof object.dateValue !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportValue.dateValue: object expected");
                                message.dateValue = $root.google.type.Date.fromObject(object.dateValue);
                            }
                            if (object.dateTimeValue != null) {
                                if (typeof object.dateTimeValue !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportValue.dateTimeValue: object expected");
                                message.dateTimeValue = $root.google.type.DateTime.fromObject(object.dateTimeValue);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReportValue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @static
                         * @param {google.cloud.channel.v1.ReportValue} message ReportValue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReportValue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                                object.stringValue = message.stringValue;
                                if (options.oneofs)
                                    object.value = "stringValue";
                            }
                            if (message.intValue != null && message.hasOwnProperty("intValue")) {
                                if (typeof message.intValue === "number")
                                    object.intValue = options.longs === String ? String(message.intValue) : message.intValue;
                                else
                                    object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;
                                if (options.oneofs)
                                    object.value = "intValue";
                            }
                            if (message.decimalValue != null && message.hasOwnProperty("decimalValue")) {
                                object.decimalValue = $root.google.type.Decimal.toObject(message.decimalValue, options);
                                if (options.oneofs)
                                    object.value = "decimalValue";
                            }
                            if (message.moneyValue != null && message.hasOwnProperty("moneyValue")) {
                                object.moneyValue = $root.google.type.Money.toObject(message.moneyValue, options);
                                if (options.oneofs)
                                    object.value = "moneyValue";
                            }
                            if (message.dateValue != null && message.hasOwnProperty("dateValue")) {
                                object.dateValue = $root.google.type.Date.toObject(message.dateValue, options);
                                if (options.oneofs)
                                    object.value = "dateValue";
                            }
                            if (message.dateTimeValue != null && message.hasOwnProperty("dateTimeValue")) {
                                object.dateTimeValue = $root.google.type.DateTime.toObject(message.dateTimeValue, options);
                                if (options.oneofs)
                                    object.value = "dateTimeValue";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ReportValue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReportValue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReportValue
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ReportValue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReportValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ReportValue";
                        };
    
                        return ReportValue;
                    })();
    
                    v1.ReportStatus = (function() {
    
                        /**
                         * Properties of a ReportStatus.
                         * @memberof google.cloud.channel.v1
                         * @interface IReportStatus
                         * @property {google.cloud.channel.v1.ReportStatus.State|null} [state] ReportStatus state
                         * @property {google.protobuf.ITimestamp|null} [startTime] ReportStatus startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] ReportStatus endTime
                         */
    
                        /**
                         * Constructs a new ReportStatus.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ReportStatus.
                         * @implements IReportStatus
                         * @constructor
                         * @param {google.cloud.channel.v1.IReportStatus=} [properties] Properties to set
                         */
                        function ReportStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReportStatus state.
                         * @member {google.cloud.channel.v1.ReportStatus.State} state
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @instance
                         */
                        ReportStatus.prototype.state = 0;
    
                        /**
                         * ReportStatus startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @instance
                         */
                        ReportStatus.prototype.startTime = null;
    
                        /**
                         * ReportStatus endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @instance
                         */
                        ReportStatus.prototype.endTime = null;
    
                        /**
                         * Creates a new ReportStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @static
                         * @param {google.cloud.channel.v1.IReportStatus=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ReportStatus} ReportStatus instance
                         */
                        ReportStatus.create = function create(properties) {
                            return new ReportStatus(properties);
                        };
    
                        /**
                         * Encodes the specified ReportStatus message. Does not implicitly {@link google.cloud.channel.v1.ReportStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @static
                         * @param {google.cloud.channel.v1.IReportStatus} message ReportStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReportStatus message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ReportStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @static
                         * @param {google.cloud.channel.v1.IReportStatus} message ReportStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReportStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ReportStatus} ReportStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ReportStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReportStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ReportStatus} ReportStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReportStatus message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReportStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReportStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ReportStatus} ReportStatus
                         */
                        ReportStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ReportStatus)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ReportStatus();
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "STARTED":
                            case 1:
                                message.state = 1;
                                break;
                            case "WRITING":
                            case 2:
                                message.state = 2;
                                break;
                            case "AVAILABLE":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportStatus.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ReportStatus.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReportStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @static
                         * @param {google.cloud.channel.v1.ReportStatus} message ReportStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReportStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.startTime = null;
                                object.endTime = null;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.channel.v1.ReportStatus.State[message.state] === undefined ? message.state : $root.google.cloud.channel.v1.ReportStatus.State[message.state] : message.state;
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this ReportStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReportStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReportStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ReportStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReportStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ReportStatus";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.channel.v1.ReportStatus.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} STARTED=1 STARTED value
                         * @property {number} WRITING=2 WRITING value
                         * @property {number} AVAILABLE=3 AVAILABLE value
                         * @property {number} FAILED=4 FAILED value
                         */
                        ReportStatus.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STARTED"] = 1;
                            values[valuesById[2] = "WRITING"] = 2;
                            values[valuesById[3] = "AVAILABLE"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            return values;
                        })();
    
                        return ReportStatus;
                    })();
    
                    v1.Report = (function() {
    
                        /**
                         * Properties of a Report.
                         * @memberof google.cloud.channel.v1
                         * @interface IReport
                         * @property {string|null} [name] Report name
                         * @property {string|null} [displayName] Report displayName
                         * @property {Array.<google.cloud.channel.v1.IColumn>|null} [columns] Report columns
                         * @property {string|null} [description] Report description
                         */
    
                        /**
                         * Constructs a new Report.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a Report.
                         * @implements IReport
                         * @constructor
                         * @param {google.cloud.channel.v1.IReport=} [properties] Properties to set
                         */
                        function Report(properties) {
                            this.columns = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Report name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.Report
                         * @instance
                         */
                        Report.prototype.name = "";
    
                        /**
                         * Report displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.channel.v1.Report
                         * @instance
                         */
                        Report.prototype.displayName = "";
    
                        /**
                         * Report columns.
                         * @member {Array.<google.cloud.channel.v1.IColumn>} columns
                         * @memberof google.cloud.channel.v1.Report
                         * @instance
                         */
                        Report.prototype.columns = $util.emptyArray;
    
                        /**
                         * Report description.
                         * @member {string} description
                         * @memberof google.cloud.channel.v1.Report
                         * @instance
                         */
                        Report.prototype.description = "";
    
                        /**
                         * Creates a new Report instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.Report
                         * @static
                         * @param {google.cloud.channel.v1.IReport=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.Report} Report instance
                         */
                        Report.create = function create(properties) {
                            return new Report(properties);
                        };
    
                        /**
                         * Encodes the specified Report message. Does not implicitly {@link google.cloud.channel.v1.Report.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.Report
                         * @static
                         * @param {google.cloud.channel.v1.IReport} message Report message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Report.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.columns != null && message.columns.length)
                                for (var i = 0; i < message.columns.length; ++i)
                                    $root.google.cloud.channel.v1.Column.encode(message.columns[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Report message, length delimited. Does not implicitly {@link google.cloud.channel.v1.Report.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.Report
                         * @static
                         * @param {google.cloud.channel.v1.IReport} message Report message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Report.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Report message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.Report
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.Report} Report
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Report.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.Report();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.columns && message.columns.length))
                                            message.columns = [];
                                        message.columns.push($root.google.cloud.channel.v1.Column.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.description = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Report message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.Report
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.Report} Report
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Report.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Report message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.Report
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Report.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.columns != null && message.hasOwnProperty("columns")) {
                                if (!Array.isArray(message.columns))
                                    return "columns: array expected";
                                for (var i = 0; i < message.columns.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Column.verify(message.columns[i]);
                                    if (error)
                                        return "columns." + error;
                                }
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Report message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.Report
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.Report} Report
                         */
                        Report.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.Report)
                                return object;
                            var message = new $root.google.cloud.channel.v1.Report();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.columns) {
                                if (!Array.isArray(object.columns))
                                    throw TypeError(".google.cloud.channel.v1.Report.columns: array expected");
                                message.columns = [];
                                for (var i = 0; i < object.columns.length; ++i) {
                                    if (typeof object.columns[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.Report.columns: object expected");
                                    message.columns[i] = $root.google.cloud.channel.v1.Column.fromObject(object.columns[i]);
                                }
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Report message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.Report
                         * @static
                         * @param {google.cloud.channel.v1.Report} message Report
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Report.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.columns = [];
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.description = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.columns && message.columns.length) {
                                object.columns = [];
                                for (var j = 0; j < message.columns.length; ++j)
                                    object.columns[j] = $root.google.cloud.channel.v1.Column.toObject(message.columns[j], options);
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            return object;
                        };
    
                        /**
                         * Converts this Report to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.Report
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Report.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Report
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.Report
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Report.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.Report";
                        };
    
                        return Report;
                    })();
    
                    /**
                     * RebillingBasis enum.
                     * @name google.cloud.channel.v1.RebillingBasis
                     * @enum {number}
                     * @property {number} REBILLING_BASIS_UNSPECIFIED=0 REBILLING_BASIS_UNSPECIFIED value
                     * @property {number} COST_AT_LIST=1 COST_AT_LIST value
                     * @property {number} DIRECT_CUSTOMER_COST=2 DIRECT_CUSTOMER_COST value
                     */
                    v1.RebillingBasis = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "REBILLING_BASIS_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "COST_AT_LIST"] = 1;
                        values[valuesById[2] = "DIRECT_CUSTOMER_COST"] = 2;
                        return values;
                    })();
    
                    v1.CustomerRepricingConfig = (function() {
    
                        /**
                         * Properties of a CustomerRepricingConfig.
                         * @memberof google.cloud.channel.v1
                         * @interface ICustomerRepricingConfig
                         * @property {string|null} [name] CustomerRepricingConfig name
                         * @property {google.cloud.channel.v1.IRepricingConfig|null} [repricingConfig] CustomerRepricingConfig repricingConfig
                         * @property {google.protobuf.ITimestamp|null} [updateTime] CustomerRepricingConfig updateTime
                         */
    
                        /**
                         * Constructs a new CustomerRepricingConfig.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CustomerRepricingConfig.
                         * @implements ICustomerRepricingConfig
                         * @constructor
                         * @param {google.cloud.channel.v1.ICustomerRepricingConfig=} [properties] Properties to set
                         */
                        function CustomerRepricingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CustomerRepricingConfig name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @instance
                         */
                        CustomerRepricingConfig.prototype.name = "";
    
                        /**
                         * CustomerRepricingConfig repricingConfig.
                         * @member {google.cloud.channel.v1.IRepricingConfig|null|undefined} repricingConfig
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @instance
                         */
                        CustomerRepricingConfig.prototype.repricingConfig = null;
    
                        /**
                         * CustomerRepricingConfig updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @instance
                         */
                        CustomerRepricingConfig.prototype.updateTime = null;
    
                        /**
                         * Creates a new CustomerRepricingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.ICustomerRepricingConfig=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CustomerRepricingConfig} CustomerRepricingConfig instance
                         */
                        CustomerRepricingConfig.create = function create(properties) {
                            return new CustomerRepricingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified CustomerRepricingConfig message. Does not implicitly {@link google.cloud.channel.v1.CustomerRepricingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.ICustomerRepricingConfig} message CustomerRepricingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomerRepricingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.repricingConfig != null && Object.hasOwnProperty.call(message, "repricingConfig"))
                                $root.google.cloud.channel.v1.RepricingConfig.encode(message.repricingConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CustomerRepricingConfig message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CustomerRepricingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.ICustomerRepricingConfig} message CustomerRepricingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomerRepricingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CustomerRepricingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CustomerRepricingConfig} CustomerRepricingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomerRepricingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CustomerRepricingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.repricingConfig = $root.google.cloud.channel.v1.RepricingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CustomerRepricingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CustomerRepricingConfig} CustomerRepricingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomerRepricingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CustomerRepricingConfig message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CustomerRepricingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.repricingConfig != null && message.hasOwnProperty("repricingConfig")) {
                                var error = $root.google.cloud.channel.v1.RepricingConfig.verify(message.repricingConfig);
                                if (error)
                                    return "repricingConfig." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CustomerRepricingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CustomerRepricingConfig} CustomerRepricingConfig
                         */
                        CustomerRepricingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CustomerRepricingConfig)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CustomerRepricingConfig();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.repricingConfig != null) {
                                if (typeof object.repricingConfig !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CustomerRepricingConfig.repricingConfig: object expected");
                                message.repricingConfig = $root.google.cloud.channel.v1.RepricingConfig.fromObject(object.repricingConfig);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CustomerRepricingConfig.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CustomerRepricingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.CustomerRepricingConfig} message CustomerRepricingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CustomerRepricingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.repricingConfig = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.repricingConfig != null && message.hasOwnProperty("repricingConfig"))
                                object.repricingConfig = $root.google.cloud.channel.v1.RepricingConfig.toObject(message.repricingConfig, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this CustomerRepricingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CustomerRepricingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CustomerRepricingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CustomerRepricingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CustomerRepricingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CustomerRepricingConfig";
                        };
    
                        return CustomerRepricingConfig;
                    })();
    
                    v1.ChannelPartnerRepricingConfig = (function() {
    
                        /**
                         * Properties of a ChannelPartnerRepricingConfig.
                         * @memberof google.cloud.channel.v1
                         * @interface IChannelPartnerRepricingConfig
                         * @property {string|null} [name] ChannelPartnerRepricingConfig name
                         * @property {google.cloud.channel.v1.IRepricingConfig|null} [repricingConfig] ChannelPartnerRepricingConfig repricingConfig
                         * @property {google.protobuf.ITimestamp|null} [updateTime] ChannelPartnerRepricingConfig updateTime
                         */
    
                        /**
                         * Constructs a new ChannelPartnerRepricingConfig.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ChannelPartnerRepricingConfig.
                         * @implements IChannelPartnerRepricingConfig
                         * @constructor
                         * @param {google.cloud.channel.v1.IChannelPartnerRepricingConfig=} [properties] Properties to set
                         */
                        function ChannelPartnerRepricingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ChannelPartnerRepricingConfig name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @instance
                         */
                        ChannelPartnerRepricingConfig.prototype.name = "";
    
                        /**
                         * ChannelPartnerRepricingConfig repricingConfig.
                         * @member {google.cloud.channel.v1.IRepricingConfig|null|undefined} repricingConfig
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @instance
                         */
                        ChannelPartnerRepricingConfig.prototype.repricingConfig = null;
    
                        /**
                         * ChannelPartnerRepricingConfig updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @instance
                         */
                        ChannelPartnerRepricingConfig.prototype.updateTime = null;
    
                        /**
                         * Creates a new ChannelPartnerRepricingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.IChannelPartnerRepricingConfig=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ChannelPartnerRepricingConfig} ChannelPartnerRepricingConfig instance
                         */
                        ChannelPartnerRepricingConfig.create = function create(properties) {
                            return new ChannelPartnerRepricingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ChannelPartnerRepricingConfig message. Does not implicitly {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.IChannelPartnerRepricingConfig} message ChannelPartnerRepricingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChannelPartnerRepricingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.repricingConfig != null && Object.hasOwnProperty.call(message, "repricingConfig"))
                                $root.google.cloud.channel.v1.RepricingConfig.encode(message.repricingConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ChannelPartnerRepricingConfig message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.IChannelPartnerRepricingConfig} message ChannelPartnerRepricingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChannelPartnerRepricingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ChannelPartnerRepricingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ChannelPartnerRepricingConfig} ChannelPartnerRepricingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChannelPartnerRepricingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.repricingConfig = $root.google.cloud.channel.v1.RepricingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ChannelPartnerRepricingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ChannelPartnerRepricingConfig} ChannelPartnerRepricingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChannelPartnerRepricingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ChannelPartnerRepricingConfig message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ChannelPartnerRepricingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.repricingConfig != null && message.hasOwnProperty("repricingConfig")) {
                                var error = $root.google.cloud.channel.v1.RepricingConfig.verify(message.repricingConfig);
                                if (error)
                                    return "repricingConfig." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ChannelPartnerRepricingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ChannelPartnerRepricingConfig} ChannelPartnerRepricingConfig
                         */
                        ChannelPartnerRepricingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.repricingConfig != null) {
                                if (typeof object.repricingConfig !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ChannelPartnerRepricingConfig.repricingConfig: object expected");
                                message.repricingConfig = $root.google.cloud.channel.v1.RepricingConfig.fromObject(object.repricingConfig);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ChannelPartnerRepricingConfig.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ChannelPartnerRepricingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.ChannelPartnerRepricingConfig} message ChannelPartnerRepricingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ChannelPartnerRepricingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.repricingConfig = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.repricingConfig != null && message.hasOwnProperty("repricingConfig"))
                                object.repricingConfig = $root.google.cloud.channel.v1.RepricingConfig.toObject(message.repricingConfig, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this ChannelPartnerRepricingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ChannelPartnerRepricingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ChannelPartnerRepricingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ChannelPartnerRepricingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ChannelPartnerRepricingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ChannelPartnerRepricingConfig";
                        };
    
                        return ChannelPartnerRepricingConfig;
                    })();
    
                    v1.RepricingConfig = (function() {
    
                        /**
                         * Properties of a RepricingConfig.
                         * @memberof google.cloud.channel.v1
                         * @interface IRepricingConfig
                         * @property {google.cloud.channel.v1.RepricingConfig.IEntitlementGranularity|null} [entitlementGranularity] RepricingConfig entitlementGranularity
                         * @property {google.cloud.channel.v1.RepricingConfig.IChannelPartnerGranularity|null} [channelPartnerGranularity] RepricingConfig channelPartnerGranularity
                         * @property {google.type.IDate|null} [effectiveInvoiceMonth] RepricingConfig effectiveInvoiceMonth
                         * @property {google.cloud.channel.v1.IRepricingAdjustment|null} [adjustment] RepricingConfig adjustment
                         * @property {google.cloud.channel.v1.RebillingBasis|null} [rebillingBasis] RepricingConfig rebillingBasis
                         * @property {Array.<google.cloud.channel.v1.IConditionalOverride>|null} [conditionalOverrides] RepricingConfig conditionalOverrides
                         */
    
                        /**
                         * Constructs a new RepricingConfig.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a RepricingConfig.
                         * @implements IRepricingConfig
                         * @constructor
                         * @param {google.cloud.channel.v1.IRepricingConfig=} [properties] Properties to set
                         */
                        function RepricingConfig(properties) {
                            this.conditionalOverrides = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RepricingConfig entitlementGranularity.
                         * @member {google.cloud.channel.v1.RepricingConfig.IEntitlementGranularity|null|undefined} entitlementGranularity
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @instance
                         */
                        RepricingConfig.prototype.entitlementGranularity = null;
    
                        /**
                         * RepricingConfig channelPartnerGranularity.
                         * @member {google.cloud.channel.v1.RepricingConfig.IChannelPartnerGranularity|null|undefined} channelPartnerGranularity
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @instance
                         */
                        RepricingConfig.prototype.channelPartnerGranularity = null;
    
                        /**
                         * RepricingConfig effectiveInvoiceMonth.
                         * @member {google.type.IDate|null|undefined} effectiveInvoiceMonth
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @instance
                         */
                        RepricingConfig.prototype.effectiveInvoiceMonth = null;
    
                        /**
                         * RepricingConfig adjustment.
                         * @member {google.cloud.channel.v1.IRepricingAdjustment|null|undefined} adjustment
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @instance
                         */
                        RepricingConfig.prototype.adjustment = null;
    
                        /**
                         * RepricingConfig rebillingBasis.
                         * @member {google.cloud.channel.v1.RebillingBasis} rebillingBasis
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @instance
                         */
                        RepricingConfig.prototype.rebillingBasis = 0;
    
                        /**
                         * RepricingConfig conditionalOverrides.
                         * @member {Array.<google.cloud.channel.v1.IConditionalOverride>} conditionalOverrides
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @instance
                         */
                        RepricingConfig.prototype.conditionalOverrides = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RepricingConfig granularity.
                         * @member {"entitlementGranularity"|"channelPartnerGranularity"|undefined} granularity
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @instance
                         */
                        Object.defineProperty(RepricingConfig.prototype, "granularity", {
                            get: $util.oneOfGetter($oneOfFields = ["entitlementGranularity", "channelPartnerGranularity"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RepricingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.IRepricingConfig=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.RepricingConfig} RepricingConfig instance
                         */
                        RepricingConfig.create = function create(properties) {
                            return new RepricingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RepricingConfig message. Does not implicitly {@link google.cloud.channel.v1.RepricingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.IRepricingConfig} message RepricingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepricingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.effectiveInvoiceMonth != null && Object.hasOwnProperty.call(message, "effectiveInvoiceMonth"))
                                $root.google.type.Date.encode(message.effectiveInvoiceMonth, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.adjustment != null && Object.hasOwnProperty.call(message, "adjustment"))
                                $root.google.cloud.channel.v1.RepricingAdjustment.encode(message.adjustment, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.rebillingBasis != null && Object.hasOwnProperty.call(message, "rebillingBasis"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.rebillingBasis);
                            if (message.entitlementGranularity != null && Object.hasOwnProperty.call(message, "entitlementGranularity"))
                                $root.google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.encode(message.entitlementGranularity, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.channelPartnerGranularity != null && Object.hasOwnProperty.call(message, "channelPartnerGranularity"))
                                $root.google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity.encode(message.channelPartnerGranularity, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.conditionalOverrides != null && message.conditionalOverrides.length)
                                for (var i = 0; i < message.conditionalOverrides.length; ++i)
                                    $root.google.cloud.channel.v1.ConditionalOverride.encode(message.conditionalOverrides[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RepricingConfig message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RepricingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.IRepricingConfig} message RepricingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepricingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RepricingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.RepricingConfig} RepricingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepricingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RepricingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.entitlementGranularity = $root.google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.channelPartnerGranularity = $root.google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.effectiveInvoiceMonth = $root.google.type.Date.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.adjustment = $root.google.cloud.channel.v1.RepricingAdjustment.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.rebillingBasis = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.conditionalOverrides && message.conditionalOverrides.length))
                                            message.conditionalOverrides = [];
                                        message.conditionalOverrides.push($root.google.cloud.channel.v1.ConditionalOverride.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RepricingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.RepricingConfig} RepricingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepricingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RepricingConfig message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RepricingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.entitlementGranularity != null && message.hasOwnProperty("entitlementGranularity")) {
                                properties.granularity = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.verify(message.entitlementGranularity);
                                    if (error)
                                        return "entitlementGranularity." + error;
                                }
                            }
                            if (message.channelPartnerGranularity != null && message.hasOwnProperty("channelPartnerGranularity")) {
                                if (properties.granularity === 1)
                                    return "granularity: multiple values";
                                properties.granularity = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity.verify(message.channelPartnerGranularity);
                                    if (error)
                                        return "channelPartnerGranularity." + error;
                                }
                            }
                            if (message.effectiveInvoiceMonth != null && message.hasOwnProperty("effectiveInvoiceMonth")) {
                                var error = $root.google.type.Date.verify(message.effectiveInvoiceMonth);
                                if (error)
                                    return "effectiveInvoiceMonth." + error;
                            }
                            if (message.adjustment != null && message.hasOwnProperty("adjustment")) {
                                var error = $root.google.cloud.channel.v1.RepricingAdjustment.verify(message.adjustment);
                                if (error)
                                    return "adjustment." + error;
                            }
                            if (message.rebillingBasis != null && message.hasOwnProperty("rebillingBasis"))
                                switch (message.rebillingBasis) {
                                default:
                                    return "rebillingBasis: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.conditionalOverrides != null && message.hasOwnProperty("conditionalOverrides")) {
                                if (!Array.isArray(message.conditionalOverrides))
                                    return "conditionalOverrides: array expected";
                                for (var i = 0; i < message.conditionalOverrides.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.ConditionalOverride.verify(message.conditionalOverrides[i]);
                                    if (error)
                                        return "conditionalOverrides." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RepricingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.RepricingConfig} RepricingConfig
                         */
                        RepricingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.RepricingConfig)
                                return object;
                            var message = new $root.google.cloud.channel.v1.RepricingConfig();
                            if (object.entitlementGranularity != null) {
                                if (typeof object.entitlementGranularity !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RepricingConfig.entitlementGranularity: object expected");
                                message.entitlementGranularity = $root.google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.fromObject(object.entitlementGranularity);
                            }
                            if (object.channelPartnerGranularity != null) {
                                if (typeof object.channelPartnerGranularity !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RepricingConfig.channelPartnerGranularity: object expected");
                                message.channelPartnerGranularity = $root.google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity.fromObject(object.channelPartnerGranularity);
                            }
                            if (object.effectiveInvoiceMonth != null) {
                                if (typeof object.effectiveInvoiceMonth !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RepricingConfig.effectiveInvoiceMonth: object expected");
                                message.effectiveInvoiceMonth = $root.google.type.Date.fromObject(object.effectiveInvoiceMonth);
                            }
                            if (object.adjustment != null) {
                                if (typeof object.adjustment !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RepricingConfig.adjustment: object expected");
                                message.adjustment = $root.google.cloud.channel.v1.RepricingAdjustment.fromObject(object.adjustment);
                            }
                            switch (object.rebillingBasis) {
                            default:
                                if (typeof object.rebillingBasis === "number") {
                                    message.rebillingBasis = object.rebillingBasis;
                                    break;
                                }
                                break;
                            case "REBILLING_BASIS_UNSPECIFIED":
                            case 0:
                                message.rebillingBasis = 0;
                                break;
                            case "COST_AT_LIST":
                            case 1:
                                message.rebillingBasis = 1;
                                break;
                            case "DIRECT_CUSTOMER_COST":
                            case 2:
                                message.rebillingBasis = 2;
                                break;
                            }
                            if (object.conditionalOverrides) {
                                if (!Array.isArray(object.conditionalOverrides))
                                    throw TypeError(".google.cloud.channel.v1.RepricingConfig.conditionalOverrides: array expected");
                                message.conditionalOverrides = [];
                                for (var i = 0; i < object.conditionalOverrides.length; ++i) {
                                    if (typeof object.conditionalOverrides[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.RepricingConfig.conditionalOverrides: object expected");
                                    message.conditionalOverrides[i] = $root.google.cloud.channel.v1.ConditionalOverride.fromObject(object.conditionalOverrides[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RepricingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @static
                         * @param {google.cloud.channel.v1.RepricingConfig} message RepricingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RepricingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.conditionalOverrides = [];
                            if (options.defaults) {
                                object.effectiveInvoiceMonth = null;
                                object.adjustment = null;
                                object.rebillingBasis = options.enums === String ? "REBILLING_BASIS_UNSPECIFIED" : 0;
                            }
                            if (message.effectiveInvoiceMonth != null && message.hasOwnProperty("effectiveInvoiceMonth"))
                                object.effectiveInvoiceMonth = $root.google.type.Date.toObject(message.effectiveInvoiceMonth, options);
                            if (message.adjustment != null && message.hasOwnProperty("adjustment"))
                                object.adjustment = $root.google.cloud.channel.v1.RepricingAdjustment.toObject(message.adjustment, options);
                            if (message.rebillingBasis != null && message.hasOwnProperty("rebillingBasis"))
                                object.rebillingBasis = options.enums === String ? $root.google.cloud.channel.v1.RebillingBasis[message.rebillingBasis] === undefined ? message.rebillingBasis : $root.google.cloud.channel.v1.RebillingBasis[message.rebillingBasis] : message.rebillingBasis;
                            if (message.entitlementGranularity != null && message.hasOwnProperty("entitlementGranularity")) {
                                object.entitlementGranularity = $root.google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.toObject(message.entitlementGranularity, options);
                                if (options.oneofs)
                                    object.granularity = "entitlementGranularity";
                            }
                            if (message.channelPartnerGranularity != null && message.hasOwnProperty("channelPartnerGranularity")) {
                                object.channelPartnerGranularity = $root.google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity.toObject(message.channelPartnerGranularity, options);
                                if (options.oneofs)
                                    object.granularity = "channelPartnerGranularity";
                            }
                            if (message.conditionalOverrides && message.conditionalOverrides.length) {
                                object.conditionalOverrides = [];
                                for (var j = 0; j < message.conditionalOverrides.length; ++j)
                                    object.conditionalOverrides[j] = $root.google.cloud.channel.v1.ConditionalOverride.toObject(message.conditionalOverrides[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RepricingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RepricingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RepricingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.RepricingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RepricingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.RepricingConfig";
                        };
    
                        RepricingConfig.EntitlementGranularity = (function() {
    
                            /**
                             * Properties of an EntitlementGranularity.
                             * @memberof google.cloud.channel.v1.RepricingConfig
                             * @interface IEntitlementGranularity
                             * @property {string|null} [entitlement] EntitlementGranularity entitlement
                             */
    
                            /**
                             * Constructs a new EntitlementGranularity.
                             * @memberof google.cloud.channel.v1.RepricingConfig
                             * @classdesc Represents an EntitlementGranularity.
                             * @implements IEntitlementGranularity
                             * @constructor
                             * @param {google.cloud.channel.v1.RepricingConfig.IEntitlementGranularity=} [properties] Properties to set
                             */
                            function EntitlementGranularity(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * EntitlementGranularity entitlement.
                             * @member {string} entitlement
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @instance
                             */
                            EntitlementGranularity.prototype.entitlement = "";
    
                            /**
                             * Creates a new EntitlementGranularity instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @static
                             * @param {google.cloud.channel.v1.RepricingConfig.IEntitlementGranularity=} [properties] Properties to set
                             * @returns {google.cloud.channel.v1.RepricingConfig.EntitlementGranularity} EntitlementGranularity instance
                             */
                            EntitlementGranularity.create = function create(properties) {
                                return new EntitlementGranularity(properties);
                            };
    
                            /**
                             * Encodes the specified EntitlementGranularity message. Does not implicitly {@link google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @static
                             * @param {google.cloud.channel.v1.RepricingConfig.IEntitlementGranularity} message EntitlementGranularity message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EntitlementGranularity.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.entitlement != null && Object.hasOwnProperty.call(message, "entitlement"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.entitlement);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified EntitlementGranularity message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @static
                             * @param {google.cloud.channel.v1.RepricingConfig.IEntitlementGranularity} message EntitlementGranularity message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EntitlementGranularity.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an EntitlementGranularity message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.channel.v1.RepricingConfig.EntitlementGranularity} EntitlementGranularity
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EntitlementGranularity.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RepricingConfig.EntitlementGranularity();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.entitlement = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an EntitlementGranularity message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.channel.v1.RepricingConfig.EntitlementGranularity} EntitlementGranularity
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EntitlementGranularity.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an EntitlementGranularity message.
                             * @function verify
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            EntitlementGranularity.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                    if (!$util.isString(message.entitlement))
                                        return "entitlement: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an EntitlementGranularity message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.channel.v1.RepricingConfig.EntitlementGranularity} EntitlementGranularity
                             */
                            EntitlementGranularity.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.channel.v1.RepricingConfig.EntitlementGranularity)
                                    return object;
                                var message = new $root.google.cloud.channel.v1.RepricingConfig.EntitlementGranularity();
                                if (object.entitlement != null)
                                    message.entitlement = String(object.entitlement);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an EntitlementGranularity message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @static
                             * @param {google.cloud.channel.v1.RepricingConfig.EntitlementGranularity} message EntitlementGranularity
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            EntitlementGranularity.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.entitlement = "";
                                if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                    object.entitlement = message.entitlement;
                                return object;
                            };
    
                            /**
                             * Converts this EntitlementGranularity to JSON.
                             * @function toJSON
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            EntitlementGranularity.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for EntitlementGranularity
                             * @function getTypeUrl
                             * @memberof google.cloud.channel.v1.RepricingConfig.EntitlementGranularity
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            EntitlementGranularity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.channel.v1.RepricingConfig.EntitlementGranularity";
                            };
    
                            return EntitlementGranularity;
                        })();
    
                        RepricingConfig.ChannelPartnerGranularity = (function() {
    
                            /**
                             * Properties of a ChannelPartnerGranularity.
                             * @memberof google.cloud.channel.v1.RepricingConfig
                             * @interface IChannelPartnerGranularity
                             */
    
                            /**
                             * Constructs a new ChannelPartnerGranularity.
                             * @memberof google.cloud.channel.v1.RepricingConfig
                             * @classdesc Represents a ChannelPartnerGranularity.
                             * @implements IChannelPartnerGranularity
                             * @constructor
                             * @param {google.cloud.channel.v1.RepricingConfig.IChannelPartnerGranularity=} [properties] Properties to set
                             */
                            function ChannelPartnerGranularity(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Creates a new ChannelPartnerGranularity instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @static
                             * @param {google.cloud.channel.v1.RepricingConfig.IChannelPartnerGranularity=} [properties] Properties to set
                             * @returns {google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity} ChannelPartnerGranularity instance
                             */
                            ChannelPartnerGranularity.create = function create(properties) {
                                return new ChannelPartnerGranularity(properties);
                            };
    
                            /**
                             * Encodes the specified ChannelPartnerGranularity message. Does not implicitly {@link google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @static
                             * @param {google.cloud.channel.v1.RepricingConfig.IChannelPartnerGranularity} message ChannelPartnerGranularity message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ChannelPartnerGranularity.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ChannelPartnerGranularity message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @static
                             * @param {google.cloud.channel.v1.RepricingConfig.IChannelPartnerGranularity} message ChannelPartnerGranularity message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ChannelPartnerGranularity.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ChannelPartnerGranularity message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity} ChannelPartnerGranularity
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ChannelPartnerGranularity.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ChannelPartnerGranularity message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity} ChannelPartnerGranularity
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ChannelPartnerGranularity.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ChannelPartnerGranularity message.
                             * @function verify
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ChannelPartnerGranularity.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                return null;
                            };
    
                            /**
                             * Creates a ChannelPartnerGranularity message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity} ChannelPartnerGranularity
                             */
                            ChannelPartnerGranularity.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity)
                                    return object;
                                return new $root.google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity();
                            };
    
                            /**
                             * Creates a plain object from a ChannelPartnerGranularity message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @static
                             * @param {google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity} message ChannelPartnerGranularity
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ChannelPartnerGranularity.toObject = function toObject() {
                                return {};
                            };
    
                            /**
                             * Converts this ChannelPartnerGranularity to JSON.
                             * @function toJSON
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ChannelPartnerGranularity.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ChannelPartnerGranularity
                             * @function getTypeUrl
                             * @memberof google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ChannelPartnerGranularity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.channel.v1.RepricingConfig.ChannelPartnerGranularity";
                            };
    
                            return ChannelPartnerGranularity;
                        })();
    
                        return RepricingConfig;
                    })();
    
                    v1.RepricingAdjustment = (function() {
    
                        /**
                         * Properties of a RepricingAdjustment.
                         * @memberof google.cloud.channel.v1
                         * @interface IRepricingAdjustment
                         * @property {google.cloud.channel.v1.IPercentageAdjustment|null} [percentageAdjustment] RepricingAdjustment percentageAdjustment
                         */
    
                        /**
                         * Constructs a new RepricingAdjustment.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a RepricingAdjustment.
                         * @implements IRepricingAdjustment
                         * @constructor
                         * @param {google.cloud.channel.v1.IRepricingAdjustment=} [properties] Properties to set
                         */
                        function RepricingAdjustment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RepricingAdjustment percentageAdjustment.
                         * @member {google.cloud.channel.v1.IPercentageAdjustment|null|undefined} percentageAdjustment
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @instance
                         */
                        RepricingAdjustment.prototype.percentageAdjustment = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RepricingAdjustment adjustment.
                         * @member {"percentageAdjustment"|undefined} adjustment
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @instance
                         */
                        Object.defineProperty(RepricingAdjustment.prototype, "adjustment", {
                            get: $util.oneOfGetter($oneOfFields = ["percentageAdjustment"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RepricingAdjustment instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @static
                         * @param {google.cloud.channel.v1.IRepricingAdjustment=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.RepricingAdjustment} RepricingAdjustment instance
                         */
                        RepricingAdjustment.create = function create(properties) {
                            return new RepricingAdjustment(properties);
                        };
    
                        /**
                         * Encodes the specified RepricingAdjustment message. Does not implicitly {@link google.cloud.channel.v1.RepricingAdjustment.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @static
                         * @param {google.cloud.channel.v1.IRepricingAdjustment} message RepricingAdjustment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepricingAdjustment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.percentageAdjustment != null && Object.hasOwnProperty.call(message, "percentageAdjustment"))
                                $root.google.cloud.channel.v1.PercentageAdjustment.encode(message.percentageAdjustment, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RepricingAdjustment message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RepricingAdjustment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @static
                         * @param {google.cloud.channel.v1.IRepricingAdjustment} message RepricingAdjustment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepricingAdjustment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RepricingAdjustment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.RepricingAdjustment} RepricingAdjustment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepricingAdjustment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RepricingAdjustment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.percentageAdjustment = $root.google.cloud.channel.v1.PercentageAdjustment.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RepricingAdjustment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.RepricingAdjustment} RepricingAdjustment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepricingAdjustment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RepricingAdjustment message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RepricingAdjustment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.percentageAdjustment != null && message.hasOwnProperty("percentageAdjustment")) {
                                properties.adjustment = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.PercentageAdjustment.verify(message.percentageAdjustment);
                                    if (error)
                                        return "percentageAdjustment." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RepricingAdjustment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.RepricingAdjustment} RepricingAdjustment
                         */
                        RepricingAdjustment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.RepricingAdjustment)
                                return object;
                            var message = new $root.google.cloud.channel.v1.RepricingAdjustment();
                            if (object.percentageAdjustment != null) {
                                if (typeof object.percentageAdjustment !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RepricingAdjustment.percentageAdjustment: object expected");
                                message.percentageAdjustment = $root.google.cloud.channel.v1.PercentageAdjustment.fromObject(object.percentageAdjustment);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RepricingAdjustment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @static
                         * @param {google.cloud.channel.v1.RepricingAdjustment} message RepricingAdjustment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RepricingAdjustment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.percentageAdjustment != null && message.hasOwnProperty("percentageAdjustment")) {
                                object.percentageAdjustment = $root.google.cloud.channel.v1.PercentageAdjustment.toObject(message.percentageAdjustment, options);
                                if (options.oneofs)
                                    object.adjustment = "percentageAdjustment";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RepricingAdjustment to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RepricingAdjustment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RepricingAdjustment
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.RepricingAdjustment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RepricingAdjustment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.RepricingAdjustment";
                        };
    
                        return RepricingAdjustment;
                    })();
    
                    v1.PercentageAdjustment = (function() {
    
                        /**
                         * Properties of a PercentageAdjustment.
                         * @memberof google.cloud.channel.v1
                         * @interface IPercentageAdjustment
                         * @property {google.type.IDecimal|null} [percentage] PercentageAdjustment percentage
                         */
    
                        /**
                         * Constructs a new PercentageAdjustment.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a PercentageAdjustment.
                         * @implements IPercentageAdjustment
                         * @constructor
                         * @param {google.cloud.channel.v1.IPercentageAdjustment=} [properties] Properties to set
                         */
                        function PercentageAdjustment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PercentageAdjustment percentage.
                         * @member {google.type.IDecimal|null|undefined} percentage
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @instance
                         */
                        PercentageAdjustment.prototype.percentage = null;
    
                        /**
                         * Creates a new PercentageAdjustment instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @static
                         * @param {google.cloud.channel.v1.IPercentageAdjustment=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.PercentageAdjustment} PercentageAdjustment instance
                         */
                        PercentageAdjustment.create = function create(properties) {
                            return new PercentageAdjustment(properties);
                        };
    
                        /**
                         * Encodes the specified PercentageAdjustment message. Does not implicitly {@link google.cloud.channel.v1.PercentageAdjustment.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @static
                         * @param {google.cloud.channel.v1.IPercentageAdjustment} message PercentageAdjustment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PercentageAdjustment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.percentage != null && Object.hasOwnProperty.call(message, "percentage"))
                                $root.google.type.Decimal.encode(message.percentage, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PercentageAdjustment message, length delimited. Does not implicitly {@link google.cloud.channel.v1.PercentageAdjustment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @static
                         * @param {google.cloud.channel.v1.IPercentageAdjustment} message PercentageAdjustment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PercentageAdjustment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PercentageAdjustment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.PercentageAdjustment} PercentageAdjustment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PercentageAdjustment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.PercentageAdjustment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.percentage = $root.google.type.Decimal.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PercentageAdjustment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.PercentageAdjustment} PercentageAdjustment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PercentageAdjustment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PercentageAdjustment message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PercentageAdjustment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.percentage != null && message.hasOwnProperty("percentage")) {
                                var error = $root.google.type.Decimal.verify(message.percentage);
                                if (error)
                                    return "percentage." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PercentageAdjustment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.PercentageAdjustment} PercentageAdjustment
                         */
                        PercentageAdjustment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.PercentageAdjustment)
                                return object;
                            var message = new $root.google.cloud.channel.v1.PercentageAdjustment();
                            if (object.percentage != null) {
                                if (typeof object.percentage !== "object")
                                    throw TypeError(".google.cloud.channel.v1.PercentageAdjustment.percentage: object expected");
                                message.percentage = $root.google.type.Decimal.fromObject(object.percentage);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PercentageAdjustment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @static
                         * @param {google.cloud.channel.v1.PercentageAdjustment} message PercentageAdjustment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PercentageAdjustment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.percentage = null;
                            if (message.percentage != null && message.hasOwnProperty("percentage"))
                                object.percentage = $root.google.type.Decimal.toObject(message.percentage, options);
                            return object;
                        };
    
                        /**
                         * Converts this PercentageAdjustment to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PercentageAdjustment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PercentageAdjustment
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.PercentageAdjustment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PercentageAdjustment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.PercentageAdjustment";
                        };
    
                        return PercentageAdjustment;
                    })();
    
                    v1.ConditionalOverride = (function() {
    
                        /**
                         * Properties of a ConditionalOverride.
                         * @memberof google.cloud.channel.v1
                         * @interface IConditionalOverride
                         * @property {google.cloud.channel.v1.IRepricingAdjustment|null} [adjustment] ConditionalOverride adjustment
                         * @property {google.cloud.channel.v1.RebillingBasis|null} [rebillingBasis] ConditionalOverride rebillingBasis
                         * @property {google.cloud.channel.v1.IRepricingCondition|null} [repricingCondition] ConditionalOverride repricingCondition
                         */
    
                        /**
                         * Constructs a new ConditionalOverride.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ConditionalOverride.
                         * @implements IConditionalOverride
                         * @constructor
                         * @param {google.cloud.channel.v1.IConditionalOverride=} [properties] Properties to set
                         */
                        function ConditionalOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConditionalOverride adjustment.
                         * @member {google.cloud.channel.v1.IRepricingAdjustment|null|undefined} adjustment
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @instance
                         */
                        ConditionalOverride.prototype.adjustment = null;
    
                        /**
                         * ConditionalOverride rebillingBasis.
                         * @member {google.cloud.channel.v1.RebillingBasis} rebillingBasis
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @instance
                         */
                        ConditionalOverride.prototype.rebillingBasis = 0;
    
                        /**
                         * ConditionalOverride repricingCondition.
                         * @member {google.cloud.channel.v1.IRepricingCondition|null|undefined} repricingCondition
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @instance
                         */
                        ConditionalOverride.prototype.repricingCondition = null;
    
                        /**
                         * Creates a new ConditionalOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @static
                         * @param {google.cloud.channel.v1.IConditionalOverride=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ConditionalOverride} ConditionalOverride instance
                         */
                        ConditionalOverride.create = function create(properties) {
                            return new ConditionalOverride(properties);
                        };
    
                        /**
                         * Encodes the specified ConditionalOverride message. Does not implicitly {@link google.cloud.channel.v1.ConditionalOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @static
                         * @param {google.cloud.channel.v1.IConditionalOverride} message ConditionalOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConditionalOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.adjustment != null && Object.hasOwnProperty.call(message, "adjustment"))
                                $root.google.cloud.channel.v1.RepricingAdjustment.encode(message.adjustment, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.rebillingBasis != null && Object.hasOwnProperty.call(message, "rebillingBasis"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.rebillingBasis);
                            if (message.repricingCondition != null && Object.hasOwnProperty.call(message, "repricingCondition"))
                                $root.google.cloud.channel.v1.RepricingCondition.encode(message.repricingCondition, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConditionalOverride message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ConditionalOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @static
                         * @param {google.cloud.channel.v1.IConditionalOverride} message ConditionalOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConditionalOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConditionalOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ConditionalOverride} ConditionalOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConditionalOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ConditionalOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.adjustment = $root.google.cloud.channel.v1.RepricingAdjustment.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.rebillingBasis = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.repricingCondition = $root.google.cloud.channel.v1.RepricingCondition.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConditionalOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ConditionalOverride} ConditionalOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConditionalOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConditionalOverride message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConditionalOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.adjustment != null && message.hasOwnProperty("adjustment")) {
                                var error = $root.google.cloud.channel.v1.RepricingAdjustment.verify(message.adjustment);
                                if (error)
                                    return "adjustment." + error;
                            }
                            if (message.rebillingBasis != null && message.hasOwnProperty("rebillingBasis"))
                                switch (message.rebillingBasis) {
                                default:
                                    return "rebillingBasis: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.repricingCondition != null && message.hasOwnProperty("repricingCondition")) {
                                var error = $root.google.cloud.channel.v1.RepricingCondition.verify(message.repricingCondition);
                                if (error)
                                    return "repricingCondition." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ConditionalOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ConditionalOverride} ConditionalOverride
                         */
                        ConditionalOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ConditionalOverride)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ConditionalOverride();
                            if (object.adjustment != null) {
                                if (typeof object.adjustment !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ConditionalOverride.adjustment: object expected");
                                message.adjustment = $root.google.cloud.channel.v1.RepricingAdjustment.fromObject(object.adjustment);
                            }
                            switch (object.rebillingBasis) {
                            default:
                                if (typeof object.rebillingBasis === "number") {
                                    message.rebillingBasis = object.rebillingBasis;
                                    break;
                                }
                                break;
                            case "REBILLING_BASIS_UNSPECIFIED":
                            case 0:
                                message.rebillingBasis = 0;
                                break;
                            case "COST_AT_LIST":
                            case 1:
                                message.rebillingBasis = 1;
                                break;
                            case "DIRECT_CUSTOMER_COST":
                            case 2:
                                message.rebillingBasis = 2;
                                break;
                            }
                            if (object.repricingCondition != null) {
                                if (typeof object.repricingCondition !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ConditionalOverride.repricingCondition: object expected");
                                message.repricingCondition = $root.google.cloud.channel.v1.RepricingCondition.fromObject(object.repricingCondition);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConditionalOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @static
                         * @param {google.cloud.channel.v1.ConditionalOverride} message ConditionalOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConditionalOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.adjustment = null;
                                object.rebillingBasis = options.enums === String ? "REBILLING_BASIS_UNSPECIFIED" : 0;
                                object.repricingCondition = null;
                            }
                            if (message.adjustment != null && message.hasOwnProperty("adjustment"))
                                object.adjustment = $root.google.cloud.channel.v1.RepricingAdjustment.toObject(message.adjustment, options);
                            if (message.rebillingBasis != null && message.hasOwnProperty("rebillingBasis"))
                                object.rebillingBasis = options.enums === String ? $root.google.cloud.channel.v1.RebillingBasis[message.rebillingBasis] === undefined ? message.rebillingBasis : $root.google.cloud.channel.v1.RebillingBasis[message.rebillingBasis] : message.rebillingBasis;
                            if (message.repricingCondition != null && message.hasOwnProperty("repricingCondition"))
                                object.repricingCondition = $root.google.cloud.channel.v1.RepricingCondition.toObject(message.repricingCondition, options);
                            return object;
                        };
    
                        /**
                         * Converts this ConditionalOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConditionalOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConditionalOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ConditionalOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConditionalOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ConditionalOverride";
                        };
    
                        return ConditionalOverride;
                    })();
    
                    v1.RepricingCondition = (function() {
    
                        /**
                         * Properties of a RepricingCondition.
                         * @memberof google.cloud.channel.v1
                         * @interface IRepricingCondition
                         * @property {google.cloud.channel.v1.ISkuGroupCondition|null} [skuGroupCondition] RepricingCondition skuGroupCondition
                         */
    
                        /**
                         * Constructs a new RepricingCondition.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a RepricingCondition.
                         * @implements IRepricingCondition
                         * @constructor
                         * @param {google.cloud.channel.v1.IRepricingCondition=} [properties] Properties to set
                         */
                        function RepricingCondition(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RepricingCondition skuGroupCondition.
                         * @member {google.cloud.channel.v1.ISkuGroupCondition|null|undefined} skuGroupCondition
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @instance
                         */
                        RepricingCondition.prototype.skuGroupCondition = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RepricingCondition condition.
                         * @member {"skuGroupCondition"|undefined} condition
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @instance
                         */
                        Object.defineProperty(RepricingCondition.prototype, "condition", {
                            get: $util.oneOfGetter($oneOfFields = ["skuGroupCondition"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RepricingCondition instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @static
                         * @param {google.cloud.channel.v1.IRepricingCondition=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.RepricingCondition} RepricingCondition instance
                         */
                        RepricingCondition.create = function create(properties) {
                            return new RepricingCondition(properties);
                        };
    
                        /**
                         * Encodes the specified RepricingCondition message. Does not implicitly {@link google.cloud.channel.v1.RepricingCondition.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @static
                         * @param {google.cloud.channel.v1.IRepricingCondition} message RepricingCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepricingCondition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.skuGroupCondition != null && Object.hasOwnProperty.call(message, "skuGroupCondition"))
                                $root.google.cloud.channel.v1.SkuGroupCondition.encode(message.skuGroupCondition, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RepricingCondition message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RepricingCondition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @static
                         * @param {google.cloud.channel.v1.IRepricingCondition} message RepricingCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepricingCondition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RepricingCondition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.RepricingCondition} RepricingCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepricingCondition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RepricingCondition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.skuGroupCondition = $root.google.cloud.channel.v1.SkuGroupCondition.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RepricingCondition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.RepricingCondition} RepricingCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepricingCondition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RepricingCondition message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RepricingCondition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.skuGroupCondition != null && message.hasOwnProperty("skuGroupCondition")) {
                                properties.condition = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.SkuGroupCondition.verify(message.skuGroupCondition);
                                    if (error)
                                        return "skuGroupCondition." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RepricingCondition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.RepricingCondition} RepricingCondition
                         */
                        RepricingCondition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.RepricingCondition)
                                return object;
                            var message = new $root.google.cloud.channel.v1.RepricingCondition();
                            if (object.skuGroupCondition != null) {
                                if (typeof object.skuGroupCondition !== "object")
                                    throw TypeError(".google.cloud.channel.v1.RepricingCondition.skuGroupCondition: object expected");
                                message.skuGroupCondition = $root.google.cloud.channel.v1.SkuGroupCondition.fromObject(object.skuGroupCondition);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RepricingCondition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @static
                         * @param {google.cloud.channel.v1.RepricingCondition} message RepricingCondition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RepricingCondition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.skuGroupCondition != null && message.hasOwnProperty("skuGroupCondition")) {
                                object.skuGroupCondition = $root.google.cloud.channel.v1.SkuGroupCondition.toObject(message.skuGroupCondition, options);
                                if (options.oneofs)
                                    object.condition = "skuGroupCondition";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RepricingCondition to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RepricingCondition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RepricingCondition
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.RepricingCondition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RepricingCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.RepricingCondition";
                        };
    
                        return RepricingCondition;
                    })();
    
                    v1.SkuGroupCondition = (function() {
    
                        /**
                         * Properties of a SkuGroupCondition.
                         * @memberof google.cloud.channel.v1
                         * @interface ISkuGroupCondition
                         * @property {string|null} [skuGroup] SkuGroupCondition skuGroup
                         */
    
                        /**
                         * Constructs a new SkuGroupCondition.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a SkuGroupCondition.
                         * @implements ISkuGroupCondition
                         * @constructor
                         * @param {google.cloud.channel.v1.ISkuGroupCondition=} [properties] Properties to set
                         */
                        function SkuGroupCondition(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SkuGroupCondition skuGroup.
                         * @member {string} skuGroup
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @instance
                         */
                        SkuGroupCondition.prototype.skuGroup = "";
    
                        /**
                         * Creates a new SkuGroupCondition instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @static
                         * @param {google.cloud.channel.v1.ISkuGroupCondition=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.SkuGroupCondition} SkuGroupCondition instance
                         */
                        SkuGroupCondition.create = function create(properties) {
                            return new SkuGroupCondition(properties);
                        };
    
                        /**
                         * Encodes the specified SkuGroupCondition message. Does not implicitly {@link google.cloud.channel.v1.SkuGroupCondition.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @static
                         * @param {google.cloud.channel.v1.ISkuGroupCondition} message SkuGroupCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SkuGroupCondition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.skuGroup != null && Object.hasOwnProperty.call(message, "skuGroup"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.skuGroup);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SkuGroupCondition message, length delimited. Does not implicitly {@link google.cloud.channel.v1.SkuGroupCondition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @static
                         * @param {google.cloud.channel.v1.ISkuGroupCondition} message SkuGroupCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SkuGroupCondition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SkuGroupCondition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.SkuGroupCondition} SkuGroupCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SkuGroupCondition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.SkuGroupCondition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.skuGroup = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SkuGroupCondition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.SkuGroupCondition} SkuGroupCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SkuGroupCondition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SkuGroupCondition message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SkuGroupCondition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.skuGroup != null && message.hasOwnProperty("skuGroup"))
                                if (!$util.isString(message.skuGroup))
                                    return "skuGroup: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SkuGroupCondition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.SkuGroupCondition} SkuGroupCondition
                         */
                        SkuGroupCondition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.SkuGroupCondition)
                                return object;
                            var message = new $root.google.cloud.channel.v1.SkuGroupCondition();
                            if (object.skuGroup != null)
                                message.skuGroup = String(object.skuGroup);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SkuGroupCondition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @static
                         * @param {google.cloud.channel.v1.SkuGroupCondition} message SkuGroupCondition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SkuGroupCondition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.skuGroup = "";
                            if (message.skuGroup != null && message.hasOwnProperty("skuGroup"))
                                object.skuGroup = message.skuGroup;
                            return object;
                        };
    
                        /**
                         * Converts this SkuGroupCondition to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SkuGroupCondition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SkuGroupCondition
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.SkuGroupCondition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SkuGroupCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.SkuGroupCondition";
                        };
    
                        return SkuGroupCondition;
                    })();
    
                    v1.CloudChannelService = (function() {
    
                        /**
                         * Constructs a new CloudChannelService service.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CloudChannelService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudChannelService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudChannelService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudChannelService;
    
                        /**
                         * Creates new CloudChannelService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudChannelService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudChannelService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listCustomers}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListCustomersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListCustomersResponse} [response] ListCustomersResponse
                         */
    
                        /**
                         * Calls ListCustomers.
                         * @function listCustomers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListCustomersRequest} request ListCustomersRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListCustomersCallback} callback Node-style callback called with the error, if any, and ListCustomersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listCustomers = function listCustomers(request, callback) {
                            return this.rpcCall(listCustomers, $root.google.cloud.channel.v1.ListCustomersRequest, $root.google.cloud.channel.v1.ListCustomersResponse, request, callback);
                        }, "name", { value: "ListCustomers" });
    
                        /**
                         * Calls ListCustomers.
                         * @function listCustomers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListCustomersRequest} request ListCustomersRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListCustomersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|getCustomer}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef GetCustomerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.Customer} [response] Customer
                         */
    
                        /**
                         * Calls GetCustomer.
                         * @function getCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetCustomerRequest} request GetCustomerRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.GetCustomerCallback} callback Node-style callback called with the error, if any, and Customer
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.getCustomer = function getCustomer(request, callback) {
                            return this.rpcCall(getCustomer, $root.google.cloud.channel.v1.GetCustomerRequest, $root.google.cloud.channel.v1.Customer, request, callback);
                        }, "name", { value: "GetCustomer" });
    
                        /**
                         * Calls GetCustomer.
                         * @function getCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetCustomerRequest} request GetCustomerRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.Customer>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|checkCloudIdentityAccountsExist}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef CheckCloudIdentityAccountsExistCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse} [response] CheckCloudIdentityAccountsExistResponse
                         */
    
                        /**
                         * Calls CheckCloudIdentityAccountsExist.
                         * @function checkCloudIdentityAccountsExist
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest} request CheckCloudIdentityAccountsExistRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.CheckCloudIdentityAccountsExistCallback} callback Node-style callback called with the error, if any, and CheckCloudIdentityAccountsExistResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.checkCloudIdentityAccountsExist = function checkCloudIdentityAccountsExist(request, callback) {
                            return this.rpcCall(checkCloudIdentityAccountsExist, $root.google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest, $root.google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse, request, callback);
                        }, "name", { value: "CheckCloudIdentityAccountsExist" });
    
                        /**
                         * Calls CheckCloudIdentityAccountsExist.
                         * @function checkCloudIdentityAccountsExist
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest} request CheckCloudIdentityAccountsExistRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|createCustomer}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef CreateCustomerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.Customer} [response] Customer
                         */
    
                        /**
                         * Calls CreateCustomer.
                         * @function createCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateCustomerRequest} request CreateCustomerRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.CreateCustomerCallback} callback Node-style callback called with the error, if any, and Customer
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.createCustomer = function createCustomer(request, callback) {
                            return this.rpcCall(createCustomer, $root.google.cloud.channel.v1.CreateCustomerRequest, $root.google.cloud.channel.v1.Customer, request, callback);
                        }, "name", { value: "CreateCustomer" });
    
                        /**
                         * Calls CreateCustomer.
                         * @function createCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateCustomerRequest} request CreateCustomerRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.Customer>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|updateCustomer}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef UpdateCustomerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.Customer} [response] Customer
                         */
    
                        /**
                         * Calls UpdateCustomer.
                         * @function updateCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUpdateCustomerRequest} request UpdateCustomerRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.UpdateCustomerCallback} callback Node-style callback called with the error, if any, and Customer
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.updateCustomer = function updateCustomer(request, callback) {
                            return this.rpcCall(updateCustomer, $root.google.cloud.channel.v1.UpdateCustomerRequest, $root.google.cloud.channel.v1.Customer, request, callback);
                        }, "name", { value: "UpdateCustomer" });
    
                        /**
                         * Calls UpdateCustomer.
                         * @function updateCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUpdateCustomerRequest} request UpdateCustomerRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.Customer>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|deleteCustomer}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef DeleteCustomerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteCustomer.
                         * @function deleteCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IDeleteCustomerRequest} request DeleteCustomerRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.DeleteCustomerCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.deleteCustomer = function deleteCustomer(request, callback) {
                            return this.rpcCall(deleteCustomer, $root.google.cloud.channel.v1.DeleteCustomerRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteCustomer" });
    
                        /**
                         * Calls DeleteCustomer.
                         * @function deleteCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IDeleteCustomerRequest} request DeleteCustomerRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|importCustomer}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ImportCustomerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.Customer} [response] Customer
                         */
    
                        /**
                         * Calls ImportCustomer.
                         * @function importCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IImportCustomerRequest} request ImportCustomerRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ImportCustomerCallback} callback Node-style callback called with the error, if any, and Customer
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.importCustomer = function importCustomer(request, callback) {
                            return this.rpcCall(importCustomer, $root.google.cloud.channel.v1.ImportCustomerRequest, $root.google.cloud.channel.v1.Customer, request, callback);
                        }, "name", { value: "ImportCustomer" });
    
                        /**
                         * Calls ImportCustomer.
                         * @function importCustomer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IImportCustomerRequest} request ImportCustomerRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.Customer>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|provisionCloudIdentity}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ProvisionCloudIdentityCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ProvisionCloudIdentity.
                         * @function provisionCloudIdentity
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IProvisionCloudIdentityRequest} request ProvisionCloudIdentityRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ProvisionCloudIdentityCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.provisionCloudIdentity = function provisionCloudIdentity(request, callback) {
                            return this.rpcCall(provisionCloudIdentity, $root.google.cloud.channel.v1.ProvisionCloudIdentityRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ProvisionCloudIdentity" });
    
                        /**
                         * Calls ProvisionCloudIdentity.
                         * @function provisionCloudIdentity
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IProvisionCloudIdentityRequest} request ProvisionCloudIdentityRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listEntitlements}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListEntitlementsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListEntitlementsResponse} [response] ListEntitlementsResponse
                         */
    
                        /**
                         * Calls ListEntitlements.
                         * @function listEntitlements
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListEntitlementsRequest} request ListEntitlementsRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListEntitlementsCallback} callback Node-style callback called with the error, if any, and ListEntitlementsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listEntitlements = function listEntitlements(request, callback) {
                            return this.rpcCall(listEntitlements, $root.google.cloud.channel.v1.ListEntitlementsRequest, $root.google.cloud.channel.v1.ListEntitlementsResponse, request, callback);
                        }, "name", { value: "ListEntitlements" });
    
                        /**
                         * Calls ListEntitlements.
                         * @function listEntitlements
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListEntitlementsRequest} request ListEntitlementsRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListEntitlementsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listTransferableSkus}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListTransferableSkusCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListTransferableSkusResponse} [response] ListTransferableSkusResponse
                         */
    
                        /**
                         * Calls ListTransferableSkus.
                         * @function listTransferableSkus
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListTransferableSkusRequest} request ListTransferableSkusRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListTransferableSkusCallback} callback Node-style callback called with the error, if any, and ListTransferableSkusResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listTransferableSkus = function listTransferableSkus(request, callback) {
                            return this.rpcCall(listTransferableSkus, $root.google.cloud.channel.v1.ListTransferableSkusRequest, $root.google.cloud.channel.v1.ListTransferableSkusResponse, request, callback);
                        }, "name", { value: "ListTransferableSkus" });
    
                        /**
                         * Calls ListTransferableSkus.
                         * @function listTransferableSkus
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListTransferableSkusRequest} request ListTransferableSkusRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListTransferableSkusResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listTransferableOffers}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListTransferableOffersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListTransferableOffersResponse} [response] ListTransferableOffersResponse
                         */
    
                        /**
                         * Calls ListTransferableOffers.
                         * @function listTransferableOffers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListTransferableOffersRequest} request ListTransferableOffersRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListTransferableOffersCallback} callback Node-style callback called with the error, if any, and ListTransferableOffersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listTransferableOffers = function listTransferableOffers(request, callback) {
                            return this.rpcCall(listTransferableOffers, $root.google.cloud.channel.v1.ListTransferableOffersRequest, $root.google.cloud.channel.v1.ListTransferableOffersResponse, request, callback);
                        }, "name", { value: "ListTransferableOffers" });
    
                        /**
                         * Calls ListTransferableOffers.
                         * @function listTransferableOffers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListTransferableOffersRequest} request ListTransferableOffersRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListTransferableOffersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|getEntitlement}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef GetEntitlementCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.Entitlement} [response] Entitlement
                         */
    
                        /**
                         * Calls GetEntitlement.
                         * @function getEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetEntitlementRequest} request GetEntitlementRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.GetEntitlementCallback} callback Node-style callback called with the error, if any, and Entitlement
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.getEntitlement = function getEntitlement(request, callback) {
                            return this.rpcCall(getEntitlement, $root.google.cloud.channel.v1.GetEntitlementRequest, $root.google.cloud.channel.v1.Entitlement, request, callback);
                        }, "name", { value: "GetEntitlement" });
    
                        /**
                         * Calls GetEntitlement.
                         * @function getEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetEntitlementRequest} request GetEntitlementRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.Entitlement>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|createEntitlement}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef CreateEntitlementCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateEntitlement.
                         * @function createEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateEntitlementRequest} request CreateEntitlementRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.CreateEntitlementCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.createEntitlement = function createEntitlement(request, callback) {
                            return this.rpcCall(createEntitlement, $root.google.cloud.channel.v1.CreateEntitlementRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateEntitlement" });
    
                        /**
                         * Calls CreateEntitlement.
                         * @function createEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateEntitlementRequest} request CreateEntitlementRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|changeParameters}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ChangeParametersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ChangeParameters.
                         * @function changeParameters
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IChangeParametersRequest} request ChangeParametersRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ChangeParametersCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.changeParameters = function changeParameters(request, callback) {
                            return this.rpcCall(changeParameters, $root.google.cloud.channel.v1.ChangeParametersRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ChangeParameters" });
    
                        /**
                         * Calls ChangeParameters.
                         * @function changeParameters
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IChangeParametersRequest} request ChangeParametersRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|changeRenewalSettings}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ChangeRenewalSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ChangeRenewalSettings.
                         * @function changeRenewalSettings
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IChangeRenewalSettingsRequest} request ChangeRenewalSettingsRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ChangeRenewalSettingsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.changeRenewalSettings = function changeRenewalSettings(request, callback) {
                            return this.rpcCall(changeRenewalSettings, $root.google.cloud.channel.v1.ChangeRenewalSettingsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ChangeRenewalSettings" });
    
                        /**
                         * Calls ChangeRenewalSettings.
                         * @function changeRenewalSettings
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IChangeRenewalSettingsRequest} request ChangeRenewalSettingsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|changeOffer}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ChangeOfferCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ChangeOffer.
                         * @function changeOffer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IChangeOfferRequest} request ChangeOfferRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ChangeOfferCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.changeOffer = function changeOffer(request, callback) {
                            return this.rpcCall(changeOffer, $root.google.cloud.channel.v1.ChangeOfferRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ChangeOffer" });
    
                        /**
                         * Calls ChangeOffer.
                         * @function changeOffer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IChangeOfferRequest} request ChangeOfferRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|startPaidService}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef StartPaidServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StartPaidService.
                         * @function startPaidService
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IStartPaidServiceRequest} request StartPaidServiceRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.StartPaidServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.startPaidService = function startPaidService(request, callback) {
                            return this.rpcCall(startPaidService, $root.google.cloud.channel.v1.StartPaidServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StartPaidService" });
    
                        /**
                         * Calls StartPaidService.
                         * @function startPaidService
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IStartPaidServiceRequest} request StartPaidServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|suspendEntitlement}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef SuspendEntitlementCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SuspendEntitlement.
                         * @function suspendEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ISuspendEntitlementRequest} request SuspendEntitlementRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.SuspendEntitlementCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.suspendEntitlement = function suspendEntitlement(request, callback) {
                            return this.rpcCall(suspendEntitlement, $root.google.cloud.channel.v1.SuspendEntitlementRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SuspendEntitlement" });
    
                        /**
                         * Calls SuspendEntitlement.
                         * @function suspendEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ISuspendEntitlementRequest} request SuspendEntitlementRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|cancelEntitlement}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef CancelEntitlementCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CancelEntitlement.
                         * @function cancelEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICancelEntitlementRequest} request CancelEntitlementRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.CancelEntitlementCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.cancelEntitlement = function cancelEntitlement(request, callback) {
                            return this.rpcCall(cancelEntitlement, $root.google.cloud.channel.v1.CancelEntitlementRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CancelEntitlement" });
    
                        /**
                         * Calls CancelEntitlement.
                         * @function cancelEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICancelEntitlementRequest} request CancelEntitlementRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|activateEntitlement}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ActivateEntitlementCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ActivateEntitlement.
                         * @function activateEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IActivateEntitlementRequest} request ActivateEntitlementRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ActivateEntitlementCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.activateEntitlement = function activateEntitlement(request, callback) {
                            return this.rpcCall(activateEntitlement, $root.google.cloud.channel.v1.ActivateEntitlementRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ActivateEntitlement" });
    
                        /**
                         * Calls ActivateEntitlement.
                         * @function activateEntitlement
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IActivateEntitlementRequest} request ActivateEntitlementRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|transferEntitlements}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef TransferEntitlementsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls TransferEntitlements.
                         * @function transferEntitlements
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ITransferEntitlementsRequest} request TransferEntitlementsRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.TransferEntitlementsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.transferEntitlements = function transferEntitlements(request, callback) {
                            return this.rpcCall(transferEntitlements, $root.google.cloud.channel.v1.TransferEntitlementsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "TransferEntitlements" });
    
                        /**
                         * Calls TransferEntitlements.
                         * @function transferEntitlements
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ITransferEntitlementsRequest} request TransferEntitlementsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|transferEntitlementsToGoogle}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef TransferEntitlementsToGoogleCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls TransferEntitlementsToGoogle.
                         * @function transferEntitlementsToGoogle
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest} request TransferEntitlementsToGoogleRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.TransferEntitlementsToGoogleCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.transferEntitlementsToGoogle = function transferEntitlementsToGoogle(request, callback) {
                            return this.rpcCall(transferEntitlementsToGoogle, $root.google.cloud.channel.v1.TransferEntitlementsToGoogleRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "TransferEntitlementsToGoogle" });
    
                        /**
                         * Calls TransferEntitlementsToGoogle.
                         * @function transferEntitlementsToGoogle
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest} request TransferEntitlementsToGoogleRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listChannelPartnerLinks}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListChannelPartnerLinksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListChannelPartnerLinksResponse} [response] ListChannelPartnerLinksResponse
                         */
    
                        /**
                         * Calls ListChannelPartnerLinks.
                         * @function listChannelPartnerLinks
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksRequest} request ListChannelPartnerLinksRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListChannelPartnerLinksCallback} callback Node-style callback called with the error, if any, and ListChannelPartnerLinksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listChannelPartnerLinks = function listChannelPartnerLinks(request, callback) {
                            return this.rpcCall(listChannelPartnerLinks, $root.google.cloud.channel.v1.ListChannelPartnerLinksRequest, $root.google.cloud.channel.v1.ListChannelPartnerLinksResponse, request, callback);
                        }, "name", { value: "ListChannelPartnerLinks" });
    
                        /**
                         * Calls ListChannelPartnerLinks.
                         * @function listChannelPartnerLinks
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksRequest} request ListChannelPartnerLinksRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListChannelPartnerLinksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|getChannelPartnerLink}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef GetChannelPartnerLinkCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ChannelPartnerLink} [response] ChannelPartnerLink
                         */
    
                        /**
                         * Calls GetChannelPartnerLink.
                         * @function getChannelPartnerLink
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetChannelPartnerLinkRequest} request GetChannelPartnerLinkRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.GetChannelPartnerLinkCallback} callback Node-style callback called with the error, if any, and ChannelPartnerLink
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.getChannelPartnerLink = function getChannelPartnerLink(request, callback) {
                            return this.rpcCall(getChannelPartnerLink, $root.google.cloud.channel.v1.GetChannelPartnerLinkRequest, $root.google.cloud.channel.v1.ChannelPartnerLink, request, callback);
                        }, "name", { value: "GetChannelPartnerLink" });
    
                        /**
                         * Calls GetChannelPartnerLink.
                         * @function getChannelPartnerLink
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetChannelPartnerLinkRequest} request GetChannelPartnerLinkRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ChannelPartnerLink>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|createChannelPartnerLink}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef CreateChannelPartnerLinkCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ChannelPartnerLink} [response] ChannelPartnerLink
                         */
    
                        /**
                         * Calls CreateChannelPartnerLink.
                         * @function createChannelPartnerLink
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerLinkRequest} request CreateChannelPartnerLinkRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerLinkCallback} callback Node-style callback called with the error, if any, and ChannelPartnerLink
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.createChannelPartnerLink = function createChannelPartnerLink(request, callback) {
                            return this.rpcCall(createChannelPartnerLink, $root.google.cloud.channel.v1.CreateChannelPartnerLinkRequest, $root.google.cloud.channel.v1.ChannelPartnerLink, request, callback);
                        }, "name", { value: "CreateChannelPartnerLink" });
    
                        /**
                         * Calls CreateChannelPartnerLink.
                         * @function createChannelPartnerLink
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerLinkRequest} request CreateChannelPartnerLinkRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ChannelPartnerLink>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|updateChannelPartnerLink}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef UpdateChannelPartnerLinkCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ChannelPartnerLink} [response] ChannelPartnerLink
                         */
    
                        /**
                         * Calls UpdateChannelPartnerLink.
                         * @function updateChannelPartnerLink
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest} request UpdateChannelPartnerLinkRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.UpdateChannelPartnerLinkCallback} callback Node-style callback called with the error, if any, and ChannelPartnerLink
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.updateChannelPartnerLink = function updateChannelPartnerLink(request, callback) {
                            return this.rpcCall(updateChannelPartnerLink, $root.google.cloud.channel.v1.UpdateChannelPartnerLinkRequest, $root.google.cloud.channel.v1.ChannelPartnerLink, request, callback);
                        }, "name", { value: "UpdateChannelPartnerLink" });
    
                        /**
                         * Calls UpdateChannelPartnerLink.
                         * @function updateChannelPartnerLink
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest} request UpdateChannelPartnerLinkRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ChannelPartnerLink>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|getCustomerRepricingConfig}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef GetCustomerRepricingConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.CustomerRepricingConfig} [response] CustomerRepricingConfig
                         */
    
                        /**
                         * Calls GetCustomerRepricingConfig.
                         * @function getCustomerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetCustomerRepricingConfigRequest} request GetCustomerRepricingConfigRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.GetCustomerRepricingConfigCallback} callback Node-style callback called with the error, if any, and CustomerRepricingConfig
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.getCustomerRepricingConfig = function getCustomerRepricingConfig(request, callback) {
                            return this.rpcCall(getCustomerRepricingConfig, $root.google.cloud.channel.v1.GetCustomerRepricingConfigRequest, $root.google.cloud.channel.v1.CustomerRepricingConfig, request, callback);
                        }, "name", { value: "GetCustomerRepricingConfig" });
    
                        /**
                         * Calls GetCustomerRepricingConfig.
                         * @function getCustomerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetCustomerRepricingConfigRequest} request GetCustomerRepricingConfigRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.CustomerRepricingConfig>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listCustomerRepricingConfigs}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListCustomerRepricingConfigsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListCustomerRepricingConfigsResponse} [response] ListCustomerRepricingConfigsResponse
                         */
    
                        /**
                         * Calls ListCustomerRepricingConfigs.
                         * @function listCustomerRepricingConfigs
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsRequest} request ListCustomerRepricingConfigsRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListCustomerRepricingConfigsCallback} callback Node-style callback called with the error, if any, and ListCustomerRepricingConfigsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listCustomerRepricingConfigs = function listCustomerRepricingConfigs(request, callback) {
                            return this.rpcCall(listCustomerRepricingConfigs, $root.google.cloud.channel.v1.ListCustomerRepricingConfigsRequest, $root.google.cloud.channel.v1.ListCustomerRepricingConfigsResponse, request, callback);
                        }, "name", { value: "ListCustomerRepricingConfigs" });
    
                        /**
                         * Calls ListCustomerRepricingConfigs.
                         * @function listCustomerRepricingConfigs
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsRequest} request ListCustomerRepricingConfigsRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListCustomerRepricingConfigsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|createCustomerRepricingConfig}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef CreateCustomerRepricingConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.CustomerRepricingConfig} [response] CustomerRepricingConfig
                         */
    
                        /**
                         * Calls CreateCustomerRepricingConfig.
                         * @function createCustomerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest} request CreateCustomerRepricingConfigRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfigCallback} callback Node-style callback called with the error, if any, and CustomerRepricingConfig
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.createCustomerRepricingConfig = function createCustomerRepricingConfig(request, callback) {
                            return this.rpcCall(createCustomerRepricingConfig, $root.google.cloud.channel.v1.CreateCustomerRepricingConfigRequest, $root.google.cloud.channel.v1.CustomerRepricingConfig, request, callback);
                        }, "name", { value: "CreateCustomerRepricingConfig" });
    
                        /**
                         * Calls CreateCustomerRepricingConfig.
                         * @function createCustomerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest} request CreateCustomerRepricingConfigRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.CustomerRepricingConfig>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|updateCustomerRepricingConfig}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef UpdateCustomerRepricingConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.CustomerRepricingConfig} [response] CustomerRepricingConfig
                         */
    
                        /**
                         * Calls UpdateCustomerRepricingConfig.
                         * @function updateCustomerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest} request UpdateCustomerRepricingConfigRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.UpdateCustomerRepricingConfigCallback} callback Node-style callback called with the error, if any, and CustomerRepricingConfig
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.updateCustomerRepricingConfig = function updateCustomerRepricingConfig(request, callback) {
                            return this.rpcCall(updateCustomerRepricingConfig, $root.google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest, $root.google.cloud.channel.v1.CustomerRepricingConfig, request, callback);
                        }, "name", { value: "UpdateCustomerRepricingConfig" });
    
                        /**
                         * Calls UpdateCustomerRepricingConfig.
                         * @function updateCustomerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest} request UpdateCustomerRepricingConfigRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.CustomerRepricingConfig>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|deleteCustomerRepricingConfig}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef DeleteCustomerRepricingConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteCustomerRepricingConfig.
                         * @function deleteCustomerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest} request DeleteCustomerRepricingConfigRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.DeleteCustomerRepricingConfigCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.deleteCustomerRepricingConfig = function deleteCustomerRepricingConfig(request, callback) {
                            return this.rpcCall(deleteCustomerRepricingConfig, $root.google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteCustomerRepricingConfig" });
    
                        /**
                         * Calls DeleteCustomerRepricingConfig.
                         * @function deleteCustomerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest} request DeleteCustomerRepricingConfigRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|getChannelPartnerRepricingConfig}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef GetChannelPartnerRepricingConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ChannelPartnerRepricingConfig} [response] ChannelPartnerRepricingConfig
                         */
    
                        /**
                         * Calls GetChannelPartnerRepricingConfig.
                         * @function getChannelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest} request GetChannelPartnerRepricingConfigRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.GetChannelPartnerRepricingConfigCallback} callback Node-style callback called with the error, if any, and ChannelPartnerRepricingConfig
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.getChannelPartnerRepricingConfig = function getChannelPartnerRepricingConfig(request, callback) {
                            return this.rpcCall(getChannelPartnerRepricingConfig, $root.google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest, $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig, request, callback);
                        }, "name", { value: "GetChannelPartnerRepricingConfig" });
    
                        /**
                         * Calls GetChannelPartnerRepricingConfig.
                         * @function getChannelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest} request GetChannelPartnerRepricingConfigRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ChannelPartnerRepricingConfig>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listChannelPartnerRepricingConfigs}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListChannelPartnerRepricingConfigsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse} [response] ListChannelPartnerRepricingConfigsResponse
                         */
    
                        /**
                         * Calls ListChannelPartnerRepricingConfigs.
                         * @function listChannelPartnerRepricingConfigs
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest} request ListChannelPartnerRepricingConfigsRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigsCallback} callback Node-style callback called with the error, if any, and ListChannelPartnerRepricingConfigsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listChannelPartnerRepricingConfigs = function listChannelPartnerRepricingConfigs(request, callback) {
                            return this.rpcCall(listChannelPartnerRepricingConfigs, $root.google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest, $root.google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse, request, callback);
                        }, "name", { value: "ListChannelPartnerRepricingConfigs" });
    
                        /**
                         * Calls ListChannelPartnerRepricingConfigs.
                         * @function listChannelPartnerRepricingConfigs
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest} request ListChannelPartnerRepricingConfigsRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|createChannelPartnerRepricingConfig}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef CreateChannelPartnerRepricingConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ChannelPartnerRepricingConfig} [response] ChannelPartnerRepricingConfig
                         */
    
                        /**
                         * Calls CreateChannelPartnerRepricingConfig.
                         * @function createChannelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest} request CreateChannelPartnerRepricingConfigRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfigCallback} callback Node-style callback called with the error, if any, and ChannelPartnerRepricingConfig
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.createChannelPartnerRepricingConfig = function createChannelPartnerRepricingConfig(request, callback) {
                            return this.rpcCall(createChannelPartnerRepricingConfig, $root.google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest, $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig, request, callback);
                        }, "name", { value: "CreateChannelPartnerRepricingConfig" });
    
                        /**
                         * Calls CreateChannelPartnerRepricingConfig.
                         * @function createChannelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest} request CreateChannelPartnerRepricingConfigRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ChannelPartnerRepricingConfig>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|updateChannelPartnerRepricingConfig}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef UpdateChannelPartnerRepricingConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ChannelPartnerRepricingConfig} [response] ChannelPartnerRepricingConfig
                         */
    
                        /**
                         * Calls UpdateChannelPartnerRepricingConfig.
                         * @function updateChannelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest} request UpdateChannelPartnerRepricingConfigRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.UpdateChannelPartnerRepricingConfigCallback} callback Node-style callback called with the error, if any, and ChannelPartnerRepricingConfig
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.updateChannelPartnerRepricingConfig = function updateChannelPartnerRepricingConfig(request, callback) {
                            return this.rpcCall(updateChannelPartnerRepricingConfig, $root.google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest, $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig, request, callback);
                        }, "name", { value: "UpdateChannelPartnerRepricingConfig" });
    
                        /**
                         * Calls UpdateChannelPartnerRepricingConfig.
                         * @function updateChannelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest} request UpdateChannelPartnerRepricingConfigRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ChannelPartnerRepricingConfig>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|deleteChannelPartnerRepricingConfig}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef DeleteChannelPartnerRepricingConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteChannelPartnerRepricingConfig.
                         * @function deleteChannelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest} request DeleteChannelPartnerRepricingConfigRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.DeleteChannelPartnerRepricingConfigCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.deleteChannelPartnerRepricingConfig = function deleteChannelPartnerRepricingConfig(request, callback) {
                            return this.rpcCall(deleteChannelPartnerRepricingConfig, $root.google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteChannelPartnerRepricingConfig" });
    
                        /**
                         * Calls DeleteChannelPartnerRepricingConfig.
                         * @function deleteChannelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest} request DeleteChannelPartnerRepricingConfigRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|lookupOffer}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef LookupOfferCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.Offer} [response] Offer
                         */
    
                        /**
                         * Calls LookupOffer.
                         * @function lookupOffer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ILookupOfferRequest} request LookupOfferRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.LookupOfferCallback} callback Node-style callback called with the error, if any, and Offer
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.lookupOffer = function lookupOffer(request, callback) {
                            return this.rpcCall(lookupOffer, $root.google.cloud.channel.v1.LookupOfferRequest, $root.google.cloud.channel.v1.Offer, request, callback);
                        }, "name", { value: "LookupOffer" });
    
                        /**
                         * Calls LookupOffer.
                         * @function lookupOffer
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.ILookupOfferRequest} request LookupOfferRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.Offer>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listProducts}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListProductsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListProductsResponse} [response] ListProductsResponse
                         */
    
                        /**
                         * Calls ListProducts.
                         * @function listProducts
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListProductsRequest} request ListProductsRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListProductsCallback} callback Node-style callback called with the error, if any, and ListProductsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listProducts = function listProducts(request, callback) {
                            return this.rpcCall(listProducts, $root.google.cloud.channel.v1.ListProductsRequest, $root.google.cloud.channel.v1.ListProductsResponse, request, callback);
                        }, "name", { value: "ListProducts" });
    
                        /**
                         * Calls ListProducts.
                         * @function listProducts
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListProductsRequest} request ListProductsRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListProductsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listSkus}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListSkusCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListSkusResponse} [response] ListSkusResponse
                         */
    
                        /**
                         * Calls ListSkus.
                         * @function listSkus
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListSkusRequest} request ListSkusRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListSkusCallback} callback Node-style callback called with the error, if any, and ListSkusResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listSkus = function listSkus(request, callback) {
                            return this.rpcCall(listSkus, $root.google.cloud.channel.v1.ListSkusRequest, $root.google.cloud.channel.v1.ListSkusResponse, request, callback);
                        }, "name", { value: "ListSkus" });
    
                        /**
                         * Calls ListSkus.
                         * @function listSkus
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListSkusRequest} request ListSkusRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListSkusResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listOffers}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListOffersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListOffersResponse} [response] ListOffersResponse
                         */
    
                        /**
                         * Calls ListOffers.
                         * @function listOffers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListOffersRequest} request ListOffersRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListOffersCallback} callback Node-style callback called with the error, if any, and ListOffersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listOffers = function listOffers(request, callback) {
                            return this.rpcCall(listOffers, $root.google.cloud.channel.v1.ListOffersRequest, $root.google.cloud.channel.v1.ListOffersResponse, request, callback);
                        }, "name", { value: "ListOffers" });
    
                        /**
                         * Calls ListOffers.
                         * @function listOffers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListOffersRequest} request ListOffersRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListOffersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listPurchasableSkus}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListPurchasableSkusCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListPurchasableSkusResponse} [response] ListPurchasableSkusResponse
                         */
    
                        /**
                         * Calls ListPurchasableSkus.
                         * @function listPurchasableSkus
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListPurchasableSkusRequest} request ListPurchasableSkusRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListPurchasableSkusCallback} callback Node-style callback called with the error, if any, and ListPurchasableSkusResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listPurchasableSkus = function listPurchasableSkus(request, callback) {
                            return this.rpcCall(listPurchasableSkus, $root.google.cloud.channel.v1.ListPurchasableSkusRequest, $root.google.cloud.channel.v1.ListPurchasableSkusResponse, request, callback);
                        }, "name", { value: "ListPurchasableSkus" });
    
                        /**
                         * Calls ListPurchasableSkus.
                         * @function listPurchasableSkus
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListPurchasableSkusRequest} request ListPurchasableSkusRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListPurchasableSkusResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listPurchasableOffers}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListPurchasableOffersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListPurchasableOffersResponse} [response] ListPurchasableOffersResponse
                         */
    
                        /**
                         * Calls ListPurchasableOffers.
                         * @function listPurchasableOffers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListPurchasableOffersRequest} request ListPurchasableOffersRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListPurchasableOffersCallback} callback Node-style callback called with the error, if any, and ListPurchasableOffersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listPurchasableOffers = function listPurchasableOffers(request, callback) {
                            return this.rpcCall(listPurchasableOffers, $root.google.cloud.channel.v1.ListPurchasableOffersRequest, $root.google.cloud.channel.v1.ListPurchasableOffersResponse, request, callback);
                        }, "name", { value: "ListPurchasableOffers" });
    
                        /**
                         * Calls ListPurchasableOffers.
                         * @function listPurchasableOffers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListPurchasableOffersRequest} request ListPurchasableOffersRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListPurchasableOffersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|registerSubscriber}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef RegisterSubscriberCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.RegisterSubscriberResponse} [response] RegisterSubscriberResponse
                         */
    
                        /**
                         * Calls RegisterSubscriber.
                         * @function registerSubscriber
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IRegisterSubscriberRequest} request RegisterSubscriberRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.RegisterSubscriberCallback} callback Node-style callback called with the error, if any, and RegisterSubscriberResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.registerSubscriber = function registerSubscriber(request, callback) {
                            return this.rpcCall(registerSubscriber, $root.google.cloud.channel.v1.RegisterSubscriberRequest, $root.google.cloud.channel.v1.RegisterSubscriberResponse, request, callback);
                        }, "name", { value: "RegisterSubscriber" });
    
                        /**
                         * Calls RegisterSubscriber.
                         * @function registerSubscriber
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IRegisterSubscriberRequest} request RegisterSubscriberRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.RegisterSubscriberResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|unregisterSubscriber}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef UnregisterSubscriberCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.UnregisterSubscriberResponse} [response] UnregisterSubscriberResponse
                         */
    
                        /**
                         * Calls UnregisterSubscriber.
                         * @function unregisterSubscriber
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberRequest} request UnregisterSubscriberRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.UnregisterSubscriberCallback} callback Node-style callback called with the error, if any, and UnregisterSubscriberResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.unregisterSubscriber = function unregisterSubscriber(request, callback) {
                            return this.rpcCall(unregisterSubscriber, $root.google.cloud.channel.v1.UnregisterSubscriberRequest, $root.google.cloud.channel.v1.UnregisterSubscriberResponse, request, callback);
                        }, "name", { value: "UnregisterSubscriber" });
    
                        /**
                         * Calls UnregisterSubscriber.
                         * @function unregisterSubscriber
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberRequest} request UnregisterSubscriberRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.UnregisterSubscriberResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.channel.v1.CloudChannelService|listSubscribers}.
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @typedef ListSubscribersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.channel.v1.ListSubscribersResponse} [response] ListSubscribersResponse
                         */
    
                        /**
                         * Calls ListSubscribers.
                         * @function listSubscribers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListSubscribersRequest} request ListSubscribersRequest message or plain object
                         * @param {google.cloud.channel.v1.CloudChannelService.ListSubscribersCallback} callback Node-style callback called with the error, if any, and ListSubscribersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudChannelService.prototype.listSubscribers = function listSubscribers(request, callback) {
                            return this.rpcCall(listSubscribers, $root.google.cloud.channel.v1.ListSubscribersRequest, $root.google.cloud.channel.v1.ListSubscribersResponse, request, callback);
                        }, "name", { value: "ListSubscribers" });
    
                        /**
                         * Calls ListSubscribers.
                         * @function listSubscribers
                         * @memberof google.cloud.channel.v1.CloudChannelService
                         * @instance
                         * @param {google.cloud.channel.v1.IListSubscribersRequest} request ListSubscribersRequest message or plain object
                         * @returns {Promise<google.cloud.channel.v1.ListSubscribersResponse>} Promise
                         * @variation 2
                         */
    
                        return CloudChannelService;
                    })();
    
                    v1.CheckCloudIdentityAccountsExistRequest = (function() {
    
                        /**
                         * Properties of a CheckCloudIdentityAccountsExistRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ICheckCloudIdentityAccountsExistRequest
                         * @property {string|null} [parent] CheckCloudIdentityAccountsExistRequest parent
                         * @property {string|null} [domain] CheckCloudIdentityAccountsExistRequest domain
                         */
    
                        /**
                         * Constructs a new CheckCloudIdentityAccountsExistRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CheckCloudIdentityAccountsExistRequest.
                         * @implements ICheckCloudIdentityAccountsExistRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest=} [properties] Properties to set
                         */
                        function CheckCloudIdentityAccountsExistRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CheckCloudIdentityAccountsExistRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @instance
                         */
                        CheckCloudIdentityAccountsExistRequest.prototype.parent = "";
    
                        /**
                         * CheckCloudIdentityAccountsExistRequest domain.
                         * @member {string} domain
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @instance
                         */
                        CheckCloudIdentityAccountsExistRequest.prototype.domain = "";
    
                        /**
                         * Creates a new CheckCloudIdentityAccountsExistRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest} CheckCloudIdentityAccountsExistRequest instance
                         */
                        CheckCloudIdentityAccountsExistRequest.create = function create(properties) {
                            return new CheckCloudIdentityAccountsExistRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CheckCloudIdentityAccountsExistRequest message. Does not implicitly {@link google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest} message CheckCloudIdentityAccountsExistRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckCloudIdentityAccountsExistRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.domain != null && Object.hasOwnProperty.call(message, "domain"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.domain);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CheckCloudIdentityAccountsExistRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest} message CheckCloudIdentityAccountsExistRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckCloudIdentityAccountsExistRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CheckCloudIdentityAccountsExistRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest} CheckCloudIdentityAccountsExistRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckCloudIdentityAccountsExistRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.domain = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CheckCloudIdentityAccountsExistRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest} CheckCloudIdentityAccountsExistRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckCloudIdentityAccountsExistRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CheckCloudIdentityAccountsExistRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CheckCloudIdentityAccountsExistRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.domain != null && message.hasOwnProperty("domain"))
                                if (!$util.isString(message.domain))
                                    return "domain: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CheckCloudIdentityAccountsExistRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest} CheckCloudIdentityAccountsExistRequest
                         */
                        CheckCloudIdentityAccountsExistRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.domain != null)
                                message.domain = String(object.domain);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CheckCloudIdentityAccountsExistRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @static
                         * @param {google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest} message CheckCloudIdentityAccountsExistRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CheckCloudIdentityAccountsExistRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.domain = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.domain != null && message.hasOwnProperty("domain"))
                                object.domain = message.domain;
                            return object;
                        };
    
                        /**
                         * Converts this CheckCloudIdentityAccountsExistRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CheckCloudIdentityAccountsExistRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CheckCloudIdentityAccountsExistRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CheckCloudIdentityAccountsExistRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CheckCloudIdentityAccountsExistRequest";
                        };
    
                        return CheckCloudIdentityAccountsExistRequest;
                    })();
    
                    v1.CloudIdentityCustomerAccount = (function() {
    
                        /**
                         * Properties of a CloudIdentityCustomerAccount.
                         * @memberof google.cloud.channel.v1
                         * @interface ICloudIdentityCustomerAccount
                         * @property {boolean|null} [existing] CloudIdentityCustomerAccount existing
                         * @property {boolean|null} [owned] CloudIdentityCustomerAccount owned
                         * @property {string|null} [customerName] CloudIdentityCustomerAccount customerName
                         * @property {string|null} [customerCloudIdentityId] CloudIdentityCustomerAccount customerCloudIdentityId
                         */
    
                        /**
                         * Constructs a new CloudIdentityCustomerAccount.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CloudIdentityCustomerAccount.
                         * @implements ICloudIdentityCustomerAccount
                         * @constructor
                         * @param {google.cloud.channel.v1.ICloudIdentityCustomerAccount=} [properties] Properties to set
                         */
                        function CloudIdentityCustomerAccount(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudIdentityCustomerAccount existing.
                         * @member {boolean} existing
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @instance
                         */
                        CloudIdentityCustomerAccount.prototype.existing = false;
    
                        /**
                         * CloudIdentityCustomerAccount owned.
                         * @member {boolean} owned
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @instance
                         */
                        CloudIdentityCustomerAccount.prototype.owned = false;
    
                        /**
                         * CloudIdentityCustomerAccount customerName.
                         * @member {string} customerName
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @instance
                         */
                        CloudIdentityCustomerAccount.prototype.customerName = "";
    
                        /**
                         * CloudIdentityCustomerAccount customerCloudIdentityId.
                         * @member {string} customerCloudIdentityId
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @instance
                         */
                        CloudIdentityCustomerAccount.prototype.customerCloudIdentityId = "";
    
                        /**
                         * Creates a new CloudIdentityCustomerAccount instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @static
                         * @param {google.cloud.channel.v1.ICloudIdentityCustomerAccount=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CloudIdentityCustomerAccount} CloudIdentityCustomerAccount instance
                         */
                        CloudIdentityCustomerAccount.create = function create(properties) {
                            return new CloudIdentityCustomerAccount(properties);
                        };
    
                        /**
                         * Encodes the specified CloudIdentityCustomerAccount message. Does not implicitly {@link google.cloud.channel.v1.CloudIdentityCustomerAccount.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @static
                         * @param {google.cloud.channel.v1.ICloudIdentityCustomerAccount} message CloudIdentityCustomerAccount message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudIdentityCustomerAccount.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.existing != null && Object.hasOwnProperty.call(message, "existing"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.existing);
                            if (message.owned != null && Object.hasOwnProperty.call(message, "owned"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.owned);
                            if (message.customerName != null && Object.hasOwnProperty.call(message, "customerName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.customerName);
                            if (message.customerCloudIdentityId != null && Object.hasOwnProperty.call(message, "customerCloudIdentityId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.customerCloudIdentityId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudIdentityCustomerAccount message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CloudIdentityCustomerAccount.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @static
                         * @param {google.cloud.channel.v1.ICloudIdentityCustomerAccount} message CloudIdentityCustomerAccount message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudIdentityCustomerAccount.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudIdentityCustomerAccount message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CloudIdentityCustomerAccount} CloudIdentityCustomerAccount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudIdentityCustomerAccount.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CloudIdentityCustomerAccount();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.existing = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.owned = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.customerName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.customerCloudIdentityId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudIdentityCustomerAccount message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CloudIdentityCustomerAccount} CloudIdentityCustomerAccount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudIdentityCustomerAccount.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudIdentityCustomerAccount message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudIdentityCustomerAccount.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.existing != null && message.hasOwnProperty("existing"))
                                if (typeof message.existing !== "boolean")
                                    return "existing: boolean expected";
                            if (message.owned != null && message.hasOwnProperty("owned"))
                                if (typeof message.owned !== "boolean")
                                    return "owned: boolean expected";
                            if (message.customerName != null && message.hasOwnProperty("customerName"))
                                if (!$util.isString(message.customerName))
                                    return "customerName: string expected";
                            if (message.customerCloudIdentityId != null && message.hasOwnProperty("customerCloudIdentityId"))
                                if (!$util.isString(message.customerCloudIdentityId))
                                    return "customerCloudIdentityId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CloudIdentityCustomerAccount message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CloudIdentityCustomerAccount} CloudIdentityCustomerAccount
                         */
                        CloudIdentityCustomerAccount.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CloudIdentityCustomerAccount)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CloudIdentityCustomerAccount();
                            if (object.existing != null)
                                message.existing = Boolean(object.existing);
                            if (object.owned != null)
                                message.owned = Boolean(object.owned);
                            if (object.customerName != null)
                                message.customerName = String(object.customerName);
                            if (object.customerCloudIdentityId != null)
                                message.customerCloudIdentityId = String(object.customerCloudIdentityId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudIdentityCustomerAccount message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @static
                         * @param {google.cloud.channel.v1.CloudIdentityCustomerAccount} message CloudIdentityCustomerAccount
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudIdentityCustomerAccount.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.existing = false;
                                object.owned = false;
                                object.customerName = "";
                                object.customerCloudIdentityId = "";
                            }
                            if (message.existing != null && message.hasOwnProperty("existing"))
                                object.existing = message.existing;
                            if (message.owned != null && message.hasOwnProperty("owned"))
                                object.owned = message.owned;
                            if (message.customerName != null && message.hasOwnProperty("customerName"))
                                object.customerName = message.customerName;
                            if (message.customerCloudIdentityId != null && message.hasOwnProperty("customerCloudIdentityId"))
                                object.customerCloudIdentityId = message.customerCloudIdentityId;
                            return object;
                        };
    
                        /**
                         * Converts this CloudIdentityCustomerAccount to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudIdentityCustomerAccount.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudIdentityCustomerAccount
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CloudIdentityCustomerAccount
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudIdentityCustomerAccount.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CloudIdentityCustomerAccount";
                        };
    
                        return CloudIdentityCustomerAccount;
                    })();
    
                    v1.CheckCloudIdentityAccountsExistResponse = (function() {
    
                        /**
                         * Properties of a CheckCloudIdentityAccountsExistResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface ICheckCloudIdentityAccountsExistResponse
                         * @property {Array.<google.cloud.channel.v1.ICloudIdentityCustomerAccount>|null} [cloudIdentityAccounts] CheckCloudIdentityAccountsExistResponse cloudIdentityAccounts
                         */
    
                        /**
                         * Constructs a new CheckCloudIdentityAccountsExistResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CheckCloudIdentityAccountsExistResponse.
                         * @implements ICheckCloudIdentityAccountsExistResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse=} [properties] Properties to set
                         */
                        function CheckCloudIdentityAccountsExistResponse(properties) {
                            this.cloudIdentityAccounts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CheckCloudIdentityAccountsExistResponse cloudIdentityAccounts.
                         * @member {Array.<google.cloud.channel.v1.ICloudIdentityCustomerAccount>} cloudIdentityAccounts
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @instance
                         */
                        CheckCloudIdentityAccountsExistResponse.prototype.cloudIdentityAccounts = $util.emptyArray;
    
                        /**
                         * Creates a new CheckCloudIdentityAccountsExistResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @static
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse} CheckCloudIdentityAccountsExistResponse instance
                         */
                        CheckCloudIdentityAccountsExistResponse.create = function create(properties) {
                            return new CheckCloudIdentityAccountsExistResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CheckCloudIdentityAccountsExistResponse message. Does not implicitly {@link google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @static
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse} message CheckCloudIdentityAccountsExistResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckCloudIdentityAccountsExistResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cloudIdentityAccounts != null && message.cloudIdentityAccounts.length)
                                for (var i = 0; i < message.cloudIdentityAccounts.length; ++i)
                                    $root.google.cloud.channel.v1.CloudIdentityCustomerAccount.encode(message.cloudIdentityAccounts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CheckCloudIdentityAccountsExistResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @static
                         * @param {google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse} message CheckCloudIdentityAccountsExistResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckCloudIdentityAccountsExistResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CheckCloudIdentityAccountsExistResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse} CheckCloudIdentityAccountsExistResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckCloudIdentityAccountsExistResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.cloudIdentityAccounts && message.cloudIdentityAccounts.length))
                                            message.cloudIdentityAccounts = [];
                                        message.cloudIdentityAccounts.push($root.google.cloud.channel.v1.CloudIdentityCustomerAccount.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CheckCloudIdentityAccountsExistResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse} CheckCloudIdentityAccountsExistResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckCloudIdentityAccountsExistResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CheckCloudIdentityAccountsExistResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CheckCloudIdentityAccountsExistResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cloudIdentityAccounts != null && message.hasOwnProperty("cloudIdentityAccounts")) {
                                if (!Array.isArray(message.cloudIdentityAccounts))
                                    return "cloudIdentityAccounts: array expected";
                                for (var i = 0; i < message.cloudIdentityAccounts.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.CloudIdentityCustomerAccount.verify(message.cloudIdentityAccounts[i]);
                                    if (error)
                                        return "cloudIdentityAccounts." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CheckCloudIdentityAccountsExistResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse} CheckCloudIdentityAccountsExistResponse
                         */
                        CheckCloudIdentityAccountsExistResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse();
                            if (object.cloudIdentityAccounts) {
                                if (!Array.isArray(object.cloudIdentityAccounts))
                                    throw TypeError(".google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse.cloudIdentityAccounts: array expected");
                                message.cloudIdentityAccounts = [];
                                for (var i = 0; i < object.cloudIdentityAccounts.length; ++i) {
                                    if (typeof object.cloudIdentityAccounts[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse.cloudIdentityAccounts: object expected");
                                    message.cloudIdentityAccounts[i] = $root.google.cloud.channel.v1.CloudIdentityCustomerAccount.fromObject(object.cloudIdentityAccounts[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CheckCloudIdentityAccountsExistResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @static
                         * @param {google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse} message CheckCloudIdentityAccountsExistResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CheckCloudIdentityAccountsExistResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.cloudIdentityAccounts = [];
                            if (message.cloudIdentityAccounts && message.cloudIdentityAccounts.length) {
                                object.cloudIdentityAccounts = [];
                                for (var j = 0; j < message.cloudIdentityAccounts.length; ++j)
                                    object.cloudIdentityAccounts[j] = $root.google.cloud.channel.v1.CloudIdentityCustomerAccount.toObject(message.cloudIdentityAccounts[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CheckCloudIdentityAccountsExistResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CheckCloudIdentityAccountsExistResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CheckCloudIdentityAccountsExistResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CheckCloudIdentityAccountsExistResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse";
                        };
    
                        return CheckCloudIdentityAccountsExistResponse;
                    })();
    
                    v1.ListCustomersRequest = (function() {
    
                        /**
                         * Properties of a ListCustomersRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListCustomersRequest
                         * @property {string|null} [parent] ListCustomersRequest parent
                         * @property {number|null} [pageSize] ListCustomersRequest pageSize
                         * @property {string|null} [pageToken] ListCustomersRequest pageToken
                         * @property {string|null} [filter] ListCustomersRequest filter
                         */
    
                        /**
                         * Constructs a new ListCustomersRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListCustomersRequest.
                         * @implements IListCustomersRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListCustomersRequest=} [properties] Properties to set
                         */
                        function ListCustomersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCustomersRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @instance
                         */
                        ListCustomersRequest.prototype.parent = "";
    
                        /**
                         * ListCustomersRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @instance
                         */
                        ListCustomersRequest.prototype.pageSize = 0;
    
                        /**
                         * ListCustomersRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @instance
                         */
                        ListCustomersRequest.prototype.pageToken = "";
    
                        /**
                         * ListCustomersRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @instance
                         */
                        ListCustomersRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListCustomersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomersRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListCustomersRequest} ListCustomersRequest instance
                         */
                        ListCustomersRequest.create = function create(properties) {
                            return new ListCustomersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListCustomersRequest message. Does not implicitly {@link google.cloud.channel.v1.ListCustomersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomersRequest} message ListCustomersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCustomersRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListCustomersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomersRequest} message ListCustomersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCustomersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListCustomersRequest} ListCustomersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListCustomersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCustomersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListCustomersRequest} ListCustomersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCustomersRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCustomersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListCustomersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListCustomersRequest} ListCustomersRequest
                         */
                        ListCustomersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListCustomersRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListCustomersRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCustomersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListCustomersRequest} message ListCustomersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCustomersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListCustomersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCustomersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListCustomersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListCustomersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListCustomersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListCustomersRequest";
                        };
    
                        return ListCustomersRequest;
                    })();
    
                    v1.ListCustomersResponse = (function() {
    
                        /**
                         * Properties of a ListCustomersResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListCustomersResponse
                         * @property {Array.<google.cloud.channel.v1.ICustomer>|null} [customers] ListCustomersResponse customers
                         * @property {string|null} [nextPageToken] ListCustomersResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListCustomersResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListCustomersResponse.
                         * @implements IListCustomersResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListCustomersResponse=} [properties] Properties to set
                         */
                        function ListCustomersResponse(properties) {
                            this.customers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCustomersResponse customers.
                         * @member {Array.<google.cloud.channel.v1.ICustomer>} customers
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @instance
                         */
                        ListCustomersResponse.prototype.customers = $util.emptyArray;
    
                        /**
                         * ListCustomersResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @instance
                         */
                        ListCustomersResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListCustomersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomersResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListCustomersResponse} ListCustomersResponse instance
                         */
                        ListCustomersResponse.create = function create(properties) {
                            return new ListCustomersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListCustomersResponse message. Does not implicitly {@link google.cloud.channel.v1.ListCustomersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomersResponse} message ListCustomersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customers != null && message.customers.length)
                                for (var i = 0; i < message.customers.length; ++i)
                                    $root.google.cloud.channel.v1.Customer.encode(message.customers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCustomersResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListCustomersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomersResponse} message ListCustomersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCustomersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListCustomersResponse} ListCustomersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListCustomersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.customers && message.customers.length))
                                            message.customers = [];
                                        message.customers.push($root.google.cloud.channel.v1.Customer.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCustomersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListCustomersResponse} ListCustomersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCustomersResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCustomersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customers != null && message.hasOwnProperty("customers")) {
                                if (!Array.isArray(message.customers))
                                    return "customers: array expected";
                                for (var i = 0; i < message.customers.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Customer.verify(message.customers[i]);
                                    if (error)
                                        return "customers." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListCustomersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListCustomersResponse} ListCustomersResponse
                         */
                        ListCustomersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListCustomersResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListCustomersResponse();
                            if (object.customers) {
                                if (!Array.isArray(object.customers))
                                    throw TypeError(".google.cloud.channel.v1.ListCustomersResponse.customers: array expected");
                                message.customers = [];
                                for (var i = 0; i < object.customers.length; ++i) {
                                    if (typeof object.customers[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListCustomersResponse.customers: object expected");
                                    message.customers[i] = $root.google.cloud.channel.v1.Customer.fromObject(object.customers[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCustomersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListCustomersResponse} message ListCustomersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCustomersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.customers = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.customers && message.customers.length) {
                                object.customers = [];
                                for (var j = 0; j < message.customers.length; ++j)
                                    object.customers[j] = $root.google.cloud.channel.v1.Customer.toObject(message.customers[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListCustomersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCustomersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListCustomersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListCustomersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListCustomersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListCustomersResponse";
                        };
    
                        return ListCustomersResponse;
                    })();
    
                    v1.GetCustomerRequest = (function() {
    
                        /**
                         * Properties of a GetCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IGetCustomerRequest
                         * @property {string|null} [name] GetCustomerRequest name
                         */
    
                        /**
                         * Constructs a new GetCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a GetCustomerRequest.
                         * @implements IGetCustomerRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IGetCustomerRequest=} [properties] Properties to set
                         */
                        function GetCustomerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetCustomerRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @instance
                         */
                        GetCustomerRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetCustomerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetCustomerRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.GetCustomerRequest} GetCustomerRequest instance
                         */
                        GetCustomerRequest.create = function create(properties) {
                            return new GetCustomerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetCustomerRequest message. Does not implicitly {@link google.cloud.channel.v1.GetCustomerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetCustomerRequest} message GetCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCustomerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetCustomerRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.GetCustomerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetCustomerRequest} message GetCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCustomerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetCustomerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.GetCustomerRequest} GetCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCustomerRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.GetCustomerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetCustomerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.GetCustomerRequest} GetCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCustomerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetCustomerRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetCustomerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetCustomerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.GetCustomerRequest} GetCustomerRequest
                         */
                        GetCustomerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.GetCustomerRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.GetCustomerRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetCustomerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.GetCustomerRequest} message GetCustomerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetCustomerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetCustomerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetCustomerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetCustomerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.GetCustomerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetCustomerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.GetCustomerRequest";
                        };
    
                        return GetCustomerRequest;
                    })();
    
                    v1.CreateCustomerRequest = (function() {
    
                        /**
                         * Properties of a CreateCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ICreateCustomerRequest
                         * @property {string|null} [parent] CreateCustomerRequest parent
                         * @property {google.cloud.channel.v1.ICustomer|null} [customer] CreateCustomerRequest customer
                         */
    
                        /**
                         * Constructs a new CreateCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CreateCustomerRequest.
                         * @implements ICreateCustomerRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ICreateCustomerRequest=} [properties] Properties to set
                         */
                        function CreateCustomerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateCustomerRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @instance
                         */
                        CreateCustomerRequest.prototype.parent = "";
    
                        /**
                         * CreateCustomerRequest customer.
                         * @member {google.cloud.channel.v1.ICustomer|null|undefined} customer
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @instance
                         */
                        CreateCustomerRequest.prototype.customer = null;
    
                        /**
                         * Creates a new CreateCustomerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateCustomerRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CreateCustomerRequest} CreateCustomerRequest instance
                         */
                        CreateCustomerRequest.create = function create(properties) {
                            return new CreateCustomerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateCustomerRequest message. Does not implicitly {@link google.cloud.channel.v1.CreateCustomerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateCustomerRequest} message CreateCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCustomerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.customer != null && Object.hasOwnProperty.call(message, "customer"))
                                $root.google.cloud.channel.v1.Customer.encode(message.customer, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateCustomerRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CreateCustomerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateCustomerRequest} message CreateCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCustomerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateCustomerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CreateCustomerRequest} CreateCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCustomerRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CreateCustomerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.customer = $root.google.cloud.channel.v1.Customer.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateCustomerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CreateCustomerRequest} CreateCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCustomerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateCustomerRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateCustomerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.customer != null && message.hasOwnProperty("customer")) {
                                var error = $root.google.cloud.channel.v1.Customer.verify(message.customer);
                                if (error)
                                    return "customer." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateCustomerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CreateCustomerRequest} CreateCustomerRequest
                         */
                        CreateCustomerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CreateCustomerRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CreateCustomerRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.customer != null) {
                                if (typeof object.customer !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CreateCustomerRequest.customer: object expected");
                                message.customer = $root.google.cloud.channel.v1.Customer.fromObject(object.customer);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateCustomerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.CreateCustomerRequest} message CreateCustomerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateCustomerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.customer = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                object.customer = $root.google.cloud.channel.v1.Customer.toObject(message.customer, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateCustomerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateCustomerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateCustomerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CreateCustomerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateCustomerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CreateCustomerRequest";
                        };
    
                        return CreateCustomerRequest;
                    })();
    
                    v1.UpdateCustomerRequest = (function() {
    
                        /**
                         * Properties of an UpdateCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IUpdateCustomerRequest
                         * @property {google.cloud.channel.v1.ICustomer|null} [customer] UpdateCustomerRequest customer
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCustomerRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an UpdateCustomerRequest.
                         * @implements IUpdateCustomerRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IUpdateCustomerRequest=} [properties] Properties to set
                         */
                        function UpdateCustomerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateCustomerRequest customer.
                         * @member {google.cloud.channel.v1.ICustomer|null|undefined} customer
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @instance
                         */
                        UpdateCustomerRequest.prototype.customer = null;
    
                        /**
                         * UpdateCustomerRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @instance
                         */
                        UpdateCustomerRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateCustomerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateCustomerRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.UpdateCustomerRequest} UpdateCustomerRequest instance
                         */
                        UpdateCustomerRequest.create = function create(properties) {
                            return new UpdateCustomerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateCustomerRequest message. Does not implicitly {@link google.cloud.channel.v1.UpdateCustomerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateCustomerRequest} message UpdateCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCustomerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customer != null && Object.hasOwnProperty.call(message, "customer"))
                                $root.google.cloud.channel.v1.Customer.encode(message.customer, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateCustomerRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.UpdateCustomerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateCustomerRequest} message UpdateCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCustomerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateCustomerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.UpdateCustomerRequest} UpdateCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCustomerRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.UpdateCustomerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.customer = $root.google.cloud.channel.v1.Customer.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateCustomerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.UpdateCustomerRequest} UpdateCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCustomerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateCustomerRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateCustomerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customer != null && message.hasOwnProperty("customer")) {
                                var error = $root.google.cloud.channel.v1.Customer.verify(message.customer);
                                if (error)
                                    return "customer." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateCustomerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.UpdateCustomerRequest} UpdateCustomerRequest
                         */
                        UpdateCustomerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.UpdateCustomerRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.UpdateCustomerRequest();
                            if (object.customer != null) {
                                if (typeof object.customer !== "object")
                                    throw TypeError(".google.cloud.channel.v1.UpdateCustomerRequest.customer: object expected");
                                message.customer = $root.google.cloud.channel.v1.Customer.fromObject(object.customer);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.channel.v1.UpdateCustomerRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateCustomerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.UpdateCustomerRequest} message UpdateCustomerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateCustomerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.customer = null;
                                object.updateMask = null;
                            }
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                object.customer = $root.google.cloud.channel.v1.Customer.toObject(message.customer, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateCustomerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateCustomerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateCustomerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.UpdateCustomerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateCustomerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.UpdateCustomerRequest";
                        };
    
                        return UpdateCustomerRequest;
                    })();
    
                    v1.DeleteCustomerRequest = (function() {
    
                        /**
                         * Properties of a DeleteCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IDeleteCustomerRequest
                         * @property {string|null} [name] DeleteCustomerRequest name
                         */
    
                        /**
                         * Constructs a new DeleteCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a DeleteCustomerRequest.
                         * @implements IDeleteCustomerRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IDeleteCustomerRequest=} [properties] Properties to set
                         */
                        function DeleteCustomerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteCustomerRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @instance
                         */
                        DeleteCustomerRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteCustomerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IDeleteCustomerRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.DeleteCustomerRequest} DeleteCustomerRequest instance
                         */
                        DeleteCustomerRequest.create = function create(properties) {
                            return new DeleteCustomerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteCustomerRequest message. Does not implicitly {@link google.cloud.channel.v1.DeleteCustomerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IDeleteCustomerRequest} message DeleteCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCustomerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteCustomerRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.DeleteCustomerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IDeleteCustomerRequest} message DeleteCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCustomerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteCustomerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.DeleteCustomerRequest} DeleteCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCustomerRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.DeleteCustomerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteCustomerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.DeleteCustomerRequest} DeleteCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCustomerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteCustomerRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteCustomerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteCustomerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.DeleteCustomerRequest} DeleteCustomerRequest
                         */
                        DeleteCustomerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.DeleteCustomerRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.DeleteCustomerRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteCustomerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.DeleteCustomerRequest} message DeleteCustomerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteCustomerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteCustomerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteCustomerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteCustomerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.DeleteCustomerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteCustomerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.DeleteCustomerRequest";
                        };
    
                        return DeleteCustomerRequest;
                    })();
    
                    v1.ImportCustomerRequest = (function() {
    
                        /**
                         * Properties of an ImportCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IImportCustomerRequest
                         * @property {string|null} [domain] ImportCustomerRequest domain
                         * @property {string|null} [cloudIdentityId] ImportCustomerRequest cloudIdentityId
                         * @property {string|null} [parent] ImportCustomerRequest parent
                         * @property {string|null} [authToken] ImportCustomerRequest authToken
                         * @property {boolean|null} [overwriteIfExists] ImportCustomerRequest overwriteIfExists
                         * @property {string|null} [channelPartnerId] ImportCustomerRequest channelPartnerId
                         * @property {string|null} [customer] ImportCustomerRequest customer
                         */
    
                        /**
                         * Constructs a new ImportCustomerRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an ImportCustomerRequest.
                         * @implements IImportCustomerRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IImportCustomerRequest=} [properties] Properties to set
                         */
                        function ImportCustomerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportCustomerRequest domain.
                         * @member {string|null|undefined} domain
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @instance
                         */
                        ImportCustomerRequest.prototype.domain = null;
    
                        /**
                         * ImportCustomerRequest cloudIdentityId.
                         * @member {string|null|undefined} cloudIdentityId
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @instance
                         */
                        ImportCustomerRequest.prototype.cloudIdentityId = null;
    
                        /**
                         * ImportCustomerRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @instance
                         */
                        ImportCustomerRequest.prototype.parent = "";
    
                        /**
                         * ImportCustomerRequest authToken.
                         * @member {string} authToken
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @instance
                         */
                        ImportCustomerRequest.prototype.authToken = "";
    
                        /**
                         * ImportCustomerRequest overwriteIfExists.
                         * @member {boolean} overwriteIfExists
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @instance
                         */
                        ImportCustomerRequest.prototype.overwriteIfExists = false;
    
                        /**
                         * ImportCustomerRequest channelPartnerId.
                         * @member {string} channelPartnerId
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @instance
                         */
                        ImportCustomerRequest.prototype.channelPartnerId = "";
    
                        /**
                         * ImportCustomerRequest customer.
                         * @member {string} customer
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @instance
                         */
                        ImportCustomerRequest.prototype.customer = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportCustomerRequest customerIdentity.
                         * @member {"domain"|"cloudIdentityId"|undefined} customerIdentity
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @instance
                         */
                        Object.defineProperty(ImportCustomerRequest.prototype, "customerIdentity", {
                            get: $util.oneOfGetter($oneOfFields = ["domain", "cloudIdentityId"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportCustomerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IImportCustomerRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ImportCustomerRequest} ImportCustomerRequest instance
                         */
                        ImportCustomerRequest.create = function create(properties) {
                            return new ImportCustomerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ImportCustomerRequest message. Does not implicitly {@link google.cloud.channel.v1.ImportCustomerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IImportCustomerRequest} message ImportCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportCustomerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.domain != null && Object.hasOwnProperty.call(message, "domain"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.domain);
                            if (message.cloudIdentityId != null && Object.hasOwnProperty.call(message, "cloudIdentityId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.cloudIdentityId);
                            if (message.authToken != null && Object.hasOwnProperty.call(message, "authToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.authToken);
                            if (message.overwriteIfExists != null && Object.hasOwnProperty.call(message, "overwriteIfExists"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.overwriteIfExists);
                            if (message.channelPartnerId != null && Object.hasOwnProperty.call(message, "channelPartnerId"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.channelPartnerId);
                            if (message.customer != null && Object.hasOwnProperty.call(message, "customer"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.customer);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportCustomerRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ImportCustomerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.IImportCustomerRequest} message ImportCustomerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportCustomerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportCustomerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ImportCustomerRequest} ImportCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportCustomerRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ImportCustomerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.domain = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.cloudIdentityId = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.authToken = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.overwriteIfExists = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.channelPartnerId = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.customer = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportCustomerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ImportCustomerRequest} ImportCustomerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportCustomerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportCustomerRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportCustomerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.domain != null && message.hasOwnProperty("domain")) {
                                properties.customerIdentity = 1;
                                if (!$util.isString(message.domain))
                                    return "domain: string expected";
                            }
                            if (message.cloudIdentityId != null && message.hasOwnProperty("cloudIdentityId")) {
                                if (properties.customerIdentity === 1)
                                    return "customerIdentity: multiple values";
                                properties.customerIdentity = 1;
                                if (!$util.isString(message.cloudIdentityId))
                                    return "cloudIdentityId: string expected";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.authToken != null && message.hasOwnProperty("authToken"))
                                if (!$util.isString(message.authToken))
                                    return "authToken: string expected";
                            if (message.overwriteIfExists != null && message.hasOwnProperty("overwriteIfExists"))
                                if (typeof message.overwriteIfExists !== "boolean")
                                    return "overwriteIfExists: boolean expected";
                            if (message.channelPartnerId != null && message.hasOwnProperty("channelPartnerId"))
                                if (!$util.isString(message.channelPartnerId))
                                    return "channelPartnerId: string expected";
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                if (!$util.isString(message.customer))
                                    return "customer: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportCustomerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ImportCustomerRequest} ImportCustomerRequest
                         */
                        ImportCustomerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ImportCustomerRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ImportCustomerRequest();
                            if (object.domain != null)
                                message.domain = String(object.domain);
                            if (object.cloudIdentityId != null)
                                message.cloudIdentityId = String(object.cloudIdentityId);
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.authToken != null)
                                message.authToken = String(object.authToken);
                            if (object.overwriteIfExists != null)
                                message.overwriteIfExists = Boolean(object.overwriteIfExists);
                            if (object.channelPartnerId != null)
                                message.channelPartnerId = String(object.channelPartnerId);
                            if (object.customer != null)
                                message.customer = String(object.customer);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportCustomerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @static
                         * @param {google.cloud.channel.v1.ImportCustomerRequest} message ImportCustomerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportCustomerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.authToken = "";
                                object.overwriteIfExists = false;
                                object.channelPartnerId = "";
                                object.customer = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.domain != null && message.hasOwnProperty("domain")) {
                                object.domain = message.domain;
                                if (options.oneofs)
                                    object.customerIdentity = "domain";
                            }
                            if (message.cloudIdentityId != null && message.hasOwnProperty("cloudIdentityId")) {
                                object.cloudIdentityId = message.cloudIdentityId;
                                if (options.oneofs)
                                    object.customerIdentity = "cloudIdentityId";
                            }
                            if (message.authToken != null && message.hasOwnProperty("authToken"))
                                object.authToken = message.authToken;
                            if (message.overwriteIfExists != null && message.hasOwnProperty("overwriteIfExists"))
                                object.overwriteIfExists = message.overwriteIfExists;
                            if (message.channelPartnerId != null && message.hasOwnProperty("channelPartnerId"))
                                object.channelPartnerId = message.channelPartnerId;
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                object.customer = message.customer;
                            return object;
                        };
    
                        /**
                         * Converts this ImportCustomerRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportCustomerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportCustomerRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ImportCustomerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportCustomerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ImportCustomerRequest";
                        };
    
                        return ImportCustomerRequest;
                    })();
    
                    v1.ProvisionCloudIdentityRequest = (function() {
    
                        /**
                         * Properties of a ProvisionCloudIdentityRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IProvisionCloudIdentityRequest
                         * @property {string|null} [customer] ProvisionCloudIdentityRequest customer
                         * @property {google.cloud.channel.v1.ICloudIdentityInfo|null} [cloudIdentityInfo] ProvisionCloudIdentityRequest cloudIdentityInfo
                         * @property {google.cloud.channel.v1.IAdminUser|null} [user] ProvisionCloudIdentityRequest user
                         * @property {boolean|null} [validateOnly] ProvisionCloudIdentityRequest validateOnly
                         */
    
                        /**
                         * Constructs a new ProvisionCloudIdentityRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ProvisionCloudIdentityRequest.
                         * @implements IProvisionCloudIdentityRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IProvisionCloudIdentityRequest=} [properties] Properties to set
                         */
                        function ProvisionCloudIdentityRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProvisionCloudIdentityRequest customer.
                         * @member {string} customer
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @instance
                         */
                        ProvisionCloudIdentityRequest.prototype.customer = "";
    
                        /**
                         * ProvisionCloudIdentityRequest cloudIdentityInfo.
                         * @member {google.cloud.channel.v1.ICloudIdentityInfo|null|undefined} cloudIdentityInfo
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @instance
                         */
                        ProvisionCloudIdentityRequest.prototype.cloudIdentityInfo = null;
    
                        /**
                         * ProvisionCloudIdentityRequest user.
                         * @member {google.cloud.channel.v1.IAdminUser|null|undefined} user
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @instance
                         */
                        ProvisionCloudIdentityRequest.prototype.user = null;
    
                        /**
                         * ProvisionCloudIdentityRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @instance
                         */
                        ProvisionCloudIdentityRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new ProvisionCloudIdentityRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @static
                         * @param {google.cloud.channel.v1.IProvisionCloudIdentityRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ProvisionCloudIdentityRequest} ProvisionCloudIdentityRequest instance
                         */
                        ProvisionCloudIdentityRequest.create = function create(properties) {
                            return new ProvisionCloudIdentityRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ProvisionCloudIdentityRequest message. Does not implicitly {@link google.cloud.channel.v1.ProvisionCloudIdentityRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @static
                         * @param {google.cloud.channel.v1.IProvisionCloudIdentityRequest} message ProvisionCloudIdentityRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProvisionCloudIdentityRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customer != null && Object.hasOwnProperty.call(message, "customer"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.customer);
                            if (message.cloudIdentityInfo != null && Object.hasOwnProperty.call(message, "cloudIdentityInfo"))
                                $root.google.cloud.channel.v1.CloudIdentityInfo.encode(message.cloudIdentityInfo, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.user != null && Object.hasOwnProperty.call(message, "user"))
                                $root.google.cloud.channel.v1.AdminUser.encode(message.user, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProvisionCloudIdentityRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ProvisionCloudIdentityRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @static
                         * @param {google.cloud.channel.v1.IProvisionCloudIdentityRequest} message ProvisionCloudIdentityRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProvisionCloudIdentityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProvisionCloudIdentityRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ProvisionCloudIdentityRequest} ProvisionCloudIdentityRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProvisionCloudIdentityRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ProvisionCloudIdentityRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customer = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.cloudIdentityInfo = $root.google.cloud.channel.v1.CloudIdentityInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.user = $root.google.cloud.channel.v1.AdminUser.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProvisionCloudIdentityRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ProvisionCloudIdentityRequest} ProvisionCloudIdentityRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProvisionCloudIdentityRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProvisionCloudIdentityRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProvisionCloudIdentityRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                if (!$util.isString(message.customer))
                                    return "customer: string expected";
                            if (message.cloudIdentityInfo != null && message.hasOwnProperty("cloudIdentityInfo")) {
                                var error = $root.google.cloud.channel.v1.CloudIdentityInfo.verify(message.cloudIdentityInfo);
                                if (error)
                                    return "cloudIdentityInfo." + error;
                            }
                            if (message.user != null && message.hasOwnProperty("user")) {
                                var error = $root.google.cloud.channel.v1.AdminUser.verify(message.user);
                                if (error)
                                    return "user." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ProvisionCloudIdentityRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ProvisionCloudIdentityRequest} ProvisionCloudIdentityRequest
                         */
                        ProvisionCloudIdentityRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ProvisionCloudIdentityRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ProvisionCloudIdentityRequest();
                            if (object.customer != null)
                                message.customer = String(object.customer);
                            if (object.cloudIdentityInfo != null) {
                                if (typeof object.cloudIdentityInfo !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ProvisionCloudIdentityRequest.cloudIdentityInfo: object expected");
                                message.cloudIdentityInfo = $root.google.cloud.channel.v1.CloudIdentityInfo.fromObject(object.cloudIdentityInfo);
                            }
                            if (object.user != null) {
                                if (typeof object.user !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ProvisionCloudIdentityRequest.user: object expected");
                                message.user = $root.google.cloud.channel.v1.AdminUser.fromObject(object.user);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProvisionCloudIdentityRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @static
                         * @param {google.cloud.channel.v1.ProvisionCloudIdentityRequest} message ProvisionCloudIdentityRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProvisionCloudIdentityRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.customer = "";
                                object.cloudIdentityInfo = null;
                                object.user = null;
                                object.validateOnly = false;
                            }
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                object.customer = message.customer;
                            if (message.cloudIdentityInfo != null && message.hasOwnProperty("cloudIdentityInfo"))
                                object.cloudIdentityInfo = $root.google.cloud.channel.v1.CloudIdentityInfo.toObject(message.cloudIdentityInfo, options);
                            if (message.user != null && message.hasOwnProperty("user"))
                                object.user = $root.google.cloud.channel.v1.AdminUser.toObject(message.user, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this ProvisionCloudIdentityRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProvisionCloudIdentityRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ProvisionCloudIdentityRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ProvisionCloudIdentityRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ProvisionCloudIdentityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ProvisionCloudIdentityRequest";
                        };
    
                        return ProvisionCloudIdentityRequest;
                    })();
    
                    v1.ListEntitlementsRequest = (function() {
    
                        /**
                         * Properties of a ListEntitlementsRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListEntitlementsRequest
                         * @property {string|null} [parent] ListEntitlementsRequest parent
                         * @property {number|null} [pageSize] ListEntitlementsRequest pageSize
                         * @property {string|null} [pageToken] ListEntitlementsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListEntitlementsRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListEntitlementsRequest.
                         * @implements IListEntitlementsRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListEntitlementsRequest=} [properties] Properties to set
                         */
                        function ListEntitlementsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListEntitlementsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @instance
                         */
                        ListEntitlementsRequest.prototype.parent = "";
    
                        /**
                         * ListEntitlementsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @instance
                         */
                        ListEntitlementsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListEntitlementsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @instance
                         */
                        ListEntitlementsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListEntitlementsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListEntitlementsRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListEntitlementsRequest} ListEntitlementsRequest instance
                         */
                        ListEntitlementsRequest.create = function create(properties) {
                            return new ListEntitlementsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListEntitlementsRequest message. Does not implicitly {@link google.cloud.channel.v1.ListEntitlementsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListEntitlementsRequest} message ListEntitlementsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEntitlementsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListEntitlementsRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListEntitlementsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListEntitlementsRequest} message ListEntitlementsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEntitlementsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListEntitlementsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListEntitlementsRequest} ListEntitlementsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEntitlementsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListEntitlementsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListEntitlementsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListEntitlementsRequest} ListEntitlementsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEntitlementsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListEntitlementsRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListEntitlementsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListEntitlementsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListEntitlementsRequest} ListEntitlementsRequest
                         */
                        ListEntitlementsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListEntitlementsRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListEntitlementsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListEntitlementsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListEntitlementsRequest} message ListEntitlementsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListEntitlementsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListEntitlementsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListEntitlementsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListEntitlementsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListEntitlementsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListEntitlementsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListEntitlementsRequest";
                        };
    
                        return ListEntitlementsRequest;
                    })();
    
                    v1.ListEntitlementsResponse = (function() {
    
                        /**
                         * Properties of a ListEntitlementsResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListEntitlementsResponse
                         * @property {Array.<google.cloud.channel.v1.IEntitlement>|null} [entitlements] ListEntitlementsResponse entitlements
                         * @property {string|null} [nextPageToken] ListEntitlementsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListEntitlementsResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListEntitlementsResponse.
                         * @implements IListEntitlementsResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListEntitlementsResponse=} [properties] Properties to set
                         */
                        function ListEntitlementsResponse(properties) {
                            this.entitlements = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListEntitlementsResponse entitlements.
                         * @member {Array.<google.cloud.channel.v1.IEntitlement>} entitlements
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @instance
                         */
                        ListEntitlementsResponse.prototype.entitlements = $util.emptyArray;
    
                        /**
                         * ListEntitlementsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @instance
                         */
                        ListEntitlementsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListEntitlementsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListEntitlementsResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListEntitlementsResponse} ListEntitlementsResponse instance
                         */
                        ListEntitlementsResponse.create = function create(properties) {
                            return new ListEntitlementsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListEntitlementsResponse message. Does not implicitly {@link google.cloud.channel.v1.ListEntitlementsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListEntitlementsResponse} message ListEntitlementsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEntitlementsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.entitlements != null && message.entitlements.length)
                                for (var i = 0; i < message.entitlements.length; ++i)
                                    $root.google.cloud.channel.v1.Entitlement.encode(message.entitlements[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListEntitlementsResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListEntitlementsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListEntitlementsResponse} message ListEntitlementsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEntitlementsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListEntitlementsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListEntitlementsResponse} ListEntitlementsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEntitlementsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListEntitlementsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.entitlements && message.entitlements.length))
                                            message.entitlements = [];
                                        message.entitlements.push($root.google.cloud.channel.v1.Entitlement.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListEntitlementsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListEntitlementsResponse} ListEntitlementsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEntitlementsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListEntitlementsResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListEntitlementsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.entitlements != null && message.hasOwnProperty("entitlements")) {
                                if (!Array.isArray(message.entitlements))
                                    return "entitlements: array expected";
                                for (var i = 0; i < message.entitlements.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Entitlement.verify(message.entitlements[i]);
                                    if (error)
                                        return "entitlements." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListEntitlementsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListEntitlementsResponse} ListEntitlementsResponse
                         */
                        ListEntitlementsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListEntitlementsResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListEntitlementsResponse();
                            if (object.entitlements) {
                                if (!Array.isArray(object.entitlements))
                                    throw TypeError(".google.cloud.channel.v1.ListEntitlementsResponse.entitlements: array expected");
                                message.entitlements = [];
                                for (var i = 0; i < object.entitlements.length; ++i) {
                                    if (typeof object.entitlements[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListEntitlementsResponse.entitlements: object expected");
                                    message.entitlements[i] = $root.google.cloud.channel.v1.Entitlement.fromObject(object.entitlements[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListEntitlementsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListEntitlementsResponse} message ListEntitlementsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListEntitlementsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.entitlements = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.entitlements && message.entitlements.length) {
                                object.entitlements = [];
                                for (var j = 0; j < message.entitlements.length; ++j)
                                    object.entitlements[j] = $root.google.cloud.channel.v1.Entitlement.toObject(message.entitlements[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListEntitlementsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListEntitlementsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListEntitlementsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListEntitlementsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListEntitlementsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListEntitlementsResponse";
                        };
    
                        return ListEntitlementsResponse;
                    })();
    
                    v1.ListTransferableSkusRequest = (function() {
    
                        /**
                         * Properties of a ListTransferableSkusRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListTransferableSkusRequest
                         * @property {string|null} [cloudIdentityId] ListTransferableSkusRequest cloudIdentityId
                         * @property {string|null} [customerName] ListTransferableSkusRequest customerName
                         * @property {string|null} [parent] ListTransferableSkusRequest parent
                         * @property {number|null} [pageSize] ListTransferableSkusRequest pageSize
                         * @property {string|null} [pageToken] ListTransferableSkusRequest pageToken
                         * @property {string|null} [authToken] ListTransferableSkusRequest authToken
                         * @property {string|null} [languageCode] ListTransferableSkusRequest languageCode
                         */
    
                        /**
                         * Constructs a new ListTransferableSkusRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListTransferableSkusRequest.
                         * @implements IListTransferableSkusRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListTransferableSkusRequest=} [properties] Properties to set
                         */
                        function ListTransferableSkusRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTransferableSkusRequest cloudIdentityId.
                         * @member {string|null|undefined} cloudIdentityId
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @instance
                         */
                        ListTransferableSkusRequest.prototype.cloudIdentityId = null;
    
                        /**
                         * ListTransferableSkusRequest customerName.
                         * @member {string|null|undefined} customerName
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @instance
                         */
                        ListTransferableSkusRequest.prototype.customerName = null;
    
                        /**
                         * ListTransferableSkusRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @instance
                         */
                        ListTransferableSkusRequest.prototype.parent = "";
    
                        /**
                         * ListTransferableSkusRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @instance
                         */
                        ListTransferableSkusRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTransferableSkusRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @instance
                         */
                        ListTransferableSkusRequest.prototype.pageToken = "";
    
                        /**
                         * ListTransferableSkusRequest authToken.
                         * @member {string} authToken
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @instance
                         */
                        ListTransferableSkusRequest.prototype.authToken = "";
    
                        /**
                         * ListTransferableSkusRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @instance
                         */
                        ListTransferableSkusRequest.prototype.languageCode = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ListTransferableSkusRequest transferredCustomerIdentity.
                         * @member {"cloudIdentityId"|"customerName"|undefined} transferredCustomerIdentity
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @instance
                         */
                        Object.defineProperty(ListTransferableSkusRequest.prototype, "transferredCustomerIdentity", {
                            get: $util.oneOfGetter($oneOfFields = ["cloudIdentityId", "customerName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ListTransferableSkusRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableSkusRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListTransferableSkusRequest} ListTransferableSkusRequest instance
                         */
                        ListTransferableSkusRequest.create = function create(properties) {
                            return new ListTransferableSkusRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTransferableSkusRequest message. Does not implicitly {@link google.cloud.channel.v1.ListTransferableSkusRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableSkusRequest} message ListTransferableSkusRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTransferableSkusRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.cloudIdentityId != null && Object.hasOwnProperty.call(message, "cloudIdentityId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.cloudIdentityId);
                            if (message.authToken != null && Object.hasOwnProperty.call(message, "authToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.authToken);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.languageCode);
                            if (message.customerName != null && Object.hasOwnProperty.call(message, "customerName"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.customerName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTransferableSkusRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListTransferableSkusRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableSkusRequest} message ListTransferableSkusRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTransferableSkusRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTransferableSkusRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListTransferableSkusRequest} ListTransferableSkusRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTransferableSkusRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListTransferableSkusRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.cloudIdentityId = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.customerName = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.authToken = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTransferableSkusRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListTransferableSkusRequest} ListTransferableSkusRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTransferableSkusRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTransferableSkusRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTransferableSkusRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.cloudIdentityId != null && message.hasOwnProperty("cloudIdentityId")) {
                                properties.transferredCustomerIdentity = 1;
                                if (!$util.isString(message.cloudIdentityId))
                                    return "cloudIdentityId: string expected";
                            }
                            if (message.customerName != null && message.hasOwnProperty("customerName")) {
                                if (properties.transferredCustomerIdentity === 1)
                                    return "transferredCustomerIdentity: multiple values";
                                properties.transferredCustomerIdentity = 1;
                                if (!$util.isString(message.customerName))
                                    return "customerName: string expected";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.authToken != null && message.hasOwnProperty("authToken"))
                                if (!$util.isString(message.authToken))
                                    return "authToken: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTransferableSkusRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListTransferableSkusRequest} ListTransferableSkusRequest
                         */
                        ListTransferableSkusRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListTransferableSkusRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListTransferableSkusRequest();
                            if (object.cloudIdentityId != null)
                                message.cloudIdentityId = String(object.cloudIdentityId);
                            if (object.customerName != null)
                                message.customerName = String(object.customerName);
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.authToken != null)
                                message.authToken = String(object.authToken);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTransferableSkusRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListTransferableSkusRequest} message ListTransferableSkusRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTransferableSkusRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.authToken = "";
                                object.languageCode = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.cloudIdentityId != null && message.hasOwnProperty("cloudIdentityId")) {
                                object.cloudIdentityId = message.cloudIdentityId;
                                if (options.oneofs)
                                    object.transferredCustomerIdentity = "cloudIdentityId";
                            }
                            if (message.authToken != null && message.hasOwnProperty("authToken"))
                                object.authToken = message.authToken;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            if (message.customerName != null && message.hasOwnProperty("customerName")) {
                                object.customerName = message.customerName;
                                if (options.oneofs)
                                    object.transferredCustomerIdentity = "customerName";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListTransferableSkusRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTransferableSkusRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTransferableSkusRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListTransferableSkusRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTransferableSkusRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListTransferableSkusRequest";
                        };
    
                        return ListTransferableSkusRequest;
                    })();
    
                    v1.ListTransferableSkusResponse = (function() {
    
                        /**
                         * Properties of a ListTransferableSkusResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListTransferableSkusResponse
                         * @property {Array.<google.cloud.channel.v1.ITransferableSku>|null} [transferableSkus] ListTransferableSkusResponse transferableSkus
                         * @property {string|null} [nextPageToken] ListTransferableSkusResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTransferableSkusResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListTransferableSkusResponse.
                         * @implements IListTransferableSkusResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListTransferableSkusResponse=} [properties] Properties to set
                         */
                        function ListTransferableSkusResponse(properties) {
                            this.transferableSkus = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTransferableSkusResponse transferableSkus.
                         * @member {Array.<google.cloud.channel.v1.ITransferableSku>} transferableSkus
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @instance
                         */
                        ListTransferableSkusResponse.prototype.transferableSkus = $util.emptyArray;
    
                        /**
                         * ListTransferableSkusResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @instance
                         */
                        ListTransferableSkusResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTransferableSkusResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableSkusResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListTransferableSkusResponse} ListTransferableSkusResponse instance
                         */
                        ListTransferableSkusResponse.create = function create(properties) {
                            return new ListTransferableSkusResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTransferableSkusResponse message. Does not implicitly {@link google.cloud.channel.v1.ListTransferableSkusResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableSkusResponse} message ListTransferableSkusResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTransferableSkusResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.transferableSkus != null && message.transferableSkus.length)
                                for (var i = 0; i < message.transferableSkus.length; ++i)
                                    $root.google.cloud.channel.v1.TransferableSku.encode(message.transferableSkus[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTransferableSkusResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListTransferableSkusResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableSkusResponse} message ListTransferableSkusResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTransferableSkusResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTransferableSkusResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListTransferableSkusResponse} ListTransferableSkusResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTransferableSkusResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListTransferableSkusResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.transferableSkus && message.transferableSkus.length))
                                            message.transferableSkus = [];
                                        message.transferableSkus.push($root.google.cloud.channel.v1.TransferableSku.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTransferableSkusResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListTransferableSkusResponse} ListTransferableSkusResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTransferableSkusResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTransferableSkusResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTransferableSkusResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.transferableSkus != null && message.hasOwnProperty("transferableSkus")) {
                                if (!Array.isArray(message.transferableSkus))
                                    return "transferableSkus: array expected";
                                for (var i = 0; i < message.transferableSkus.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.TransferableSku.verify(message.transferableSkus[i]);
                                    if (error)
                                        return "transferableSkus." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTransferableSkusResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListTransferableSkusResponse} ListTransferableSkusResponse
                         */
                        ListTransferableSkusResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListTransferableSkusResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListTransferableSkusResponse();
                            if (object.transferableSkus) {
                                if (!Array.isArray(object.transferableSkus))
                                    throw TypeError(".google.cloud.channel.v1.ListTransferableSkusResponse.transferableSkus: array expected");
                                message.transferableSkus = [];
                                for (var i = 0; i < object.transferableSkus.length; ++i) {
                                    if (typeof object.transferableSkus[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListTransferableSkusResponse.transferableSkus: object expected");
                                    message.transferableSkus[i] = $root.google.cloud.channel.v1.TransferableSku.fromObject(object.transferableSkus[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTransferableSkusResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListTransferableSkusResponse} message ListTransferableSkusResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTransferableSkusResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.transferableSkus = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.transferableSkus && message.transferableSkus.length) {
                                object.transferableSkus = [];
                                for (var j = 0; j < message.transferableSkus.length; ++j)
                                    object.transferableSkus[j] = $root.google.cloud.channel.v1.TransferableSku.toObject(message.transferableSkus[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTransferableSkusResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTransferableSkusResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTransferableSkusResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListTransferableSkusResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTransferableSkusResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListTransferableSkusResponse";
                        };
    
                        return ListTransferableSkusResponse;
                    })();
    
                    v1.ListTransferableOffersRequest = (function() {
    
                        /**
                         * Properties of a ListTransferableOffersRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListTransferableOffersRequest
                         * @property {string|null} [cloudIdentityId] ListTransferableOffersRequest cloudIdentityId
                         * @property {string|null} [customerName] ListTransferableOffersRequest customerName
                         * @property {string|null} [parent] ListTransferableOffersRequest parent
                         * @property {number|null} [pageSize] ListTransferableOffersRequest pageSize
                         * @property {string|null} [pageToken] ListTransferableOffersRequest pageToken
                         * @property {string|null} [sku] ListTransferableOffersRequest sku
                         * @property {string|null} [languageCode] ListTransferableOffersRequest languageCode
                         */
    
                        /**
                         * Constructs a new ListTransferableOffersRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListTransferableOffersRequest.
                         * @implements IListTransferableOffersRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListTransferableOffersRequest=} [properties] Properties to set
                         */
                        function ListTransferableOffersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTransferableOffersRequest cloudIdentityId.
                         * @member {string|null|undefined} cloudIdentityId
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @instance
                         */
                        ListTransferableOffersRequest.prototype.cloudIdentityId = null;
    
                        /**
                         * ListTransferableOffersRequest customerName.
                         * @member {string|null|undefined} customerName
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @instance
                         */
                        ListTransferableOffersRequest.prototype.customerName = null;
    
                        /**
                         * ListTransferableOffersRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @instance
                         */
                        ListTransferableOffersRequest.prototype.parent = "";
    
                        /**
                         * ListTransferableOffersRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @instance
                         */
                        ListTransferableOffersRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTransferableOffersRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @instance
                         */
                        ListTransferableOffersRequest.prototype.pageToken = "";
    
                        /**
                         * ListTransferableOffersRequest sku.
                         * @member {string} sku
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @instance
                         */
                        ListTransferableOffersRequest.prototype.sku = "";
    
                        /**
                         * ListTransferableOffersRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @instance
                         */
                        ListTransferableOffersRequest.prototype.languageCode = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ListTransferableOffersRequest transferredCustomerIdentity.
                         * @member {"cloudIdentityId"|"customerName"|undefined} transferredCustomerIdentity
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @instance
                         */
                        Object.defineProperty(ListTransferableOffersRequest.prototype, "transferredCustomerIdentity", {
                            get: $util.oneOfGetter($oneOfFields = ["cloudIdentityId", "customerName"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ListTransferableOffersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableOffersRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListTransferableOffersRequest} ListTransferableOffersRequest instance
                         */
                        ListTransferableOffersRequest.create = function create(properties) {
                            return new ListTransferableOffersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTransferableOffersRequest message. Does not implicitly {@link google.cloud.channel.v1.ListTransferableOffersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableOffersRequest} message ListTransferableOffersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTransferableOffersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.cloudIdentityId != null && Object.hasOwnProperty.call(message, "cloudIdentityId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.cloudIdentityId);
                            if (message.customerName != null && Object.hasOwnProperty.call(message, "customerName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.customerName);
                            if (message.sku != null && Object.hasOwnProperty.call(message, "sku"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.sku);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTransferableOffersRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListTransferableOffersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableOffersRequest} message ListTransferableOffersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTransferableOffersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTransferableOffersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListTransferableOffersRequest} ListTransferableOffersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTransferableOffersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListTransferableOffersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.cloudIdentityId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.customerName = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.sku = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTransferableOffersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListTransferableOffersRequest} ListTransferableOffersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTransferableOffersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTransferableOffersRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTransferableOffersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.cloudIdentityId != null && message.hasOwnProperty("cloudIdentityId")) {
                                properties.transferredCustomerIdentity = 1;
                                if (!$util.isString(message.cloudIdentityId))
                                    return "cloudIdentityId: string expected";
                            }
                            if (message.customerName != null && message.hasOwnProperty("customerName")) {
                                if (properties.transferredCustomerIdentity === 1)
                                    return "transferredCustomerIdentity: multiple values";
                                properties.transferredCustomerIdentity = 1;
                                if (!$util.isString(message.customerName))
                                    return "customerName: string expected";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.sku != null && message.hasOwnProperty("sku"))
                                if (!$util.isString(message.sku))
                                    return "sku: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTransferableOffersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListTransferableOffersRequest} ListTransferableOffersRequest
                         */
                        ListTransferableOffersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListTransferableOffersRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListTransferableOffersRequest();
                            if (object.cloudIdentityId != null)
                                message.cloudIdentityId = String(object.cloudIdentityId);
                            if (object.customerName != null)
                                message.customerName = String(object.customerName);
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.sku != null)
                                message.sku = String(object.sku);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTransferableOffersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListTransferableOffersRequest} message ListTransferableOffersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTransferableOffersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.sku = "";
                                object.languageCode = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.cloudIdentityId != null && message.hasOwnProperty("cloudIdentityId")) {
                                object.cloudIdentityId = message.cloudIdentityId;
                                if (options.oneofs)
                                    object.transferredCustomerIdentity = "cloudIdentityId";
                            }
                            if (message.customerName != null && message.hasOwnProperty("customerName")) {
                                object.customerName = message.customerName;
                                if (options.oneofs)
                                    object.transferredCustomerIdentity = "customerName";
                            }
                            if (message.sku != null && message.hasOwnProperty("sku"))
                                object.sku = message.sku;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this ListTransferableOffersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTransferableOffersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTransferableOffersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListTransferableOffersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTransferableOffersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListTransferableOffersRequest";
                        };
    
                        return ListTransferableOffersRequest;
                    })();
    
                    v1.ListTransferableOffersResponse = (function() {
    
                        /**
                         * Properties of a ListTransferableOffersResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListTransferableOffersResponse
                         * @property {Array.<google.cloud.channel.v1.ITransferableOffer>|null} [transferableOffers] ListTransferableOffersResponse transferableOffers
                         * @property {string|null} [nextPageToken] ListTransferableOffersResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTransferableOffersResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListTransferableOffersResponse.
                         * @implements IListTransferableOffersResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListTransferableOffersResponse=} [properties] Properties to set
                         */
                        function ListTransferableOffersResponse(properties) {
                            this.transferableOffers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTransferableOffersResponse transferableOffers.
                         * @member {Array.<google.cloud.channel.v1.ITransferableOffer>} transferableOffers
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @instance
                         */
                        ListTransferableOffersResponse.prototype.transferableOffers = $util.emptyArray;
    
                        /**
                         * ListTransferableOffersResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @instance
                         */
                        ListTransferableOffersResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTransferableOffersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableOffersResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListTransferableOffersResponse} ListTransferableOffersResponse instance
                         */
                        ListTransferableOffersResponse.create = function create(properties) {
                            return new ListTransferableOffersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTransferableOffersResponse message. Does not implicitly {@link google.cloud.channel.v1.ListTransferableOffersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableOffersResponse} message ListTransferableOffersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTransferableOffersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.transferableOffers != null && message.transferableOffers.length)
                                for (var i = 0; i < message.transferableOffers.length; ++i)
                                    $root.google.cloud.channel.v1.TransferableOffer.encode(message.transferableOffers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTransferableOffersResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListTransferableOffersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListTransferableOffersResponse} message ListTransferableOffersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTransferableOffersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTransferableOffersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListTransferableOffersResponse} ListTransferableOffersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTransferableOffersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListTransferableOffersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.transferableOffers && message.transferableOffers.length))
                                            message.transferableOffers = [];
                                        message.transferableOffers.push($root.google.cloud.channel.v1.TransferableOffer.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTransferableOffersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListTransferableOffersResponse} ListTransferableOffersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTransferableOffersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTransferableOffersResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTransferableOffersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.transferableOffers != null && message.hasOwnProperty("transferableOffers")) {
                                if (!Array.isArray(message.transferableOffers))
                                    return "transferableOffers: array expected";
                                for (var i = 0; i < message.transferableOffers.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.TransferableOffer.verify(message.transferableOffers[i]);
                                    if (error)
                                        return "transferableOffers." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTransferableOffersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListTransferableOffersResponse} ListTransferableOffersResponse
                         */
                        ListTransferableOffersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListTransferableOffersResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListTransferableOffersResponse();
                            if (object.transferableOffers) {
                                if (!Array.isArray(object.transferableOffers))
                                    throw TypeError(".google.cloud.channel.v1.ListTransferableOffersResponse.transferableOffers: array expected");
                                message.transferableOffers = [];
                                for (var i = 0; i < object.transferableOffers.length; ++i) {
                                    if (typeof object.transferableOffers[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListTransferableOffersResponse.transferableOffers: object expected");
                                    message.transferableOffers[i] = $root.google.cloud.channel.v1.TransferableOffer.fromObject(object.transferableOffers[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTransferableOffersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListTransferableOffersResponse} message ListTransferableOffersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTransferableOffersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.transferableOffers = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.transferableOffers && message.transferableOffers.length) {
                                object.transferableOffers = [];
                                for (var j = 0; j < message.transferableOffers.length; ++j)
                                    object.transferableOffers[j] = $root.google.cloud.channel.v1.TransferableOffer.toObject(message.transferableOffers[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTransferableOffersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTransferableOffersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTransferableOffersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListTransferableOffersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTransferableOffersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListTransferableOffersResponse";
                        };
    
                        return ListTransferableOffersResponse;
                    })();
    
                    v1.TransferableOffer = (function() {
    
                        /**
                         * Properties of a TransferableOffer.
                         * @memberof google.cloud.channel.v1
                         * @interface ITransferableOffer
                         * @property {google.cloud.channel.v1.IOffer|null} [offer] TransferableOffer offer
                         */
    
                        /**
                         * Constructs a new TransferableOffer.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a TransferableOffer.
                         * @implements ITransferableOffer
                         * @constructor
                         * @param {google.cloud.channel.v1.ITransferableOffer=} [properties] Properties to set
                         */
                        function TransferableOffer(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferableOffer offer.
                         * @member {google.cloud.channel.v1.IOffer|null|undefined} offer
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @instance
                         */
                        TransferableOffer.prototype.offer = null;
    
                        /**
                         * Creates a new TransferableOffer instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @static
                         * @param {google.cloud.channel.v1.ITransferableOffer=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.TransferableOffer} TransferableOffer instance
                         */
                        TransferableOffer.create = function create(properties) {
                            return new TransferableOffer(properties);
                        };
    
                        /**
                         * Encodes the specified TransferableOffer message. Does not implicitly {@link google.cloud.channel.v1.TransferableOffer.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @static
                         * @param {google.cloud.channel.v1.ITransferableOffer} message TransferableOffer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferableOffer.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.offer != null && Object.hasOwnProperty.call(message, "offer"))
                                $root.google.cloud.channel.v1.Offer.encode(message.offer, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferableOffer message, length delimited. Does not implicitly {@link google.cloud.channel.v1.TransferableOffer.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @static
                         * @param {google.cloud.channel.v1.ITransferableOffer} message TransferableOffer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferableOffer.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferableOffer message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.TransferableOffer} TransferableOffer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferableOffer.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.TransferableOffer();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.offer = $root.google.cloud.channel.v1.Offer.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferableOffer message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.TransferableOffer} TransferableOffer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferableOffer.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferableOffer message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferableOffer.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.offer != null && message.hasOwnProperty("offer")) {
                                var error = $root.google.cloud.channel.v1.Offer.verify(message.offer);
                                if (error)
                                    return "offer." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransferableOffer message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.TransferableOffer} TransferableOffer
                         */
                        TransferableOffer.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.TransferableOffer)
                                return object;
                            var message = new $root.google.cloud.channel.v1.TransferableOffer();
                            if (object.offer != null) {
                                if (typeof object.offer !== "object")
                                    throw TypeError(".google.cloud.channel.v1.TransferableOffer.offer: object expected");
                                message.offer = $root.google.cloud.channel.v1.Offer.fromObject(object.offer);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferableOffer message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @static
                         * @param {google.cloud.channel.v1.TransferableOffer} message TransferableOffer
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferableOffer.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.offer = null;
                            if (message.offer != null && message.hasOwnProperty("offer"))
                                object.offer = $root.google.cloud.channel.v1.Offer.toObject(message.offer, options);
                            return object;
                        };
    
                        /**
                         * Converts this TransferableOffer to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferableOffer.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferableOffer
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.TransferableOffer
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferableOffer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.TransferableOffer";
                        };
    
                        return TransferableOffer;
                    })();
    
                    v1.GetEntitlementRequest = (function() {
    
                        /**
                         * Properties of a GetEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IGetEntitlementRequest
                         * @property {string|null} [name] GetEntitlementRequest name
                         */
    
                        /**
                         * Constructs a new GetEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a GetEntitlementRequest.
                         * @implements IGetEntitlementRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IGetEntitlementRequest=} [properties] Properties to set
                         */
                        function GetEntitlementRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetEntitlementRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @instance
                         */
                        GetEntitlementRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetEntitlementRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetEntitlementRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.GetEntitlementRequest} GetEntitlementRequest instance
                         */
                        GetEntitlementRequest.create = function create(properties) {
                            return new GetEntitlementRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetEntitlementRequest message. Does not implicitly {@link google.cloud.channel.v1.GetEntitlementRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetEntitlementRequest} message GetEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetEntitlementRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetEntitlementRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.GetEntitlementRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetEntitlementRequest} message GetEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetEntitlementRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetEntitlementRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.GetEntitlementRequest} GetEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetEntitlementRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.GetEntitlementRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetEntitlementRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.GetEntitlementRequest} GetEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetEntitlementRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetEntitlementRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetEntitlementRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetEntitlementRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.GetEntitlementRequest} GetEntitlementRequest
                         */
                        GetEntitlementRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.GetEntitlementRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.GetEntitlementRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetEntitlementRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.GetEntitlementRequest} message GetEntitlementRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetEntitlementRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetEntitlementRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetEntitlementRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetEntitlementRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.GetEntitlementRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetEntitlementRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.GetEntitlementRequest";
                        };
    
                        return GetEntitlementRequest;
                    })();
    
                    v1.ListChannelPartnerLinksRequest = (function() {
    
                        /**
                         * Properties of a ListChannelPartnerLinksRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListChannelPartnerLinksRequest
                         * @property {string|null} [parent] ListChannelPartnerLinksRequest parent
                         * @property {number|null} [pageSize] ListChannelPartnerLinksRequest pageSize
                         * @property {string|null} [pageToken] ListChannelPartnerLinksRequest pageToken
                         * @property {google.cloud.channel.v1.ChannelPartnerLinkView|null} [view] ListChannelPartnerLinksRequest view
                         */
    
                        /**
                         * Constructs a new ListChannelPartnerLinksRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListChannelPartnerLinksRequest.
                         * @implements IListChannelPartnerLinksRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksRequest=} [properties] Properties to set
                         */
                        function ListChannelPartnerLinksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListChannelPartnerLinksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @instance
                         */
                        ListChannelPartnerLinksRequest.prototype.parent = "";
    
                        /**
                         * ListChannelPartnerLinksRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @instance
                         */
                        ListChannelPartnerLinksRequest.prototype.pageSize = 0;
    
                        /**
                         * ListChannelPartnerLinksRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @instance
                         */
                        ListChannelPartnerLinksRequest.prototype.pageToken = "";
    
                        /**
                         * ListChannelPartnerLinksRequest view.
                         * @member {google.cloud.channel.v1.ChannelPartnerLinkView} view
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @instance
                         */
                        ListChannelPartnerLinksRequest.prototype.view = 0;
    
                        /**
                         * Creates a new ListChannelPartnerLinksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListChannelPartnerLinksRequest} ListChannelPartnerLinksRequest instance
                         */
                        ListChannelPartnerLinksRequest.create = function create(properties) {
                            return new ListChannelPartnerLinksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListChannelPartnerLinksRequest message. Does not implicitly {@link google.cloud.channel.v1.ListChannelPartnerLinksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksRequest} message ListChannelPartnerLinksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListChannelPartnerLinksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.view);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListChannelPartnerLinksRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListChannelPartnerLinksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksRequest} message ListChannelPartnerLinksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListChannelPartnerLinksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListChannelPartnerLinksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListChannelPartnerLinksRequest} ListChannelPartnerLinksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListChannelPartnerLinksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListChannelPartnerLinksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.view = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListChannelPartnerLinksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListChannelPartnerLinksRequest} ListChannelPartnerLinksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListChannelPartnerLinksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListChannelPartnerLinksRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListChannelPartnerLinksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.view != null && message.hasOwnProperty("view"))
                                switch (message.view) {
                                default:
                                    return "view: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ListChannelPartnerLinksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListChannelPartnerLinksRequest} ListChannelPartnerLinksRequest
                         */
                        ListChannelPartnerLinksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListChannelPartnerLinksRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListChannelPartnerLinksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            switch (object.view) {
                            default:
                                if (typeof object.view === "number") {
                                    message.view = object.view;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED":
                            case 0:
                                message.view = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.view = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.view = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListChannelPartnerLinksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListChannelPartnerLinksRequest} message ListChannelPartnerLinksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListChannelPartnerLinksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.view = options.enums === String ? "UNSPECIFIED" : 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.view != null && message.hasOwnProperty("view"))
                                object.view = options.enums === String ? $root.google.cloud.channel.v1.ChannelPartnerLinkView[message.view] === undefined ? message.view : $root.google.cloud.channel.v1.ChannelPartnerLinkView[message.view] : message.view;
                            return object;
                        };
    
                        /**
                         * Converts this ListChannelPartnerLinksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListChannelPartnerLinksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListChannelPartnerLinksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListChannelPartnerLinksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListChannelPartnerLinksRequest";
                        };
    
                        return ListChannelPartnerLinksRequest;
                    })();
    
                    v1.ListChannelPartnerLinksResponse = (function() {
    
                        /**
                         * Properties of a ListChannelPartnerLinksResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListChannelPartnerLinksResponse
                         * @property {Array.<google.cloud.channel.v1.IChannelPartnerLink>|null} [channelPartnerLinks] ListChannelPartnerLinksResponse channelPartnerLinks
                         * @property {string|null} [nextPageToken] ListChannelPartnerLinksResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListChannelPartnerLinksResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListChannelPartnerLinksResponse.
                         * @implements IListChannelPartnerLinksResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksResponse=} [properties] Properties to set
                         */
                        function ListChannelPartnerLinksResponse(properties) {
                            this.channelPartnerLinks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListChannelPartnerLinksResponse channelPartnerLinks.
                         * @member {Array.<google.cloud.channel.v1.IChannelPartnerLink>} channelPartnerLinks
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @instance
                         */
                        ListChannelPartnerLinksResponse.prototype.channelPartnerLinks = $util.emptyArray;
    
                        /**
                         * ListChannelPartnerLinksResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @instance
                         */
                        ListChannelPartnerLinksResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListChannelPartnerLinksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListChannelPartnerLinksResponse} ListChannelPartnerLinksResponse instance
                         */
                        ListChannelPartnerLinksResponse.create = function create(properties) {
                            return new ListChannelPartnerLinksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListChannelPartnerLinksResponse message. Does not implicitly {@link google.cloud.channel.v1.ListChannelPartnerLinksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksResponse} message ListChannelPartnerLinksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListChannelPartnerLinksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.channelPartnerLinks != null && message.channelPartnerLinks.length)
                                for (var i = 0; i < message.channelPartnerLinks.length; ++i)
                                    $root.google.cloud.channel.v1.ChannelPartnerLink.encode(message.channelPartnerLinks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListChannelPartnerLinksResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListChannelPartnerLinksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerLinksResponse} message ListChannelPartnerLinksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListChannelPartnerLinksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListChannelPartnerLinksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListChannelPartnerLinksResponse} ListChannelPartnerLinksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListChannelPartnerLinksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListChannelPartnerLinksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.channelPartnerLinks && message.channelPartnerLinks.length))
                                            message.channelPartnerLinks = [];
                                        message.channelPartnerLinks.push($root.google.cloud.channel.v1.ChannelPartnerLink.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListChannelPartnerLinksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListChannelPartnerLinksResponse} ListChannelPartnerLinksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListChannelPartnerLinksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListChannelPartnerLinksResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListChannelPartnerLinksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.channelPartnerLinks != null && message.hasOwnProperty("channelPartnerLinks")) {
                                if (!Array.isArray(message.channelPartnerLinks))
                                    return "channelPartnerLinks: array expected";
                                for (var i = 0; i < message.channelPartnerLinks.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.ChannelPartnerLink.verify(message.channelPartnerLinks[i]);
                                    if (error)
                                        return "channelPartnerLinks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListChannelPartnerLinksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListChannelPartnerLinksResponse} ListChannelPartnerLinksResponse
                         */
                        ListChannelPartnerLinksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListChannelPartnerLinksResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListChannelPartnerLinksResponse();
                            if (object.channelPartnerLinks) {
                                if (!Array.isArray(object.channelPartnerLinks))
                                    throw TypeError(".google.cloud.channel.v1.ListChannelPartnerLinksResponse.channelPartnerLinks: array expected");
                                message.channelPartnerLinks = [];
                                for (var i = 0; i < object.channelPartnerLinks.length; ++i) {
                                    if (typeof object.channelPartnerLinks[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListChannelPartnerLinksResponse.channelPartnerLinks: object expected");
                                    message.channelPartnerLinks[i] = $root.google.cloud.channel.v1.ChannelPartnerLink.fromObject(object.channelPartnerLinks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListChannelPartnerLinksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListChannelPartnerLinksResponse} message ListChannelPartnerLinksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListChannelPartnerLinksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.channelPartnerLinks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.channelPartnerLinks && message.channelPartnerLinks.length) {
                                object.channelPartnerLinks = [];
                                for (var j = 0; j < message.channelPartnerLinks.length; ++j)
                                    object.channelPartnerLinks[j] = $root.google.cloud.channel.v1.ChannelPartnerLink.toObject(message.channelPartnerLinks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListChannelPartnerLinksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListChannelPartnerLinksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListChannelPartnerLinksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListChannelPartnerLinksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListChannelPartnerLinksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListChannelPartnerLinksResponse";
                        };
    
                        return ListChannelPartnerLinksResponse;
                    })();
    
                    v1.GetChannelPartnerLinkRequest = (function() {
    
                        /**
                         * Properties of a GetChannelPartnerLinkRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IGetChannelPartnerLinkRequest
                         * @property {string|null} [name] GetChannelPartnerLinkRequest name
                         * @property {google.cloud.channel.v1.ChannelPartnerLinkView|null} [view] GetChannelPartnerLinkRequest view
                         */
    
                        /**
                         * Constructs a new GetChannelPartnerLinkRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a GetChannelPartnerLinkRequest.
                         * @implements IGetChannelPartnerLinkRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IGetChannelPartnerLinkRequest=} [properties] Properties to set
                         */
                        function GetChannelPartnerLinkRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetChannelPartnerLinkRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @instance
                         */
                        GetChannelPartnerLinkRequest.prototype.name = "";
    
                        /**
                         * GetChannelPartnerLinkRequest view.
                         * @member {google.cloud.channel.v1.ChannelPartnerLinkView} view
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @instance
                         */
                        GetChannelPartnerLinkRequest.prototype.view = 0;
    
                        /**
                         * Creates a new GetChannelPartnerLinkRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetChannelPartnerLinkRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.GetChannelPartnerLinkRequest} GetChannelPartnerLinkRequest instance
                         */
                        GetChannelPartnerLinkRequest.create = function create(properties) {
                            return new GetChannelPartnerLinkRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetChannelPartnerLinkRequest message. Does not implicitly {@link google.cloud.channel.v1.GetChannelPartnerLinkRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetChannelPartnerLinkRequest} message GetChannelPartnerLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetChannelPartnerLinkRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.view);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetChannelPartnerLinkRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.GetChannelPartnerLinkRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetChannelPartnerLinkRequest} message GetChannelPartnerLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetChannelPartnerLinkRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetChannelPartnerLinkRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.GetChannelPartnerLinkRequest} GetChannelPartnerLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetChannelPartnerLinkRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.GetChannelPartnerLinkRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.view = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetChannelPartnerLinkRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.GetChannelPartnerLinkRequest} GetChannelPartnerLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetChannelPartnerLinkRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetChannelPartnerLinkRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetChannelPartnerLinkRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.view != null && message.hasOwnProperty("view"))
                                switch (message.view) {
                                default:
                                    return "view: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a GetChannelPartnerLinkRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.GetChannelPartnerLinkRequest} GetChannelPartnerLinkRequest
                         */
                        GetChannelPartnerLinkRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.GetChannelPartnerLinkRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.GetChannelPartnerLinkRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.view) {
                            default:
                                if (typeof object.view === "number") {
                                    message.view = object.view;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED":
                            case 0:
                                message.view = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.view = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.view = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetChannelPartnerLinkRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.GetChannelPartnerLinkRequest} message GetChannelPartnerLinkRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetChannelPartnerLinkRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.view = options.enums === String ? "UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.view != null && message.hasOwnProperty("view"))
                                object.view = options.enums === String ? $root.google.cloud.channel.v1.ChannelPartnerLinkView[message.view] === undefined ? message.view : $root.google.cloud.channel.v1.ChannelPartnerLinkView[message.view] : message.view;
                            return object;
                        };
    
                        /**
                         * Converts this GetChannelPartnerLinkRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetChannelPartnerLinkRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetChannelPartnerLinkRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.GetChannelPartnerLinkRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetChannelPartnerLinkRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.GetChannelPartnerLinkRequest";
                        };
    
                        return GetChannelPartnerLinkRequest;
                    })();
    
                    v1.CreateChannelPartnerLinkRequest = (function() {
    
                        /**
                         * Properties of a CreateChannelPartnerLinkRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ICreateChannelPartnerLinkRequest
                         * @property {string|null} [parent] CreateChannelPartnerLinkRequest parent
                         * @property {google.cloud.channel.v1.IChannelPartnerLink|null} [channelPartnerLink] CreateChannelPartnerLinkRequest channelPartnerLink
                         */
    
                        /**
                         * Constructs a new CreateChannelPartnerLinkRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CreateChannelPartnerLinkRequest.
                         * @implements ICreateChannelPartnerLinkRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerLinkRequest=} [properties] Properties to set
                         */
                        function CreateChannelPartnerLinkRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateChannelPartnerLinkRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @instance
                         */
                        CreateChannelPartnerLinkRequest.prototype.parent = "";
    
                        /**
                         * CreateChannelPartnerLinkRequest channelPartnerLink.
                         * @member {google.cloud.channel.v1.IChannelPartnerLink|null|undefined} channelPartnerLink
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @instance
                         */
                        CreateChannelPartnerLinkRequest.prototype.channelPartnerLink = null;
    
                        /**
                         * Creates a new CreateChannelPartnerLinkRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerLinkRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CreateChannelPartnerLinkRequest} CreateChannelPartnerLinkRequest instance
                         */
                        CreateChannelPartnerLinkRequest.create = function create(properties) {
                            return new CreateChannelPartnerLinkRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateChannelPartnerLinkRequest message. Does not implicitly {@link google.cloud.channel.v1.CreateChannelPartnerLinkRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerLinkRequest} message CreateChannelPartnerLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateChannelPartnerLinkRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.channelPartnerLink != null && Object.hasOwnProperty.call(message, "channelPartnerLink"))
                                $root.google.cloud.channel.v1.ChannelPartnerLink.encode(message.channelPartnerLink, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateChannelPartnerLinkRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CreateChannelPartnerLinkRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerLinkRequest} message CreateChannelPartnerLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateChannelPartnerLinkRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateChannelPartnerLinkRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CreateChannelPartnerLinkRequest} CreateChannelPartnerLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateChannelPartnerLinkRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CreateChannelPartnerLinkRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.channelPartnerLink = $root.google.cloud.channel.v1.ChannelPartnerLink.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateChannelPartnerLinkRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CreateChannelPartnerLinkRequest} CreateChannelPartnerLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateChannelPartnerLinkRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateChannelPartnerLinkRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateChannelPartnerLinkRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.channelPartnerLink != null && message.hasOwnProperty("channelPartnerLink")) {
                                var error = $root.google.cloud.channel.v1.ChannelPartnerLink.verify(message.channelPartnerLink);
                                if (error)
                                    return "channelPartnerLink." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateChannelPartnerLinkRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CreateChannelPartnerLinkRequest} CreateChannelPartnerLinkRequest
                         */
                        CreateChannelPartnerLinkRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CreateChannelPartnerLinkRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CreateChannelPartnerLinkRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.channelPartnerLink != null) {
                                if (typeof object.channelPartnerLink !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CreateChannelPartnerLinkRequest.channelPartnerLink: object expected");
                                message.channelPartnerLink = $root.google.cloud.channel.v1.ChannelPartnerLink.fromObject(object.channelPartnerLink);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateChannelPartnerLinkRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.CreateChannelPartnerLinkRequest} message CreateChannelPartnerLinkRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateChannelPartnerLinkRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.channelPartnerLink = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.channelPartnerLink != null && message.hasOwnProperty("channelPartnerLink"))
                                object.channelPartnerLink = $root.google.cloud.channel.v1.ChannelPartnerLink.toObject(message.channelPartnerLink, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateChannelPartnerLinkRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateChannelPartnerLinkRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateChannelPartnerLinkRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerLinkRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateChannelPartnerLinkRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CreateChannelPartnerLinkRequest";
                        };
    
                        return CreateChannelPartnerLinkRequest;
                    })();
    
                    v1.UpdateChannelPartnerLinkRequest = (function() {
    
                        /**
                         * Properties of an UpdateChannelPartnerLinkRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IUpdateChannelPartnerLinkRequest
                         * @property {string|null} [name] UpdateChannelPartnerLinkRequest name
                         * @property {google.cloud.channel.v1.IChannelPartnerLink|null} [channelPartnerLink] UpdateChannelPartnerLinkRequest channelPartnerLink
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateChannelPartnerLinkRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateChannelPartnerLinkRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an UpdateChannelPartnerLinkRequest.
                         * @implements IUpdateChannelPartnerLinkRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest=} [properties] Properties to set
                         */
                        function UpdateChannelPartnerLinkRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateChannelPartnerLinkRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @instance
                         */
                        UpdateChannelPartnerLinkRequest.prototype.name = "";
    
                        /**
                         * UpdateChannelPartnerLinkRequest channelPartnerLink.
                         * @member {google.cloud.channel.v1.IChannelPartnerLink|null|undefined} channelPartnerLink
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @instance
                         */
                        UpdateChannelPartnerLinkRequest.prototype.channelPartnerLink = null;
    
                        /**
                         * UpdateChannelPartnerLinkRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @instance
                         */
                        UpdateChannelPartnerLinkRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateChannelPartnerLinkRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.UpdateChannelPartnerLinkRequest} UpdateChannelPartnerLinkRequest instance
                         */
                        UpdateChannelPartnerLinkRequest.create = function create(properties) {
                            return new UpdateChannelPartnerLinkRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateChannelPartnerLinkRequest message. Does not implicitly {@link google.cloud.channel.v1.UpdateChannelPartnerLinkRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest} message UpdateChannelPartnerLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateChannelPartnerLinkRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.channelPartnerLink != null && Object.hasOwnProperty.call(message, "channelPartnerLink"))
                                $root.google.cloud.channel.v1.ChannelPartnerLink.encode(message.channelPartnerLink, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateChannelPartnerLinkRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.UpdateChannelPartnerLinkRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest} message UpdateChannelPartnerLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateChannelPartnerLinkRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateChannelPartnerLinkRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.UpdateChannelPartnerLinkRequest} UpdateChannelPartnerLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateChannelPartnerLinkRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.UpdateChannelPartnerLinkRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.channelPartnerLink = $root.google.cloud.channel.v1.ChannelPartnerLink.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateChannelPartnerLinkRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.UpdateChannelPartnerLinkRequest} UpdateChannelPartnerLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateChannelPartnerLinkRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateChannelPartnerLinkRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateChannelPartnerLinkRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.channelPartnerLink != null && message.hasOwnProperty("channelPartnerLink")) {
                                var error = $root.google.cloud.channel.v1.ChannelPartnerLink.verify(message.channelPartnerLink);
                                if (error)
                                    return "channelPartnerLink." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateChannelPartnerLinkRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.UpdateChannelPartnerLinkRequest} UpdateChannelPartnerLinkRequest
                         */
                        UpdateChannelPartnerLinkRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.UpdateChannelPartnerLinkRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.UpdateChannelPartnerLinkRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.channelPartnerLink != null) {
                                if (typeof object.channelPartnerLink !== "object")
                                    throw TypeError(".google.cloud.channel.v1.UpdateChannelPartnerLinkRequest.channelPartnerLink: object expected");
                                message.channelPartnerLink = $root.google.cloud.channel.v1.ChannelPartnerLink.fromObject(object.channelPartnerLink);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.channel.v1.UpdateChannelPartnerLinkRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateChannelPartnerLinkRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @static
                         * @param {google.cloud.channel.v1.UpdateChannelPartnerLinkRequest} message UpdateChannelPartnerLinkRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateChannelPartnerLinkRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.channelPartnerLink = null;
                                object.updateMask = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.channelPartnerLink != null && message.hasOwnProperty("channelPartnerLink"))
                                object.channelPartnerLink = $root.google.cloud.channel.v1.ChannelPartnerLink.toObject(message.channelPartnerLink, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateChannelPartnerLinkRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateChannelPartnerLinkRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateChannelPartnerLinkRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerLinkRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateChannelPartnerLinkRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.UpdateChannelPartnerLinkRequest";
                        };
    
                        return UpdateChannelPartnerLinkRequest;
                    })();
    
                    v1.GetCustomerRepricingConfigRequest = (function() {
    
                        /**
                         * Properties of a GetCustomerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IGetCustomerRepricingConfigRequest
                         * @property {string|null} [name] GetCustomerRepricingConfigRequest name
                         */
    
                        /**
                         * Constructs a new GetCustomerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a GetCustomerRepricingConfigRequest.
                         * @implements IGetCustomerRepricingConfigRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IGetCustomerRepricingConfigRequest=} [properties] Properties to set
                         */
                        function GetCustomerRepricingConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetCustomerRepricingConfigRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @instance
                         */
                        GetCustomerRepricingConfigRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetCustomerRepricingConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetCustomerRepricingConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.GetCustomerRepricingConfigRequest} GetCustomerRepricingConfigRequest instance
                         */
                        GetCustomerRepricingConfigRequest.create = function create(properties) {
                            return new GetCustomerRepricingConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetCustomerRepricingConfigRequest message. Does not implicitly {@link google.cloud.channel.v1.GetCustomerRepricingConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetCustomerRepricingConfigRequest} message GetCustomerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCustomerRepricingConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetCustomerRepricingConfigRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.GetCustomerRepricingConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetCustomerRepricingConfigRequest} message GetCustomerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetCustomerRepricingConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetCustomerRepricingConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.GetCustomerRepricingConfigRequest} GetCustomerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCustomerRepricingConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.GetCustomerRepricingConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetCustomerRepricingConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.GetCustomerRepricingConfigRequest} GetCustomerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetCustomerRepricingConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetCustomerRepricingConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetCustomerRepricingConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetCustomerRepricingConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.GetCustomerRepricingConfigRequest} GetCustomerRepricingConfigRequest
                         */
                        GetCustomerRepricingConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.GetCustomerRepricingConfigRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.GetCustomerRepricingConfigRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetCustomerRepricingConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.GetCustomerRepricingConfigRequest} message GetCustomerRepricingConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetCustomerRepricingConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetCustomerRepricingConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetCustomerRepricingConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetCustomerRepricingConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.GetCustomerRepricingConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetCustomerRepricingConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.GetCustomerRepricingConfigRequest";
                        };
    
                        return GetCustomerRepricingConfigRequest;
                    })();
    
                    v1.ListCustomerRepricingConfigsRequest = (function() {
    
                        /**
                         * Properties of a ListCustomerRepricingConfigsRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListCustomerRepricingConfigsRequest
                         * @property {string|null} [parent] ListCustomerRepricingConfigsRequest parent
                         * @property {number|null} [pageSize] ListCustomerRepricingConfigsRequest pageSize
                         * @property {string|null} [pageToken] ListCustomerRepricingConfigsRequest pageToken
                         * @property {string|null} [filter] ListCustomerRepricingConfigsRequest filter
                         */
    
                        /**
                         * Constructs a new ListCustomerRepricingConfigsRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListCustomerRepricingConfigsRequest.
                         * @implements IListCustomerRepricingConfigsRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsRequest=} [properties] Properties to set
                         */
                        function ListCustomerRepricingConfigsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCustomerRepricingConfigsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @instance
                         */
                        ListCustomerRepricingConfigsRequest.prototype.parent = "";
    
                        /**
                         * ListCustomerRepricingConfigsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @instance
                         */
                        ListCustomerRepricingConfigsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListCustomerRepricingConfigsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @instance
                         */
                        ListCustomerRepricingConfigsRequest.prototype.pageToken = "";
    
                        /**
                         * ListCustomerRepricingConfigsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @instance
                         */
                        ListCustomerRepricingConfigsRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListCustomerRepricingConfigsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListCustomerRepricingConfigsRequest} ListCustomerRepricingConfigsRequest instance
                         */
                        ListCustomerRepricingConfigsRequest.create = function create(properties) {
                            return new ListCustomerRepricingConfigsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListCustomerRepricingConfigsRequest message. Does not implicitly {@link google.cloud.channel.v1.ListCustomerRepricingConfigsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsRequest} message ListCustomerRepricingConfigsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomerRepricingConfigsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCustomerRepricingConfigsRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListCustomerRepricingConfigsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsRequest} message ListCustomerRepricingConfigsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomerRepricingConfigsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCustomerRepricingConfigsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListCustomerRepricingConfigsRequest} ListCustomerRepricingConfigsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomerRepricingConfigsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListCustomerRepricingConfigsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCustomerRepricingConfigsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListCustomerRepricingConfigsRequest} ListCustomerRepricingConfigsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomerRepricingConfigsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCustomerRepricingConfigsRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCustomerRepricingConfigsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListCustomerRepricingConfigsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListCustomerRepricingConfigsRequest} ListCustomerRepricingConfigsRequest
                         */
                        ListCustomerRepricingConfigsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListCustomerRepricingConfigsRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListCustomerRepricingConfigsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCustomerRepricingConfigsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListCustomerRepricingConfigsRequest} message ListCustomerRepricingConfigsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCustomerRepricingConfigsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListCustomerRepricingConfigsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCustomerRepricingConfigsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListCustomerRepricingConfigsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListCustomerRepricingConfigsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListCustomerRepricingConfigsRequest";
                        };
    
                        return ListCustomerRepricingConfigsRequest;
                    })();
    
                    v1.ListCustomerRepricingConfigsResponse = (function() {
    
                        /**
                         * Properties of a ListCustomerRepricingConfigsResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListCustomerRepricingConfigsResponse
                         * @property {Array.<google.cloud.channel.v1.ICustomerRepricingConfig>|null} [customerRepricingConfigs] ListCustomerRepricingConfigsResponse customerRepricingConfigs
                         * @property {string|null} [nextPageToken] ListCustomerRepricingConfigsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListCustomerRepricingConfigsResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListCustomerRepricingConfigsResponse.
                         * @implements IListCustomerRepricingConfigsResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsResponse=} [properties] Properties to set
                         */
                        function ListCustomerRepricingConfigsResponse(properties) {
                            this.customerRepricingConfigs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListCustomerRepricingConfigsResponse customerRepricingConfigs.
                         * @member {Array.<google.cloud.channel.v1.ICustomerRepricingConfig>} customerRepricingConfigs
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @instance
                         */
                        ListCustomerRepricingConfigsResponse.prototype.customerRepricingConfigs = $util.emptyArray;
    
                        /**
                         * ListCustomerRepricingConfigsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @instance
                         */
                        ListCustomerRepricingConfigsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListCustomerRepricingConfigsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListCustomerRepricingConfigsResponse} ListCustomerRepricingConfigsResponse instance
                         */
                        ListCustomerRepricingConfigsResponse.create = function create(properties) {
                            return new ListCustomerRepricingConfigsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListCustomerRepricingConfigsResponse message. Does not implicitly {@link google.cloud.channel.v1.ListCustomerRepricingConfigsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsResponse} message ListCustomerRepricingConfigsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomerRepricingConfigsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customerRepricingConfigs != null && message.customerRepricingConfigs.length)
                                for (var i = 0; i < message.customerRepricingConfigs.length; ++i)
                                    $root.google.cloud.channel.v1.CustomerRepricingConfig.encode(message.customerRepricingConfigs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListCustomerRepricingConfigsResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListCustomerRepricingConfigsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListCustomerRepricingConfigsResponse} message ListCustomerRepricingConfigsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListCustomerRepricingConfigsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListCustomerRepricingConfigsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListCustomerRepricingConfigsResponse} ListCustomerRepricingConfigsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomerRepricingConfigsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListCustomerRepricingConfigsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.customerRepricingConfigs && message.customerRepricingConfigs.length))
                                            message.customerRepricingConfigs = [];
                                        message.customerRepricingConfigs.push($root.google.cloud.channel.v1.CustomerRepricingConfig.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListCustomerRepricingConfigsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListCustomerRepricingConfigsResponse} ListCustomerRepricingConfigsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListCustomerRepricingConfigsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListCustomerRepricingConfigsResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListCustomerRepricingConfigsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customerRepricingConfigs != null && message.hasOwnProperty("customerRepricingConfigs")) {
                                if (!Array.isArray(message.customerRepricingConfigs))
                                    return "customerRepricingConfigs: array expected";
                                for (var i = 0; i < message.customerRepricingConfigs.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.CustomerRepricingConfig.verify(message.customerRepricingConfigs[i]);
                                    if (error)
                                        return "customerRepricingConfigs." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListCustomerRepricingConfigsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListCustomerRepricingConfigsResponse} ListCustomerRepricingConfigsResponse
                         */
                        ListCustomerRepricingConfigsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListCustomerRepricingConfigsResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListCustomerRepricingConfigsResponse();
                            if (object.customerRepricingConfigs) {
                                if (!Array.isArray(object.customerRepricingConfigs))
                                    throw TypeError(".google.cloud.channel.v1.ListCustomerRepricingConfigsResponse.customerRepricingConfigs: array expected");
                                message.customerRepricingConfigs = [];
                                for (var i = 0; i < object.customerRepricingConfigs.length; ++i) {
                                    if (typeof object.customerRepricingConfigs[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListCustomerRepricingConfigsResponse.customerRepricingConfigs: object expected");
                                    message.customerRepricingConfigs[i] = $root.google.cloud.channel.v1.CustomerRepricingConfig.fromObject(object.customerRepricingConfigs[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListCustomerRepricingConfigsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListCustomerRepricingConfigsResponse} message ListCustomerRepricingConfigsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListCustomerRepricingConfigsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.customerRepricingConfigs = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.customerRepricingConfigs && message.customerRepricingConfigs.length) {
                                object.customerRepricingConfigs = [];
                                for (var j = 0; j < message.customerRepricingConfigs.length; ++j)
                                    object.customerRepricingConfigs[j] = $root.google.cloud.channel.v1.CustomerRepricingConfig.toObject(message.customerRepricingConfigs[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListCustomerRepricingConfigsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListCustomerRepricingConfigsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListCustomerRepricingConfigsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListCustomerRepricingConfigsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListCustomerRepricingConfigsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListCustomerRepricingConfigsResponse";
                        };
    
                        return ListCustomerRepricingConfigsResponse;
                    })();
    
                    v1.CreateCustomerRepricingConfigRequest = (function() {
    
                        /**
                         * Properties of a CreateCustomerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ICreateCustomerRepricingConfigRequest
                         * @property {string|null} [parent] CreateCustomerRepricingConfigRequest parent
                         * @property {google.cloud.channel.v1.ICustomerRepricingConfig|null} [customerRepricingConfig] CreateCustomerRepricingConfigRequest customerRepricingConfig
                         */
    
                        /**
                         * Constructs a new CreateCustomerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CreateCustomerRepricingConfigRequest.
                         * @implements ICreateCustomerRepricingConfigRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest=} [properties] Properties to set
                         */
                        function CreateCustomerRepricingConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateCustomerRepricingConfigRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @instance
                         */
                        CreateCustomerRepricingConfigRequest.prototype.parent = "";
    
                        /**
                         * CreateCustomerRepricingConfigRequest customerRepricingConfig.
                         * @member {google.cloud.channel.v1.ICustomerRepricingConfig|null|undefined} customerRepricingConfig
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @instance
                         */
                        CreateCustomerRepricingConfigRequest.prototype.customerRepricingConfig = null;
    
                        /**
                         * Creates a new CreateCustomerRepricingConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CreateCustomerRepricingConfigRequest} CreateCustomerRepricingConfigRequest instance
                         */
                        CreateCustomerRepricingConfigRequest.create = function create(properties) {
                            return new CreateCustomerRepricingConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateCustomerRepricingConfigRequest message. Does not implicitly {@link google.cloud.channel.v1.CreateCustomerRepricingConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest} message CreateCustomerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCustomerRepricingConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.customerRepricingConfig != null && Object.hasOwnProperty.call(message, "customerRepricingConfig"))
                                $root.google.cloud.channel.v1.CustomerRepricingConfig.encode(message.customerRepricingConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateCustomerRepricingConfigRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CreateCustomerRepricingConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest} message CreateCustomerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateCustomerRepricingConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateCustomerRepricingConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CreateCustomerRepricingConfigRequest} CreateCustomerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCustomerRepricingConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CreateCustomerRepricingConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.customerRepricingConfig = $root.google.cloud.channel.v1.CustomerRepricingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateCustomerRepricingConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CreateCustomerRepricingConfigRequest} CreateCustomerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateCustomerRepricingConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateCustomerRepricingConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateCustomerRepricingConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.customerRepricingConfig != null && message.hasOwnProperty("customerRepricingConfig")) {
                                var error = $root.google.cloud.channel.v1.CustomerRepricingConfig.verify(message.customerRepricingConfig);
                                if (error)
                                    return "customerRepricingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateCustomerRepricingConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CreateCustomerRepricingConfigRequest} CreateCustomerRepricingConfigRequest
                         */
                        CreateCustomerRepricingConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CreateCustomerRepricingConfigRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CreateCustomerRepricingConfigRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.customerRepricingConfig != null) {
                                if (typeof object.customerRepricingConfig !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CreateCustomerRepricingConfigRequest.customerRepricingConfig: object expected");
                                message.customerRepricingConfig = $root.google.cloud.channel.v1.CustomerRepricingConfig.fromObject(object.customerRepricingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateCustomerRepricingConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.CreateCustomerRepricingConfigRequest} message CreateCustomerRepricingConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateCustomerRepricingConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.customerRepricingConfig = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.customerRepricingConfig != null && message.hasOwnProperty("customerRepricingConfig"))
                                object.customerRepricingConfig = $root.google.cloud.channel.v1.CustomerRepricingConfig.toObject(message.customerRepricingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateCustomerRepricingConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateCustomerRepricingConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateCustomerRepricingConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CreateCustomerRepricingConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateCustomerRepricingConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CreateCustomerRepricingConfigRequest";
                        };
    
                        return CreateCustomerRepricingConfigRequest;
                    })();
    
                    v1.UpdateCustomerRepricingConfigRequest = (function() {
    
                        /**
                         * Properties of an UpdateCustomerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IUpdateCustomerRepricingConfigRequest
                         * @property {google.cloud.channel.v1.ICustomerRepricingConfig|null} [customerRepricingConfig] UpdateCustomerRepricingConfigRequest customerRepricingConfig
                         */
    
                        /**
                         * Constructs a new UpdateCustomerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an UpdateCustomerRepricingConfigRequest.
                         * @implements IUpdateCustomerRepricingConfigRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest=} [properties] Properties to set
                         */
                        function UpdateCustomerRepricingConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateCustomerRepricingConfigRequest customerRepricingConfig.
                         * @member {google.cloud.channel.v1.ICustomerRepricingConfig|null|undefined} customerRepricingConfig
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @instance
                         */
                        UpdateCustomerRepricingConfigRequest.prototype.customerRepricingConfig = null;
    
                        /**
                         * Creates a new UpdateCustomerRepricingConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest} UpdateCustomerRepricingConfigRequest instance
                         */
                        UpdateCustomerRepricingConfigRequest.create = function create(properties) {
                            return new UpdateCustomerRepricingConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateCustomerRepricingConfigRequest message. Does not implicitly {@link google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest} message UpdateCustomerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCustomerRepricingConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customerRepricingConfig != null && Object.hasOwnProperty.call(message, "customerRepricingConfig"))
                                $root.google.cloud.channel.v1.CustomerRepricingConfig.encode(message.customerRepricingConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateCustomerRepricingConfigRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest} message UpdateCustomerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateCustomerRepricingConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateCustomerRepricingConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest} UpdateCustomerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCustomerRepricingConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customerRepricingConfig = $root.google.cloud.channel.v1.CustomerRepricingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateCustomerRepricingConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest} UpdateCustomerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateCustomerRepricingConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateCustomerRepricingConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateCustomerRepricingConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customerRepricingConfig != null && message.hasOwnProperty("customerRepricingConfig")) {
                                var error = $root.google.cloud.channel.v1.CustomerRepricingConfig.verify(message.customerRepricingConfig);
                                if (error)
                                    return "customerRepricingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateCustomerRepricingConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest} UpdateCustomerRepricingConfigRequest
                         */
                        UpdateCustomerRepricingConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest();
                            if (object.customerRepricingConfig != null) {
                                if (typeof object.customerRepricingConfig !== "object")
                                    throw TypeError(".google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest.customerRepricingConfig: object expected");
                                message.customerRepricingConfig = $root.google.cloud.channel.v1.CustomerRepricingConfig.fromObject(object.customerRepricingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateCustomerRepricingConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest} message UpdateCustomerRepricingConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateCustomerRepricingConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.customerRepricingConfig = null;
                            if (message.customerRepricingConfig != null && message.hasOwnProperty("customerRepricingConfig"))
                                object.customerRepricingConfig = $root.google.cloud.channel.v1.CustomerRepricingConfig.toObject(message.customerRepricingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateCustomerRepricingConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateCustomerRepricingConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateCustomerRepricingConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateCustomerRepricingConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.UpdateCustomerRepricingConfigRequest";
                        };
    
                        return UpdateCustomerRepricingConfigRequest;
                    })();
    
                    v1.DeleteCustomerRepricingConfigRequest = (function() {
    
                        /**
                         * Properties of a DeleteCustomerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IDeleteCustomerRepricingConfigRequest
                         * @property {string|null} [name] DeleteCustomerRepricingConfigRequest name
                         */
    
                        /**
                         * Constructs a new DeleteCustomerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a DeleteCustomerRepricingConfigRequest.
                         * @implements IDeleteCustomerRepricingConfigRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest=} [properties] Properties to set
                         */
                        function DeleteCustomerRepricingConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteCustomerRepricingConfigRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @instance
                         */
                        DeleteCustomerRepricingConfigRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteCustomerRepricingConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest} DeleteCustomerRepricingConfigRequest instance
                         */
                        DeleteCustomerRepricingConfigRequest.create = function create(properties) {
                            return new DeleteCustomerRepricingConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteCustomerRepricingConfigRequest message. Does not implicitly {@link google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest} message DeleteCustomerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCustomerRepricingConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteCustomerRepricingConfigRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest} message DeleteCustomerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteCustomerRepricingConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteCustomerRepricingConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest} DeleteCustomerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCustomerRepricingConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteCustomerRepricingConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest} DeleteCustomerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteCustomerRepricingConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteCustomerRepricingConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteCustomerRepricingConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteCustomerRepricingConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest} DeleteCustomerRepricingConfigRequest
                         */
                        DeleteCustomerRepricingConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteCustomerRepricingConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest} message DeleteCustomerRepricingConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteCustomerRepricingConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteCustomerRepricingConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteCustomerRepricingConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteCustomerRepricingConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteCustomerRepricingConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.DeleteCustomerRepricingConfigRequest";
                        };
    
                        return DeleteCustomerRepricingConfigRequest;
                    })();
    
                    v1.GetChannelPartnerRepricingConfigRequest = (function() {
    
                        /**
                         * Properties of a GetChannelPartnerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IGetChannelPartnerRepricingConfigRequest
                         * @property {string|null} [name] GetChannelPartnerRepricingConfigRequest name
                         */
    
                        /**
                         * Constructs a new GetChannelPartnerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a GetChannelPartnerRepricingConfigRequest.
                         * @implements IGetChannelPartnerRepricingConfigRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest=} [properties] Properties to set
                         */
                        function GetChannelPartnerRepricingConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetChannelPartnerRepricingConfigRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @instance
                         */
                        GetChannelPartnerRepricingConfigRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetChannelPartnerRepricingConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest} GetChannelPartnerRepricingConfigRequest instance
                         */
                        GetChannelPartnerRepricingConfigRequest.create = function create(properties) {
                            return new GetChannelPartnerRepricingConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetChannelPartnerRepricingConfigRequest message. Does not implicitly {@link google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest} message GetChannelPartnerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetChannelPartnerRepricingConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetChannelPartnerRepricingConfigRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest} message GetChannelPartnerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetChannelPartnerRepricingConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetChannelPartnerRepricingConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest} GetChannelPartnerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetChannelPartnerRepricingConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetChannelPartnerRepricingConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest} GetChannelPartnerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetChannelPartnerRepricingConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetChannelPartnerRepricingConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetChannelPartnerRepricingConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetChannelPartnerRepricingConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest} GetChannelPartnerRepricingConfigRequest
                         */
                        GetChannelPartnerRepricingConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetChannelPartnerRepricingConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest} message GetChannelPartnerRepricingConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetChannelPartnerRepricingConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetChannelPartnerRepricingConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetChannelPartnerRepricingConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetChannelPartnerRepricingConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetChannelPartnerRepricingConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.GetChannelPartnerRepricingConfigRequest";
                        };
    
                        return GetChannelPartnerRepricingConfigRequest;
                    })();
    
                    v1.ListChannelPartnerRepricingConfigsRequest = (function() {
    
                        /**
                         * Properties of a ListChannelPartnerRepricingConfigsRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListChannelPartnerRepricingConfigsRequest
                         * @property {string|null} [parent] ListChannelPartnerRepricingConfigsRequest parent
                         * @property {number|null} [pageSize] ListChannelPartnerRepricingConfigsRequest pageSize
                         * @property {string|null} [pageToken] ListChannelPartnerRepricingConfigsRequest pageToken
                         * @property {string|null} [filter] ListChannelPartnerRepricingConfigsRequest filter
                         */
    
                        /**
                         * Constructs a new ListChannelPartnerRepricingConfigsRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListChannelPartnerRepricingConfigsRequest.
                         * @implements IListChannelPartnerRepricingConfigsRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest=} [properties] Properties to set
                         */
                        function ListChannelPartnerRepricingConfigsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListChannelPartnerRepricingConfigsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @instance
                         */
                        ListChannelPartnerRepricingConfigsRequest.prototype.parent = "";
    
                        /**
                         * ListChannelPartnerRepricingConfigsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @instance
                         */
                        ListChannelPartnerRepricingConfigsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListChannelPartnerRepricingConfigsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @instance
                         */
                        ListChannelPartnerRepricingConfigsRequest.prototype.pageToken = "";
    
                        /**
                         * ListChannelPartnerRepricingConfigsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @instance
                         */
                        ListChannelPartnerRepricingConfigsRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListChannelPartnerRepricingConfigsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest} ListChannelPartnerRepricingConfigsRequest instance
                         */
                        ListChannelPartnerRepricingConfigsRequest.create = function create(properties) {
                            return new ListChannelPartnerRepricingConfigsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListChannelPartnerRepricingConfigsRequest message. Does not implicitly {@link google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest} message ListChannelPartnerRepricingConfigsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListChannelPartnerRepricingConfigsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListChannelPartnerRepricingConfigsRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest} message ListChannelPartnerRepricingConfigsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListChannelPartnerRepricingConfigsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListChannelPartnerRepricingConfigsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest} ListChannelPartnerRepricingConfigsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListChannelPartnerRepricingConfigsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListChannelPartnerRepricingConfigsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest} ListChannelPartnerRepricingConfigsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListChannelPartnerRepricingConfigsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListChannelPartnerRepricingConfigsRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListChannelPartnerRepricingConfigsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListChannelPartnerRepricingConfigsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest} ListChannelPartnerRepricingConfigsRequest
                         */
                        ListChannelPartnerRepricingConfigsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListChannelPartnerRepricingConfigsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest} message ListChannelPartnerRepricingConfigsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListChannelPartnerRepricingConfigsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListChannelPartnerRepricingConfigsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListChannelPartnerRepricingConfigsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListChannelPartnerRepricingConfigsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListChannelPartnerRepricingConfigsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListChannelPartnerRepricingConfigsRequest";
                        };
    
                        return ListChannelPartnerRepricingConfigsRequest;
                    })();
    
                    v1.ListChannelPartnerRepricingConfigsResponse = (function() {
    
                        /**
                         * Properties of a ListChannelPartnerRepricingConfigsResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListChannelPartnerRepricingConfigsResponse
                         * @property {Array.<google.cloud.channel.v1.IChannelPartnerRepricingConfig>|null} [channelPartnerRepricingConfigs] ListChannelPartnerRepricingConfigsResponse channelPartnerRepricingConfigs
                         * @property {string|null} [nextPageToken] ListChannelPartnerRepricingConfigsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListChannelPartnerRepricingConfigsResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListChannelPartnerRepricingConfigsResponse.
                         * @implements IListChannelPartnerRepricingConfigsResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse=} [properties] Properties to set
                         */
                        function ListChannelPartnerRepricingConfigsResponse(properties) {
                            this.channelPartnerRepricingConfigs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListChannelPartnerRepricingConfigsResponse channelPartnerRepricingConfigs.
                         * @member {Array.<google.cloud.channel.v1.IChannelPartnerRepricingConfig>} channelPartnerRepricingConfigs
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @instance
                         */
                        ListChannelPartnerRepricingConfigsResponse.prototype.channelPartnerRepricingConfigs = $util.emptyArray;
    
                        /**
                         * ListChannelPartnerRepricingConfigsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @instance
                         */
                        ListChannelPartnerRepricingConfigsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListChannelPartnerRepricingConfigsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse} ListChannelPartnerRepricingConfigsResponse instance
                         */
                        ListChannelPartnerRepricingConfigsResponse.create = function create(properties) {
                            return new ListChannelPartnerRepricingConfigsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListChannelPartnerRepricingConfigsResponse message. Does not implicitly {@link google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse} message ListChannelPartnerRepricingConfigsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListChannelPartnerRepricingConfigsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.channelPartnerRepricingConfigs != null && message.channelPartnerRepricingConfigs.length)
                                for (var i = 0; i < message.channelPartnerRepricingConfigs.length; ++i)
                                    $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.encode(message.channelPartnerRepricingConfigs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListChannelPartnerRepricingConfigsResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse} message ListChannelPartnerRepricingConfigsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListChannelPartnerRepricingConfigsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListChannelPartnerRepricingConfigsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse} ListChannelPartnerRepricingConfigsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListChannelPartnerRepricingConfigsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.channelPartnerRepricingConfigs && message.channelPartnerRepricingConfigs.length))
                                            message.channelPartnerRepricingConfigs = [];
                                        message.channelPartnerRepricingConfigs.push($root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListChannelPartnerRepricingConfigsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse} ListChannelPartnerRepricingConfigsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListChannelPartnerRepricingConfigsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListChannelPartnerRepricingConfigsResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListChannelPartnerRepricingConfigsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.channelPartnerRepricingConfigs != null && message.hasOwnProperty("channelPartnerRepricingConfigs")) {
                                if (!Array.isArray(message.channelPartnerRepricingConfigs))
                                    return "channelPartnerRepricingConfigs: array expected";
                                for (var i = 0; i < message.channelPartnerRepricingConfigs.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.verify(message.channelPartnerRepricingConfigs[i]);
                                    if (error)
                                        return "channelPartnerRepricingConfigs." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListChannelPartnerRepricingConfigsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse} ListChannelPartnerRepricingConfigsResponse
                         */
                        ListChannelPartnerRepricingConfigsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse();
                            if (object.channelPartnerRepricingConfigs) {
                                if (!Array.isArray(object.channelPartnerRepricingConfigs))
                                    throw TypeError(".google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.channelPartnerRepricingConfigs: array expected");
                                message.channelPartnerRepricingConfigs = [];
                                for (var i = 0; i < object.channelPartnerRepricingConfigs.length; ++i) {
                                    if (typeof object.channelPartnerRepricingConfigs[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.channelPartnerRepricingConfigs: object expected");
                                    message.channelPartnerRepricingConfigs[i] = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.fromObject(object.channelPartnerRepricingConfigs[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListChannelPartnerRepricingConfigsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse} message ListChannelPartnerRepricingConfigsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListChannelPartnerRepricingConfigsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.channelPartnerRepricingConfigs = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.channelPartnerRepricingConfigs && message.channelPartnerRepricingConfigs.length) {
                                object.channelPartnerRepricingConfigs = [];
                                for (var j = 0; j < message.channelPartnerRepricingConfigs.length; ++j)
                                    object.channelPartnerRepricingConfigs[j] = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.toObject(message.channelPartnerRepricingConfigs[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListChannelPartnerRepricingConfigsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListChannelPartnerRepricingConfigsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListChannelPartnerRepricingConfigsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListChannelPartnerRepricingConfigsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse";
                        };
    
                        return ListChannelPartnerRepricingConfigsResponse;
                    })();
    
                    v1.CreateChannelPartnerRepricingConfigRequest = (function() {
    
                        /**
                         * Properties of a CreateChannelPartnerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ICreateChannelPartnerRepricingConfigRequest
                         * @property {string|null} [parent] CreateChannelPartnerRepricingConfigRequest parent
                         * @property {google.cloud.channel.v1.IChannelPartnerRepricingConfig|null} [channelPartnerRepricingConfig] CreateChannelPartnerRepricingConfigRequest channelPartnerRepricingConfig
                         */
    
                        /**
                         * Constructs a new CreateChannelPartnerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CreateChannelPartnerRepricingConfigRequest.
                         * @implements ICreateChannelPartnerRepricingConfigRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest=} [properties] Properties to set
                         */
                        function CreateChannelPartnerRepricingConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateChannelPartnerRepricingConfigRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @instance
                         */
                        CreateChannelPartnerRepricingConfigRequest.prototype.parent = "";
    
                        /**
                         * CreateChannelPartnerRepricingConfigRequest channelPartnerRepricingConfig.
                         * @member {google.cloud.channel.v1.IChannelPartnerRepricingConfig|null|undefined} channelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @instance
                         */
                        CreateChannelPartnerRepricingConfigRequest.prototype.channelPartnerRepricingConfig = null;
    
                        /**
                         * Creates a new CreateChannelPartnerRepricingConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest} CreateChannelPartnerRepricingConfigRequest instance
                         */
                        CreateChannelPartnerRepricingConfigRequest.create = function create(properties) {
                            return new CreateChannelPartnerRepricingConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateChannelPartnerRepricingConfigRequest message. Does not implicitly {@link google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest} message CreateChannelPartnerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateChannelPartnerRepricingConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.channelPartnerRepricingConfig != null && Object.hasOwnProperty.call(message, "channelPartnerRepricingConfig"))
                                $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.encode(message.channelPartnerRepricingConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateChannelPartnerRepricingConfigRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest} message CreateChannelPartnerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateChannelPartnerRepricingConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateChannelPartnerRepricingConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest} CreateChannelPartnerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateChannelPartnerRepricingConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.channelPartnerRepricingConfig = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateChannelPartnerRepricingConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest} CreateChannelPartnerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateChannelPartnerRepricingConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateChannelPartnerRepricingConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateChannelPartnerRepricingConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.channelPartnerRepricingConfig != null && message.hasOwnProperty("channelPartnerRepricingConfig")) {
                                var error = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.verify(message.channelPartnerRepricingConfig);
                                if (error)
                                    return "channelPartnerRepricingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateChannelPartnerRepricingConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest} CreateChannelPartnerRepricingConfigRequest
                         */
                        CreateChannelPartnerRepricingConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.channelPartnerRepricingConfig != null) {
                                if (typeof object.channelPartnerRepricingConfig !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest.channelPartnerRepricingConfig: object expected");
                                message.channelPartnerRepricingConfig = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.fromObject(object.channelPartnerRepricingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateChannelPartnerRepricingConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest} message CreateChannelPartnerRepricingConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateChannelPartnerRepricingConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.channelPartnerRepricingConfig = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.channelPartnerRepricingConfig != null && message.hasOwnProperty("channelPartnerRepricingConfig"))
                                object.channelPartnerRepricingConfig = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.toObject(message.channelPartnerRepricingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateChannelPartnerRepricingConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateChannelPartnerRepricingConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateChannelPartnerRepricingConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateChannelPartnerRepricingConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CreateChannelPartnerRepricingConfigRequest";
                        };
    
                        return CreateChannelPartnerRepricingConfigRequest;
                    })();
    
                    v1.UpdateChannelPartnerRepricingConfigRequest = (function() {
    
                        /**
                         * Properties of an UpdateChannelPartnerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IUpdateChannelPartnerRepricingConfigRequest
                         * @property {google.cloud.channel.v1.IChannelPartnerRepricingConfig|null} [channelPartnerRepricingConfig] UpdateChannelPartnerRepricingConfigRequest channelPartnerRepricingConfig
                         */
    
                        /**
                         * Constructs a new UpdateChannelPartnerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an UpdateChannelPartnerRepricingConfigRequest.
                         * @implements IUpdateChannelPartnerRepricingConfigRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest=} [properties] Properties to set
                         */
                        function UpdateChannelPartnerRepricingConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateChannelPartnerRepricingConfigRequest channelPartnerRepricingConfig.
                         * @member {google.cloud.channel.v1.IChannelPartnerRepricingConfig|null|undefined} channelPartnerRepricingConfig
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @instance
                         */
                        UpdateChannelPartnerRepricingConfigRequest.prototype.channelPartnerRepricingConfig = null;
    
                        /**
                         * Creates a new UpdateChannelPartnerRepricingConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest} UpdateChannelPartnerRepricingConfigRequest instance
                         */
                        UpdateChannelPartnerRepricingConfigRequest.create = function create(properties) {
                            return new UpdateChannelPartnerRepricingConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateChannelPartnerRepricingConfigRequest message. Does not implicitly {@link google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest} message UpdateChannelPartnerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateChannelPartnerRepricingConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.channelPartnerRepricingConfig != null && Object.hasOwnProperty.call(message, "channelPartnerRepricingConfig"))
                                $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.encode(message.channelPartnerRepricingConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateChannelPartnerRepricingConfigRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest} message UpdateChannelPartnerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateChannelPartnerRepricingConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateChannelPartnerRepricingConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest} UpdateChannelPartnerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateChannelPartnerRepricingConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.channelPartnerRepricingConfig = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateChannelPartnerRepricingConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest} UpdateChannelPartnerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateChannelPartnerRepricingConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateChannelPartnerRepricingConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateChannelPartnerRepricingConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.channelPartnerRepricingConfig != null && message.hasOwnProperty("channelPartnerRepricingConfig")) {
                                var error = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.verify(message.channelPartnerRepricingConfig);
                                if (error)
                                    return "channelPartnerRepricingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateChannelPartnerRepricingConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest} UpdateChannelPartnerRepricingConfigRequest
                         */
                        UpdateChannelPartnerRepricingConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest();
                            if (object.channelPartnerRepricingConfig != null) {
                                if (typeof object.channelPartnerRepricingConfig !== "object")
                                    throw TypeError(".google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest.channelPartnerRepricingConfig: object expected");
                                message.channelPartnerRepricingConfig = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.fromObject(object.channelPartnerRepricingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateChannelPartnerRepricingConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest} message UpdateChannelPartnerRepricingConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateChannelPartnerRepricingConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.channelPartnerRepricingConfig = null;
                            if (message.channelPartnerRepricingConfig != null && message.hasOwnProperty("channelPartnerRepricingConfig"))
                                object.channelPartnerRepricingConfig = $root.google.cloud.channel.v1.ChannelPartnerRepricingConfig.toObject(message.channelPartnerRepricingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateChannelPartnerRepricingConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateChannelPartnerRepricingConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateChannelPartnerRepricingConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateChannelPartnerRepricingConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.UpdateChannelPartnerRepricingConfigRequest";
                        };
    
                        return UpdateChannelPartnerRepricingConfigRequest;
                    })();
    
                    v1.DeleteChannelPartnerRepricingConfigRequest = (function() {
    
                        /**
                         * Properties of a DeleteChannelPartnerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IDeleteChannelPartnerRepricingConfigRequest
                         * @property {string|null} [name] DeleteChannelPartnerRepricingConfigRequest name
                         */
    
                        /**
                         * Constructs a new DeleteChannelPartnerRepricingConfigRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a DeleteChannelPartnerRepricingConfigRequest.
                         * @implements IDeleteChannelPartnerRepricingConfigRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest=} [properties] Properties to set
                         */
                        function DeleteChannelPartnerRepricingConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteChannelPartnerRepricingConfigRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @instance
                         */
                        DeleteChannelPartnerRepricingConfigRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteChannelPartnerRepricingConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest} DeleteChannelPartnerRepricingConfigRequest instance
                         */
                        DeleteChannelPartnerRepricingConfigRequest.create = function create(properties) {
                            return new DeleteChannelPartnerRepricingConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteChannelPartnerRepricingConfigRequest message. Does not implicitly {@link google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest} message DeleteChannelPartnerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteChannelPartnerRepricingConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteChannelPartnerRepricingConfigRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest} message DeleteChannelPartnerRepricingConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteChannelPartnerRepricingConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteChannelPartnerRepricingConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest} DeleteChannelPartnerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteChannelPartnerRepricingConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteChannelPartnerRepricingConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest} DeleteChannelPartnerRepricingConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteChannelPartnerRepricingConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteChannelPartnerRepricingConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteChannelPartnerRepricingConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteChannelPartnerRepricingConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest} DeleteChannelPartnerRepricingConfigRequest
                         */
                        DeleteChannelPartnerRepricingConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteChannelPartnerRepricingConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest} message DeleteChannelPartnerRepricingConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteChannelPartnerRepricingConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteChannelPartnerRepricingConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteChannelPartnerRepricingConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteChannelPartnerRepricingConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteChannelPartnerRepricingConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.DeleteChannelPartnerRepricingConfigRequest";
                        };
    
                        return DeleteChannelPartnerRepricingConfigRequest;
                    })();
    
                    v1.CreateEntitlementRequest = (function() {
    
                        /**
                         * Properties of a CreateEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ICreateEntitlementRequest
                         * @property {string|null} [parent] CreateEntitlementRequest parent
                         * @property {google.cloud.channel.v1.IEntitlement|null} [entitlement] CreateEntitlementRequest entitlement
                         * @property {string|null} [requestId] CreateEntitlementRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CreateEntitlementRequest.
                         * @implements ICreateEntitlementRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ICreateEntitlementRequest=} [properties] Properties to set
                         */
                        function CreateEntitlementRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateEntitlementRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @instance
                         */
                        CreateEntitlementRequest.prototype.parent = "";
    
                        /**
                         * CreateEntitlementRequest entitlement.
                         * @member {google.cloud.channel.v1.IEntitlement|null|undefined} entitlement
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @instance
                         */
                        CreateEntitlementRequest.prototype.entitlement = null;
    
                        /**
                         * CreateEntitlementRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @instance
                         */
                        CreateEntitlementRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateEntitlementRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateEntitlementRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CreateEntitlementRequest} CreateEntitlementRequest instance
                         */
                        CreateEntitlementRequest.create = function create(properties) {
                            return new CreateEntitlementRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateEntitlementRequest message. Does not implicitly {@link google.cloud.channel.v1.CreateEntitlementRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateEntitlementRequest} message CreateEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateEntitlementRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.entitlement != null && Object.hasOwnProperty.call(message, "entitlement"))
                                $root.google.cloud.channel.v1.Entitlement.encode(message.entitlement, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateEntitlementRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CreateEntitlementRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICreateEntitlementRequest} message CreateEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateEntitlementRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateEntitlementRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CreateEntitlementRequest} CreateEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateEntitlementRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CreateEntitlementRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.entitlement = $root.google.cloud.channel.v1.Entitlement.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateEntitlementRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CreateEntitlementRequest} CreateEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateEntitlementRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateEntitlementRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateEntitlementRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.entitlement != null && message.hasOwnProperty("entitlement")) {
                                var error = $root.google.cloud.channel.v1.Entitlement.verify(message.entitlement);
                                if (error)
                                    return "entitlement." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateEntitlementRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CreateEntitlementRequest} CreateEntitlementRequest
                         */
                        CreateEntitlementRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CreateEntitlementRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CreateEntitlementRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.entitlement != null) {
                                if (typeof object.entitlement !== "object")
                                    throw TypeError(".google.cloud.channel.v1.CreateEntitlementRequest.entitlement: object expected");
                                message.entitlement = $root.google.cloud.channel.v1.Entitlement.fromObject(object.entitlement);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateEntitlementRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.CreateEntitlementRequest} message CreateEntitlementRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateEntitlementRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.entitlement = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                object.entitlement = $root.google.cloud.channel.v1.Entitlement.toObject(message.entitlement, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateEntitlementRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateEntitlementRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateEntitlementRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CreateEntitlementRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateEntitlementRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CreateEntitlementRequest";
                        };
    
                        return CreateEntitlementRequest;
                    })();
    
                    v1.TransferEntitlementsRequest = (function() {
    
                        /**
                         * Properties of a TransferEntitlementsRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ITransferEntitlementsRequest
                         * @property {string|null} [parent] TransferEntitlementsRequest parent
                         * @property {Array.<google.cloud.channel.v1.IEntitlement>|null} [entitlements] TransferEntitlementsRequest entitlements
                         * @property {string|null} [authToken] TransferEntitlementsRequest authToken
                         * @property {string|null} [requestId] TransferEntitlementsRequest requestId
                         */
    
                        /**
                         * Constructs a new TransferEntitlementsRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a TransferEntitlementsRequest.
                         * @implements ITransferEntitlementsRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ITransferEntitlementsRequest=} [properties] Properties to set
                         */
                        function TransferEntitlementsRequest(properties) {
                            this.entitlements = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferEntitlementsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @instance
                         */
                        TransferEntitlementsRequest.prototype.parent = "";
    
                        /**
                         * TransferEntitlementsRequest entitlements.
                         * @member {Array.<google.cloud.channel.v1.IEntitlement>} entitlements
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @instance
                         */
                        TransferEntitlementsRequest.prototype.entitlements = $util.emptyArray;
    
                        /**
                         * TransferEntitlementsRequest authToken.
                         * @member {string} authToken
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @instance
                         */
                        TransferEntitlementsRequest.prototype.authToken = "";
    
                        /**
                         * TransferEntitlementsRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @instance
                         */
                        TransferEntitlementsRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new TransferEntitlementsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEntitlementsRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.TransferEntitlementsRequest} TransferEntitlementsRequest instance
                         */
                        TransferEntitlementsRequest.create = function create(properties) {
                            return new TransferEntitlementsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified TransferEntitlementsRequest message. Does not implicitly {@link google.cloud.channel.v1.TransferEntitlementsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEntitlementsRequest} message TransferEntitlementsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferEntitlementsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.entitlements != null && message.entitlements.length)
                                for (var i = 0; i < message.entitlements.length; ++i)
                                    $root.google.cloud.channel.v1.Entitlement.encode(message.entitlements[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.authToken != null && Object.hasOwnProperty.call(message, "authToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.authToken);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferEntitlementsRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.TransferEntitlementsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEntitlementsRequest} message TransferEntitlementsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferEntitlementsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferEntitlementsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.TransferEntitlementsRequest} TransferEntitlementsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferEntitlementsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.TransferEntitlementsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.entitlements && message.entitlements.length))
                                            message.entitlements = [];
                                        message.entitlements.push($root.google.cloud.channel.v1.Entitlement.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.authToken = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferEntitlementsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.TransferEntitlementsRequest} TransferEntitlementsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferEntitlementsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferEntitlementsRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferEntitlementsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.entitlements != null && message.hasOwnProperty("entitlements")) {
                                if (!Array.isArray(message.entitlements))
                                    return "entitlements: array expected";
                                for (var i = 0; i < message.entitlements.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Entitlement.verify(message.entitlements[i]);
                                    if (error)
                                        return "entitlements." + error;
                                }
                            }
                            if (message.authToken != null && message.hasOwnProperty("authToken"))
                                if (!$util.isString(message.authToken))
                                    return "authToken: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TransferEntitlementsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.TransferEntitlementsRequest} TransferEntitlementsRequest
                         */
                        TransferEntitlementsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.TransferEntitlementsRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.TransferEntitlementsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.entitlements) {
                                if (!Array.isArray(object.entitlements))
                                    throw TypeError(".google.cloud.channel.v1.TransferEntitlementsRequest.entitlements: array expected");
                                message.entitlements = [];
                                for (var i = 0; i < object.entitlements.length; ++i) {
                                    if (typeof object.entitlements[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.TransferEntitlementsRequest.entitlements: object expected");
                                    message.entitlements[i] = $root.google.cloud.channel.v1.Entitlement.fromObject(object.entitlements[i]);
                                }
                            }
                            if (object.authToken != null)
                                message.authToken = String(object.authToken);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferEntitlementsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @static
                         * @param {google.cloud.channel.v1.TransferEntitlementsRequest} message TransferEntitlementsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferEntitlementsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.entitlements = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.authToken = "";
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.entitlements && message.entitlements.length) {
                                object.entitlements = [];
                                for (var j = 0; j < message.entitlements.length; ++j)
                                    object.entitlements[j] = $root.google.cloud.channel.v1.Entitlement.toObject(message.entitlements[j], options);
                            }
                            if (message.authToken != null && message.hasOwnProperty("authToken"))
                                object.authToken = message.authToken;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this TransferEntitlementsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferEntitlementsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferEntitlementsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.TransferEntitlementsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferEntitlementsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.TransferEntitlementsRequest";
                        };
    
                        return TransferEntitlementsRequest;
                    })();
    
                    v1.TransferEntitlementsResponse = (function() {
    
                        /**
                         * Properties of a TransferEntitlementsResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface ITransferEntitlementsResponse
                         * @property {Array.<google.cloud.channel.v1.IEntitlement>|null} [entitlements] TransferEntitlementsResponse entitlements
                         */
    
                        /**
                         * Constructs a new TransferEntitlementsResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a TransferEntitlementsResponse.
                         * @implements ITransferEntitlementsResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.ITransferEntitlementsResponse=} [properties] Properties to set
                         */
                        function TransferEntitlementsResponse(properties) {
                            this.entitlements = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferEntitlementsResponse entitlements.
                         * @member {Array.<google.cloud.channel.v1.IEntitlement>} entitlements
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @instance
                         */
                        TransferEntitlementsResponse.prototype.entitlements = $util.emptyArray;
    
                        /**
                         * Creates a new TransferEntitlementsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEntitlementsResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.TransferEntitlementsResponse} TransferEntitlementsResponse instance
                         */
                        TransferEntitlementsResponse.create = function create(properties) {
                            return new TransferEntitlementsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified TransferEntitlementsResponse message. Does not implicitly {@link google.cloud.channel.v1.TransferEntitlementsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEntitlementsResponse} message TransferEntitlementsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferEntitlementsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.entitlements != null && message.entitlements.length)
                                for (var i = 0; i < message.entitlements.length; ++i)
                                    $root.google.cloud.channel.v1.Entitlement.encode(message.entitlements[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferEntitlementsResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.TransferEntitlementsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEntitlementsResponse} message TransferEntitlementsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferEntitlementsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferEntitlementsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.TransferEntitlementsResponse} TransferEntitlementsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferEntitlementsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.TransferEntitlementsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.entitlements && message.entitlements.length))
                                            message.entitlements = [];
                                        message.entitlements.push($root.google.cloud.channel.v1.Entitlement.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferEntitlementsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.TransferEntitlementsResponse} TransferEntitlementsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferEntitlementsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferEntitlementsResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferEntitlementsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.entitlements != null && message.hasOwnProperty("entitlements")) {
                                if (!Array.isArray(message.entitlements))
                                    return "entitlements: array expected";
                                for (var i = 0; i < message.entitlements.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Entitlement.verify(message.entitlements[i]);
                                    if (error)
                                        return "entitlements." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransferEntitlementsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.TransferEntitlementsResponse} TransferEntitlementsResponse
                         */
                        TransferEntitlementsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.TransferEntitlementsResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.TransferEntitlementsResponse();
                            if (object.entitlements) {
                                if (!Array.isArray(object.entitlements))
                                    throw TypeError(".google.cloud.channel.v1.TransferEntitlementsResponse.entitlements: array expected");
                                message.entitlements = [];
                                for (var i = 0; i < object.entitlements.length; ++i) {
                                    if (typeof object.entitlements[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.TransferEntitlementsResponse.entitlements: object expected");
                                    message.entitlements[i] = $root.google.cloud.channel.v1.Entitlement.fromObject(object.entitlements[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferEntitlementsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @static
                         * @param {google.cloud.channel.v1.TransferEntitlementsResponse} message TransferEntitlementsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferEntitlementsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.entitlements = [];
                            if (message.entitlements && message.entitlements.length) {
                                object.entitlements = [];
                                for (var j = 0; j < message.entitlements.length; ++j)
                                    object.entitlements[j] = $root.google.cloud.channel.v1.Entitlement.toObject(message.entitlements[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TransferEntitlementsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferEntitlementsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferEntitlementsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.TransferEntitlementsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferEntitlementsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.TransferEntitlementsResponse";
                        };
    
                        return TransferEntitlementsResponse;
                    })();
    
                    v1.TransferEntitlementsToGoogleRequest = (function() {
    
                        /**
                         * Properties of a TransferEntitlementsToGoogleRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ITransferEntitlementsToGoogleRequest
                         * @property {string|null} [parent] TransferEntitlementsToGoogleRequest parent
                         * @property {Array.<google.cloud.channel.v1.IEntitlement>|null} [entitlements] TransferEntitlementsToGoogleRequest entitlements
                         * @property {string|null} [requestId] TransferEntitlementsToGoogleRequest requestId
                         */
    
                        /**
                         * Constructs a new TransferEntitlementsToGoogleRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a TransferEntitlementsToGoogleRequest.
                         * @implements ITransferEntitlementsToGoogleRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest=} [properties] Properties to set
                         */
                        function TransferEntitlementsToGoogleRequest(properties) {
                            this.entitlements = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransferEntitlementsToGoogleRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @instance
                         */
                        TransferEntitlementsToGoogleRequest.prototype.parent = "";
    
                        /**
                         * TransferEntitlementsToGoogleRequest entitlements.
                         * @member {Array.<google.cloud.channel.v1.IEntitlement>} entitlements
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @instance
                         */
                        TransferEntitlementsToGoogleRequest.prototype.entitlements = $util.emptyArray;
    
                        /**
                         * TransferEntitlementsToGoogleRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @instance
                         */
                        TransferEntitlementsToGoogleRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new TransferEntitlementsToGoogleRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.TransferEntitlementsToGoogleRequest} TransferEntitlementsToGoogleRequest instance
                         */
                        TransferEntitlementsToGoogleRequest.create = function create(properties) {
                            return new TransferEntitlementsToGoogleRequest(properties);
                        };
    
                        /**
                         * Encodes the specified TransferEntitlementsToGoogleRequest message. Does not implicitly {@link google.cloud.channel.v1.TransferEntitlementsToGoogleRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest} message TransferEntitlementsToGoogleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferEntitlementsToGoogleRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.entitlements != null && message.entitlements.length)
                                for (var i = 0; i < message.entitlements.length; ++i)
                                    $root.google.cloud.channel.v1.Entitlement.encode(message.entitlements[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransferEntitlementsToGoogleRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.TransferEntitlementsToGoogleRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @static
                         * @param {google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest} message TransferEntitlementsToGoogleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransferEntitlementsToGoogleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransferEntitlementsToGoogleRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.TransferEntitlementsToGoogleRequest} TransferEntitlementsToGoogleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferEntitlementsToGoogleRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.TransferEntitlementsToGoogleRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.entitlements && message.entitlements.length))
                                            message.entitlements = [];
                                        message.entitlements.push($root.google.cloud.channel.v1.Entitlement.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransferEntitlementsToGoogleRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.TransferEntitlementsToGoogleRequest} TransferEntitlementsToGoogleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransferEntitlementsToGoogleRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransferEntitlementsToGoogleRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransferEntitlementsToGoogleRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.entitlements != null && message.hasOwnProperty("entitlements")) {
                                if (!Array.isArray(message.entitlements))
                                    return "entitlements: array expected";
                                for (var i = 0; i < message.entitlements.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Entitlement.verify(message.entitlements[i]);
                                    if (error)
                                        return "entitlements." + error;
                                }
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TransferEntitlementsToGoogleRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.TransferEntitlementsToGoogleRequest} TransferEntitlementsToGoogleRequest
                         */
                        TransferEntitlementsToGoogleRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.TransferEntitlementsToGoogleRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.TransferEntitlementsToGoogleRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.entitlements) {
                                if (!Array.isArray(object.entitlements))
                                    throw TypeError(".google.cloud.channel.v1.TransferEntitlementsToGoogleRequest.entitlements: array expected");
                                message.entitlements = [];
                                for (var i = 0; i < object.entitlements.length; ++i) {
                                    if (typeof object.entitlements[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.TransferEntitlementsToGoogleRequest.entitlements: object expected");
                                    message.entitlements[i] = $root.google.cloud.channel.v1.Entitlement.fromObject(object.entitlements[i]);
                                }
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransferEntitlementsToGoogleRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @static
                         * @param {google.cloud.channel.v1.TransferEntitlementsToGoogleRequest} message TransferEntitlementsToGoogleRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransferEntitlementsToGoogleRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.entitlements = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.entitlements && message.entitlements.length) {
                                object.entitlements = [];
                                for (var j = 0; j < message.entitlements.length; ++j)
                                    object.entitlements[j] = $root.google.cloud.channel.v1.Entitlement.toObject(message.entitlements[j], options);
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this TransferEntitlementsToGoogleRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransferEntitlementsToGoogleRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransferEntitlementsToGoogleRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.TransferEntitlementsToGoogleRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransferEntitlementsToGoogleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.TransferEntitlementsToGoogleRequest";
                        };
    
                        return TransferEntitlementsToGoogleRequest;
                    })();
    
                    v1.ChangeParametersRequest = (function() {
    
                        /**
                         * Properties of a ChangeParametersRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IChangeParametersRequest
                         * @property {string|null} [name] ChangeParametersRequest name
                         * @property {Array.<google.cloud.channel.v1.IParameter>|null} [parameters] ChangeParametersRequest parameters
                         * @property {string|null} [requestId] ChangeParametersRequest requestId
                         * @property {string|null} [purchaseOrderId] ChangeParametersRequest purchaseOrderId
                         */
    
                        /**
                         * Constructs a new ChangeParametersRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ChangeParametersRequest.
                         * @implements IChangeParametersRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IChangeParametersRequest=} [properties] Properties to set
                         */
                        function ChangeParametersRequest(properties) {
                            this.parameters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ChangeParametersRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @instance
                         */
                        ChangeParametersRequest.prototype.name = "";
    
                        /**
                         * ChangeParametersRequest parameters.
                         * @member {Array.<google.cloud.channel.v1.IParameter>} parameters
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @instance
                         */
                        ChangeParametersRequest.prototype.parameters = $util.emptyArray;
    
                        /**
                         * ChangeParametersRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @instance
                         */
                        ChangeParametersRequest.prototype.requestId = "";
    
                        /**
                         * ChangeParametersRequest purchaseOrderId.
                         * @member {string} purchaseOrderId
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @instance
                         */
                        ChangeParametersRequest.prototype.purchaseOrderId = "";
    
                        /**
                         * Creates a new ChangeParametersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IChangeParametersRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ChangeParametersRequest} ChangeParametersRequest instance
                         */
                        ChangeParametersRequest.create = function create(properties) {
                            return new ChangeParametersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ChangeParametersRequest message. Does not implicitly {@link google.cloud.channel.v1.ChangeParametersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IChangeParametersRequest} message ChangeParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChangeParametersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.parameters != null && message.parameters.length)
                                for (var i = 0; i < message.parameters.length; ++i)
                                    $root.google.cloud.channel.v1.Parameter.encode(message.parameters[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.purchaseOrderId != null && Object.hasOwnProperty.call(message, "purchaseOrderId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.purchaseOrderId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ChangeParametersRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ChangeParametersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IChangeParametersRequest} message ChangeParametersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChangeParametersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ChangeParametersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ChangeParametersRequest} ChangeParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChangeParametersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ChangeParametersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.parameters && message.parameters.length))
                                            message.parameters = [];
                                        message.parameters.push($root.google.cloud.channel.v1.Parameter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.purchaseOrderId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ChangeParametersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ChangeParametersRequest} ChangeParametersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChangeParametersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ChangeParametersRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ChangeParametersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.parameters != null && message.hasOwnProperty("parameters")) {
                                if (!Array.isArray(message.parameters))
                                    return "parameters: array expected";
                                for (var i = 0; i < message.parameters.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Parameter.verify(message.parameters[i]);
                                    if (error)
                                        return "parameters." + error;
                                }
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.purchaseOrderId != null && message.hasOwnProperty("purchaseOrderId"))
                                if (!$util.isString(message.purchaseOrderId))
                                    return "purchaseOrderId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ChangeParametersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ChangeParametersRequest} ChangeParametersRequest
                         */
                        ChangeParametersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ChangeParametersRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ChangeParametersRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.parameters) {
                                if (!Array.isArray(object.parameters))
                                    throw TypeError(".google.cloud.channel.v1.ChangeParametersRequest.parameters: array expected");
                                message.parameters = [];
                                for (var i = 0; i < object.parameters.length; ++i) {
                                    if (typeof object.parameters[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ChangeParametersRequest.parameters: object expected");
                                    message.parameters[i] = $root.google.cloud.channel.v1.Parameter.fromObject(object.parameters[i]);
                                }
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.purchaseOrderId != null)
                                message.purchaseOrderId = String(object.purchaseOrderId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ChangeParametersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @static
                         * @param {google.cloud.channel.v1.ChangeParametersRequest} message ChangeParametersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ChangeParametersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.parameters = [];
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                                object.purchaseOrderId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.parameters && message.parameters.length) {
                                object.parameters = [];
                                for (var j = 0; j < message.parameters.length; ++j)
                                    object.parameters[j] = $root.google.cloud.channel.v1.Parameter.toObject(message.parameters[j], options);
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.purchaseOrderId != null && message.hasOwnProperty("purchaseOrderId"))
                                object.purchaseOrderId = message.purchaseOrderId;
                            return object;
                        };
    
                        /**
                         * Converts this ChangeParametersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ChangeParametersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ChangeParametersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ChangeParametersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ChangeParametersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ChangeParametersRequest";
                        };
    
                        return ChangeParametersRequest;
                    })();
    
                    v1.ChangeRenewalSettingsRequest = (function() {
    
                        /**
                         * Properties of a ChangeRenewalSettingsRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IChangeRenewalSettingsRequest
                         * @property {string|null} [name] ChangeRenewalSettingsRequest name
                         * @property {google.cloud.channel.v1.IRenewalSettings|null} [renewalSettings] ChangeRenewalSettingsRequest renewalSettings
                         * @property {string|null} [requestId] ChangeRenewalSettingsRequest requestId
                         */
    
                        /**
                         * Constructs a new ChangeRenewalSettingsRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ChangeRenewalSettingsRequest.
                         * @implements IChangeRenewalSettingsRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IChangeRenewalSettingsRequest=} [properties] Properties to set
                         */
                        function ChangeRenewalSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ChangeRenewalSettingsRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @instance
                         */
                        ChangeRenewalSettingsRequest.prototype.name = "";
    
                        /**
                         * ChangeRenewalSettingsRequest renewalSettings.
                         * @member {google.cloud.channel.v1.IRenewalSettings|null|undefined} renewalSettings
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @instance
                         */
                        ChangeRenewalSettingsRequest.prototype.renewalSettings = null;
    
                        /**
                         * ChangeRenewalSettingsRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @instance
                         */
                        ChangeRenewalSettingsRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new ChangeRenewalSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IChangeRenewalSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ChangeRenewalSettingsRequest} ChangeRenewalSettingsRequest instance
                         */
                        ChangeRenewalSettingsRequest.create = function create(properties) {
                            return new ChangeRenewalSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ChangeRenewalSettingsRequest message. Does not implicitly {@link google.cloud.channel.v1.ChangeRenewalSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IChangeRenewalSettingsRequest} message ChangeRenewalSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChangeRenewalSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.renewalSettings != null && Object.hasOwnProperty.call(message, "renewalSettings"))
                                $root.google.cloud.channel.v1.RenewalSettings.encode(message.renewalSettings, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ChangeRenewalSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ChangeRenewalSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IChangeRenewalSettingsRequest} message ChangeRenewalSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChangeRenewalSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ChangeRenewalSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ChangeRenewalSettingsRequest} ChangeRenewalSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChangeRenewalSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ChangeRenewalSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.renewalSettings = $root.google.cloud.channel.v1.RenewalSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ChangeRenewalSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ChangeRenewalSettingsRequest} ChangeRenewalSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChangeRenewalSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ChangeRenewalSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ChangeRenewalSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.renewalSettings != null && message.hasOwnProperty("renewalSettings")) {
                                var error = $root.google.cloud.channel.v1.RenewalSettings.verify(message.renewalSettings);
                                if (error)
                                    return "renewalSettings." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ChangeRenewalSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ChangeRenewalSettingsRequest} ChangeRenewalSettingsRequest
                         */
                        ChangeRenewalSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ChangeRenewalSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ChangeRenewalSettingsRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.renewalSettings != null) {
                                if (typeof object.renewalSettings !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ChangeRenewalSettingsRequest.renewalSettings: object expected");
                                message.renewalSettings = $root.google.cloud.channel.v1.RenewalSettings.fromObject(object.renewalSettings);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ChangeRenewalSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @static
                         * @param {google.cloud.channel.v1.ChangeRenewalSettingsRequest} message ChangeRenewalSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ChangeRenewalSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.renewalSettings = null;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.renewalSettings != null && message.hasOwnProperty("renewalSettings"))
                                object.renewalSettings = $root.google.cloud.channel.v1.RenewalSettings.toObject(message.renewalSettings, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this ChangeRenewalSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ChangeRenewalSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ChangeRenewalSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ChangeRenewalSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ChangeRenewalSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ChangeRenewalSettingsRequest";
                        };
    
                        return ChangeRenewalSettingsRequest;
                    })();
    
                    v1.ChangeOfferRequest = (function() {
    
                        /**
                         * Properties of a ChangeOfferRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IChangeOfferRequest
                         * @property {string|null} [name] ChangeOfferRequest name
                         * @property {string|null} [offer] ChangeOfferRequest offer
                         * @property {Array.<google.cloud.channel.v1.IParameter>|null} [parameters] ChangeOfferRequest parameters
                         * @property {string|null} [purchaseOrderId] ChangeOfferRequest purchaseOrderId
                         * @property {string|null} [requestId] ChangeOfferRequest requestId
                         */
    
                        /**
                         * Constructs a new ChangeOfferRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ChangeOfferRequest.
                         * @implements IChangeOfferRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IChangeOfferRequest=} [properties] Properties to set
                         */
                        function ChangeOfferRequest(properties) {
                            this.parameters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ChangeOfferRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @instance
                         */
                        ChangeOfferRequest.prototype.name = "";
    
                        /**
                         * ChangeOfferRequest offer.
                         * @member {string} offer
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @instance
                         */
                        ChangeOfferRequest.prototype.offer = "";
    
                        /**
                         * ChangeOfferRequest parameters.
                         * @member {Array.<google.cloud.channel.v1.IParameter>} parameters
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @instance
                         */
                        ChangeOfferRequest.prototype.parameters = $util.emptyArray;
    
                        /**
                         * ChangeOfferRequest purchaseOrderId.
                         * @member {string} purchaseOrderId
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @instance
                         */
                        ChangeOfferRequest.prototype.purchaseOrderId = "";
    
                        /**
                         * ChangeOfferRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @instance
                         */
                        ChangeOfferRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new ChangeOfferRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @static
                         * @param {google.cloud.channel.v1.IChangeOfferRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ChangeOfferRequest} ChangeOfferRequest instance
                         */
                        ChangeOfferRequest.create = function create(properties) {
                            return new ChangeOfferRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ChangeOfferRequest message. Does not implicitly {@link google.cloud.channel.v1.ChangeOfferRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @static
                         * @param {google.cloud.channel.v1.IChangeOfferRequest} message ChangeOfferRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChangeOfferRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.offer != null && Object.hasOwnProperty.call(message, "offer"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.offer);
                            if (message.parameters != null && message.parameters.length)
                                for (var i = 0; i < message.parameters.length; ++i)
                                    $root.google.cloud.channel.v1.Parameter.encode(message.parameters[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.purchaseOrderId != null && Object.hasOwnProperty.call(message, "purchaseOrderId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.purchaseOrderId);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ChangeOfferRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ChangeOfferRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @static
                         * @param {google.cloud.channel.v1.IChangeOfferRequest} message ChangeOfferRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChangeOfferRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ChangeOfferRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ChangeOfferRequest} ChangeOfferRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChangeOfferRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ChangeOfferRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.offer = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.parameters && message.parameters.length))
                                            message.parameters = [];
                                        message.parameters.push($root.google.cloud.channel.v1.Parameter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.purchaseOrderId = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ChangeOfferRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ChangeOfferRequest} ChangeOfferRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChangeOfferRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ChangeOfferRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ChangeOfferRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.offer != null && message.hasOwnProperty("offer"))
                                if (!$util.isString(message.offer))
                                    return "offer: string expected";
                            if (message.parameters != null && message.hasOwnProperty("parameters")) {
                                if (!Array.isArray(message.parameters))
                                    return "parameters: array expected";
                                for (var i = 0; i < message.parameters.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Parameter.verify(message.parameters[i]);
                                    if (error)
                                        return "parameters." + error;
                                }
                            }
                            if (message.purchaseOrderId != null && message.hasOwnProperty("purchaseOrderId"))
                                if (!$util.isString(message.purchaseOrderId))
                                    return "purchaseOrderId: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ChangeOfferRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ChangeOfferRequest} ChangeOfferRequest
                         */
                        ChangeOfferRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ChangeOfferRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ChangeOfferRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.offer != null)
                                message.offer = String(object.offer);
                            if (object.parameters) {
                                if (!Array.isArray(object.parameters))
                                    throw TypeError(".google.cloud.channel.v1.ChangeOfferRequest.parameters: array expected");
                                message.parameters = [];
                                for (var i = 0; i < object.parameters.length; ++i) {
                                    if (typeof object.parameters[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ChangeOfferRequest.parameters: object expected");
                                    message.parameters[i] = $root.google.cloud.channel.v1.Parameter.fromObject(object.parameters[i]);
                                }
                            }
                            if (object.purchaseOrderId != null)
                                message.purchaseOrderId = String(object.purchaseOrderId);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ChangeOfferRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @static
                         * @param {google.cloud.channel.v1.ChangeOfferRequest} message ChangeOfferRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ChangeOfferRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.parameters = [];
                            if (options.defaults) {
                                object.name = "";
                                object.offer = "";
                                object.purchaseOrderId = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.offer != null && message.hasOwnProperty("offer"))
                                object.offer = message.offer;
                            if (message.parameters && message.parameters.length) {
                                object.parameters = [];
                                for (var j = 0; j < message.parameters.length; ++j)
                                    object.parameters[j] = $root.google.cloud.channel.v1.Parameter.toObject(message.parameters[j], options);
                            }
                            if (message.purchaseOrderId != null && message.hasOwnProperty("purchaseOrderId"))
                                object.purchaseOrderId = message.purchaseOrderId;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this ChangeOfferRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ChangeOfferRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ChangeOfferRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ChangeOfferRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ChangeOfferRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ChangeOfferRequest";
                        };
    
                        return ChangeOfferRequest;
                    })();
    
                    v1.StartPaidServiceRequest = (function() {
    
                        /**
                         * Properties of a StartPaidServiceRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IStartPaidServiceRequest
                         * @property {string|null} [name] StartPaidServiceRequest name
                         * @property {string|null} [requestId] StartPaidServiceRequest requestId
                         */
    
                        /**
                         * Constructs a new StartPaidServiceRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a StartPaidServiceRequest.
                         * @implements IStartPaidServiceRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IStartPaidServiceRequest=} [properties] Properties to set
                         */
                        function StartPaidServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StartPaidServiceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @instance
                         */
                        StartPaidServiceRequest.prototype.name = "";
    
                        /**
                         * StartPaidServiceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @instance
                         */
                        StartPaidServiceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new StartPaidServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @static
                         * @param {google.cloud.channel.v1.IStartPaidServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.StartPaidServiceRequest} StartPaidServiceRequest instance
                         */
                        StartPaidServiceRequest.create = function create(properties) {
                            return new StartPaidServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StartPaidServiceRequest message. Does not implicitly {@link google.cloud.channel.v1.StartPaidServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @static
                         * @param {google.cloud.channel.v1.IStartPaidServiceRequest} message StartPaidServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartPaidServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StartPaidServiceRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.StartPaidServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @static
                         * @param {google.cloud.channel.v1.IStartPaidServiceRequest} message StartPaidServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartPaidServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StartPaidServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.StartPaidServiceRequest} StartPaidServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartPaidServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.StartPaidServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StartPaidServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.StartPaidServiceRequest} StartPaidServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartPaidServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StartPaidServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StartPaidServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StartPaidServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.StartPaidServiceRequest} StartPaidServiceRequest
                         */
                        StartPaidServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.StartPaidServiceRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.StartPaidServiceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StartPaidServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @static
                         * @param {google.cloud.channel.v1.StartPaidServiceRequest} message StartPaidServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StartPaidServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this StartPaidServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StartPaidServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StartPaidServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.StartPaidServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StartPaidServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.StartPaidServiceRequest";
                        };
    
                        return StartPaidServiceRequest;
                    })();
    
                    v1.CancelEntitlementRequest = (function() {
    
                        /**
                         * Properties of a CancelEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ICancelEntitlementRequest
                         * @property {string|null} [name] CancelEntitlementRequest name
                         * @property {string|null} [requestId] CancelEntitlementRequest requestId
                         */
    
                        /**
                         * Constructs a new CancelEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CancelEntitlementRequest.
                         * @implements ICancelEntitlementRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ICancelEntitlementRequest=} [properties] Properties to set
                         */
                        function CancelEntitlementRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CancelEntitlementRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @instance
                         */
                        CancelEntitlementRequest.prototype.name = "";
    
                        /**
                         * CancelEntitlementRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @instance
                         */
                        CancelEntitlementRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CancelEntitlementRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICancelEntitlementRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CancelEntitlementRequest} CancelEntitlementRequest instance
                         */
                        CancelEntitlementRequest.create = function create(properties) {
                            return new CancelEntitlementRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CancelEntitlementRequest message. Does not implicitly {@link google.cloud.channel.v1.CancelEntitlementRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICancelEntitlementRequest} message CancelEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelEntitlementRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CancelEntitlementRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CancelEntitlementRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ICancelEntitlementRequest} message CancelEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelEntitlementRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CancelEntitlementRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CancelEntitlementRequest} CancelEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelEntitlementRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CancelEntitlementRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CancelEntitlementRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CancelEntitlementRequest} CancelEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelEntitlementRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CancelEntitlementRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CancelEntitlementRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CancelEntitlementRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CancelEntitlementRequest} CancelEntitlementRequest
                         */
                        CancelEntitlementRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CancelEntitlementRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CancelEntitlementRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CancelEntitlementRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.CancelEntitlementRequest} message CancelEntitlementRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CancelEntitlementRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CancelEntitlementRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CancelEntitlementRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CancelEntitlementRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CancelEntitlementRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CancelEntitlementRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CancelEntitlementRequest";
                        };
    
                        return CancelEntitlementRequest;
                    })();
    
                    v1.SuspendEntitlementRequest = (function() {
    
                        /**
                         * Properties of a SuspendEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ISuspendEntitlementRequest
                         * @property {string|null} [name] SuspendEntitlementRequest name
                         * @property {string|null} [requestId] SuspendEntitlementRequest requestId
                         */
    
                        /**
                         * Constructs a new SuspendEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a SuspendEntitlementRequest.
                         * @implements ISuspendEntitlementRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ISuspendEntitlementRequest=} [properties] Properties to set
                         */
                        function SuspendEntitlementRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SuspendEntitlementRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @instance
                         */
                        SuspendEntitlementRequest.prototype.name = "";
    
                        /**
                         * SuspendEntitlementRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @instance
                         */
                        SuspendEntitlementRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new SuspendEntitlementRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ISuspendEntitlementRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.SuspendEntitlementRequest} SuspendEntitlementRequest instance
                         */
                        SuspendEntitlementRequest.create = function create(properties) {
                            return new SuspendEntitlementRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SuspendEntitlementRequest message. Does not implicitly {@link google.cloud.channel.v1.SuspendEntitlementRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ISuspendEntitlementRequest} message SuspendEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SuspendEntitlementRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SuspendEntitlementRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.SuspendEntitlementRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ISuspendEntitlementRequest} message SuspendEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SuspendEntitlementRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SuspendEntitlementRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.SuspendEntitlementRequest} SuspendEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SuspendEntitlementRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.SuspendEntitlementRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SuspendEntitlementRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.SuspendEntitlementRequest} SuspendEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SuspendEntitlementRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SuspendEntitlementRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SuspendEntitlementRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SuspendEntitlementRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.SuspendEntitlementRequest} SuspendEntitlementRequest
                         */
                        SuspendEntitlementRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.SuspendEntitlementRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.SuspendEntitlementRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SuspendEntitlementRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.SuspendEntitlementRequest} message SuspendEntitlementRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SuspendEntitlementRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this SuspendEntitlementRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SuspendEntitlementRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SuspendEntitlementRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.SuspendEntitlementRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SuspendEntitlementRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.SuspendEntitlementRequest";
                        };
    
                        return SuspendEntitlementRequest;
                    })();
    
                    v1.ActivateEntitlementRequest = (function() {
    
                        /**
                         * Properties of an ActivateEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IActivateEntitlementRequest
                         * @property {string|null} [name] ActivateEntitlementRequest name
                         * @property {string|null} [requestId] ActivateEntitlementRequest requestId
                         */
    
                        /**
                         * Constructs a new ActivateEntitlementRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an ActivateEntitlementRequest.
                         * @implements IActivateEntitlementRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IActivateEntitlementRequest=} [properties] Properties to set
                         */
                        function ActivateEntitlementRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ActivateEntitlementRequest name.
                         * @member {string} name
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @instance
                         */
                        ActivateEntitlementRequest.prototype.name = "";
    
                        /**
                         * ActivateEntitlementRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @instance
                         */
                        ActivateEntitlementRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new ActivateEntitlementRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.IActivateEntitlementRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ActivateEntitlementRequest} ActivateEntitlementRequest instance
                         */
                        ActivateEntitlementRequest.create = function create(properties) {
                            return new ActivateEntitlementRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ActivateEntitlementRequest message. Does not implicitly {@link google.cloud.channel.v1.ActivateEntitlementRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.IActivateEntitlementRequest} message ActivateEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ActivateEntitlementRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ActivateEntitlementRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ActivateEntitlementRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.IActivateEntitlementRequest} message ActivateEntitlementRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ActivateEntitlementRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ActivateEntitlementRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ActivateEntitlementRequest} ActivateEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ActivateEntitlementRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ActivateEntitlementRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ActivateEntitlementRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ActivateEntitlementRequest} ActivateEntitlementRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ActivateEntitlementRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ActivateEntitlementRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ActivateEntitlementRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ActivateEntitlementRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ActivateEntitlementRequest} ActivateEntitlementRequest
                         */
                        ActivateEntitlementRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ActivateEntitlementRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ActivateEntitlementRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ActivateEntitlementRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @static
                         * @param {google.cloud.channel.v1.ActivateEntitlementRequest} message ActivateEntitlementRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ActivateEntitlementRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this ActivateEntitlementRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ActivateEntitlementRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ActivateEntitlementRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ActivateEntitlementRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ActivateEntitlementRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ActivateEntitlementRequest";
                        };
    
                        return ActivateEntitlementRequest;
                    })();
    
                    v1.LookupOfferRequest = (function() {
    
                        /**
                         * Properties of a LookupOfferRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface ILookupOfferRequest
                         * @property {string|null} [entitlement] LookupOfferRequest entitlement
                         */
    
                        /**
                         * Constructs a new LookupOfferRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a LookupOfferRequest.
                         * @implements ILookupOfferRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.ILookupOfferRequest=} [properties] Properties to set
                         */
                        function LookupOfferRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LookupOfferRequest entitlement.
                         * @member {string} entitlement
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @instance
                         */
                        LookupOfferRequest.prototype.entitlement = "";
    
                        /**
                         * Creates a new LookupOfferRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @static
                         * @param {google.cloud.channel.v1.ILookupOfferRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.LookupOfferRequest} LookupOfferRequest instance
                         */
                        LookupOfferRequest.create = function create(properties) {
                            return new LookupOfferRequest(properties);
                        };
    
                        /**
                         * Encodes the specified LookupOfferRequest message. Does not implicitly {@link google.cloud.channel.v1.LookupOfferRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @static
                         * @param {google.cloud.channel.v1.ILookupOfferRequest} message LookupOfferRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LookupOfferRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.entitlement != null && Object.hasOwnProperty.call(message, "entitlement"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.entitlement);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LookupOfferRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.LookupOfferRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @static
                         * @param {google.cloud.channel.v1.ILookupOfferRequest} message LookupOfferRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LookupOfferRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LookupOfferRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.LookupOfferRequest} LookupOfferRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LookupOfferRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.LookupOfferRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.entitlement = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LookupOfferRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.LookupOfferRequest} LookupOfferRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LookupOfferRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LookupOfferRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LookupOfferRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                if (!$util.isString(message.entitlement))
                                    return "entitlement: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a LookupOfferRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.LookupOfferRequest} LookupOfferRequest
                         */
                        LookupOfferRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.LookupOfferRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.LookupOfferRequest();
                            if (object.entitlement != null)
                                message.entitlement = String(object.entitlement);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LookupOfferRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @static
                         * @param {google.cloud.channel.v1.LookupOfferRequest} message LookupOfferRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LookupOfferRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.entitlement = "";
                            if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                object.entitlement = message.entitlement;
                            return object;
                        };
    
                        /**
                         * Converts this LookupOfferRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LookupOfferRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LookupOfferRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.LookupOfferRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LookupOfferRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.LookupOfferRequest";
                        };
    
                        return LookupOfferRequest;
                    })();
    
                    v1.ListProductsRequest = (function() {
    
                        /**
                         * Properties of a ListProductsRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListProductsRequest
                         * @property {string|null} [account] ListProductsRequest account
                         * @property {number|null} [pageSize] ListProductsRequest pageSize
                         * @property {string|null} [pageToken] ListProductsRequest pageToken
                         * @property {string|null} [languageCode] ListProductsRequest languageCode
                         */
    
                        /**
                         * Constructs a new ListProductsRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListProductsRequest.
                         * @implements IListProductsRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListProductsRequest=} [properties] Properties to set
                         */
                        function ListProductsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProductsRequest account.
                         * @member {string} account
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @instance
                         */
                        ListProductsRequest.prototype.account = "";
    
                        /**
                         * ListProductsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @instance
                         */
                        ListProductsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListProductsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @instance
                         */
                        ListProductsRequest.prototype.pageToken = "";
    
                        /**
                         * ListProductsRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @instance
                         */
                        ListProductsRequest.prototype.languageCode = "";
    
                        /**
                         * Creates a new ListProductsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListProductsRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListProductsRequest} ListProductsRequest instance
                         */
                        ListProductsRequest.create = function create(properties) {
                            return new ListProductsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListProductsRequest message. Does not implicitly {@link google.cloud.channel.v1.ListProductsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListProductsRequest} message ListProductsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProductsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.account != null && Object.hasOwnProperty.call(message, "account"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.account);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProductsRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListProductsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListProductsRequest} message ListProductsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProductsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProductsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListProductsRequest} ListProductsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProductsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListProductsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.account = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProductsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListProductsRequest} ListProductsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProductsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProductsRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProductsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.account != null && message.hasOwnProperty("account"))
                                if (!$util.isString(message.account))
                                    return "account: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListProductsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListProductsRequest} ListProductsRequest
                         */
                        ListProductsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListProductsRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListProductsRequest();
                            if (object.account != null)
                                message.account = String(object.account);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProductsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListProductsRequest} message ListProductsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProductsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.account = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.languageCode = "";
                            }
                            if (message.account != null && message.hasOwnProperty("account"))
                                object.account = message.account;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this ListProductsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProductsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListProductsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListProductsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListProductsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListProductsRequest";
                        };
    
                        return ListProductsRequest;
                    })();
    
                    v1.ListProductsResponse = (function() {
    
                        /**
                         * Properties of a ListProductsResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListProductsResponse
                         * @property {Array.<google.cloud.channel.v1.IProduct>|null} [products] ListProductsResponse products
                         * @property {string|null} [nextPageToken] ListProductsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListProductsResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListProductsResponse.
                         * @implements IListProductsResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListProductsResponse=} [properties] Properties to set
                         */
                        function ListProductsResponse(properties) {
                            this.products = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProductsResponse products.
                         * @member {Array.<google.cloud.channel.v1.IProduct>} products
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @instance
                         */
                        ListProductsResponse.prototype.products = $util.emptyArray;
    
                        /**
                         * ListProductsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @instance
                         */
                        ListProductsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListProductsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListProductsResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListProductsResponse} ListProductsResponse instance
                         */
                        ListProductsResponse.create = function create(properties) {
                            return new ListProductsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListProductsResponse message. Does not implicitly {@link google.cloud.channel.v1.ListProductsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListProductsResponse} message ListProductsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProductsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.products != null && message.products.length)
                                for (var i = 0; i < message.products.length; ++i)
                                    $root.google.cloud.channel.v1.Product.encode(message.products[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProductsResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListProductsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListProductsResponse} message ListProductsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProductsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProductsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListProductsResponse} ListProductsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProductsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListProductsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.products && message.products.length))
                                            message.products = [];
                                        message.products.push($root.google.cloud.channel.v1.Product.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProductsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListProductsResponse} ListProductsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProductsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProductsResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProductsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.products != null && message.hasOwnProperty("products")) {
                                if (!Array.isArray(message.products))
                                    return "products: array expected";
                                for (var i = 0; i < message.products.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Product.verify(message.products[i]);
                                    if (error)
                                        return "products." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListProductsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListProductsResponse} ListProductsResponse
                         */
                        ListProductsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListProductsResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListProductsResponse();
                            if (object.products) {
                                if (!Array.isArray(object.products))
                                    throw TypeError(".google.cloud.channel.v1.ListProductsResponse.products: array expected");
                                message.products = [];
                                for (var i = 0; i < object.products.length; ++i) {
                                    if (typeof object.products[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListProductsResponse.products: object expected");
                                    message.products[i] = $root.google.cloud.channel.v1.Product.fromObject(object.products[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProductsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListProductsResponse} message ListProductsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProductsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.products = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.products && message.products.length) {
                                object.products = [];
                                for (var j = 0; j < message.products.length; ++j)
                                    object.products[j] = $root.google.cloud.channel.v1.Product.toObject(message.products[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListProductsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProductsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListProductsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListProductsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListProductsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListProductsResponse";
                        };
    
                        return ListProductsResponse;
                    })();
    
                    v1.ListSkusRequest = (function() {
    
                        /**
                         * Properties of a ListSkusRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListSkusRequest
                         * @property {string|null} [parent] ListSkusRequest parent
                         * @property {string|null} [account] ListSkusRequest account
                         * @property {number|null} [pageSize] ListSkusRequest pageSize
                         * @property {string|null} [pageToken] ListSkusRequest pageToken
                         * @property {string|null} [languageCode] ListSkusRequest languageCode
                         */
    
                        /**
                         * Constructs a new ListSkusRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListSkusRequest.
                         * @implements IListSkusRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListSkusRequest=} [properties] Properties to set
                         */
                        function ListSkusRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSkusRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @instance
                         */
                        ListSkusRequest.prototype.parent = "";
    
                        /**
                         * ListSkusRequest account.
                         * @member {string} account
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @instance
                         */
                        ListSkusRequest.prototype.account = "";
    
                        /**
                         * ListSkusRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @instance
                         */
                        ListSkusRequest.prototype.pageSize = 0;
    
                        /**
                         * ListSkusRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @instance
                         */
                        ListSkusRequest.prototype.pageToken = "";
    
                        /**
                         * ListSkusRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @instance
                         */
                        ListSkusRequest.prototype.languageCode = "";
    
                        /**
                         * Creates a new ListSkusRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListSkusRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListSkusRequest} ListSkusRequest instance
                         */
                        ListSkusRequest.create = function create(properties) {
                            return new ListSkusRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListSkusRequest message. Does not implicitly {@link google.cloud.channel.v1.ListSkusRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListSkusRequest} message ListSkusRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSkusRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.account != null && Object.hasOwnProperty.call(message, "account"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.account);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSkusRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListSkusRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListSkusRequest} message ListSkusRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSkusRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSkusRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListSkusRequest} ListSkusRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSkusRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListSkusRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.account = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSkusRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListSkusRequest} ListSkusRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSkusRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSkusRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSkusRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.account != null && message.hasOwnProperty("account"))
                                if (!$util.isString(message.account))
                                    return "account: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSkusRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListSkusRequest} ListSkusRequest
                         */
                        ListSkusRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListSkusRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListSkusRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.account != null)
                                message.account = String(object.account);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSkusRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListSkusRequest} message ListSkusRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSkusRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.account = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.languageCode = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.account != null && message.hasOwnProperty("account"))
                                object.account = message.account;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this ListSkusRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSkusRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSkusRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListSkusRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSkusRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListSkusRequest";
                        };
    
                        return ListSkusRequest;
                    })();
    
                    v1.ListSkusResponse = (function() {
    
                        /**
                         * Properties of a ListSkusResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListSkusResponse
                         * @property {Array.<google.cloud.channel.v1.ISku>|null} [skus] ListSkusResponse skus
                         * @property {string|null} [nextPageToken] ListSkusResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListSkusResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListSkusResponse.
                         * @implements IListSkusResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListSkusResponse=} [properties] Properties to set
                         */
                        function ListSkusResponse(properties) {
                            this.skus = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSkusResponse skus.
                         * @member {Array.<google.cloud.channel.v1.ISku>} skus
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @instance
                         */
                        ListSkusResponse.prototype.skus = $util.emptyArray;
    
                        /**
                         * ListSkusResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @instance
                         */
                        ListSkusResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListSkusResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListSkusResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListSkusResponse} ListSkusResponse instance
                         */
                        ListSkusResponse.create = function create(properties) {
                            return new ListSkusResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListSkusResponse message. Does not implicitly {@link google.cloud.channel.v1.ListSkusResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListSkusResponse} message ListSkusResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSkusResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.skus != null && message.skus.length)
                                for (var i = 0; i < message.skus.length; ++i)
                                    $root.google.cloud.channel.v1.Sku.encode(message.skus[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSkusResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListSkusResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListSkusResponse} message ListSkusResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSkusResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSkusResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListSkusResponse} ListSkusResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSkusResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListSkusResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.skus && message.skus.length))
                                            message.skus = [];
                                        message.skus.push($root.google.cloud.channel.v1.Sku.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSkusResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListSkusResponse} ListSkusResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSkusResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSkusResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSkusResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.skus != null && message.hasOwnProperty("skus")) {
                                if (!Array.isArray(message.skus))
                                    return "skus: array expected";
                                for (var i = 0; i < message.skus.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Sku.verify(message.skus[i]);
                                    if (error)
                                        return "skus." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSkusResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListSkusResponse} ListSkusResponse
                         */
                        ListSkusResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListSkusResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListSkusResponse();
                            if (object.skus) {
                                if (!Array.isArray(object.skus))
                                    throw TypeError(".google.cloud.channel.v1.ListSkusResponse.skus: array expected");
                                message.skus = [];
                                for (var i = 0; i < object.skus.length; ++i) {
                                    if (typeof object.skus[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListSkusResponse.skus: object expected");
                                    message.skus[i] = $root.google.cloud.channel.v1.Sku.fromObject(object.skus[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSkusResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListSkusResponse} message ListSkusResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSkusResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.skus = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.skus && message.skus.length) {
                                object.skus = [];
                                for (var j = 0; j < message.skus.length; ++j)
                                    object.skus[j] = $root.google.cloud.channel.v1.Sku.toObject(message.skus[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSkusResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSkusResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSkusResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListSkusResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSkusResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListSkusResponse";
                        };
    
                        return ListSkusResponse;
                    })();
    
                    v1.ListOffersRequest = (function() {
    
                        /**
                         * Properties of a ListOffersRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListOffersRequest
                         * @property {string|null} [parent] ListOffersRequest parent
                         * @property {number|null} [pageSize] ListOffersRequest pageSize
                         * @property {string|null} [pageToken] ListOffersRequest pageToken
                         * @property {string|null} [filter] ListOffersRequest filter
                         * @property {string|null} [languageCode] ListOffersRequest languageCode
                         */
    
                        /**
                         * Constructs a new ListOffersRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListOffersRequest.
                         * @implements IListOffersRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListOffersRequest=} [properties] Properties to set
                         */
                        function ListOffersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListOffersRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @instance
                         */
                        ListOffersRequest.prototype.parent = "";
    
                        /**
                         * ListOffersRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @instance
                         */
                        ListOffersRequest.prototype.pageSize = 0;
    
                        /**
                         * ListOffersRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @instance
                         */
                        ListOffersRequest.prototype.pageToken = "";
    
                        /**
                         * ListOffersRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @instance
                         */
                        ListOffersRequest.prototype.filter = "";
    
                        /**
                         * ListOffersRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @instance
                         */
                        ListOffersRequest.prototype.languageCode = "";
    
                        /**
                         * Creates a new ListOffersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListOffersRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListOffersRequest} ListOffersRequest instance
                         */
                        ListOffersRequest.create = function create(properties) {
                            return new ListOffersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListOffersRequest message. Does not implicitly {@link google.cloud.channel.v1.ListOffersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListOffersRequest} message ListOffersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListOffersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListOffersRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListOffersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListOffersRequest} message ListOffersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListOffersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListOffersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListOffersRequest} ListOffersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListOffersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListOffersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListOffersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListOffersRequest} ListOffersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListOffersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListOffersRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListOffersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListOffersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListOffersRequest} ListOffersRequest
                         */
                        ListOffersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListOffersRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListOffersRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListOffersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListOffersRequest} message ListOffersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListOffersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.languageCode = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this ListOffersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListOffersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListOffersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListOffersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListOffersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListOffersRequest";
                        };
    
                        return ListOffersRequest;
                    })();
    
                    v1.ListOffersResponse = (function() {
    
                        /**
                         * Properties of a ListOffersResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListOffersResponse
                         * @property {Array.<google.cloud.channel.v1.IOffer>|null} [offers] ListOffersResponse offers
                         * @property {string|null} [nextPageToken] ListOffersResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListOffersResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListOffersResponse.
                         * @implements IListOffersResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListOffersResponse=} [properties] Properties to set
                         */
                        function ListOffersResponse(properties) {
                            this.offers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListOffersResponse offers.
                         * @member {Array.<google.cloud.channel.v1.IOffer>} offers
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @instance
                         */
                        ListOffersResponse.prototype.offers = $util.emptyArray;
    
                        /**
                         * ListOffersResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @instance
                         */
                        ListOffersResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListOffersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListOffersResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListOffersResponse} ListOffersResponse instance
                         */
                        ListOffersResponse.create = function create(properties) {
                            return new ListOffersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListOffersResponse message. Does not implicitly {@link google.cloud.channel.v1.ListOffersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListOffersResponse} message ListOffersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListOffersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.offers != null && message.offers.length)
                                for (var i = 0; i < message.offers.length; ++i)
                                    $root.google.cloud.channel.v1.Offer.encode(message.offers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListOffersResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListOffersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListOffersResponse} message ListOffersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListOffersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListOffersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListOffersResponse} ListOffersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListOffersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListOffersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.offers && message.offers.length))
                                            message.offers = [];
                                        message.offers.push($root.google.cloud.channel.v1.Offer.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListOffersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListOffersResponse} ListOffersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListOffersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListOffersResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListOffersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.offers != null && message.hasOwnProperty("offers")) {
                                if (!Array.isArray(message.offers))
                                    return "offers: array expected";
                                for (var i = 0; i < message.offers.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.Offer.verify(message.offers[i]);
                                    if (error)
                                        return "offers." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListOffersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListOffersResponse} ListOffersResponse
                         */
                        ListOffersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListOffersResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListOffersResponse();
                            if (object.offers) {
                                if (!Array.isArray(object.offers))
                                    throw TypeError(".google.cloud.channel.v1.ListOffersResponse.offers: array expected");
                                message.offers = [];
                                for (var i = 0; i < object.offers.length; ++i) {
                                    if (typeof object.offers[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListOffersResponse.offers: object expected");
                                    message.offers[i] = $root.google.cloud.channel.v1.Offer.fromObject(object.offers[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListOffersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListOffersResponse} message ListOffersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListOffersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.offers = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.offers && message.offers.length) {
                                object.offers = [];
                                for (var j = 0; j < message.offers.length; ++j)
                                    object.offers[j] = $root.google.cloud.channel.v1.Offer.toObject(message.offers[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListOffersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListOffersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListOffersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListOffersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListOffersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListOffersResponse";
                        };
    
                        return ListOffersResponse;
                    })();
    
                    v1.ListPurchasableSkusRequest = (function() {
    
                        /**
                         * Properties of a ListPurchasableSkusRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListPurchasableSkusRequest
                         * @property {google.cloud.channel.v1.ListPurchasableSkusRequest.ICreateEntitlementPurchase|null} [createEntitlementPurchase] ListPurchasableSkusRequest createEntitlementPurchase
                         * @property {google.cloud.channel.v1.ListPurchasableSkusRequest.IChangeOfferPurchase|null} [changeOfferPurchase] ListPurchasableSkusRequest changeOfferPurchase
                         * @property {string|null} [customer] ListPurchasableSkusRequest customer
                         * @property {number|null} [pageSize] ListPurchasableSkusRequest pageSize
                         * @property {string|null} [pageToken] ListPurchasableSkusRequest pageToken
                         * @property {string|null} [languageCode] ListPurchasableSkusRequest languageCode
                         */
    
                        /**
                         * Constructs a new ListPurchasableSkusRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListPurchasableSkusRequest.
                         * @implements IListPurchasableSkusRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListPurchasableSkusRequest=} [properties] Properties to set
                         */
                        function ListPurchasableSkusRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPurchasableSkusRequest createEntitlementPurchase.
                         * @member {google.cloud.channel.v1.ListPurchasableSkusRequest.ICreateEntitlementPurchase|null|undefined} createEntitlementPurchase
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @instance
                         */
                        ListPurchasableSkusRequest.prototype.createEntitlementPurchase = null;
    
                        /**
                         * ListPurchasableSkusRequest changeOfferPurchase.
                         * @member {google.cloud.channel.v1.ListPurchasableSkusRequest.IChangeOfferPurchase|null|undefined} changeOfferPurchase
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @instance
                         */
                        ListPurchasableSkusRequest.prototype.changeOfferPurchase = null;
    
                        /**
                         * ListPurchasableSkusRequest customer.
                         * @member {string} customer
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @instance
                         */
                        ListPurchasableSkusRequest.prototype.customer = "";
    
                        /**
                         * ListPurchasableSkusRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @instance
                         */
                        ListPurchasableSkusRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPurchasableSkusRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @instance
                         */
                        ListPurchasableSkusRequest.prototype.pageToken = "";
    
                        /**
                         * ListPurchasableSkusRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @instance
                         */
                        ListPurchasableSkusRequest.prototype.languageCode = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ListPurchasableSkusRequest purchaseOption.
                         * @member {"createEntitlementPurchase"|"changeOfferPurchase"|undefined} purchaseOption
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @instance
                         */
                        Object.defineProperty(ListPurchasableSkusRequest.prototype, "purchaseOption", {
                            get: $util.oneOfGetter($oneOfFields = ["createEntitlementPurchase", "changeOfferPurchase"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ListPurchasableSkusRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableSkusRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest} ListPurchasableSkusRequest instance
                         */
                        ListPurchasableSkusRequest.create = function create(properties) {
                            return new ListPurchasableSkusRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPurchasableSkusRequest message. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableSkusRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableSkusRequest} message ListPurchasableSkusRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPurchasableSkusRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customer != null && Object.hasOwnProperty.call(message, "customer"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.customer);
                            if (message.createEntitlementPurchase != null && Object.hasOwnProperty.call(message, "createEntitlementPurchase"))
                                $root.google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase.encode(message.createEntitlementPurchase, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.changeOfferPurchase != null && Object.hasOwnProperty.call(message, "changeOfferPurchase"))
                                $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.encode(message.changeOfferPurchase, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pageToken);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPurchasableSkusRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableSkusRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableSkusRequest} message ListPurchasableSkusRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPurchasableSkusRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPurchasableSkusRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest} ListPurchasableSkusRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPurchasableSkusRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListPurchasableSkusRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.createEntitlementPurchase = $root.google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.changeOfferPurchase = $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.customer = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPurchasableSkusRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest} ListPurchasableSkusRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPurchasableSkusRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPurchasableSkusRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPurchasableSkusRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.createEntitlementPurchase != null && message.hasOwnProperty("createEntitlementPurchase")) {
                                properties.purchaseOption = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase.verify(message.createEntitlementPurchase);
                                    if (error)
                                        return "createEntitlementPurchase." + error;
                                }
                            }
                            if (message.changeOfferPurchase != null && message.hasOwnProperty("changeOfferPurchase")) {
                                if (properties.purchaseOption === 1)
                                    return "purchaseOption: multiple values";
                                properties.purchaseOption = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.verify(message.changeOfferPurchase);
                                    if (error)
                                        return "changeOfferPurchase." + error;
                                }
                            }
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                if (!$util.isString(message.customer))
                                    return "customer: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPurchasableSkusRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest} ListPurchasableSkusRequest
                         */
                        ListPurchasableSkusRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListPurchasableSkusRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListPurchasableSkusRequest();
                            if (object.createEntitlementPurchase != null) {
                                if (typeof object.createEntitlementPurchase !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ListPurchasableSkusRequest.createEntitlementPurchase: object expected");
                                message.createEntitlementPurchase = $root.google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase.fromObject(object.createEntitlementPurchase);
                            }
                            if (object.changeOfferPurchase != null) {
                                if (typeof object.changeOfferPurchase !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ListPurchasableSkusRequest.changeOfferPurchase: object expected");
                                message.changeOfferPurchase = $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.fromObject(object.changeOfferPurchase);
                            }
                            if (object.customer != null)
                                message.customer = String(object.customer);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPurchasableSkusRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListPurchasableSkusRequest} message ListPurchasableSkusRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPurchasableSkusRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.customer = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.languageCode = "";
                            }
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                object.customer = message.customer;
                            if (message.createEntitlementPurchase != null && message.hasOwnProperty("createEntitlementPurchase")) {
                                object.createEntitlementPurchase = $root.google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase.toObject(message.createEntitlementPurchase, options);
                                if (options.oneofs)
                                    object.purchaseOption = "createEntitlementPurchase";
                            }
                            if (message.changeOfferPurchase != null && message.hasOwnProperty("changeOfferPurchase")) {
                                object.changeOfferPurchase = $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.toObject(message.changeOfferPurchase, options);
                                if (options.oneofs)
                                    object.purchaseOption = "changeOfferPurchase";
                            }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this ListPurchasableSkusRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPurchasableSkusRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPurchasableSkusRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPurchasableSkusRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListPurchasableSkusRequest";
                        };
    
                        ListPurchasableSkusRequest.CreateEntitlementPurchase = (function() {
    
                            /**
                             * Properties of a CreateEntitlementPurchase.
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                             * @interface ICreateEntitlementPurchase
                             * @property {string|null} [product] CreateEntitlementPurchase product
                             */
    
                            /**
                             * Constructs a new CreateEntitlementPurchase.
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                             * @classdesc Represents a CreateEntitlementPurchase.
                             * @implements ICreateEntitlementPurchase
                             * @constructor
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.ICreateEntitlementPurchase=} [properties] Properties to set
                             */
                            function CreateEntitlementPurchase(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateEntitlementPurchase product.
                             * @member {string} product
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @instance
                             */
                            CreateEntitlementPurchase.prototype.product = "";
    
                            /**
                             * Creates a new CreateEntitlementPurchase instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.ICreateEntitlementPurchase=} [properties] Properties to set
                             * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase} CreateEntitlementPurchase instance
                             */
                            CreateEntitlementPurchase.create = function create(properties) {
                                return new CreateEntitlementPurchase(properties);
                            };
    
                            /**
                             * Encodes the specified CreateEntitlementPurchase message. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.ICreateEntitlementPurchase} message CreateEntitlementPurchase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateEntitlementPurchase.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.product != null && Object.hasOwnProperty.call(message, "product"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.product);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateEntitlementPurchase message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.ICreateEntitlementPurchase} message CreateEntitlementPurchase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateEntitlementPurchase.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateEntitlementPurchase message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase} CreateEntitlementPurchase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateEntitlementPurchase.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.product = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateEntitlementPurchase message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase} CreateEntitlementPurchase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateEntitlementPurchase.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateEntitlementPurchase message.
                             * @function verify
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateEntitlementPurchase.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.product != null && message.hasOwnProperty("product"))
                                    if (!$util.isString(message.product))
                                        return "product: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateEntitlementPurchase message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase} CreateEntitlementPurchase
                             */
                            CreateEntitlementPurchase.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase)
                                    return object;
                                var message = new $root.google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase();
                                if (object.product != null)
                                    message.product = String(object.product);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateEntitlementPurchase message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase} message CreateEntitlementPurchase
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateEntitlementPurchase.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.product = "";
                                if (message.product != null && message.hasOwnProperty("product"))
                                    object.product = message.product;
                                return object;
                            };
    
                            /**
                             * Converts this CreateEntitlementPurchase to JSON.
                             * @function toJSON
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateEntitlementPurchase.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateEntitlementPurchase
                             * @function getTypeUrl
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateEntitlementPurchase.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase";
                            };
    
                            return CreateEntitlementPurchase;
                        })();
    
                        ListPurchasableSkusRequest.ChangeOfferPurchase = (function() {
    
                            /**
                             * Properties of a ChangeOfferPurchase.
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                             * @interface IChangeOfferPurchase
                             * @property {string|null} [entitlement] ChangeOfferPurchase entitlement
                             * @property {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.ChangeType|null} [changeType] ChangeOfferPurchase changeType
                             */
    
                            /**
                             * Constructs a new ChangeOfferPurchase.
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest
                             * @classdesc Represents a ChangeOfferPurchase.
                             * @implements IChangeOfferPurchase
                             * @constructor
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.IChangeOfferPurchase=} [properties] Properties to set
                             */
                            function ChangeOfferPurchase(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ChangeOfferPurchase entitlement.
                             * @member {string} entitlement
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @instance
                             */
                            ChangeOfferPurchase.prototype.entitlement = "";
    
                            /**
                             * ChangeOfferPurchase changeType.
                             * @member {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.ChangeType} changeType
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @instance
                             */
                            ChangeOfferPurchase.prototype.changeType = 0;
    
                            /**
                             * Creates a new ChangeOfferPurchase instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.IChangeOfferPurchase=} [properties] Properties to set
                             * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase} ChangeOfferPurchase instance
                             */
                            ChangeOfferPurchase.create = function create(properties) {
                                return new ChangeOfferPurchase(properties);
                            };
    
                            /**
                             * Encodes the specified ChangeOfferPurchase message. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.IChangeOfferPurchase} message ChangeOfferPurchase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ChangeOfferPurchase.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.entitlement != null && Object.hasOwnProperty.call(message, "entitlement"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.entitlement);
                                if (message.changeType != null && Object.hasOwnProperty.call(message, "changeType"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.changeType);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ChangeOfferPurchase message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.IChangeOfferPurchase} message ChangeOfferPurchase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ChangeOfferPurchase.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ChangeOfferPurchase message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase} ChangeOfferPurchase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ChangeOfferPurchase.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.entitlement = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.changeType = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ChangeOfferPurchase message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase} ChangeOfferPurchase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ChangeOfferPurchase.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ChangeOfferPurchase message.
                             * @function verify
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ChangeOfferPurchase.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                    if (!$util.isString(message.entitlement))
                                        return "entitlement: string expected";
                                if (message.changeType != null && message.hasOwnProperty("changeType"))
                                    switch (message.changeType) {
                                    default:
                                        return "changeType: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a ChangeOfferPurchase message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase} ChangeOfferPurchase
                             */
                            ChangeOfferPurchase.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase)
                                    return object;
                                var message = new $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase();
                                if (object.entitlement != null)
                                    message.entitlement = String(object.entitlement);
                                switch (object.changeType) {
                                default:
                                    if (typeof object.changeType === "number") {
                                        message.changeType = object.changeType;
                                        break;
                                    }
                                    break;
                                case "CHANGE_TYPE_UNSPECIFIED":
                                case 0:
                                    message.changeType = 0;
                                    break;
                                case "UPGRADE":
                                case 1:
                                    message.changeType = 1;
                                    break;
                                case "DOWNGRADE":
                                case 2:
                                    message.changeType = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ChangeOfferPurchase message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase} message ChangeOfferPurchase
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ChangeOfferPurchase.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.entitlement = "";
                                    object.changeType = options.enums === String ? "CHANGE_TYPE_UNSPECIFIED" : 0;
                                }
                                if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                    object.entitlement = message.entitlement;
                                if (message.changeType != null && message.hasOwnProperty("changeType"))
                                    object.changeType = options.enums === String ? $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.ChangeType[message.changeType] === undefined ? message.changeType : $root.google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.ChangeType[message.changeType] : message.changeType;
                                return object;
                            };
    
                            /**
                             * Converts this ChangeOfferPurchase to JSON.
                             * @function toJSON
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ChangeOfferPurchase.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ChangeOfferPurchase
                             * @function getTypeUrl
                             * @memberof google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ChangeOfferPurchase.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase";
                            };
    
                            /**
                             * ChangeType enum.
                             * @name google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase.ChangeType
                             * @enum {number}
                             * @property {number} CHANGE_TYPE_UNSPECIFIED=0 CHANGE_TYPE_UNSPECIFIED value
                             * @property {number} UPGRADE=1 UPGRADE value
                             * @property {number} DOWNGRADE=2 DOWNGRADE value
                             */
                            ChangeOfferPurchase.ChangeType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "CHANGE_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "UPGRADE"] = 1;
                                values[valuesById[2] = "DOWNGRADE"] = 2;
                                return values;
                            })();
    
                            return ChangeOfferPurchase;
                        })();
    
                        return ListPurchasableSkusRequest;
                    })();
    
                    v1.ListPurchasableSkusResponse = (function() {
    
                        /**
                         * Properties of a ListPurchasableSkusResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListPurchasableSkusResponse
                         * @property {Array.<google.cloud.channel.v1.IPurchasableSku>|null} [purchasableSkus] ListPurchasableSkusResponse purchasableSkus
                         * @property {string|null} [nextPageToken] ListPurchasableSkusResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListPurchasableSkusResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListPurchasableSkusResponse.
                         * @implements IListPurchasableSkusResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListPurchasableSkusResponse=} [properties] Properties to set
                         */
                        function ListPurchasableSkusResponse(properties) {
                            this.purchasableSkus = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPurchasableSkusResponse purchasableSkus.
                         * @member {Array.<google.cloud.channel.v1.IPurchasableSku>} purchasableSkus
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @instance
                         */
                        ListPurchasableSkusResponse.prototype.purchasableSkus = $util.emptyArray;
    
                        /**
                         * ListPurchasableSkusResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @instance
                         */
                        ListPurchasableSkusResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListPurchasableSkusResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableSkusResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListPurchasableSkusResponse} ListPurchasableSkusResponse instance
                         */
                        ListPurchasableSkusResponse.create = function create(properties) {
                            return new ListPurchasableSkusResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPurchasableSkusResponse message. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableSkusResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableSkusResponse} message ListPurchasableSkusResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPurchasableSkusResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.purchasableSkus != null && message.purchasableSkus.length)
                                for (var i = 0; i < message.purchasableSkus.length; ++i)
                                    $root.google.cloud.channel.v1.PurchasableSku.encode(message.purchasableSkus[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPurchasableSkusResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableSkusResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableSkusResponse} message ListPurchasableSkusResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPurchasableSkusResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPurchasableSkusResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListPurchasableSkusResponse} ListPurchasableSkusResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPurchasableSkusResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListPurchasableSkusResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.purchasableSkus && message.purchasableSkus.length))
                                            message.purchasableSkus = [];
                                        message.purchasableSkus.push($root.google.cloud.channel.v1.PurchasableSku.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPurchasableSkusResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListPurchasableSkusResponse} ListPurchasableSkusResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPurchasableSkusResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPurchasableSkusResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPurchasableSkusResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.purchasableSkus != null && message.hasOwnProperty("purchasableSkus")) {
                                if (!Array.isArray(message.purchasableSkus))
                                    return "purchasableSkus: array expected";
                                for (var i = 0; i < message.purchasableSkus.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.PurchasableSku.verify(message.purchasableSkus[i]);
                                    if (error)
                                        return "purchasableSkus." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPurchasableSkusResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListPurchasableSkusResponse} ListPurchasableSkusResponse
                         */
                        ListPurchasableSkusResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListPurchasableSkusResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListPurchasableSkusResponse();
                            if (object.purchasableSkus) {
                                if (!Array.isArray(object.purchasableSkus))
                                    throw TypeError(".google.cloud.channel.v1.ListPurchasableSkusResponse.purchasableSkus: array expected");
                                message.purchasableSkus = [];
                                for (var i = 0; i < object.purchasableSkus.length; ++i) {
                                    if (typeof object.purchasableSkus[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListPurchasableSkusResponse.purchasableSkus: object expected");
                                    message.purchasableSkus[i] = $root.google.cloud.channel.v1.PurchasableSku.fromObject(object.purchasableSkus[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPurchasableSkusResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListPurchasableSkusResponse} message ListPurchasableSkusResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPurchasableSkusResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.purchasableSkus = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.purchasableSkus && message.purchasableSkus.length) {
                                object.purchasableSkus = [];
                                for (var j = 0; j < message.purchasableSkus.length; ++j)
                                    object.purchasableSkus[j] = $root.google.cloud.channel.v1.PurchasableSku.toObject(message.purchasableSkus[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListPurchasableSkusResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPurchasableSkusResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPurchasableSkusResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListPurchasableSkusResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPurchasableSkusResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListPurchasableSkusResponse";
                        };
    
                        return ListPurchasableSkusResponse;
                    })();
    
                    v1.PurchasableSku = (function() {
    
                        /**
                         * Properties of a PurchasableSku.
                         * @memberof google.cloud.channel.v1
                         * @interface IPurchasableSku
                         * @property {google.cloud.channel.v1.ISku|null} [sku] PurchasableSku sku
                         */
    
                        /**
                         * Constructs a new PurchasableSku.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a PurchasableSku.
                         * @implements IPurchasableSku
                         * @constructor
                         * @param {google.cloud.channel.v1.IPurchasableSku=} [properties] Properties to set
                         */
                        function PurchasableSku(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurchasableSku sku.
                         * @member {google.cloud.channel.v1.ISku|null|undefined} sku
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @instance
                         */
                        PurchasableSku.prototype.sku = null;
    
                        /**
                         * Creates a new PurchasableSku instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @static
                         * @param {google.cloud.channel.v1.IPurchasableSku=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.PurchasableSku} PurchasableSku instance
                         */
                        PurchasableSku.create = function create(properties) {
                            return new PurchasableSku(properties);
                        };
    
                        /**
                         * Encodes the specified PurchasableSku message. Does not implicitly {@link google.cloud.channel.v1.PurchasableSku.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @static
                         * @param {google.cloud.channel.v1.IPurchasableSku} message PurchasableSku message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurchasableSku.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.sku != null && Object.hasOwnProperty.call(message, "sku"))
                                $root.google.cloud.channel.v1.Sku.encode(message.sku, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurchasableSku message, length delimited. Does not implicitly {@link google.cloud.channel.v1.PurchasableSku.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @static
                         * @param {google.cloud.channel.v1.IPurchasableSku} message PurchasableSku message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurchasableSku.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurchasableSku message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.PurchasableSku} PurchasableSku
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurchasableSku.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.PurchasableSku();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.sku = $root.google.cloud.channel.v1.Sku.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurchasableSku message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.PurchasableSku} PurchasableSku
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurchasableSku.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurchasableSku message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurchasableSku.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.sku != null && message.hasOwnProperty("sku")) {
                                var error = $root.google.cloud.channel.v1.Sku.verify(message.sku);
                                if (error)
                                    return "sku." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PurchasableSku message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.PurchasableSku} PurchasableSku
                         */
                        PurchasableSku.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.PurchasableSku)
                                return object;
                            var message = new $root.google.cloud.channel.v1.PurchasableSku();
                            if (object.sku != null) {
                                if (typeof object.sku !== "object")
                                    throw TypeError(".google.cloud.channel.v1.PurchasableSku.sku: object expected");
                                message.sku = $root.google.cloud.channel.v1.Sku.fromObject(object.sku);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurchasableSku message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @static
                         * @param {google.cloud.channel.v1.PurchasableSku} message PurchasableSku
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurchasableSku.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.sku = null;
                            if (message.sku != null && message.hasOwnProperty("sku"))
                                object.sku = $root.google.cloud.channel.v1.Sku.toObject(message.sku, options);
                            return object;
                        };
    
                        /**
                         * Converts this PurchasableSku to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurchasableSku.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurchasableSku
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.PurchasableSku
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurchasableSku.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.PurchasableSku";
                        };
    
                        return PurchasableSku;
                    })();
    
                    v1.ListPurchasableOffersRequest = (function() {
    
                        /**
                         * Properties of a ListPurchasableOffersRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListPurchasableOffersRequest
                         * @property {google.cloud.channel.v1.ListPurchasableOffersRequest.ICreateEntitlementPurchase|null} [createEntitlementPurchase] ListPurchasableOffersRequest createEntitlementPurchase
                         * @property {google.cloud.channel.v1.ListPurchasableOffersRequest.IChangeOfferPurchase|null} [changeOfferPurchase] ListPurchasableOffersRequest changeOfferPurchase
                         * @property {string|null} [customer] ListPurchasableOffersRequest customer
                         * @property {number|null} [pageSize] ListPurchasableOffersRequest pageSize
                         * @property {string|null} [pageToken] ListPurchasableOffersRequest pageToken
                         * @property {string|null} [languageCode] ListPurchasableOffersRequest languageCode
                         */
    
                        /**
                         * Constructs a new ListPurchasableOffersRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListPurchasableOffersRequest.
                         * @implements IListPurchasableOffersRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListPurchasableOffersRequest=} [properties] Properties to set
                         */
                        function ListPurchasableOffersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPurchasableOffersRequest createEntitlementPurchase.
                         * @member {google.cloud.channel.v1.ListPurchasableOffersRequest.ICreateEntitlementPurchase|null|undefined} createEntitlementPurchase
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @instance
                         */
                        ListPurchasableOffersRequest.prototype.createEntitlementPurchase = null;
    
                        /**
                         * ListPurchasableOffersRequest changeOfferPurchase.
                         * @member {google.cloud.channel.v1.ListPurchasableOffersRequest.IChangeOfferPurchase|null|undefined} changeOfferPurchase
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @instance
                         */
                        ListPurchasableOffersRequest.prototype.changeOfferPurchase = null;
    
                        /**
                         * ListPurchasableOffersRequest customer.
                         * @member {string} customer
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @instance
                         */
                        ListPurchasableOffersRequest.prototype.customer = "";
    
                        /**
                         * ListPurchasableOffersRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @instance
                         */
                        ListPurchasableOffersRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPurchasableOffersRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @instance
                         */
                        ListPurchasableOffersRequest.prototype.pageToken = "";
    
                        /**
                         * ListPurchasableOffersRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @instance
                         */
                        ListPurchasableOffersRequest.prototype.languageCode = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ListPurchasableOffersRequest purchaseOption.
                         * @member {"createEntitlementPurchase"|"changeOfferPurchase"|undefined} purchaseOption
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @instance
                         */
                        Object.defineProperty(ListPurchasableOffersRequest.prototype, "purchaseOption", {
                            get: $util.oneOfGetter($oneOfFields = ["createEntitlementPurchase", "changeOfferPurchase"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ListPurchasableOffersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableOffersRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest} ListPurchasableOffersRequest instance
                         */
                        ListPurchasableOffersRequest.create = function create(properties) {
                            return new ListPurchasableOffersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPurchasableOffersRequest message. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableOffersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableOffersRequest} message ListPurchasableOffersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPurchasableOffersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customer != null && Object.hasOwnProperty.call(message, "customer"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.customer);
                            if (message.createEntitlementPurchase != null && Object.hasOwnProperty.call(message, "createEntitlementPurchase"))
                                $root.google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase.encode(message.createEntitlementPurchase, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.changeOfferPurchase != null && Object.hasOwnProperty.call(message, "changeOfferPurchase"))
                                $root.google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase.encode(message.changeOfferPurchase, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pageToken);
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.languageCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPurchasableOffersRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableOffersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableOffersRequest} message ListPurchasableOffersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPurchasableOffersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPurchasableOffersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest} ListPurchasableOffersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPurchasableOffersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListPurchasableOffersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.createEntitlementPurchase = $root.google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.changeOfferPurchase = $root.google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.customer = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPurchasableOffersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest} ListPurchasableOffersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPurchasableOffersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPurchasableOffersRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPurchasableOffersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.createEntitlementPurchase != null && message.hasOwnProperty("createEntitlementPurchase")) {
                                properties.purchaseOption = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase.verify(message.createEntitlementPurchase);
                                    if (error)
                                        return "createEntitlementPurchase." + error;
                                }
                            }
                            if (message.changeOfferPurchase != null && message.hasOwnProperty("changeOfferPurchase")) {
                                if (properties.purchaseOption === 1)
                                    return "purchaseOption: multiple values";
                                properties.purchaseOption = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase.verify(message.changeOfferPurchase);
                                    if (error)
                                        return "changeOfferPurchase." + error;
                                }
                            }
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                if (!$util.isString(message.customer))
                                    return "customer: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPurchasableOffersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest} ListPurchasableOffersRequest
                         */
                        ListPurchasableOffersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListPurchasableOffersRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListPurchasableOffersRequest();
                            if (object.createEntitlementPurchase != null) {
                                if (typeof object.createEntitlementPurchase !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ListPurchasableOffersRequest.createEntitlementPurchase: object expected");
                                message.createEntitlementPurchase = $root.google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase.fromObject(object.createEntitlementPurchase);
                            }
                            if (object.changeOfferPurchase != null) {
                                if (typeof object.changeOfferPurchase !== "object")
                                    throw TypeError(".google.cloud.channel.v1.ListPurchasableOffersRequest.changeOfferPurchase: object expected");
                                message.changeOfferPurchase = $root.google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase.fromObject(object.changeOfferPurchase);
                            }
                            if (object.customer != null)
                                message.customer = String(object.customer);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPurchasableOffersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListPurchasableOffersRequest} message ListPurchasableOffersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPurchasableOffersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.customer = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.languageCode = "";
                            }
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                object.customer = message.customer;
                            if (message.createEntitlementPurchase != null && message.hasOwnProperty("createEntitlementPurchase")) {
                                object.createEntitlementPurchase = $root.google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase.toObject(message.createEntitlementPurchase, options);
                                if (options.oneofs)
                                    object.purchaseOption = "createEntitlementPurchase";
                            }
                            if (message.changeOfferPurchase != null && message.hasOwnProperty("changeOfferPurchase")) {
                                object.changeOfferPurchase = $root.google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase.toObject(message.changeOfferPurchase, options);
                                if (options.oneofs)
                                    object.purchaseOption = "changeOfferPurchase";
                            }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            return object;
                        };
    
                        /**
                         * Converts this ListPurchasableOffersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPurchasableOffersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPurchasableOffersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPurchasableOffersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListPurchasableOffersRequest";
                        };
    
                        ListPurchasableOffersRequest.CreateEntitlementPurchase = (function() {
    
                            /**
                             * Properties of a CreateEntitlementPurchase.
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                             * @interface ICreateEntitlementPurchase
                             * @property {string|null} [sku] CreateEntitlementPurchase sku
                             */
    
                            /**
                             * Constructs a new CreateEntitlementPurchase.
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                             * @classdesc Represents a CreateEntitlementPurchase.
                             * @implements ICreateEntitlementPurchase
                             * @constructor
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.ICreateEntitlementPurchase=} [properties] Properties to set
                             */
                            function CreateEntitlementPurchase(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateEntitlementPurchase sku.
                             * @member {string} sku
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @instance
                             */
                            CreateEntitlementPurchase.prototype.sku = "";
    
                            /**
                             * Creates a new CreateEntitlementPurchase instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.ICreateEntitlementPurchase=} [properties] Properties to set
                             * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase} CreateEntitlementPurchase instance
                             */
                            CreateEntitlementPurchase.create = function create(properties) {
                                return new CreateEntitlementPurchase(properties);
                            };
    
                            /**
                             * Encodes the specified CreateEntitlementPurchase message. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.ICreateEntitlementPurchase} message CreateEntitlementPurchase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateEntitlementPurchase.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.sku != null && Object.hasOwnProperty.call(message, "sku"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sku);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateEntitlementPurchase message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.ICreateEntitlementPurchase} message CreateEntitlementPurchase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateEntitlementPurchase.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateEntitlementPurchase message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase} CreateEntitlementPurchase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateEntitlementPurchase.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.sku = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateEntitlementPurchase message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase} CreateEntitlementPurchase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateEntitlementPurchase.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateEntitlementPurchase message.
                             * @function verify
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateEntitlementPurchase.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.sku != null && message.hasOwnProperty("sku"))
                                    if (!$util.isString(message.sku))
                                        return "sku: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateEntitlementPurchase message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase} CreateEntitlementPurchase
                             */
                            CreateEntitlementPurchase.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase)
                                    return object;
                                var message = new $root.google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase();
                                if (object.sku != null)
                                    message.sku = String(object.sku);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateEntitlementPurchase message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase} message CreateEntitlementPurchase
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateEntitlementPurchase.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.sku = "";
                                if (message.sku != null && message.hasOwnProperty("sku"))
                                    object.sku = message.sku;
                                return object;
                            };
    
                            /**
                             * Converts this CreateEntitlementPurchase to JSON.
                             * @function toJSON
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateEntitlementPurchase.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateEntitlementPurchase
                             * @function getTypeUrl
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateEntitlementPurchase.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase";
                            };
    
                            return CreateEntitlementPurchase;
                        })();
    
                        ListPurchasableOffersRequest.ChangeOfferPurchase = (function() {
    
                            /**
                             * Properties of a ChangeOfferPurchase.
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                             * @interface IChangeOfferPurchase
                             * @property {string|null} [entitlement] ChangeOfferPurchase entitlement
                             * @property {string|null} [newSku] ChangeOfferPurchase newSku
                             */
    
                            /**
                             * Constructs a new ChangeOfferPurchase.
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest
                             * @classdesc Represents a ChangeOfferPurchase.
                             * @implements IChangeOfferPurchase
                             * @constructor
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.IChangeOfferPurchase=} [properties] Properties to set
                             */
                            function ChangeOfferPurchase(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ChangeOfferPurchase entitlement.
                             * @member {string} entitlement
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @instance
                             */
                            ChangeOfferPurchase.prototype.entitlement = "";
    
                            /**
                             * ChangeOfferPurchase newSku.
                             * @member {string} newSku
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @instance
                             */
                            ChangeOfferPurchase.prototype.newSku = "";
    
                            /**
                             * Creates a new ChangeOfferPurchase instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.IChangeOfferPurchase=} [properties] Properties to set
                             * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase} ChangeOfferPurchase instance
                             */
                            ChangeOfferPurchase.create = function create(properties) {
                                return new ChangeOfferPurchase(properties);
                            };
    
                            /**
                             * Encodes the specified ChangeOfferPurchase message. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.IChangeOfferPurchase} message ChangeOfferPurchase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ChangeOfferPurchase.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.entitlement != null && Object.hasOwnProperty.call(message, "entitlement"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.entitlement);
                                if (message.newSku != null && Object.hasOwnProperty.call(message, "newSku"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.newSku);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ChangeOfferPurchase message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.IChangeOfferPurchase} message ChangeOfferPurchase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ChangeOfferPurchase.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ChangeOfferPurchase message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase} ChangeOfferPurchase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ChangeOfferPurchase.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.entitlement = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.newSku = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ChangeOfferPurchase message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase} ChangeOfferPurchase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ChangeOfferPurchase.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ChangeOfferPurchase message.
                             * @function verify
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ChangeOfferPurchase.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                    if (!$util.isString(message.entitlement))
                                        return "entitlement: string expected";
                                if (message.newSku != null && message.hasOwnProperty("newSku"))
                                    if (!$util.isString(message.newSku))
                                        return "newSku: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ChangeOfferPurchase message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase} ChangeOfferPurchase
                             */
                            ChangeOfferPurchase.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase)
                                    return object;
                                var message = new $root.google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase();
                                if (object.entitlement != null)
                                    message.entitlement = String(object.entitlement);
                                if (object.newSku != null)
                                    message.newSku = String(object.newSku);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ChangeOfferPurchase message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @static
                             * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase} message ChangeOfferPurchase
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ChangeOfferPurchase.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.entitlement = "";
                                    object.newSku = "";
                                }
                                if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                    object.entitlement = message.entitlement;
                                if (message.newSku != null && message.hasOwnProperty("newSku"))
                                    object.newSku = message.newSku;
                                return object;
                            };
    
                            /**
                             * Converts this ChangeOfferPurchase to JSON.
                             * @function toJSON
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ChangeOfferPurchase.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ChangeOfferPurchase
                             * @function getTypeUrl
                             * @memberof google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ChangeOfferPurchase.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase";
                            };
    
                            return ChangeOfferPurchase;
                        })();
    
                        return ListPurchasableOffersRequest;
                    })();
    
                    v1.ListPurchasableOffersResponse = (function() {
    
                        /**
                         * Properties of a ListPurchasableOffersResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListPurchasableOffersResponse
                         * @property {Array.<google.cloud.channel.v1.IPurchasableOffer>|null} [purchasableOffers] ListPurchasableOffersResponse purchasableOffers
                         * @property {string|null} [nextPageToken] ListPurchasableOffersResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListPurchasableOffersResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListPurchasableOffersResponse.
                         * @implements IListPurchasableOffersResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListPurchasableOffersResponse=} [properties] Properties to set
                         */
                        function ListPurchasableOffersResponse(properties) {
                            this.purchasableOffers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPurchasableOffersResponse purchasableOffers.
                         * @member {Array.<google.cloud.channel.v1.IPurchasableOffer>} purchasableOffers
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @instance
                         */
                        ListPurchasableOffersResponse.prototype.purchasableOffers = $util.emptyArray;
    
                        /**
                         * ListPurchasableOffersResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @instance
                         */
                        ListPurchasableOffersResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListPurchasableOffersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableOffersResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListPurchasableOffersResponse} ListPurchasableOffersResponse instance
                         */
                        ListPurchasableOffersResponse.create = function create(properties) {
                            return new ListPurchasableOffersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPurchasableOffersResponse message. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableOffersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableOffersResponse} message ListPurchasableOffersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPurchasableOffersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.purchasableOffers != null && message.purchasableOffers.length)
                                for (var i = 0; i < message.purchasableOffers.length; ++i)
                                    $root.google.cloud.channel.v1.PurchasableOffer.encode(message.purchasableOffers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPurchasableOffersResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListPurchasableOffersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListPurchasableOffersResponse} message ListPurchasableOffersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPurchasableOffersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPurchasableOffersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListPurchasableOffersResponse} ListPurchasableOffersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPurchasableOffersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListPurchasableOffersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.purchasableOffers && message.purchasableOffers.length))
                                            message.purchasableOffers = [];
                                        message.purchasableOffers.push($root.google.cloud.channel.v1.PurchasableOffer.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPurchasableOffersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListPurchasableOffersResponse} ListPurchasableOffersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPurchasableOffersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPurchasableOffersResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPurchasableOffersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.purchasableOffers != null && message.hasOwnProperty("purchasableOffers")) {
                                if (!Array.isArray(message.purchasableOffers))
                                    return "purchasableOffers: array expected";
                                for (var i = 0; i < message.purchasableOffers.length; ++i) {
                                    var error = $root.google.cloud.channel.v1.PurchasableOffer.verify(message.purchasableOffers[i]);
                                    if (error)
                                        return "purchasableOffers." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPurchasableOffersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListPurchasableOffersResponse} ListPurchasableOffersResponse
                         */
                        ListPurchasableOffersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListPurchasableOffersResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListPurchasableOffersResponse();
                            if (object.purchasableOffers) {
                                if (!Array.isArray(object.purchasableOffers))
                                    throw TypeError(".google.cloud.channel.v1.ListPurchasableOffersResponse.purchasableOffers: array expected");
                                message.purchasableOffers = [];
                                for (var i = 0; i < object.purchasableOffers.length; ++i) {
                                    if (typeof object.purchasableOffers[i] !== "object")
                                        throw TypeError(".google.cloud.channel.v1.ListPurchasableOffersResponse.purchasableOffers: object expected");
                                    message.purchasableOffers[i] = $root.google.cloud.channel.v1.PurchasableOffer.fromObject(object.purchasableOffers[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPurchasableOffersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListPurchasableOffersResponse} message ListPurchasableOffersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPurchasableOffersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.purchasableOffers = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.purchasableOffers && message.purchasableOffers.length) {
                                object.purchasableOffers = [];
                                for (var j = 0; j < message.purchasableOffers.length; ++j)
                                    object.purchasableOffers[j] = $root.google.cloud.channel.v1.PurchasableOffer.toObject(message.purchasableOffers[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListPurchasableOffersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPurchasableOffersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPurchasableOffersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListPurchasableOffersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPurchasableOffersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListPurchasableOffersResponse";
                        };
    
                        return ListPurchasableOffersResponse;
                    })();
    
                    v1.PurchasableOffer = (function() {
    
                        /**
                         * Properties of a PurchasableOffer.
                         * @memberof google.cloud.channel.v1
                         * @interface IPurchasableOffer
                         * @property {google.cloud.channel.v1.IOffer|null} [offer] PurchasableOffer offer
                         */
    
                        /**
                         * Constructs a new PurchasableOffer.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a PurchasableOffer.
                         * @implements IPurchasableOffer
                         * @constructor
                         * @param {google.cloud.channel.v1.IPurchasableOffer=} [properties] Properties to set
                         */
                        function PurchasableOffer(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurchasableOffer offer.
                         * @member {google.cloud.channel.v1.IOffer|null|undefined} offer
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @instance
                         */
                        PurchasableOffer.prototype.offer = null;
    
                        /**
                         * Creates a new PurchasableOffer instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @static
                         * @param {google.cloud.channel.v1.IPurchasableOffer=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.PurchasableOffer} PurchasableOffer instance
                         */
                        PurchasableOffer.create = function create(properties) {
                            return new PurchasableOffer(properties);
                        };
    
                        /**
                         * Encodes the specified PurchasableOffer message. Does not implicitly {@link google.cloud.channel.v1.PurchasableOffer.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @static
                         * @param {google.cloud.channel.v1.IPurchasableOffer} message PurchasableOffer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurchasableOffer.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.offer != null && Object.hasOwnProperty.call(message, "offer"))
                                $root.google.cloud.channel.v1.Offer.encode(message.offer, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurchasableOffer message, length delimited. Does not implicitly {@link google.cloud.channel.v1.PurchasableOffer.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @static
                         * @param {google.cloud.channel.v1.IPurchasableOffer} message PurchasableOffer message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurchasableOffer.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurchasableOffer message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.PurchasableOffer} PurchasableOffer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurchasableOffer.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.PurchasableOffer();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.offer = $root.google.cloud.channel.v1.Offer.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurchasableOffer message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.PurchasableOffer} PurchasableOffer
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurchasableOffer.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurchasableOffer message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurchasableOffer.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.offer != null && message.hasOwnProperty("offer")) {
                                var error = $root.google.cloud.channel.v1.Offer.verify(message.offer);
                                if (error)
                                    return "offer." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PurchasableOffer message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.PurchasableOffer} PurchasableOffer
                         */
                        PurchasableOffer.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.PurchasableOffer)
                                return object;
                            var message = new $root.google.cloud.channel.v1.PurchasableOffer();
                            if (object.offer != null) {
                                if (typeof object.offer !== "object")
                                    throw TypeError(".google.cloud.channel.v1.PurchasableOffer.offer: object expected");
                                message.offer = $root.google.cloud.channel.v1.Offer.fromObject(object.offer);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurchasableOffer message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @static
                         * @param {google.cloud.channel.v1.PurchasableOffer} message PurchasableOffer
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurchasableOffer.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.offer = null;
                            if (message.offer != null && message.hasOwnProperty("offer"))
                                object.offer = $root.google.cloud.channel.v1.Offer.toObject(message.offer, options);
                            return object;
                        };
    
                        /**
                         * Converts this PurchasableOffer to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurchasableOffer.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurchasableOffer
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.PurchasableOffer
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurchasableOffer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.PurchasableOffer";
                        };
    
                        return PurchasableOffer;
                    })();
    
                    v1.RegisterSubscriberRequest = (function() {
    
                        /**
                         * Properties of a RegisterSubscriberRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IRegisterSubscriberRequest
                         * @property {string|null} [account] RegisterSubscriberRequest account
                         * @property {string|null} [serviceAccount] RegisterSubscriberRequest serviceAccount
                         */
    
                        /**
                         * Constructs a new RegisterSubscriberRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a RegisterSubscriberRequest.
                         * @implements IRegisterSubscriberRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IRegisterSubscriberRequest=} [properties] Properties to set
                         */
                        function RegisterSubscriberRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterSubscriberRequest account.
                         * @member {string} account
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @instance
                         */
                        RegisterSubscriberRequest.prototype.account = "";
    
                        /**
                         * RegisterSubscriberRequest serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @instance
                         */
                        RegisterSubscriberRequest.prototype.serviceAccount = "";
    
                        /**
                         * Creates a new RegisterSubscriberRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @static
                         * @param {google.cloud.channel.v1.IRegisterSubscriberRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.RegisterSubscriberRequest} RegisterSubscriberRequest instance
                         */
                        RegisterSubscriberRequest.create = function create(properties) {
                            return new RegisterSubscriberRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterSubscriberRequest message. Does not implicitly {@link google.cloud.channel.v1.RegisterSubscriberRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @static
                         * @param {google.cloud.channel.v1.IRegisterSubscriberRequest} message RegisterSubscriberRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterSubscriberRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.account != null && Object.hasOwnProperty.call(message, "account"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.account);
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceAccount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterSubscriberRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RegisterSubscriberRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @static
                         * @param {google.cloud.channel.v1.IRegisterSubscriberRequest} message RegisterSubscriberRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterSubscriberRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterSubscriberRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.RegisterSubscriberRequest} RegisterSubscriberRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterSubscriberRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RegisterSubscriberRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.account = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterSubscriberRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.RegisterSubscriberRequest} RegisterSubscriberRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterSubscriberRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterSubscriberRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterSubscriberRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.account != null && message.hasOwnProperty("account"))
                                if (!$util.isString(message.account))
                                    return "account: string expected";
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RegisterSubscriberRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.RegisterSubscriberRequest} RegisterSubscriberRequest
                         */
                        RegisterSubscriberRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.RegisterSubscriberRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.RegisterSubscriberRequest();
                            if (object.account != null)
                                message.account = String(object.account);
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterSubscriberRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @static
                         * @param {google.cloud.channel.v1.RegisterSubscriberRequest} message RegisterSubscriberRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterSubscriberRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.account = "";
                                object.serviceAccount = "";
                            }
                            if (message.account != null && message.hasOwnProperty("account"))
                                object.account = message.account;
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            return object;
                        };
    
                        /**
                         * Converts this RegisterSubscriberRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterSubscriberRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterSubscriberRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.RegisterSubscriberRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterSubscriberRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.RegisterSubscriberRequest";
                        };
    
                        return RegisterSubscriberRequest;
                    })();
    
                    v1.RegisterSubscriberResponse = (function() {
    
                        /**
                         * Properties of a RegisterSubscriberResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IRegisterSubscriberResponse
                         * @property {string|null} [topic] RegisterSubscriberResponse topic
                         */
    
                        /**
                         * Constructs a new RegisterSubscriberResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a RegisterSubscriberResponse.
                         * @implements IRegisterSubscriberResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IRegisterSubscriberResponse=} [properties] Properties to set
                         */
                        function RegisterSubscriberResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterSubscriberResponse topic.
                         * @member {string} topic
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @instance
                         */
                        RegisterSubscriberResponse.prototype.topic = "";
    
                        /**
                         * Creates a new RegisterSubscriberResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @static
                         * @param {google.cloud.channel.v1.IRegisterSubscriberResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.RegisterSubscriberResponse} RegisterSubscriberResponse instance
                         */
                        RegisterSubscriberResponse.create = function create(properties) {
                            return new RegisterSubscriberResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterSubscriberResponse message. Does not implicitly {@link google.cloud.channel.v1.RegisterSubscriberResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @static
                         * @param {google.cloud.channel.v1.IRegisterSubscriberResponse} message RegisterSubscriberResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterSubscriberResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.topic != null && Object.hasOwnProperty.call(message, "topic"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterSubscriberResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.RegisterSubscriberResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @static
                         * @param {google.cloud.channel.v1.IRegisterSubscriberResponse} message RegisterSubscriberResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterSubscriberResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterSubscriberResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.RegisterSubscriberResponse} RegisterSubscriberResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterSubscriberResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.RegisterSubscriberResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.topic = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterSubscriberResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.RegisterSubscriberResponse} RegisterSubscriberResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterSubscriberResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterSubscriberResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterSubscriberResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                if (!$util.isString(message.topic))
                                    return "topic: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RegisterSubscriberResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.RegisterSubscriberResponse} RegisterSubscriberResponse
                         */
                        RegisterSubscriberResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.RegisterSubscriberResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.RegisterSubscriberResponse();
                            if (object.topic != null)
                                message.topic = String(object.topic);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterSubscriberResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @static
                         * @param {google.cloud.channel.v1.RegisterSubscriberResponse} message RegisterSubscriberResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterSubscriberResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.topic = "";
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                object.topic = message.topic;
                            return object;
                        };
    
                        /**
                         * Converts this RegisterSubscriberResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterSubscriberResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterSubscriberResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.RegisterSubscriberResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterSubscriberResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.RegisterSubscriberResponse";
                        };
    
                        return RegisterSubscriberResponse;
                    })();
    
                    v1.UnregisterSubscriberRequest = (function() {
    
                        /**
                         * Properties of an UnregisterSubscriberRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IUnregisterSubscriberRequest
                         * @property {string|null} [account] UnregisterSubscriberRequest account
                         * @property {string|null} [serviceAccount] UnregisterSubscriberRequest serviceAccount
                         */
    
                        /**
                         * Constructs a new UnregisterSubscriberRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an UnregisterSubscriberRequest.
                         * @implements IUnregisterSubscriberRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberRequest=} [properties] Properties to set
                         */
                        function UnregisterSubscriberRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UnregisterSubscriberRequest account.
                         * @member {string} account
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @instance
                         */
                        UnregisterSubscriberRequest.prototype.account = "";
    
                        /**
                         * UnregisterSubscriberRequest serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @instance
                         */
                        UnregisterSubscriberRequest.prototype.serviceAccount = "";
    
                        /**
                         * Creates a new UnregisterSubscriberRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.UnregisterSubscriberRequest} UnregisterSubscriberRequest instance
                         */
                        UnregisterSubscriberRequest.create = function create(properties) {
                            return new UnregisterSubscriberRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UnregisterSubscriberRequest message. Does not implicitly {@link google.cloud.channel.v1.UnregisterSubscriberRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberRequest} message UnregisterSubscriberRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UnregisterSubscriberRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.account != null && Object.hasOwnProperty.call(message, "account"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.account);
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceAccount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UnregisterSubscriberRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.UnregisterSubscriberRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @static
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberRequest} message UnregisterSubscriberRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UnregisterSubscriberRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UnregisterSubscriberRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.UnregisterSubscriberRequest} UnregisterSubscriberRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UnregisterSubscriberRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.UnregisterSubscriberRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.account = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UnregisterSubscriberRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.UnregisterSubscriberRequest} UnregisterSubscriberRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UnregisterSubscriberRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UnregisterSubscriberRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UnregisterSubscriberRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.account != null && message.hasOwnProperty("account"))
                                if (!$util.isString(message.account))
                                    return "account: string expected";
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UnregisterSubscriberRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.UnregisterSubscriberRequest} UnregisterSubscriberRequest
                         */
                        UnregisterSubscriberRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.UnregisterSubscriberRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.UnregisterSubscriberRequest();
                            if (object.account != null)
                                message.account = String(object.account);
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UnregisterSubscriberRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @static
                         * @param {google.cloud.channel.v1.UnregisterSubscriberRequest} message UnregisterSubscriberRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UnregisterSubscriberRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.account = "";
                                object.serviceAccount = "";
                            }
                            if (message.account != null && message.hasOwnProperty("account"))
                                object.account = message.account;
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            return object;
                        };
    
                        /**
                         * Converts this UnregisterSubscriberRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UnregisterSubscriberRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UnregisterSubscriberRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UnregisterSubscriberRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.UnregisterSubscriberRequest";
                        };
    
                        return UnregisterSubscriberRequest;
                    })();
    
                    v1.UnregisterSubscriberResponse = (function() {
    
                        /**
                         * Properties of an UnregisterSubscriberResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IUnregisterSubscriberResponse
                         * @property {string|null} [topic] UnregisterSubscriberResponse topic
                         */
    
                        /**
                         * Constructs a new UnregisterSubscriberResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an UnregisterSubscriberResponse.
                         * @implements IUnregisterSubscriberResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberResponse=} [properties] Properties to set
                         */
                        function UnregisterSubscriberResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UnregisterSubscriberResponse topic.
                         * @member {string} topic
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @instance
                         */
                        UnregisterSubscriberResponse.prototype.topic = "";
    
                        /**
                         * Creates a new UnregisterSubscriberResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @static
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.UnregisterSubscriberResponse} UnregisterSubscriberResponse instance
                         */
                        UnregisterSubscriberResponse.create = function create(properties) {
                            return new UnregisterSubscriberResponse(properties);
                        };
    
                        /**
                         * Encodes the specified UnregisterSubscriberResponse message. Does not implicitly {@link google.cloud.channel.v1.UnregisterSubscriberResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @static
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberResponse} message UnregisterSubscriberResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UnregisterSubscriberResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.topic != null && Object.hasOwnProperty.call(message, "topic"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UnregisterSubscriberResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.UnregisterSubscriberResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @static
                         * @param {google.cloud.channel.v1.IUnregisterSubscriberResponse} message UnregisterSubscriberResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UnregisterSubscriberResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UnregisterSubscriberResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.UnregisterSubscriberResponse} UnregisterSubscriberResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UnregisterSubscriberResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.UnregisterSubscriberResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.topic = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UnregisterSubscriberResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.UnregisterSubscriberResponse} UnregisterSubscriberResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UnregisterSubscriberResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UnregisterSubscriberResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UnregisterSubscriberResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                if (!$util.isString(message.topic))
                                    return "topic: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UnregisterSubscriberResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.UnregisterSubscriberResponse} UnregisterSubscriberResponse
                         */
                        UnregisterSubscriberResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.UnregisterSubscriberResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.UnregisterSubscriberResponse();
                            if (object.topic != null)
                                message.topic = String(object.topic);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UnregisterSubscriberResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @static
                         * @param {google.cloud.channel.v1.UnregisterSubscriberResponse} message UnregisterSubscriberResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UnregisterSubscriberResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.topic = "";
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                object.topic = message.topic;
                            return object;
                        };
    
                        /**
                         * Converts this UnregisterSubscriberResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UnregisterSubscriberResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UnregisterSubscriberResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.UnregisterSubscriberResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UnregisterSubscriberResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.UnregisterSubscriberResponse";
                        };
    
                        return UnregisterSubscriberResponse;
                    })();
    
                    v1.ListSubscribersRequest = (function() {
    
                        /**
                         * Properties of a ListSubscribersRequest.
                         * @memberof google.cloud.channel.v1
                         * @interface IListSubscribersRequest
                         * @property {string|null} [account] ListSubscribersRequest account
                         * @property {number|null} [pageSize] ListSubscribersRequest pageSize
                         * @property {string|null} [pageToken] ListSubscribersRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListSubscribersRequest.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListSubscribersRequest.
                         * @implements IListSubscribersRequest
                         * @constructor
                         * @param {google.cloud.channel.v1.IListSubscribersRequest=} [properties] Properties to set
                         */
                        function ListSubscribersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSubscribersRequest account.
                         * @member {string} account
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @instance
                         */
                        ListSubscribersRequest.prototype.account = "";
    
                        /**
                         * ListSubscribersRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @instance
                         */
                        ListSubscribersRequest.prototype.pageSize = 0;
    
                        /**
                         * ListSubscribersRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @instance
                         */
                        ListSubscribersRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListSubscribersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListSubscribersRequest=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListSubscribersRequest} ListSubscribersRequest instance
                         */
                        ListSubscribersRequest.create = function create(properties) {
                            return new ListSubscribersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListSubscribersRequest message. Does not implicitly {@link google.cloud.channel.v1.ListSubscribersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListSubscribersRequest} message ListSubscribersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubscribersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.account != null && Object.hasOwnProperty.call(message, "account"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.account);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSubscribersRequest message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListSubscribersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @static
                         * @param {google.cloud.channel.v1.IListSubscribersRequest} message ListSubscribersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubscribersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSubscribersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListSubscribersRequest} ListSubscribersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubscribersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListSubscribersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.account = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSubscribersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListSubscribersRequest} ListSubscribersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubscribersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSubscribersRequest message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSubscribersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.account != null && message.hasOwnProperty("account"))
                                if (!$util.isString(message.account))
                                    return "account: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSubscribersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListSubscribersRequest} ListSubscribersRequest
                         */
                        ListSubscribersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListSubscribersRequest)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListSubscribersRequest();
                            if (object.account != null)
                                message.account = String(object.account);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSubscribersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @static
                         * @param {google.cloud.channel.v1.ListSubscribersRequest} message ListSubscribersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSubscribersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.account = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.account != null && message.hasOwnProperty("account"))
                                object.account = message.account;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSubscribersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSubscribersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSubscribersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListSubscribersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSubscribersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListSubscribersRequest";
                        };
    
                        return ListSubscribersRequest;
                    })();
    
                    v1.ListSubscribersResponse = (function() {
    
                        /**
                         * Properties of a ListSubscribersResponse.
                         * @memberof google.cloud.channel.v1
                         * @interface IListSubscribersResponse
                         * @property {string|null} [topic] ListSubscribersResponse topic
                         * @property {Array.<string>|null} [serviceAccounts] ListSubscribersResponse serviceAccounts
                         * @property {string|null} [nextPageToken] ListSubscribersResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListSubscribersResponse.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a ListSubscribersResponse.
                         * @implements IListSubscribersResponse
                         * @constructor
                         * @param {google.cloud.channel.v1.IListSubscribersResponse=} [properties] Properties to set
                         */
                        function ListSubscribersResponse(properties) {
                            this.serviceAccounts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSubscribersResponse topic.
                         * @member {string} topic
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @instance
                         */
                        ListSubscribersResponse.prototype.topic = "";
    
                        /**
                         * ListSubscribersResponse serviceAccounts.
                         * @member {Array.<string>} serviceAccounts
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @instance
                         */
                        ListSubscribersResponse.prototype.serviceAccounts = $util.emptyArray;
    
                        /**
                         * ListSubscribersResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @instance
                         */
                        ListSubscribersResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListSubscribersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListSubscribersResponse=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.ListSubscribersResponse} ListSubscribersResponse instance
                         */
                        ListSubscribersResponse.create = function create(properties) {
                            return new ListSubscribersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListSubscribersResponse message. Does not implicitly {@link google.cloud.channel.v1.ListSubscribersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListSubscribersResponse} message ListSubscribersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubscribersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.topic != null && Object.hasOwnProperty.call(message, "topic"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);
                            if (message.serviceAccounts != null && message.serviceAccounts.length)
                                for (var i = 0; i < message.serviceAccounts.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceAccounts[i]);
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSubscribersResponse message, length delimited. Does not implicitly {@link google.cloud.channel.v1.ListSubscribersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @static
                         * @param {google.cloud.channel.v1.IListSubscribersResponse} message ListSubscribersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubscribersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSubscribersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.ListSubscribersResponse} ListSubscribersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubscribersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.ListSubscribersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.topic = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.serviceAccounts && message.serviceAccounts.length))
                                            message.serviceAccounts = [];
                                        message.serviceAccounts.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSubscribersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.ListSubscribersResponse} ListSubscribersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubscribersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSubscribersResponse message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSubscribersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                if (!$util.isString(message.topic))
                                    return "topic: string expected";
                            if (message.serviceAccounts != null && message.hasOwnProperty("serviceAccounts")) {
                                if (!Array.isArray(message.serviceAccounts))
                                    return "serviceAccounts: array expected";
                                for (var i = 0; i < message.serviceAccounts.length; ++i)
                                    if (!$util.isString(message.serviceAccounts[i]))
                                        return "serviceAccounts: string[] expected";
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSubscribersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.ListSubscribersResponse} ListSubscribersResponse
                         */
                        ListSubscribersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.ListSubscribersResponse)
                                return object;
                            var message = new $root.google.cloud.channel.v1.ListSubscribersResponse();
                            if (object.topic != null)
                                message.topic = String(object.topic);
                            if (object.serviceAccounts) {
                                if (!Array.isArray(object.serviceAccounts))
                                    throw TypeError(".google.cloud.channel.v1.ListSubscribersResponse.serviceAccounts: array expected");
                                message.serviceAccounts = [];
                                for (var i = 0; i < object.serviceAccounts.length; ++i)
                                    message.serviceAccounts[i] = String(object.serviceAccounts[i]);
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSubscribersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @static
                         * @param {google.cloud.channel.v1.ListSubscribersResponse} message ListSubscribersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSubscribersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.serviceAccounts = [];
                            if (options.defaults) {
                                object.topic = "";
                                object.nextPageToken = "";
                            }
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                object.topic = message.topic;
                            if (message.serviceAccounts && message.serviceAccounts.length) {
                                object.serviceAccounts = [];
                                for (var j = 0; j < message.serviceAccounts.length; ++j)
                                    object.serviceAccounts[j] = message.serviceAccounts[j];
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSubscribersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSubscribersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSubscribersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.ListSubscribersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSubscribersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.ListSubscribersResponse";
                        };
    
                        return ListSubscribersResponse;
                    })();
    
                    v1.CustomerEvent = (function() {
    
                        /**
                         * Properties of a CustomerEvent.
                         * @memberof google.cloud.channel.v1
                         * @interface ICustomerEvent
                         * @property {string|null} [customer] CustomerEvent customer
                         * @property {google.cloud.channel.v1.CustomerEvent.Type|null} [eventType] CustomerEvent eventType
                         */
    
                        /**
                         * Constructs a new CustomerEvent.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a CustomerEvent.
                         * @implements ICustomerEvent
                         * @constructor
                         * @param {google.cloud.channel.v1.ICustomerEvent=} [properties] Properties to set
                         */
                        function CustomerEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CustomerEvent customer.
                         * @member {string} customer
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @instance
                         */
                        CustomerEvent.prototype.customer = "";
    
                        /**
                         * CustomerEvent eventType.
                         * @member {google.cloud.channel.v1.CustomerEvent.Type} eventType
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @instance
                         */
                        CustomerEvent.prototype.eventType = 0;
    
                        /**
                         * Creates a new CustomerEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @static
                         * @param {google.cloud.channel.v1.ICustomerEvent=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.CustomerEvent} CustomerEvent instance
                         */
                        CustomerEvent.create = function create(properties) {
                            return new CustomerEvent(properties);
                        };
    
                        /**
                         * Encodes the specified CustomerEvent message. Does not implicitly {@link google.cloud.channel.v1.CustomerEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @static
                         * @param {google.cloud.channel.v1.ICustomerEvent} message CustomerEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomerEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customer != null && Object.hasOwnProperty.call(message, "customer"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.customer);
                            if (message.eventType != null && Object.hasOwnProperty.call(message, "eventType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.eventType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CustomerEvent message, length delimited. Does not implicitly {@link google.cloud.channel.v1.CustomerEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @static
                         * @param {google.cloud.channel.v1.ICustomerEvent} message CustomerEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomerEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CustomerEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.CustomerEvent} CustomerEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomerEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.CustomerEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customer = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.eventType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CustomerEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.CustomerEvent} CustomerEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomerEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CustomerEvent message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CustomerEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                if (!$util.isString(message.customer))
                                    return "customer: string expected";
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                switch (message.eventType) {
                                default:
                                    return "eventType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CustomerEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.CustomerEvent} CustomerEvent
                         */
                        CustomerEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.CustomerEvent)
                                return object;
                            var message = new $root.google.cloud.channel.v1.CustomerEvent();
                            if (object.customer != null)
                                message.customer = String(object.customer);
                            switch (object.eventType) {
                            default:
                                if (typeof object.eventType === "number") {
                                    message.eventType = object.eventType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.eventType = 0;
                                break;
                            case "PRIMARY_DOMAIN_CHANGED":
                            case 1:
                                message.eventType = 1;
                                break;
                            case "PRIMARY_DOMAIN_VERIFIED":
                            case 2:
                                message.eventType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CustomerEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @static
                         * @param {google.cloud.channel.v1.CustomerEvent} message CustomerEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CustomerEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.customer = "";
                                object.eventType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.customer != null && message.hasOwnProperty("customer"))
                                object.customer = message.customer;
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                object.eventType = options.enums === String ? $root.google.cloud.channel.v1.CustomerEvent.Type[message.eventType] === undefined ? message.eventType : $root.google.cloud.channel.v1.CustomerEvent.Type[message.eventType] : message.eventType;
                            return object;
                        };
    
                        /**
                         * Converts this CustomerEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CustomerEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CustomerEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.CustomerEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CustomerEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.CustomerEvent";
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.channel.v1.CustomerEvent.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} PRIMARY_DOMAIN_CHANGED=1 PRIMARY_DOMAIN_CHANGED value
                         * @property {number} PRIMARY_DOMAIN_VERIFIED=2 PRIMARY_DOMAIN_VERIFIED value
                         */
                        CustomerEvent.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PRIMARY_DOMAIN_CHANGED"] = 1;
                            values[valuesById[2] = "PRIMARY_DOMAIN_VERIFIED"] = 2;
                            return values;
                        })();
    
                        return CustomerEvent;
                    })();
    
                    v1.EntitlementEvent = (function() {
    
                        /**
                         * Properties of an EntitlementEvent.
                         * @memberof google.cloud.channel.v1
                         * @interface IEntitlementEvent
                         * @property {string|null} [entitlement] EntitlementEvent entitlement
                         * @property {google.cloud.channel.v1.EntitlementEvent.Type|null} [eventType] EntitlementEvent eventType
                         */
    
                        /**
                         * Constructs a new EntitlementEvent.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents an EntitlementEvent.
                         * @implements IEntitlementEvent
                         * @constructor
                         * @param {google.cloud.channel.v1.IEntitlementEvent=} [properties] Properties to set
                         */
                        function EntitlementEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EntitlementEvent entitlement.
                         * @member {string} entitlement
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @instance
                         */
                        EntitlementEvent.prototype.entitlement = "";
    
                        /**
                         * EntitlementEvent eventType.
                         * @member {google.cloud.channel.v1.EntitlementEvent.Type} eventType
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @instance
                         */
                        EntitlementEvent.prototype.eventType = 0;
    
                        /**
                         * Creates a new EntitlementEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @static
                         * @param {google.cloud.channel.v1.IEntitlementEvent=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.EntitlementEvent} EntitlementEvent instance
                         */
                        EntitlementEvent.create = function create(properties) {
                            return new EntitlementEvent(properties);
                        };
    
                        /**
                         * Encodes the specified EntitlementEvent message. Does not implicitly {@link google.cloud.channel.v1.EntitlementEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @static
                         * @param {google.cloud.channel.v1.IEntitlementEvent} message EntitlementEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EntitlementEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.entitlement != null && Object.hasOwnProperty.call(message, "entitlement"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.entitlement);
                            if (message.eventType != null && Object.hasOwnProperty.call(message, "eventType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.eventType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EntitlementEvent message, length delimited. Does not implicitly {@link google.cloud.channel.v1.EntitlementEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @static
                         * @param {google.cloud.channel.v1.IEntitlementEvent} message EntitlementEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EntitlementEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EntitlementEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.EntitlementEvent} EntitlementEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EntitlementEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.EntitlementEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.entitlement = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.eventType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EntitlementEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.EntitlementEvent} EntitlementEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EntitlementEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EntitlementEvent message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EntitlementEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                if (!$util.isString(message.entitlement))
                                    return "entitlement: string expected";
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                switch (message.eventType) {
                                default:
                                    return "eventType: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an EntitlementEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.EntitlementEvent} EntitlementEvent
                         */
                        EntitlementEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.EntitlementEvent)
                                return object;
                            var message = new $root.google.cloud.channel.v1.EntitlementEvent();
                            if (object.entitlement != null)
                                message.entitlement = String(object.entitlement);
                            switch (object.eventType) {
                            default:
                                if (typeof object.eventType === "number") {
                                    message.eventType = object.eventType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.eventType = 0;
                                break;
                            case "CREATED":
                            case 1:
                                message.eventType = 1;
                                break;
                            case "PRICE_PLAN_SWITCHED":
                            case 3:
                                message.eventType = 3;
                                break;
                            case "COMMITMENT_CHANGED":
                            case 4:
                                message.eventType = 4;
                                break;
                            case "RENEWED":
                            case 5:
                                message.eventType = 5;
                                break;
                            case "SUSPENDED":
                            case 6:
                                message.eventType = 6;
                                break;
                            case "ACTIVATED":
                            case 7:
                                message.eventType = 7;
                                break;
                            case "CANCELLED":
                            case 8:
                                message.eventType = 8;
                                break;
                            case "SKU_CHANGED":
                            case 9:
                                message.eventType = 9;
                                break;
                            case "RENEWAL_SETTING_CHANGED":
                            case 10:
                                message.eventType = 10;
                                break;
                            case "PAID_SERVICE_STARTED":
                            case 11:
                                message.eventType = 11;
                                break;
                            case "LICENSE_ASSIGNMENT_CHANGED":
                            case 12:
                                message.eventType = 12;
                                break;
                            case "LICENSE_CAP_CHANGED":
                            case 13:
                                message.eventType = 13;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EntitlementEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @static
                         * @param {google.cloud.channel.v1.EntitlementEvent} message EntitlementEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EntitlementEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.entitlement = "";
                                object.eventType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.entitlement != null && message.hasOwnProperty("entitlement"))
                                object.entitlement = message.entitlement;
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                object.eventType = options.enums === String ? $root.google.cloud.channel.v1.EntitlementEvent.Type[message.eventType] === undefined ? message.eventType : $root.google.cloud.channel.v1.EntitlementEvent.Type[message.eventType] : message.eventType;
                            return object;
                        };
    
                        /**
                         * Converts this EntitlementEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EntitlementEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EntitlementEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.EntitlementEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EntitlementEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.EntitlementEvent";
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.channel.v1.EntitlementEvent.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} CREATED=1 CREATED value
                         * @property {number} PRICE_PLAN_SWITCHED=3 PRICE_PLAN_SWITCHED value
                         * @property {number} COMMITMENT_CHANGED=4 COMMITMENT_CHANGED value
                         * @property {number} RENEWED=5 RENEWED value
                         * @property {number} SUSPENDED=6 SUSPENDED value
                         * @property {number} ACTIVATED=7 ACTIVATED value
                         * @property {number} CANCELLED=8 CANCELLED value
                         * @property {number} SKU_CHANGED=9 SKU_CHANGED value
                         * @property {number} RENEWAL_SETTING_CHANGED=10 RENEWAL_SETTING_CHANGED value
                         * @property {number} PAID_SERVICE_STARTED=11 PAID_SERVICE_STARTED value
                         * @property {number} LICENSE_ASSIGNMENT_CHANGED=12 LICENSE_ASSIGNMENT_CHANGED value
                         * @property {number} LICENSE_CAP_CHANGED=13 LICENSE_CAP_CHANGED value
                         */
                        EntitlementEvent.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATED"] = 1;
                            values[valuesById[3] = "PRICE_PLAN_SWITCHED"] = 3;
                            values[valuesById[4] = "COMMITMENT_CHANGED"] = 4;
                            values[valuesById[5] = "RENEWED"] = 5;
                            values[valuesById[6] = "SUSPENDED"] = 6;
                            values[valuesById[7] = "ACTIVATED"] = 7;
                            values[valuesById[8] = "CANCELLED"] = 8;
                            values[valuesById[9] = "SKU_CHANGED"] = 9;
                            values[valuesById[10] = "RENEWAL_SETTING_CHANGED"] = 10;
                            values[valuesById[11] = "PAID_SERVICE_STARTED"] = 11;
                            values[valuesById[12] = "LICENSE_ASSIGNMENT_CHANGED"] = 12;
                            values[valuesById[13] = "LICENSE_CAP_CHANGED"] = 13;
                            return values;
                        })();
    
                        return EntitlementEvent;
                    })();
    
                    v1.SubscriberEvent = (function() {
    
                        /**
                         * Properties of a SubscriberEvent.
                         * @memberof google.cloud.channel.v1
                         * @interface ISubscriberEvent
                         * @property {google.cloud.channel.v1.ICustomerEvent|null} [customerEvent] SubscriberEvent customerEvent
                         * @property {google.cloud.channel.v1.IEntitlementEvent|null} [entitlementEvent] SubscriberEvent entitlementEvent
                         */
    
                        /**
                         * Constructs a new SubscriberEvent.
                         * @memberof google.cloud.channel.v1
                         * @classdesc Represents a SubscriberEvent.
                         * @implements ISubscriberEvent
                         * @constructor
                         * @param {google.cloud.channel.v1.ISubscriberEvent=} [properties] Properties to set
                         */
                        function SubscriberEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SubscriberEvent customerEvent.
                         * @member {google.cloud.channel.v1.ICustomerEvent|null|undefined} customerEvent
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @instance
                         */
                        SubscriberEvent.prototype.customerEvent = null;
    
                        /**
                         * SubscriberEvent entitlementEvent.
                         * @member {google.cloud.channel.v1.IEntitlementEvent|null|undefined} entitlementEvent
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @instance
                         */
                        SubscriberEvent.prototype.entitlementEvent = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SubscriberEvent event.
                         * @member {"customerEvent"|"entitlementEvent"|undefined} event
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @instance
                         */
                        Object.defineProperty(SubscriberEvent.prototype, "event", {
                            get: $util.oneOfGetter($oneOfFields = ["customerEvent", "entitlementEvent"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SubscriberEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @static
                         * @param {google.cloud.channel.v1.ISubscriberEvent=} [properties] Properties to set
                         * @returns {google.cloud.channel.v1.SubscriberEvent} SubscriberEvent instance
                         */
                        SubscriberEvent.create = function create(properties) {
                            return new SubscriberEvent(properties);
                        };
    
                        /**
                         * Encodes the specified SubscriberEvent message. Does not implicitly {@link google.cloud.channel.v1.SubscriberEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @static
                         * @param {google.cloud.channel.v1.ISubscriberEvent} message SubscriberEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SubscriberEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.customerEvent != null && Object.hasOwnProperty.call(message, "customerEvent"))
                                $root.google.cloud.channel.v1.CustomerEvent.encode(message.customerEvent, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.entitlementEvent != null && Object.hasOwnProperty.call(message, "entitlementEvent"))
                                $root.google.cloud.channel.v1.EntitlementEvent.encode(message.entitlementEvent, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SubscriberEvent message, length delimited. Does not implicitly {@link google.cloud.channel.v1.SubscriberEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @static
                         * @param {google.cloud.channel.v1.ISubscriberEvent} message SubscriberEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SubscriberEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SubscriberEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.channel.v1.SubscriberEvent} SubscriberEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SubscriberEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.channel.v1.SubscriberEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.customerEvent = $root.google.cloud.channel.v1.CustomerEvent.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.entitlementEvent = $root.google.cloud.channel.v1.EntitlementEvent.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SubscriberEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.channel.v1.SubscriberEvent} SubscriberEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SubscriberEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SubscriberEvent message.
                         * @function verify
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SubscriberEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.customerEvent != null && message.hasOwnProperty("customerEvent")) {
                                properties.event = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.CustomerEvent.verify(message.customerEvent);
                                    if (error)
                                        return "customerEvent." + error;
                                }
                            }
                            if (message.entitlementEvent != null && message.hasOwnProperty("entitlementEvent")) {
                                if (properties.event === 1)
                                    return "event: multiple values";
                                properties.event = 1;
                                {
                                    var error = $root.google.cloud.channel.v1.EntitlementEvent.verify(message.entitlementEvent);
                                    if (error)
                                        return "entitlementEvent." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SubscriberEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.channel.v1.SubscriberEvent} SubscriberEvent
                         */
                        SubscriberEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.channel.v1.SubscriberEvent)
                                return object;
                            var message = new $root.google.cloud.channel.v1.SubscriberEvent();
                            if (object.customerEvent != null) {
                                if (typeof object.customerEvent !== "object")
                                    throw TypeError(".google.cloud.channel.v1.SubscriberEvent.customerEvent: object expected");
                                message.customerEvent = $root.google.cloud.channel.v1.CustomerEvent.fromObject(object.customerEvent);
                            }
                            if (object.entitlementEvent != null) {
                                if (typeof object.entitlementEvent !== "object")
                                    throw TypeError(".google.cloud.channel.v1.SubscriberEvent.entitlementEvent: object expected");
                                message.entitlementEvent = $root.google.cloud.channel.v1.EntitlementEvent.fromObject(object.entitlementEvent);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SubscriberEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @static
                         * @param {google.cloud.channel.v1.SubscriberEvent} message SubscriberEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SubscriberEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.customerEvent != null && message.hasOwnProperty("customerEvent")) {
                                object.customerEvent = $root.google.cloud.channel.v1.CustomerEvent.toObject(message.customerEvent, options);
                                if (options.oneofs)
                                    object.event = "customerEvent";
                            }
                            if (message.entitlementEvent != null && message.hasOwnProperty("entitlementEvent")) {
                                object.entitlementEvent = $root.google.cloud.channel.v1.EntitlementEvent.toObject(message.entitlementEvent, options);
                                if (options.oneofs)
                                    object.event = "entitlementEvent";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SubscriberEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SubscriberEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SubscriberEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.channel.v1.SubscriberEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SubscriberEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.channel.v1.SubscriberEvent";
                        };
    
                        return SubscriberEvent;
                    })();
    
                    return v1;
                })();
    
                return channel;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            return protobuf;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.PostalAddress = (function() {
    
                /**
                 * Properties of a PostalAddress.
                 * @memberof google.type
                 * @interface IPostalAddress
                 * @property {number|null} [revision] PostalAddress revision
                 * @property {string|null} [regionCode] PostalAddress regionCode
                 * @property {string|null} [languageCode] PostalAddress languageCode
                 * @property {string|null} [postalCode] PostalAddress postalCode
                 * @property {string|null} [sortingCode] PostalAddress sortingCode
                 * @property {string|null} [administrativeArea] PostalAddress administrativeArea
                 * @property {string|null} [locality] PostalAddress locality
                 * @property {string|null} [sublocality] PostalAddress sublocality
                 * @property {Array.<string>|null} [addressLines] PostalAddress addressLines
                 * @property {Array.<string>|null} [recipients] PostalAddress recipients
                 * @property {string|null} [organization] PostalAddress organization
                 */
    
                /**
                 * Constructs a new PostalAddress.
                 * @memberof google.type
                 * @classdesc Represents a PostalAddress.
                 * @implements IPostalAddress
                 * @constructor
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 */
                function PostalAddress(properties) {
                    this.addressLines = [];
                    this.recipients = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PostalAddress revision.
                 * @member {number} revision
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.revision = 0;
    
                /**
                 * PostalAddress regionCode.
                 * @member {string} regionCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.regionCode = "";
    
                /**
                 * PostalAddress languageCode.
                 * @member {string} languageCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.languageCode = "";
    
                /**
                 * PostalAddress postalCode.
                 * @member {string} postalCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.postalCode = "";
    
                /**
                 * PostalAddress sortingCode.
                 * @member {string} sortingCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sortingCode = "";
    
                /**
                 * PostalAddress administrativeArea.
                 * @member {string} administrativeArea
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.administrativeArea = "";
    
                /**
                 * PostalAddress locality.
                 * @member {string} locality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.locality = "";
    
                /**
                 * PostalAddress sublocality.
                 * @member {string} sublocality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sublocality = "";
    
                /**
                 * PostalAddress addressLines.
                 * @member {Array.<string>} addressLines
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.addressLines = $util.emptyArray;
    
                /**
                 * PostalAddress recipients.
                 * @member {Array.<string>} recipients
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.recipients = $util.emptyArray;
    
                /**
                 * PostalAddress organization.
                 * @member {string} organization
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.organization = "";
    
                /**
                 * Creates a new PostalAddress instance using the specified properties.
                 * @function create
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 * @returns {google.type.PostalAddress} PostalAddress instance
                 */
                PostalAddress.create = function create(properties) {
                    return new PostalAddress(properties);
                };
    
                /**
                 * Encodes the specified PostalAddress message. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revision);
                    if (message.regionCode != null && Object.hasOwnProperty.call(message, "regionCode"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.regionCode);
                    if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.languageCode);
                    if (message.postalCode != null && Object.hasOwnProperty.call(message, "postalCode"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.postalCode);
                    if (message.sortingCode != null && Object.hasOwnProperty.call(message, "sortingCode"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.sortingCode);
                    if (message.administrativeArea != null && Object.hasOwnProperty.call(message, "administrativeArea"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.administrativeArea);
                    if (message.locality != null && Object.hasOwnProperty.call(message, "locality"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.locality);
                    if (message.sublocality != null && Object.hasOwnProperty.call(message, "sublocality"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.sublocality);
                    if (message.addressLines != null && message.addressLines.length)
                        for (var i = 0; i < message.addressLines.length; ++i)
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.addressLines[i]);
                    if (message.recipients != null && message.recipients.length)
                        for (var i = 0; i < message.recipients.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.recipients[i]);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.organization);
                    return writer;
                };
    
                /**
                 * Encodes the specified PostalAddress message, length delimited. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.PostalAddress();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.revision = reader.int32();
                                break;
                            }
                        case 2: {
                                message.regionCode = reader.string();
                                break;
                            }
                        case 3: {
                                message.languageCode = reader.string();
                                break;
                            }
                        case 4: {
                                message.postalCode = reader.string();
                                break;
                            }
                        case 5: {
                                message.sortingCode = reader.string();
                                break;
                            }
                        case 6: {
                                message.administrativeArea = reader.string();
                                break;
                            }
                        case 7: {
                                message.locality = reader.string();
                                break;
                            }
                        case 8: {
                                message.sublocality = reader.string();
                                break;
                            }
                        case 9: {
                                if (!(message.addressLines && message.addressLines.length))
                                    message.addressLines = [];
                                message.addressLines.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.recipients && message.recipients.length))
                                    message.recipients = [];
                                message.recipients.push(reader.string());
                                break;
                            }
                        case 11: {
                                message.organization = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PostalAddress message.
                 * @function verify
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PostalAddress.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        if (!$util.isInteger(message.revision))
                            return "revision: integer expected";
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        if (!$util.isString(message.regionCode))
                            return "regionCode: string expected";
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        if (!$util.isString(message.languageCode))
                            return "languageCode: string expected";
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        if (!$util.isString(message.postalCode))
                            return "postalCode: string expected";
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        if (!$util.isString(message.sortingCode))
                            return "sortingCode: string expected";
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        if (!$util.isString(message.administrativeArea))
                            return "administrativeArea: string expected";
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        if (!$util.isString(message.locality))
                            return "locality: string expected";
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        if (!$util.isString(message.sublocality))
                            return "sublocality: string expected";
                    if (message.addressLines != null && message.hasOwnProperty("addressLines")) {
                        if (!Array.isArray(message.addressLines))
                            return "addressLines: array expected";
                        for (var i = 0; i < message.addressLines.length; ++i)
                            if (!$util.isString(message.addressLines[i]))
                                return "addressLines: string[] expected";
                    }
                    if (message.recipients != null && message.hasOwnProperty("recipients")) {
                        if (!Array.isArray(message.recipients))
                            return "recipients: array expected";
                        for (var i = 0; i < message.recipients.length; ++i)
                            if (!$util.isString(message.recipients[i]))
                                return "recipients: string[] expected";
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        if (!$util.isString(message.organization))
                            return "organization: string expected";
                    return null;
                };
    
                /**
                 * Creates a PostalAddress message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.PostalAddress} PostalAddress
                 */
                PostalAddress.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.PostalAddress)
                        return object;
                    var message = new $root.google.type.PostalAddress();
                    if (object.revision != null)
                        message.revision = object.revision | 0;
                    if (object.regionCode != null)
                        message.regionCode = String(object.regionCode);
                    if (object.languageCode != null)
                        message.languageCode = String(object.languageCode);
                    if (object.postalCode != null)
                        message.postalCode = String(object.postalCode);
                    if (object.sortingCode != null)
                        message.sortingCode = String(object.sortingCode);
                    if (object.administrativeArea != null)
                        message.administrativeArea = String(object.administrativeArea);
                    if (object.locality != null)
                        message.locality = String(object.locality);
                    if (object.sublocality != null)
                        message.sublocality = String(object.sublocality);
                    if (object.addressLines) {
                        if (!Array.isArray(object.addressLines))
                            throw TypeError(".google.type.PostalAddress.addressLines: array expected");
                        message.addressLines = [];
                        for (var i = 0; i < object.addressLines.length; ++i)
                            message.addressLines[i] = String(object.addressLines[i]);
                    }
                    if (object.recipients) {
                        if (!Array.isArray(object.recipients))
                            throw TypeError(".google.type.PostalAddress.recipients: array expected");
                        message.recipients = [];
                        for (var i = 0; i < object.recipients.length; ++i)
                            message.recipients[i] = String(object.recipients[i]);
                    }
                    if (object.organization != null)
                        message.organization = String(object.organization);
                    return message;
                };
    
                /**
                 * Creates a plain object from a PostalAddress message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.PostalAddress} message PostalAddress
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PostalAddress.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.addressLines = [];
                        object.recipients = [];
                    }
                    if (options.defaults) {
                        object.revision = 0;
                        object.regionCode = "";
                        object.languageCode = "";
                        object.postalCode = "";
                        object.sortingCode = "";
                        object.administrativeArea = "";
                        object.locality = "";
                        object.sublocality = "";
                        object.organization = "";
                    }
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        object.revision = message.revision;
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        object.regionCode = message.regionCode;
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        object.languageCode = message.languageCode;
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        object.postalCode = message.postalCode;
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        object.sortingCode = message.sortingCode;
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        object.administrativeArea = message.administrativeArea;
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        object.locality = message.locality;
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        object.sublocality = message.sublocality;
                    if (message.addressLines && message.addressLines.length) {
                        object.addressLines = [];
                        for (var j = 0; j < message.addressLines.length; ++j)
                            object.addressLines[j] = message.addressLines[j];
                    }
                    if (message.recipients && message.recipients.length) {
                        object.recipients = [];
                        for (var j = 0; j < message.recipients.length; ++j)
                            object.recipients[j] = message.recipients[j];
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = message.organization;
                    return object;
                };
    
                /**
                 * Converts this PostalAddress to JSON.
                 * @function toJSON
                 * @memberof google.type.PostalAddress
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PostalAddress.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PostalAddress
                 * @function getTypeUrl
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PostalAddress.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.PostalAddress";
                };
    
                return PostalAddress;
            })();
    
            type.Money = (function() {
    
                /**
                 * Properties of a Money.
                 * @memberof google.type
                 * @interface IMoney
                 * @property {string|null} [currencyCode] Money currencyCode
                 * @property {number|Long|null} [units] Money units
                 * @property {number|null} [nanos] Money nanos
                 */
    
                /**
                 * Constructs a new Money.
                 * @memberof google.type
                 * @classdesc Represents a Money.
                 * @implements IMoney
                 * @constructor
                 * @param {google.type.IMoney=} [properties] Properties to set
                 */
                function Money(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Money currencyCode.
                 * @member {string} currencyCode
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.currencyCode = "";
    
                /**
                 * Money units.
                 * @member {number|Long} units
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.units = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Money nanos.
                 * @member {number} nanos
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.nanos = 0;
    
                /**
                 * Creates a new Money instance using the specified properties.
                 * @function create
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney=} [properties] Properties to set
                 * @returns {google.type.Money} Money instance
                 */
                Money.create = function create(properties) {
                    return new Money(properties);
                };
    
                /**
                 * Encodes the specified Money message. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.currencyCode);
                    if (message.units != null && Object.hasOwnProperty.call(message, "units"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.units);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Money message, length delimited. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Money();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.currencyCode = reader.string();
                                break;
                            }
                        case 2: {
                                message.units = reader.int64();
                                break;
                            }
                        case 3: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Money message.
                 * @function verify
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Money.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        if (!$util.isString(message.currencyCode))
                            return "currencyCode: string expected";
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (!$util.isInteger(message.units) && !(message.units && $util.isInteger(message.units.low) && $util.isInteger(message.units.high)))
                            return "units: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Money message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Money} Money
                 */
                Money.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Money)
                        return object;
                    var message = new $root.google.type.Money();
                    if (object.currencyCode != null)
                        message.currencyCode = String(object.currencyCode);
                    if (object.units != null)
                        if ($util.Long)
                            (message.units = $util.Long.fromValue(object.units)).unsigned = false;
                        else if (typeof object.units === "string")
                            message.units = parseInt(object.units, 10);
                        else if (typeof object.units === "number")
                            message.units = object.units;
                        else if (typeof object.units === "object")
                            message.units = new $util.LongBits(object.units.low >>> 0, object.units.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Money message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.Money} message Money
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Money.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.currencyCode = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.units = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.units = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        object.currencyCode = message.currencyCode;
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (typeof message.units === "number")
                            object.units = options.longs === String ? String(message.units) : message.units;
                        else
                            object.units = options.longs === String ? $util.Long.prototype.toString.call(message.units) : options.longs === Number ? new $util.LongBits(message.units.low >>> 0, message.units.high >>> 0).toNumber() : message.units;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Money to JSON.
                 * @function toJSON
                 * @memberof google.type.Money
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Money.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Money
                 * @function getTypeUrl
                 * @memberof google.type.Money
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Money.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Money";
                };
    
                return Money;
            })();
    
            type.Date = (function() {
    
                /**
                 * Properties of a Date.
                 * @memberof google.type
                 * @interface IDate
                 * @property {number|null} [year] Date year
                 * @property {number|null} [month] Date month
                 * @property {number|null} [day] Date day
                 */
    
                /**
                 * Constructs a new Date.
                 * @memberof google.type
                 * @classdesc Represents a Date.
                 * @implements IDate
                 * @constructor
                 * @param {google.type.IDate=} [properties] Properties to set
                 */
                function Date(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Date year.
                 * @member {number} year
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.year = 0;
    
                /**
                 * Date month.
                 * @member {number} month
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.month = 0;
    
                /**
                 * Date day.
                 * @member {number} day
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.day = 0;
    
                /**
                 * Creates a new Date instance using the specified properties.
                 * @function create
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate=} [properties] Properties to set
                 * @returns {google.type.Date} Date instance
                 */
                Date.create = function create(properties) {
                    return new Date(properties);
                };
    
                /**
                 * Encodes the specified Date message. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.year != null && Object.hasOwnProperty.call(message, "year"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.year);
                    if (message.month != null && Object.hasOwnProperty.call(message, "month"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.month);
                    if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day);
                    return writer;
                };
    
                /**
                 * Encodes the specified Date message, length delimited. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Date();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.year = reader.int32();
                                break;
                            }
                        case 2: {
                                message.month = reader.int32();
                                break;
                            }
                        case 3: {
                                message.day = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Date message.
                 * @function verify
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Date.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.year != null && message.hasOwnProperty("year"))
                        if (!$util.isInteger(message.year))
                            return "year: integer expected";
                    if (message.month != null && message.hasOwnProperty("month"))
                        if (!$util.isInteger(message.month))
                            return "month: integer expected";
                    if (message.day != null && message.hasOwnProperty("day"))
                        if (!$util.isInteger(message.day))
                            return "day: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Date message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Date} Date
                 */
                Date.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Date)
                        return object;
                    var message = new $root.google.type.Date();
                    if (object.year != null)
                        message.year = object.year | 0;
                    if (object.month != null)
                        message.month = object.month | 0;
                    if (object.day != null)
                        message.day = object.day | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Date message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.Date} message Date
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Date.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.year = 0;
                        object.month = 0;
                        object.day = 0;
                    }
                    if (message.year != null && message.hasOwnProperty("year"))
                        object.year = message.year;
                    if (message.month != null && message.hasOwnProperty("month"))
                        object.month = message.month;
                    if (message.day != null && message.hasOwnProperty("day"))
                        object.day = message.day;
                    return object;
                };
    
                /**
                 * Converts this Date to JSON.
                 * @function toJSON
                 * @memberof google.type.Date
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Date.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Date
                 * @function getTypeUrl
                 * @memberof google.type.Date
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Date.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Date";
                };
    
                return Date;
            })();
    
            type.DateTime = (function() {
    
                /**
                 * Properties of a DateTime.
                 * @memberof google.type
                 * @interface IDateTime
                 * @property {number|null} [year] DateTime year
                 * @property {number|null} [month] DateTime month
                 * @property {number|null} [day] DateTime day
                 * @property {number|null} [hours] DateTime hours
                 * @property {number|null} [minutes] DateTime minutes
                 * @property {number|null} [seconds] DateTime seconds
                 * @property {number|null} [nanos] DateTime nanos
                 * @property {google.protobuf.IDuration|null} [utcOffset] DateTime utcOffset
                 * @property {google.type.ITimeZone|null} [timeZone] DateTime timeZone
                 */
    
                /**
                 * Constructs a new DateTime.
                 * @memberof google.type
                 * @classdesc Represents a DateTime.
                 * @implements IDateTime
                 * @constructor
                 * @param {google.type.IDateTime=} [properties] Properties to set
                 */
                function DateTime(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DateTime year.
                 * @member {number} year
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.year = 0;
    
                /**
                 * DateTime month.
                 * @member {number} month
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.month = 0;
    
                /**
                 * DateTime day.
                 * @member {number} day
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.day = 0;
    
                /**
                 * DateTime hours.
                 * @member {number} hours
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.hours = 0;
    
                /**
                 * DateTime minutes.
                 * @member {number} minutes
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.minutes = 0;
    
                /**
                 * DateTime seconds.
                 * @member {number} seconds
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.seconds = 0;
    
                /**
                 * DateTime nanos.
                 * @member {number} nanos
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.nanos = 0;
    
                /**
                 * DateTime utcOffset.
                 * @member {google.protobuf.IDuration|null|undefined} utcOffset
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.utcOffset = null;
    
                /**
                 * DateTime timeZone.
                 * @member {google.type.ITimeZone|null|undefined} timeZone
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.timeZone = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * DateTime timeOffset.
                 * @member {"utcOffset"|"timeZone"|undefined} timeOffset
                 * @memberof google.type.DateTime
                 * @instance
                 */
                Object.defineProperty(DateTime.prototype, "timeOffset", {
                    get: $util.oneOfGetter($oneOfFields = ["utcOffset", "timeZone"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new DateTime instance using the specified properties.
                 * @function create
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.IDateTime=} [properties] Properties to set
                 * @returns {google.type.DateTime} DateTime instance
                 */
                DateTime.create = function create(properties) {
                    return new DateTime(properties);
                };
    
                /**
                 * Encodes the specified DateTime message. Does not implicitly {@link google.type.DateTime.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.IDateTime} message DateTime message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DateTime.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.year != null && Object.hasOwnProperty.call(message, "year"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.year);
                    if (message.month != null && Object.hasOwnProperty.call(message, "month"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.month);
                    if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day);
                    if (message.hours != null && Object.hasOwnProperty.call(message, "hours"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.hours);
                    if (message.minutes != null && Object.hasOwnProperty.call(message, "minutes"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.minutes);
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.nanos);
                    if (message.utcOffset != null && Object.hasOwnProperty.call(message, "utcOffset"))
                        $root.google.protobuf.Duration.encode(message.utcOffset, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.timeZone != null && Object.hasOwnProperty.call(message, "timeZone"))
                        $root.google.type.TimeZone.encode(message.timeZone, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DateTime message, length delimited. Does not implicitly {@link google.type.DateTime.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.IDateTime} message DateTime message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DateTime.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DateTime message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.DateTime
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.DateTime} DateTime
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DateTime.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.DateTime();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.year = reader.int32();
                                break;
                            }
                        case 2: {
                                message.month = reader.int32();
                                break;
                            }
                        case 3: {
                                message.day = reader.int32();
                                break;
                            }
                        case 4: {
                                message.hours = reader.int32();
                                break;
                            }
                        case 5: {
                                message.minutes = reader.int32();
                                break;
                            }
                        case 6: {
                                message.seconds = reader.int32();
                                break;
                            }
                        case 7: {
                                message.nanos = reader.int32();
                                break;
                            }
                        case 8: {
                                message.utcOffset = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.timeZone = $root.google.type.TimeZone.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DateTime message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.DateTime
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.DateTime} DateTime
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DateTime.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DateTime message.
                 * @function verify
                 * @memberof google.type.DateTime
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DateTime.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.year != null && message.hasOwnProperty("year"))
                        if (!$util.isInteger(message.year))
                            return "year: integer expected";
                    if (message.month != null && message.hasOwnProperty("month"))
                        if (!$util.isInteger(message.month))
                            return "month: integer expected";
                    if (message.day != null && message.hasOwnProperty("day"))
                        if (!$util.isInteger(message.day))
                            return "day: integer expected";
                    if (message.hours != null && message.hasOwnProperty("hours"))
                        if (!$util.isInteger(message.hours))
                            return "hours: integer expected";
                    if (message.minutes != null && message.hasOwnProperty("minutes"))
                        if (!$util.isInteger(message.minutes))
                            return "minutes: integer expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds))
                            return "seconds: integer expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    if (message.utcOffset != null && message.hasOwnProperty("utcOffset")) {
                        properties.timeOffset = 1;
                        {
                            var error = $root.google.protobuf.Duration.verify(message.utcOffset);
                            if (error)
                                return "utcOffset." + error;
                        }
                    }
                    if (message.timeZone != null && message.hasOwnProperty("timeZone")) {
                        if (properties.timeOffset === 1)
                            return "timeOffset: multiple values";
                        properties.timeOffset = 1;
                        {
                            var error = $root.google.type.TimeZone.verify(message.timeZone);
                            if (error)
                                return "timeZone." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a DateTime message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.DateTime
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.DateTime} DateTime
                 */
                DateTime.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.DateTime)
                        return object;
                    var message = new $root.google.type.DateTime();
                    if (object.year != null)
                        message.year = object.year | 0;
                    if (object.month != null)
                        message.month = object.month | 0;
                    if (object.day != null)
                        message.day = object.day | 0;
                    if (object.hours != null)
                        message.hours = object.hours | 0;
                    if (object.minutes != null)
                        message.minutes = object.minutes | 0;
                    if (object.seconds != null)
                        message.seconds = object.seconds | 0;
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    if (object.utcOffset != null) {
                        if (typeof object.utcOffset !== "object")
                            throw TypeError(".google.type.DateTime.utcOffset: object expected");
                        message.utcOffset = $root.google.protobuf.Duration.fromObject(object.utcOffset);
                    }
                    if (object.timeZone != null) {
                        if (typeof object.timeZone !== "object")
                            throw TypeError(".google.type.DateTime.timeZone: object expected");
                        message.timeZone = $root.google.type.TimeZone.fromObject(object.timeZone);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DateTime message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.DateTime} message DateTime
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DateTime.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.year = 0;
                        object.month = 0;
                        object.day = 0;
                        object.hours = 0;
                        object.minutes = 0;
                        object.seconds = 0;
                        object.nanos = 0;
                    }
                    if (message.year != null && message.hasOwnProperty("year"))
                        object.year = message.year;
                    if (message.month != null && message.hasOwnProperty("month"))
                        object.month = message.month;
                    if (message.day != null && message.hasOwnProperty("day"))
                        object.day = message.day;
                    if (message.hours != null && message.hasOwnProperty("hours"))
                        object.hours = message.hours;
                    if (message.minutes != null && message.hasOwnProperty("minutes"))
                        object.minutes = message.minutes;
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        object.seconds = message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    if (message.utcOffset != null && message.hasOwnProperty("utcOffset")) {
                        object.utcOffset = $root.google.protobuf.Duration.toObject(message.utcOffset, options);
                        if (options.oneofs)
                            object.timeOffset = "utcOffset";
                    }
                    if (message.timeZone != null && message.hasOwnProperty("timeZone")) {
                        object.timeZone = $root.google.type.TimeZone.toObject(message.timeZone, options);
                        if (options.oneofs)
                            object.timeOffset = "timeZone";
                    }
                    return object;
                };
    
                /**
                 * Converts this DateTime to JSON.
                 * @function toJSON
                 * @memberof google.type.DateTime
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DateTime.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DateTime
                 * @function getTypeUrl
                 * @memberof google.type.DateTime
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DateTime.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.DateTime";
                };
    
                return DateTime;
            })();
    
            type.TimeZone = (function() {
    
                /**
                 * Properties of a TimeZone.
                 * @memberof google.type
                 * @interface ITimeZone
                 * @property {string|null} [id] TimeZone id
                 * @property {string|null} [version] TimeZone version
                 */
    
                /**
                 * Constructs a new TimeZone.
                 * @memberof google.type
                 * @classdesc Represents a TimeZone.
                 * @implements ITimeZone
                 * @constructor
                 * @param {google.type.ITimeZone=} [properties] Properties to set
                 */
                function TimeZone(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * TimeZone id.
                 * @member {string} id
                 * @memberof google.type.TimeZone
                 * @instance
                 */
                TimeZone.prototype.id = "";
    
                /**
                 * TimeZone version.
                 * @member {string} version
                 * @memberof google.type.TimeZone
                 * @instance
                 */
                TimeZone.prototype.version = "";
    
                /**
                 * Creates a new TimeZone instance using the specified properties.
                 * @function create
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.ITimeZone=} [properties] Properties to set
                 * @returns {google.type.TimeZone} TimeZone instance
                 */
                TimeZone.create = function create(properties) {
                    return new TimeZone(properties);
                };
    
                /**
                 * Encodes the specified TimeZone message. Does not implicitly {@link google.type.TimeZone.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.ITimeZone} message TimeZone message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeZone.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                    return writer;
                };
    
                /**
                 * Encodes the specified TimeZone message, length delimited. Does not implicitly {@link google.type.TimeZone.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.ITimeZone} message TimeZone message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeZone.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a TimeZone message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.TimeZone} TimeZone
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeZone.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.TimeZone();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.string();
                                break;
                            }
                        case 2: {
                                message.version = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a TimeZone message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.TimeZone} TimeZone
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeZone.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a TimeZone message.
                 * @function verify
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TimeZone.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (!$util.isString(message.id))
                            return "id: string expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    return null;
                };
    
                /**
                 * Creates a TimeZone message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.TimeZone} TimeZone
                 */
                TimeZone.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.TimeZone)
                        return object;
                    var message = new $root.google.type.TimeZone();
                    if (object.id != null)
                        message.id = String(object.id);
                    if (object.version != null)
                        message.version = String(object.version);
                    return message;
                };
    
                /**
                 * Creates a plain object from a TimeZone message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.TimeZone} message TimeZone
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TimeZone.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.id = "";
                        object.version = "";
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        object.id = message.id;
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    return object;
                };
    
                /**
                 * Converts this TimeZone to JSON.
                 * @function toJSON
                 * @memberof google.type.TimeZone
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TimeZone.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for TimeZone
                 * @function getTypeUrl
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TimeZone.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.TimeZone";
                };
    
                return TimeZone;
            })();
    
            type.Decimal = (function() {
    
                /**
                 * Properties of a Decimal.
                 * @memberof google.type
                 * @interface IDecimal
                 * @property {string|null} [value] Decimal value
                 */
    
                /**
                 * Constructs a new Decimal.
                 * @memberof google.type
                 * @classdesc Represents a Decimal.
                 * @implements IDecimal
                 * @constructor
                 * @param {google.type.IDecimal=} [properties] Properties to set
                 */
                function Decimal(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Decimal value.
                 * @member {string} value
                 * @memberof google.type.Decimal
                 * @instance
                 */
                Decimal.prototype.value = "";
    
                /**
                 * Creates a new Decimal instance using the specified properties.
                 * @function create
                 * @memberof google.type.Decimal
                 * @static
                 * @param {google.type.IDecimal=} [properties] Properties to set
                 * @returns {google.type.Decimal} Decimal instance
                 */
                Decimal.create = function create(properties) {
                    return new Decimal(properties);
                };
    
                /**
                 * Encodes the specified Decimal message. Does not implicitly {@link google.type.Decimal.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Decimal
                 * @static
                 * @param {google.type.IDecimal} message Decimal message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Decimal.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Decimal message, length delimited. Does not implicitly {@link google.type.Decimal.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Decimal
                 * @static
                 * @param {google.type.IDecimal} message Decimal message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Decimal.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Decimal message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Decimal
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Decimal} Decimal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Decimal.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Decimal();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Decimal message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Decimal
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Decimal} Decimal
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Decimal.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Decimal message.
                 * @function verify
                 * @memberof google.type.Decimal
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Decimal.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a Decimal message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Decimal
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Decimal} Decimal
                 */
                Decimal.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Decimal)
                        return object;
                    var message = new $root.google.type.Decimal();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Decimal message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Decimal
                 * @static
                 * @param {google.type.Decimal} message Decimal
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Decimal.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Decimal to JSON.
                 * @function toJSON
                 * @memberof google.type.Decimal
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Decimal.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Decimal
                 * @function getTypeUrl
                 * @memberof google.type.Decimal
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Decimal.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Decimal";
                };
    
                return Decimal;
            })();
    
            return type;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
