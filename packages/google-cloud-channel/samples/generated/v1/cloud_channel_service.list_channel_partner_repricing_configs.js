// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START cloudchannel_v1_generated_CloudChannelService_ListChannelPartnerRepricingConfigs_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The resource name of the account's
   *  ChannelPartnerLink google.cloud.channel.v1.ChannelPartnerLink. Parent
   *  uses the format:
   *  accounts/{account_id}/channelPartnerLinks/{channel_partner_id}.
   *  Supports accounts/{account_id}/channelPartnerLinks/- to retrieve configs
   *  for all channel partners.
   */
  // const parent = 'abc123'
  /**
   *  Optional. The maximum number of repricing configs to return. The service
   *  may return fewer than this value. If unspecified, returns a maximum of 50
   *  rules. The maximum value is 100; values above 100 will be coerced to 100.
   */
  // const pageSize = 1234
  /**
   *  Optional. A token identifying a page of results beyond the first page.
   *  Obtained through
   *  ListChannelPartnerRepricingConfigsResponse.next_page_token google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.next_page_token 
   *  of the previous
   *  CloudChannelService.ListChannelPartnerRepricingConfigs google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigs 
   *  call.
   */
  // const pageToken = 'abc123'
  /**
   *  Optional. A filter for
   *  CloudChannelService.ListChannelPartnerRepricingConfigs  results
   *  (channel_partner_link only). You can use this filter when you support a
   *  BatchGet-like query. To use the filter, you must set
   *  `parent=accounts/{account_id}/channelPartnerLinks/-`.
   *  Example: `channel_partner_link =
   *  accounts/account_id/channelPartnerLinks/c1` OR `channel_partner_link =
   *  accounts/account_id/channelPartnerLinks/c2`.
   */
  // const filter = 'abc123'

  // Imports the Channel library
  const {CloudChannelServiceClient} = require('@google-cloud/channel').v1;

  // Instantiates a client
  const channelClient = new CloudChannelServiceClient();

  async function callListChannelPartnerRepricingConfigs() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = await channelClient.listChannelPartnerRepricingConfigsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListChannelPartnerRepricingConfigs();
  // [END cloudchannel_v1_generated_CloudChannelService_ListChannelPartnerRepricingConfigs_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
