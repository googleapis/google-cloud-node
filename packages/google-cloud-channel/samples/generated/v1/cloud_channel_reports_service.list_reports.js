// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START cloudchannel_v1_generated_CloudChannelReportsService_ListReports_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The resource name of the partner account to list available
   *  reports for. Parent uses the format: accounts/{account_id}
   */
  // const parent = 'abc123'
  /**
   *  Optional. Requested page size of the report. The server might return fewer
   *  results than requested. If unspecified, returns 20 reports. The maximum
   *  value is 100.
   */
  // const pageSize = 1234
  /**
   *  Optional. A token that specifies a page of results beyond the first page.
   *  Obtained through
   *  ListReportsResponse.next_page_token google.cloud.channel.v1.ListReportsResponse.next_page_token 
   *  of the previous
   *  CloudChannelReportsService.ListReports google.cloud.channel.v1.CloudChannelReportsService.ListReports 
   *  call.
   */
  // const pageToken = 'abc123'
  /**
   *  Optional. The BCP-47 language code, such as "en-US".  If specified, the
   *  response is localized to the corresponding language code if the
   *  original data sources support it.
   *  Default is "en-US".
   */
  // const languageCode = 'abc123'

  // Imports the Channel library
  const {CloudChannelReportsServiceClient} = require('@google-cloud/channel').v1;

  // Instantiates a client
  const channelClient = new CloudChannelReportsServiceClient();

  async function callListReports() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = await channelClient.listReportsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListReports();
  // [END cloudchannel_v1_generated_CloudChannelReportsService_ListReports_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
