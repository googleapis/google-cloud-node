// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/cloud_channel_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './cloud_channel_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  CloudChannelService lets Google cloud resellers and distributors manage
 *  their customers, channel partners, entitlements, and reports.
 *
 *  Using this service:
 *  1. Resellers and distributors can manage a customer entity.
 *  2. Distributors can register an authorized reseller in their channel and
 *     provide them with delegated admin access.
 *  3. Resellers and distributors can manage customer entitlements.
 *
 *  CloudChannelService exposes the following resources:
 *  - {@link google.cloud.channel.v1.Customer|Customer}s: An entity-usually an
 *  enterprise-managed by a reseller or distributor.
 *
 *  - {@link google.cloud.channel.v1.Entitlement|Entitlement}s: An entity that
 *  provides a customer with the means to use a service. Entitlements are created
 *  or updated as a result of a successful fulfillment.
 *
 *  - {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink}s: An
 *  entity that identifies links between distributors and their indirect
 *  resellers in a channel.
 * @class
 * @memberof v1
 */
export class CloudChannelServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  cloudChannelServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of CloudChannelServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new CloudChannelServiceClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof CloudChannelServiceClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      channelPartnerLinkPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}/channelPartnerLinks/{channel_partner_link}'
      ),
      channelPartnerRepricingConfigPathTemplate:
        new this._gaxModule.PathTemplate(
          'accounts/{account}/channelPartnerLinks/{channel_partner}/channelPartnerRepricingConfigs/{channel_partner_repricing_config}'
        ),
      customerPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}/customers/{customer}'
      ),
      customerRepricingConfigPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}/customers/{customer}/customerRepricingConfigs/{customer_repricing_config}'
      ),
      entitlementPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}/customers/{customer}/entitlements/{entitlement}'
      ),
      offerPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}/offers/{offer}'
      ),
      productPathTemplate: new this._gaxModule.PathTemplate(
        'products/{product}'
      ),
      reportPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}/reports/{report}'
      ),
      reportJobPathTemplate: new this._gaxModule.PathTemplate(
        'accounts/{account}/reportJobs/{report_job}'
      ),
      skuPathTemplate: new this._gaxModule.PathTemplate(
        'products/{product}/skus/{sku}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listCustomers: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'customers'
      ),
      listEntitlements: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'entitlements'
      ),
      listTransferableSkus: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'transferableSkus'
      ),
      listTransferableOffers: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'transferableOffers'
      ),
      listChannelPartnerLinks: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'channelPartnerLinks'
      ),
      listCustomerRepricingConfigs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'customerRepricingConfigs'
      ),
      listChannelPartnerRepricingConfigs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'channelPartnerRepricingConfigs'
      ),
      listProducts: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'products'
      ),
      listSkus: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'skus'
      ),
      listOffers: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'offers'
      ),
      listPurchasableSkus: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'purchasableSkus'
      ),
      listPurchasableOffers: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'purchasableOffers'
      ),
      listSubscribers: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'serviceAccounts'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback === 'rest') {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.longrunning.Operations.CancelOperation',
          post: '/v1/{name=operations/**}:cancel',
          body: '*',
        },
        {
          selector: 'google.longrunning.Operations.DeleteOperation',
          delete: '/v1/{name=operations/**}',
        },
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/v1/{name=operations/**}',
        },
        {
          selector: 'google.longrunning.Operations.ListOperations',
          get: '/v1/{name=operations}',
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);
    const provisionCloudIdentityResponse = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.Customer'
    ) as gax.protobuf.Type;
    const provisionCloudIdentityMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createEntitlementResponse = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.Entitlement'
    ) as gax.protobuf.Type;
    const createEntitlementMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const changeParametersResponse = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.Entitlement'
    ) as gax.protobuf.Type;
    const changeParametersMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const changeRenewalSettingsResponse = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.Entitlement'
    ) as gax.protobuf.Type;
    const changeRenewalSettingsMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const changeOfferResponse = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.Entitlement'
    ) as gax.protobuf.Type;
    const changeOfferMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const startPaidServiceResponse = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.Entitlement'
    ) as gax.protobuf.Type;
    const startPaidServiceMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const suspendEntitlementResponse = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.Entitlement'
    ) as gax.protobuf.Type;
    const suspendEntitlementMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const cancelEntitlementResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const cancelEntitlementMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const activateEntitlementResponse = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.Entitlement'
    ) as gax.protobuf.Type;
    const activateEntitlementMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const transferEntitlementsResponse = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.TransferEntitlementsResponse'
    ) as gax.protobuf.Type;
    const transferEntitlementsMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const transferEntitlementsToGoogleResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const transferEntitlementsToGoogleMetadata = protoFilesRoot.lookup(
      '.google.cloud.channel.v1.OperationMetadata'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      provisionCloudIdentity: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        provisionCloudIdentityResponse.decode.bind(
          provisionCloudIdentityResponse
        ),
        provisionCloudIdentityMetadata.decode.bind(
          provisionCloudIdentityMetadata
        )
      ),
      createEntitlement: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createEntitlementResponse.decode.bind(createEntitlementResponse),
        createEntitlementMetadata.decode.bind(createEntitlementMetadata)
      ),
      changeParameters: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        changeParametersResponse.decode.bind(changeParametersResponse),
        changeParametersMetadata.decode.bind(changeParametersMetadata)
      ),
      changeRenewalSettings: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        changeRenewalSettingsResponse.decode.bind(
          changeRenewalSettingsResponse
        ),
        changeRenewalSettingsMetadata.decode.bind(changeRenewalSettingsMetadata)
      ),
      changeOffer: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        changeOfferResponse.decode.bind(changeOfferResponse),
        changeOfferMetadata.decode.bind(changeOfferMetadata)
      ),
      startPaidService: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        startPaidServiceResponse.decode.bind(startPaidServiceResponse),
        startPaidServiceMetadata.decode.bind(startPaidServiceMetadata)
      ),
      suspendEntitlement: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        suspendEntitlementResponse.decode.bind(suspendEntitlementResponse),
        suspendEntitlementMetadata.decode.bind(suspendEntitlementMetadata)
      ),
      cancelEntitlement: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        cancelEntitlementResponse.decode.bind(cancelEntitlementResponse),
        cancelEntitlementMetadata.decode.bind(cancelEntitlementMetadata)
      ),
      activateEntitlement: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        activateEntitlementResponse.decode.bind(activateEntitlementResponse),
        activateEntitlementMetadata.decode.bind(activateEntitlementMetadata)
      ),
      transferEntitlements: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        transferEntitlementsResponse.decode.bind(transferEntitlementsResponse),
        transferEntitlementsMetadata.decode.bind(transferEntitlementsMetadata)
      ),
      transferEntitlementsToGoogle: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        transferEntitlementsToGoogleResponse.decode.bind(
          transferEntitlementsToGoogleResponse
        ),
        transferEntitlementsToGoogleMetadata.decode.bind(
          transferEntitlementsToGoogleMetadata
        )
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.channel.v1.CloudChannelService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.cloudChannelServiceStub) {
      return this.cloudChannelServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.channel.v1.CloudChannelService.
    this.cloudChannelServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.channel.v1.CloudChannelService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.channel.v1.CloudChannelService,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const cloudChannelServiceStubMethods = [
      'listCustomers',
      'getCustomer',
      'checkCloudIdentityAccountsExist',
      'createCustomer',
      'updateCustomer',
      'deleteCustomer',
      'importCustomer',
      'provisionCloudIdentity',
      'listEntitlements',
      'listTransferableSkus',
      'listTransferableOffers',
      'getEntitlement',
      'createEntitlement',
      'changeParameters',
      'changeRenewalSettings',
      'changeOffer',
      'startPaidService',
      'suspendEntitlement',
      'cancelEntitlement',
      'activateEntitlement',
      'transferEntitlements',
      'transferEntitlementsToGoogle',
      'listChannelPartnerLinks',
      'getChannelPartnerLink',
      'createChannelPartnerLink',
      'updateChannelPartnerLink',
      'getCustomerRepricingConfig',
      'listCustomerRepricingConfigs',
      'createCustomerRepricingConfig',
      'updateCustomerRepricingConfig',
      'deleteCustomerRepricingConfig',
      'getChannelPartnerRepricingConfig',
      'listChannelPartnerRepricingConfigs',
      'createChannelPartnerRepricingConfig',
      'updateChannelPartnerRepricingConfig',
      'deleteChannelPartnerRepricingConfig',
      'lookupOffer',
      'listProducts',
      'listSkus',
      'listOffers',
      'listPurchasableSkus',
      'listPurchasableOffers',
      'registerSubscriber',
      'unregisterSubscriber',
      'listSubscribers',
    ];
    for (const methodName of cloudChannelServiceStubMethods) {
      const callPromise = this.cloudChannelServiceStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.cloudChannelServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'cloudchannel.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'cloudchannel.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/apps.order'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Returns the requested {@link google.cloud.channel.v1.Customer|Customer}
   * resource.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The customer resource doesn't exist. Usually the result of an
   * invalid name parameter.
   *
   * Return value:
   * The {@link google.cloud.channel.v1.Customer|Customer} resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the customer to retrieve.
   *   Name uses the format: accounts/{account_id}/customers/{customer_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Customer]{@link google.cloud.channel.v1.Customer}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.get_customer.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_GetCustomer_async
   */
  getCustomer(
    request?: protos.google.cloud.channel.v1.IGetCustomerRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IGetCustomerRequest | undefined,
      {} | undefined
    ]
  >;
  getCustomer(
    request: protos.google.cloud.channel.v1.IGetCustomerRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IGetCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getCustomer(
    request: protos.google.cloud.channel.v1.IGetCustomerRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IGetCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getCustomer(
    request?: protos.google.cloud.channel.v1.IGetCustomerRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.ICustomer,
          protos.google.cloud.channel.v1.IGetCustomerRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IGetCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IGetCustomerRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getCustomer(request, options, callback);
  }
  /**
   * Confirms the existence of Cloud Identity accounts based on the domain and
   * if the Cloud Identity accounts are owned by the reseller.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * INVALID_VALUE: Invalid domain value in the request.
   *
   * Return value:
   * A list of
   * {@link google.cloud.channel.v1.CloudIdentityCustomerAccount|CloudIdentityCustomerAccount}
   * resources for the domain (may be empty)
   *
   * Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if
   * no
   * {@link google.cloud.channel.v1.CloudIdentityCustomerAccount|CloudIdentityCustomerAccount}
   * resources match the domain.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The reseller account's resource name.
   *   Parent uses the format: accounts/{account_id}
   * @param {string} request.domain
   *   Required. Domain to fetch for Cloud Identity account customer.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CheckCloudIdentityAccountsExistResponse]{@link google.cloud.channel.v1.CheckCloudIdentityAccountsExistResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.check_cloud_identity_accounts_exist.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_CheckCloudIdentityAccountsExist_async
   */
  checkCloudIdentityAccountsExist(
    request?: protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse,
      (
        | protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  checkCloudIdentityAccountsExist(
    request: protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse,
      | protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  checkCloudIdentityAccountsExist(
    request: protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse,
      | protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  checkCloudIdentityAccountsExist(
    request?: protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse,
          | protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse,
      | protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistResponse,
      (
        | protos.google.cloud.channel.v1.ICheckCloudIdentityAccountsExistRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.checkCloudIdentityAccountsExist(
      request,
      options,
      callback
    );
  }
  /**
   * Creates a new {@link google.cloud.channel.v1.Customer|Customer} resource under
   * the reseller or distributor account.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT:
   *     * Required request parameters are missing or invalid.
   *     * Domain field value doesn't match the primary email domain.
   *
   * Return value:
   * The newly created {@link google.cloud.channel.v1.Customer|Customer} resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of reseller account in which to create the
   *   customer. Parent uses the format: accounts/{account_id}
   * @param {google.cloud.channel.v1.Customer} request.customer
   *   Required. The customer to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Customer]{@link google.cloud.channel.v1.Customer}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.create_customer.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_CreateCustomer_async
   */
  createCustomer(
    request?: protos.google.cloud.channel.v1.ICreateCustomerRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.ICreateCustomerRequest | undefined,
      {} | undefined
    ]
  >;
  createCustomer(
    request: protos.google.cloud.channel.v1.ICreateCustomerRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.ICreateCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createCustomer(
    request: protos.google.cloud.channel.v1.ICreateCustomerRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.ICreateCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createCustomer(
    request?: protos.google.cloud.channel.v1.ICreateCustomerRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.ICustomer,
          | protos.google.cloud.channel.v1.ICreateCustomerRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.ICreateCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.ICreateCustomerRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createCustomer(request, options, callback);
  }
  /**
   * Updates an existing {@link google.cloud.channel.v1.Customer|Customer} resource
   * for the reseller or distributor.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: No {@link google.cloud.channel.v1.Customer|Customer} resource found
   * for the name in the request.
   *
   * Return value:
   * The updated {@link google.cloud.channel.v1.Customer|Customer} resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.channel.v1.Customer} request.customer
   *   Required. New contents of the customer.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The update mask that applies to the resource.
   *   Optional.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Customer]{@link google.cloud.channel.v1.Customer}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.update_customer.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_UpdateCustomer_async
   */
  updateCustomer(
    request?: protos.google.cloud.channel.v1.IUpdateCustomerRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IUpdateCustomerRequest | undefined,
      {} | undefined
    ]
  >;
  updateCustomer(
    request: protos.google.cloud.channel.v1.IUpdateCustomerRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IUpdateCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateCustomer(
    request: protos.google.cloud.channel.v1.IUpdateCustomerRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IUpdateCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateCustomer(
    request?: protos.google.cloud.channel.v1.IUpdateCustomerRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.ICustomer,
          | protos.google.cloud.channel.v1.IUpdateCustomerRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IUpdateCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IUpdateCustomerRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'customer.name': request.customer!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateCustomer(request, options, callback);
  }
  /**
   * Deletes the given {@link google.cloud.channel.v1.Customer|Customer} permanently.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The account making the request does not own
   * this customer.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * FAILED_PRECONDITION: The customer has existing entitlements.
   * * NOT_FOUND: No {@link google.cloud.channel.v1.Customer|Customer} resource found
   * for the name in the request.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the customer to delete.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.delete_customer.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_DeleteCustomer_async
   */
  deleteCustomer(
    request?: protos.google.cloud.channel.v1.IDeleteCustomerRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.channel.v1.IDeleteCustomerRequest | undefined,
      {} | undefined
    ]
  >;
  deleteCustomer(
    request: protos.google.cloud.channel.v1.IDeleteCustomerRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.channel.v1.IDeleteCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCustomer(
    request: protos.google.cloud.channel.v1.IDeleteCustomerRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.channel.v1.IDeleteCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCustomer(
    request?: protos.google.cloud.channel.v1.IDeleteCustomerRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.channel.v1.IDeleteCustomerRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.channel.v1.IDeleteCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.channel.v1.IDeleteCustomerRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteCustomer(request, options, callback);
  }
  /**
   * Imports a {@link google.cloud.channel.v1.Customer|Customer} from the Cloud
   * Identity associated with the provided Cloud Identity ID or domain before a
   * TransferEntitlements call. If a linked Customer already exists and
   * overwrite_if_exists is true, it will update that Customer's data.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * NOT_FOUND: Cloud Identity doesn't exist or was deleted.
   * * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
   * expired or invalid.
   * * ALREADY_EXISTS: A customer already exists and has conflicting critical
   * fields. Requires an overwrite.
   *
   * Return value:
   * The {@link google.cloud.channel.v1.Customer|Customer}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.domain
   *   Required. Customer domain.
   * @param {string} request.cloudIdentityId
   *   Required. Customer's Cloud Identity ID
   * @param {string} request.parent
   *   Required. The resource name of the reseller's account.
   *   Parent takes the format: accounts/{account_id} or
   *   accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
   * @param {string} [request.authToken]
   *   Optional. The super admin of the resold customer generates this token to
   *   authorize a reseller to access their Cloud Identity and purchase
   *   entitlements on their behalf. You can omit this token after authorization.
   *   See https://support.google.com/a/answer/7643790 for more details.
   * @param {boolean} request.overwriteIfExists
   *   Required. Choose to overwrite an existing customer if found.
   *   This must be set to true if there is an existing customer with a
   *   conflicting region code or domain.
   * @param {string} [request.channelPartnerId]
   *   Optional. Cloud Identity ID of a channel partner who will be the direct
   *   reseller for the customer's order. This field is required for 2-tier
   *   transfer scenarios and can be provided via the request Parent binding as
   *   well.
   * @param {string} [request.customer]
   *   Optional. Specifies the customer that will receive imported Cloud Identity
   *   information.
   *   Format: accounts/{account_id}/customers/{customer_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Customer]{@link google.cloud.channel.v1.Customer}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.import_customer.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ImportCustomer_async
   */
  importCustomer(
    request?: protos.google.cloud.channel.v1.IImportCustomerRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IImportCustomerRequest | undefined,
      {} | undefined
    ]
  >;
  importCustomer(
    request: protos.google.cloud.channel.v1.IImportCustomerRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IImportCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  importCustomer(
    request: protos.google.cloud.channel.v1.IImportCustomerRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IImportCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  importCustomer(
    request?: protos.google.cloud.channel.v1.IImportCustomerRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.ICustomer,
          | protos.google.cloud.channel.v1.IImportCustomerRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IImportCustomerRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer,
      protos.google.cloud.channel.v1.IImportCustomerRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.importCustomer(request, options, callback);
  }
  /**
   * Returns the requested {@link google.cloud.channel.v1.Entitlement|Entitlement}
   * resource.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The customer entitlement was not found.
   *
   * Return value:
   * The requested {@link google.cloud.channel.v1.Entitlement|Entitlement} resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the entitlement to retrieve.
   *   Name uses the format:
   *   accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Entitlement]{@link google.cloud.channel.v1.Entitlement}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.get_entitlement.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_GetEntitlement_async
   */
  getEntitlement(
    request?: protos.google.cloud.channel.v1.IGetEntitlementRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IEntitlement,
      protos.google.cloud.channel.v1.IGetEntitlementRequest | undefined,
      {} | undefined
    ]
  >;
  getEntitlement(
    request: protos.google.cloud.channel.v1.IGetEntitlementRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IEntitlement,
      protos.google.cloud.channel.v1.IGetEntitlementRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getEntitlement(
    request: protos.google.cloud.channel.v1.IGetEntitlementRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IEntitlement,
      protos.google.cloud.channel.v1.IGetEntitlementRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getEntitlement(
    request?: protos.google.cloud.channel.v1.IGetEntitlementRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IEntitlement,
          | protos.google.cloud.channel.v1.IGetEntitlementRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IEntitlement,
      protos.google.cloud.channel.v1.IGetEntitlementRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IEntitlement,
      protos.google.cloud.channel.v1.IGetEntitlementRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getEntitlement(request, options, callback);
  }
  /**
   * Returns the requested
   * {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink} resource.
   * You must be a distributor to call this method.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: ChannelPartnerLink resource not found because of an
   * invalid channel partner link name.
   *
   * Return value:
   * The {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink}
   * resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the channel partner link to retrieve.
   *   Name uses the format: accounts/{account_id}/channelPartnerLinks/{id}
   *   where {id} is the Cloud Identity ID of the partner.
   * @param {google.cloud.channel.v1.ChannelPartnerLinkView} [request.view]
   *   Optional. The level of granularity the ChannelPartnerLink will display.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ChannelPartnerLink]{@link google.cloud.channel.v1.ChannelPartnerLink}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.get_channel_partner_link.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_GetChannelPartnerLink_async
   */
  getChannelPartnerLink(
    request?: protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest | undefined,
      {} | undefined
    ]
  >;
  getChannelPartnerLink(
    request: protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      | protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getChannelPartnerLink(
    request: protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      | protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getChannelPartnerLink(
    request?: protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IChannelPartnerLink,
          | protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      | protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      protos.google.cloud.channel.v1.IGetChannelPartnerLinkRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getChannelPartnerLink(request, options, callback);
  }
  /**
   * Initiates a channel partner link between a distributor and a reseller, or
   * between resellers in an n-tier reseller channel.
   * Invited partners need to follow the invite_link_uri provided in the
   * response to accept. After accepting the invitation, a link is set up
   * between the two parties.
   * You must be a distributor to call this method.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already
   * exists.
   * * NOT_FOUND: No Cloud Identity customer exists for provided domain.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The new {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink}
   * resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Create a channel partner link for the provided reseller account's
   *   resource name.
   *   Parent uses the format: accounts/{account_id}
   * @param {google.cloud.channel.v1.ChannelPartnerLink} request.channelPartnerLink
   *   Required. The channel partner link to create.
   *   Either channel_partner_link.reseller_cloud_identity_id or domain can be
   *   used to create a link.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ChannelPartnerLink]{@link google.cloud.channel.v1.ChannelPartnerLink}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.create_channel_partner_link.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_CreateChannelPartnerLink_async
   */
  createChannelPartnerLink(
    request?: protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      (
        | protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createChannelPartnerLink(
    request: protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      | protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createChannelPartnerLink(
    request: protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      | protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createChannelPartnerLink(
    request?: protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IChannelPartnerLink,
          | protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      | protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      (
        | protos.google.cloud.channel.v1.ICreateChannelPartnerLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createChannelPartnerLink(
      request,
      options,
      callback
    );
  }
  /**
   * Updates a channel partner link. Distributors call this method to change a
   * link's status. For example, to suspend a partner link.
   * You must be a distributor to call this method.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT:
   *     * Required request parameters are missing or invalid.
   *     * Link state cannot change from invited to active or suspended.
   *     * Cannot send reseller_cloud_identity_id, invite_url, or name in update
   *     mask.
   * * NOT_FOUND: ChannelPartnerLink resource not found.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The updated
   * {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink} resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the channel partner link to cancel.
   *   Name uses the format: accounts/{account_id}/channelPartnerLinks/{id}
   *   where {id} is the Cloud Identity ID of the partner.
   * @param {google.cloud.channel.v1.ChannelPartnerLink} request.channelPartnerLink
   *   Required. The channel partner link to update. Only
   *   channel_partner_link.link_state is allowed for updates.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. The update mask that applies to the resource.
   *   The only allowable value for an update mask is
   *   channel_partner_link.link_state.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ChannelPartnerLink]{@link google.cloud.channel.v1.ChannelPartnerLink}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.update_channel_partner_link.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_UpdateChannelPartnerLink_async
   */
  updateChannelPartnerLink(
    request?: protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      (
        | protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateChannelPartnerLink(
    request: protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      | protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateChannelPartnerLink(
    request: protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      | protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateChannelPartnerLink(
    request?: protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IChannelPartnerLink,
          | protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      | protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerLink,
      (
        | protos.google.cloud.channel.v1.IUpdateChannelPartnerLinkRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateChannelPartnerLink(
      request,
      options,
      callback
    );
  }
  /**
   * Gets information about how a Reseller modifies their bill before sending
   * it to a Customer.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * NOT_FOUND: The
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * was not found.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * resource, otherwise returns an error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the CustomerRepricingConfig.
   *   Format:
   *   accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CustomerRepricingConfig]{@link google.cloud.channel.v1.CustomerRepricingConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.get_customer_repricing_config.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_GetCustomerRepricingConfig_async
   */
  getCustomerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getCustomerRepricingConfig(
    request: protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      | protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCustomerRepricingConfig(
    request: protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      | protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCustomerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.ICustomerRepricingConfig,
          | protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      | protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.IGetCustomerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getCustomerRepricingConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Creates a CustomerRepricingConfig. Call this method to set modifications
   * for a specific customer's bill. You can only create configs if the
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}
   * is a future month. If needed, you can create a config for the current
   * month, with some restrictions.
   *
   * When creating a config for a future month, make sure there are no existing
   * configs for that
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}.
   *
   * The following restrictions are for creating configs in the current month.
   *
   * * This functionality is reserved for recovering from an erroneous config,
   * and should not be used for regular business cases.
   * * The new config will not modify exports used with other configs.
   * Changes to the config may be immediate, but may take up to 24 hours.
   * * There is a limit of ten configs for any
   * {@link google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement|RepricingConfig.EntitlementGranularity.entitlement}
   * or
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}.
   * * The contained
   * {@link google.cloud.channel.v1.CustomerRepricingConfig.repricing_config|CustomerRepricingConfig.repricing_config}
   * vaule must be different from the value used in the current config for a
   * {@link google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement|RepricingConfig.EntitlementGranularity.entitlement}.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * INVALID_ARGUMENT: Missing or invalid required parameters in the
   * request. Also displays if the updated config is for the current month or
   * past months.
   * * NOT_FOUND: The
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the updated
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * resource, otherwise returns an error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the customer that will receive this
   *   repricing config. Parent uses the format:
   *   accounts/{account_id}/customers/{customer_id}
   * @param {google.cloud.channel.v1.CustomerRepricingConfig} request.customerRepricingConfig
   *   Required. The CustomerRepricingConfig object to update.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CustomerRepricingConfig]{@link google.cloud.channel.v1.CustomerRepricingConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.create_customer_repricing_config.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_CreateCustomerRepricingConfig_async
   */
  createCustomerRepricingConfig(
    request?: protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createCustomerRepricingConfig(
    request: protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      | protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createCustomerRepricingConfig(
    request: protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      | protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createCustomerRepricingConfig(
    request?: protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.ICustomerRepricingConfig,
          | protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      | protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.ICreateCustomerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createCustomerRepricingConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Updates a CustomerRepricingConfig. Call this method to set modifications
   * for a specific customer's bill. This method overwrites the existing
   * CustomerRepricingConfig.
   *
   * You can only update configs if the
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}
   * is a future month. To make changes to configs for the current month, use
   * {@link google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig|CreateCustomerRepricingConfig},
   * taking note of its restrictions. You cannot update the
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}.
   *
   * When updating a config in the future:
   *
   * * This config must already exist.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * INVALID_ARGUMENT: Missing or invalid required parameters in the
   * request. Also displays if the updated config is for the current month or
   * past months.
   * * NOT_FOUND: The
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the updated
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * resource, otherwise returns an error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.channel.v1.CustomerRepricingConfig} request.customerRepricingConfig
   *   Required. The CustomerRepricingConfig object to update.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CustomerRepricingConfig]{@link google.cloud.channel.v1.CustomerRepricingConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.update_customer_repricing_config.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_UpdateCustomerRepricingConfig_async
   */
  updateCustomerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateCustomerRepricingConfig(
    request: protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      | protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateCustomerRepricingConfig(
    request: protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      | protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateCustomerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.ICustomerRepricingConfig,
          | protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      | protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.IUpdateCustomerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'customer_repricing_config.name':
          request.customerRepricingConfig!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateCustomerRepricingConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Deletes the given
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * permanently. You can only delete configs if their
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}
   * is set to a date after the current month.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The account making the request does not own
   * this customer.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * FAILED_PRECONDITION: The
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * is active or in the past.
   * * NOT_FOUND: No
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * found for the name in the request.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the customer repricing config rule to
   *   delete. Format:
   *   accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.delete_customer_repricing_config.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_DeleteCustomerRepricingConfig_async
   */
  deleteCustomerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteCustomerRepricingConfig(
    request: protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCustomerRepricingConfig(
    request: protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCustomerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.channel.v1.IDeleteCustomerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteCustomerRepricingConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Gets information about how a Distributor modifies their bill before sending
   * it to a ChannelPartner.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * NOT_FOUND: The
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * was not found.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * resource, otherwise returns an error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the ChannelPartnerRepricingConfig
   *   Format:
   *   accounts/{account_id}/channelPartnerLinks/{channel_partner_id}/channelPartnerRepricingConfigs/{id}.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ChannelPartnerRepricingConfig]{@link google.cloud.channel.v1.ChannelPartnerRepricingConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.get_channel_partner_repricing_config.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_GetChannelPartnerRepricingConfig_async
   */
  getChannelPartnerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getChannelPartnerRepricingConfig(
    request: protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      | protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getChannelPartnerRepricingConfig(
    request: protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      | protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getChannelPartnerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
          | protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      | protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.IGetChannelPartnerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getChannelPartnerRepricingConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Creates a ChannelPartnerRepricingConfig. Call this method to set
   * modifications for a specific ChannelPartner's bill. You can only create
   * configs if the
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}
   * is a future month. If needed, you can create a config for the current
   * month, with some restrictions.
   *
   * When creating a config for a future month, make sure there are no existing
   * configs for that
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}.
   *
   * The following restrictions are for creating configs in the current month.
   *
   * * This functionality is reserved for recovering from an erroneous config,
   * and should not be used for regular business cases.
   * * The new config will not modify exports used with other configs.
   * Changes to the config may be immediate, but may take up to 24 hours.
   * * There is a limit of ten configs for any ChannelPartner or
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}.
   * * The contained
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig.repricing_config|ChannelPartnerRepricingConfig.repricing_config}
   * vaule must be different from the value used in the current config for a
   * ChannelPartner.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * INVALID_ARGUMENT: Missing or invalid required parameters in the
   * request. Also displays if the updated config is for the current month or
   * past months.
   * * NOT_FOUND: The
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the updated
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * resource, otherwise returns an error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the ChannelPartner that will receive the
   *   repricing config. Parent uses the format:
   *   accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
   * @param {google.cloud.channel.v1.ChannelPartnerRepricingConfig} request.channelPartnerRepricingConfig
   *   Required. The ChannelPartnerRepricingConfig object to update.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ChannelPartnerRepricingConfig]{@link google.cloud.channel.v1.ChannelPartnerRepricingConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.create_channel_partner_repricing_config.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_CreateChannelPartnerRepricingConfig_async
   */
  createChannelPartnerRepricingConfig(
    request?: protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createChannelPartnerRepricingConfig(
    request: protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      | protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createChannelPartnerRepricingConfig(
    request: protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      | protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createChannelPartnerRepricingConfig(
    request?: protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
          | protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      | protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.ICreateChannelPartnerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createChannelPartnerRepricingConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Updates a ChannelPartnerRepricingConfig. Call this method to set
   * modifications for a specific ChannelPartner's bill. This method overwrites
   * the existing CustomerRepricingConfig.
   *
   * You can only update configs if the
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}
   * is a future month. To make changes to configs for the current month, use
   * {@link google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig|CreateChannelPartnerRepricingConfig},
   * taking note of its restrictions. You cannot update the
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}.
   *
   * When updating a config in the future:
   *
   * * This config must already exist.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * INVALID_ARGUMENT: Missing or invalid required parameters in the
   * request. Also displays if the updated config is for the current month or
   * past months.
   * * NOT_FOUND: The
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the updated
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * resource, otherwise returns an error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.channel.v1.ChannelPartnerRepricingConfig} request.channelPartnerRepricingConfig
   *   Required. The ChannelPartnerRepricingConfig object to update.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ChannelPartnerRepricingConfig]{@link google.cloud.channel.v1.ChannelPartnerRepricingConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.update_channel_partner_repricing_config.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_UpdateChannelPartnerRepricingConfig_async
   */
  updateChannelPartnerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateChannelPartnerRepricingConfig(
    request: protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      | protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateChannelPartnerRepricingConfig(
    request: protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      | protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateChannelPartnerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
          | protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      | protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig,
      (
        | protos.google.cloud.channel.v1.IUpdateChannelPartnerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'channel_partner_repricing_config.name':
          request.channelPartnerRepricingConfig!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateChannelPartnerRepricingConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Deletes the given
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * permanently. You can only delete configs if their
   * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}
   * is set to a date after the current month.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The account making the request does not own
   * this customer.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * FAILED_PRECONDITION: The
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * is active or in the past.
   * * NOT_FOUND: No
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * found for the name in the request.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the channel partner repricing config rule to
   *   delete.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.delete_channel_partner_repricing_config.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_DeleteChannelPartnerRepricingConfig_async
   */
  deleteChannelPartnerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteChannelPartnerRepricingConfig(
    request: protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteChannelPartnerRepricingConfig(
    request: protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteChannelPartnerRepricingConfig(
    request?: protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.channel.v1.IDeleteChannelPartnerRepricingConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteChannelPartnerRepricingConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Returns the requested {@link google.cloud.channel.v1.Offer|Offer} resource.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The entitlement doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement or offer was not found.
   *
   * Return value:
   * The {@link google.cloud.channel.v1.Offer|Offer} resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.entitlement
   *   Required. The resource name of the entitlement to retrieve the Offer.
   *   Entitlement uses the format:
   *   accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Offer]{@link google.cloud.channel.v1.Offer}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.lookup_offer.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_LookupOffer_async
   */
  lookupOffer(
    request?: protos.google.cloud.channel.v1.ILookupOfferRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IOffer,
      protos.google.cloud.channel.v1.ILookupOfferRequest | undefined,
      {} | undefined
    ]
  >;
  lookupOffer(
    request: protos.google.cloud.channel.v1.ILookupOfferRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IOffer,
      protos.google.cloud.channel.v1.ILookupOfferRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  lookupOffer(
    request: protos.google.cloud.channel.v1.ILookupOfferRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IOffer,
      protos.google.cloud.channel.v1.ILookupOfferRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  lookupOffer(
    request?: protos.google.cloud.channel.v1.ILookupOfferRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IOffer,
          protos.google.cloud.channel.v1.ILookupOfferRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IOffer,
      protos.google.cloud.channel.v1.ILookupOfferRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IOffer,
      protos.google.cloud.channel.v1.ILookupOfferRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        entitlement: request.entitlement ?? '',
      });
    this.initialize();
    return this.innerApiCalls.lookupOffer(request, options, callback);
  }
  /**
   * Registers a service account with subscriber privileges on the Cloud Pub/Sub
   * topic for this Channel Services account. After you create a
   * subscriber, you get the events through
   * {@link google.cloud.channel.v1.SubscriberEvent|SubscriberEvent}
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request and the
   * provided reseller account are different, or the impersonated user
   * is not a super admin.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The topic name with the registered service email address.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.account
   *   Required. Resource name of the account.
   * @param {string} request.serviceAccount
   *   Required. Service account that provides subscriber access to the registered
   *   topic.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [RegisterSubscriberResponse]{@link google.cloud.channel.v1.RegisterSubscriberResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.register_subscriber.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_RegisterSubscriber_async
   */
  registerSubscriber(
    request?: protos.google.cloud.channel.v1.IRegisterSubscriberRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IRegisterSubscriberResponse,
      protos.google.cloud.channel.v1.IRegisterSubscriberRequest | undefined,
      {} | undefined
    ]
  >;
  registerSubscriber(
    request: protos.google.cloud.channel.v1.IRegisterSubscriberRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IRegisterSubscriberResponse,
      | protos.google.cloud.channel.v1.IRegisterSubscriberRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  registerSubscriber(
    request: protos.google.cloud.channel.v1.IRegisterSubscriberRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IRegisterSubscriberResponse,
      | protos.google.cloud.channel.v1.IRegisterSubscriberRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  registerSubscriber(
    request?: protos.google.cloud.channel.v1.IRegisterSubscriberRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IRegisterSubscriberResponse,
          | protos.google.cloud.channel.v1.IRegisterSubscriberRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IRegisterSubscriberResponse,
      | protos.google.cloud.channel.v1.IRegisterSubscriberRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IRegisterSubscriberResponse,
      protos.google.cloud.channel.v1.IRegisterSubscriberRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        account: request.account ?? '',
      });
    this.initialize();
    return this.innerApiCalls.registerSubscriber(request, options, callback);
  }
  /**
   * Unregisters a service account with subscriber privileges on the Cloud
   * Pub/Sub topic created for this Channel Services account. If there are no
   * service accounts left with subscriber privileges, this deletes the topic.
   * You can call ListSubscribers to check for these accounts.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request and the
   * provided reseller account are different, or the impersonated user
   * is not a super admin.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The topic resource doesn't exist.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The topic name that unregistered the service email address.
   * Returns a success response if the service email address wasn't registered
   * with the topic.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.account
   *   Required. Resource name of the account.
   * @param {string} request.serviceAccount
   *   Required. Service account to unregister from subscriber access to the
   *   topic.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [UnregisterSubscriberResponse]{@link google.cloud.channel.v1.UnregisterSubscriberResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.unregister_subscriber.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_UnregisterSubscriber_async
   */
  unregisterSubscriber(
    request?: protos.google.cloud.channel.v1.IUnregisterSubscriberRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IUnregisterSubscriberResponse,
      protos.google.cloud.channel.v1.IUnregisterSubscriberRequest | undefined,
      {} | undefined
    ]
  >;
  unregisterSubscriber(
    request: protos.google.cloud.channel.v1.IUnregisterSubscriberRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.channel.v1.IUnregisterSubscriberResponse,
      | protos.google.cloud.channel.v1.IUnregisterSubscriberRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  unregisterSubscriber(
    request: protos.google.cloud.channel.v1.IUnregisterSubscriberRequest,
    callback: Callback<
      protos.google.cloud.channel.v1.IUnregisterSubscriberResponse,
      | protos.google.cloud.channel.v1.IUnregisterSubscriberRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  unregisterSubscriber(
    request?: protos.google.cloud.channel.v1.IUnregisterSubscriberRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.channel.v1.IUnregisterSubscriberResponse,
          | protos.google.cloud.channel.v1.IUnregisterSubscriberRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.channel.v1.IUnregisterSubscriberResponse,
      | protos.google.cloud.channel.v1.IUnregisterSubscriberRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IUnregisterSubscriberResponse,
      protos.google.cloud.channel.v1.IUnregisterSubscriberRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        account: request.account ?? '',
      });
    this.initialize();
    return this.innerApiCalls.unregisterSubscriber(request, options, callback);
  }

  /**
   * Creates a Cloud Identity for the given customer using the customer's
   * information, or the information provided here.
   *
   * Possible error codes:
   *
   * *  PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * *  NOT_FOUND: The customer was not found.
   * *  ALREADY_EXISTS: The customer's primary email already exists. Retry
   *    after changing the customer's primary contact email.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata contains an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.customer
   *   Required. Resource name of the customer.
   *   Format: accounts/{account_id}/customers/{customer_id}
   * @param {google.cloud.channel.v1.CloudIdentityInfo} request.cloudIdentityInfo
   *   CloudIdentity-specific customer information.
   * @param {google.cloud.channel.v1.AdminUser} request.user
   *   Admin user information.
   * @param {boolean} request.validateOnly
   *   Validate the request and preview the review, but do not post it.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.provision_cloud_identity.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ProvisionCloudIdentity_async
   */
  provisionCloudIdentity(
    request?: protos.google.cloud.channel.v1.IProvisionCloudIdentityRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.ICustomer,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  provisionCloudIdentity(
    request: protos.google.cloud.channel.v1.IProvisionCloudIdentityRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.ICustomer,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  provisionCloudIdentity(
    request: protos.google.cloud.channel.v1.IProvisionCloudIdentityRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.ICustomer,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  provisionCloudIdentity(
    request?: protos.google.cloud.channel.v1.IProvisionCloudIdentityRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.channel.v1.ICustomer,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.channel.v1.ICustomer,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.ICustomer,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        customer: request.customer ?? '',
      });
    this.initialize();
    return this.innerApiCalls.provisionCloudIdentity(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `provisionCloudIdentity()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.provision_cloud_identity.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ProvisionCloudIdentity_async
   */
  async checkProvisionCloudIdentityProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.channel.v1.Customer,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.provisionCloudIdentity,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.channel.v1.Customer,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Creates an entitlement for a customer.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT:
   *     * Required request parameters are missing or invalid.
   *     * There is already a customer entitlement for a SKU from the same
   *     product family.
   * * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact
   * Google Channel support for further troubleshooting.
   * * NOT_FOUND: The customer or offer resource was not found.
   * * ALREADY_EXISTS:
   *     * The SKU was already purchased for the customer.
   *     * The customer's primary email already exists. Retry
   *     after changing the customer's primary contact email.
   * * CONDITION_NOT_MET or FAILED_PRECONDITION:
   *     * The domain required for purchasing a SKU has not been verified.
   *     * A pre-requisite SKU required to purchase an Add-On SKU is missing.
   *     For example, Google Workspace Business Starter is required to purchase
   *     Vault or Drive.
   *     * (Developer accounts only) Reseller and resold domain must meet the
   *     following naming requirements:
   *         * Domain names must start with goog-test.
   *         * Domain names must include the reseller domain.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller's customer account in which to
   *   create the entitlement. Parent uses the format:
   *   accounts/{account_id}/customers/{customer_id}
   * @param {google.cloud.channel.v1.Entitlement} request.entitlement
   *   Required. The entitlement to create.
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.create_entitlement.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_CreateEntitlement_async
   */
  createEntitlement(
    request?: protos.google.cloud.channel.v1.ICreateEntitlementRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  createEntitlement(
    request: protos.google.cloud.channel.v1.ICreateEntitlementRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createEntitlement(
    request: protos.google.cloud.channel.v1.ICreateEntitlementRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createEntitlement(
    request?: protos.google.cloud.channel.v1.ICreateEntitlementRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.channel.v1.IEntitlement,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createEntitlement(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createEntitlement()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.create_entitlement.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_CreateEntitlement_async
   */
  async checkCreateEntitlementProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createEntitlement,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Change parameters of the entitlement.
   *
   * An entitlement update is a long-running operation and it updates the
   * entitlement as a result of fulfillment.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * For example, the number of seats being changed is greater than the allowed
   * number of max seats, or decreasing seats for a commitment based plan.
   * * NOT_FOUND: Entitlement resource not found.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the entitlement to update.
   *   Name uses the format:
   *   accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @param {number[]} request.parameters
   *   Required. Entitlement parameters to update. You can only change editable
   *   parameters.
   *
   *   To view the available Parameters for a request, refer to the
   *   {@link google.cloud.channel.v1.Offer.parameter_definitions|Offer.parameter_definitions}
   *   from the desired offer.
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {string} [request.purchaseOrderId]
   *   Optional. Purchase order ID provided by the reseller.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.change_parameters.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ChangeParameters_async
   */
  changeParameters(
    request?: protos.google.cloud.channel.v1.IChangeParametersRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  changeParameters(
    request: protos.google.cloud.channel.v1.IChangeParametersRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  changeParameters(
    request: protos.google.cloud.channel.v1.IChangeParametersRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  changeParameters(
    request?: protos.google.cloud.channel.v1.IChangeParametersRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.channel.v1.IEntitlement,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.changeParameters(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `changeParameters()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.change_parameters.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ChangeParameters_async
   */
  async checkChangeParametersProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.changeParameters,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Updates the renewal settings for an existing customer entitlement.
   *
   * An entitlement update is a long-running operation and it updates the
   * entitlement as a result of fulfillment.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a
   * commitment plan. Can't enable or disable renewals for non-commitment plans.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   *   Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the entitlement to update.
   *   Name uses the format:
   *   accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @param {google.cloud.channel.v1.RenewalSettings} request.renewalSettings
   *   Required. New renewal settings.
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.change_renewal_settings.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ChangeRenewalSettings_async
   */
  changeRenewalSettings(
    request?: protos.google.cloud.channel.v1.IChangeRenewalSettingsRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  changeRenewalSettings(
    request: protos.google.cloud.channel.v1.IChangeRenewalSettingsRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  changeRenewalSettings(
    request: protos.google.cloud.channel.v1.IChangeRenewalSettingsRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  changeRenewalSettings(
    request?: protos.google.cloud.channel.v1.IChangeRenewalSettingsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.channel.v1.IEntitlement,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.changeRenewalSettings(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `changeRenewalSettings()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.change_renewal_settings.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ChangeRenewalSettings_async
   */
  async checkChangeRenewalSettingsProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.changeRenewalSettings,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Updates the Offer for an existing customer entitlement.
   *
   * An entitlement update is a long-running operation and it updates the
   * entitlement as a result of fulfillment.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Offer or Entitlement resource not found.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the entitlement to update.
   *   Name uses the format:
   *   accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @param {string} request.offer
   *   Required. New Offer.
   *   Format: accounts/{account_id}/offers/{offer_id}.
   * @param {number[]} [request.parameters]
   *   Optional. Parameters needed to purchase the Offer. To view the available
   *   Parameters refer to the
   *   {@link google.cloud.channel.v1.Offer.parameter_definitions|Offer.parameter_definitions}
   *   from the desired offer.
   * @param {string} [request.purchaseOrderId]
   *   Optional. Purchase order id provided by the reseller.
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.change_offer.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ChangeOffer_async
   */
  changeOffer(
    request?: protos.google.cloud.channel.v1.IChangeOfferRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  changeOffer(
    request: protos.google.cloud.channel.v1.IChangeOfferRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  changeOffer(
    request: protos.google.cloud.channel.v1.IChangeOfferRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  changeOffer(
    request?: protos.google.cloud.channel.v1.IChangeOfferRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.channel.v1.IEntitlement,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.changeOffer(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `changeOffer()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.change_offer.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ChangeOffer_async
   */
  async checkChangeOfferProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.changeOffer,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Starts paid service for a trial entitlement.
   *
   * Starts paid service for a trial entitlement immediately. This method is
   * only applicable if a plan is set up for a trial entitlement but has some
   * trial days remaining.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for
   * entitlement on trial plans.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the entitlement to start a paid service for.
   *   Name uses the format:
   *   accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.start_paid_service.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_StartPaidService_async
   */
  startPaidService(
    request?: protos.google.cloud.channel.v1.IStartPaidServiceRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  startPaidService(
    request: protos.google.cloud.channel.v1.IStartPaidServiceRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  startPaidService(
    request: protos.google.cloud.channel.v1.IStartPaidServiceRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  startPaidService(
    request?: protos.google.cloud.channel.v1.IStartPaidServiceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.channel.v1.IEntitlement,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.startPaidService(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `startPaidService()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.start_paid_service.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_StartPaidService_async
   */
  async checkStartPaidServiceProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.startPaidService,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Suspends a previously fulfilled entitlement.
   *
   * An entitlement suspension is a long-running operation.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * NOT_ACTIVE: Entitlement is not active.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the entitlement to suspend.
   *   Name uses the format:
   *   accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.suspend_entitlement.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_SuspendEntitlement_async
   */
  suspendEntitlement(
    request?: protos.google.cloud.channel.v1.ISuspendEntitlementRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  suspendEntitlement(
    request: protos.google.cloud.channel.v1.ISuspendEntitlementRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  suspendEntitlement(
    request: protos.google.cloud.channel.v1.ISuspendEntitlementRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  suspendEntitlement(
    request?: protos.google.cloud.channel.v1.ISuspendEntitlementRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.channel.v1.IEntitlement,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.suspendEntitlement(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `suspendEntitlement()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.suspend_entitlement.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_SuspendEntitlement_async
   */
  async checkSuspendEntitlementProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.suspendEntitlement,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Cancels a previously fulfilled entitlement.
   *
   * An entitlement cancellation is a long-running operation.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * FAILED_PRECONDITION: There are Google Cloud projects linked to the
   * Google Cloud entitlement's Cloud Billing subaccount.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google Workspace
   * add-ons, or entitlements for Google Cloud's development platform.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The response will contain
   * google.protobuf.Empty on success. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the entitlement to cancel.
   *   Name uses the format:
   *   accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.cancel_entitlement.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_CancelEntitlement_async
   */
  cancelEntitlement(
    request?: protos.google.cloud.channel.v1.ICancelEntitlementRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  cancelEntitlement(
    request: protos.google.cloud.channel.v1.ICancelEntitlementRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  cancelEntitlement(
    request: protos.google.cloud.channel.v1.ICancelEntitlementRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  cancelEntitlement(
    request?: protos.google.cloud.channel.v1.ICancelEntitlementRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.cancelEntitlement(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `cancelEntitlement()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.cancel_entitlement.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_CancelEntitlement_async
   */
  async checkCancelEntitlementProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.cancelEntitlement,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Activates a previously suspended entitlement. Entitlements suspended for
   * pending ToS acceptance can't be activated using this method.
   *
   * An entitlement activation is a long-running operation and it updates
   * the state of the customer entitlement.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: Entitlement resource not found.
   * * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated
   * suspensions and entitlements that have accepted the TOS.
   * * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE
   * state.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the entitlement to activate.
   *   Name uses the format:
   *   accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.activate_entitlement.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ActivateEntitlement_async
   */
  activateEntitlement(
    request?: protos.google.cloud.channel.v1.IActivateEntitlementRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  activateEntitlement(
    request: protos.google.cloud.channel.v1.IActivateEntitlementRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  activateEntitlement(
    request: protos.google.cloud.channel.v1.IActivateEntitlementRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  activateEntitlement(
    request?: protos.google.cloud.channel.v1.IActivateEntitlementRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.channel.v1.IEntitlement,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.IEntitlement,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.activateEntitlement(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `activateEntitlement()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.activate_entitlement.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ActivateEntitlement_async
   */
  async checkActivateEntitlementProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.activateEntitlement,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.channel.v1.Entitlement,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Transfers customer entitlements to new reseller.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The customer or offer resource was not found.
   * * ALREADY_EXISTS: The SKU was already transferred for the customer.
   * * CONDITION_NOT_MET or FAILED_PRECONDITION:
   *     * The SKU requires domain verification to transfer, but the domain is
   *     not verified.
   *     * An Add-On SKU (example, Vault or Drive) is missing the
   *     pre-requisite SKU (example, G Suite Basic).
   *     * (Developer accounts only) Reseller and resold domain must meet the
   *     following naming requirements:
   *         * Domain names must start with goog-test.
   *         * Domain names must include the reseller domain.
   *     * Specify all transferring entitlements.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller's customer account that will
   *   receive transferred entitlements. Parent uses the format:
   *   accounts/{account_id}/customers/{customer_id}
   * @param {number[]} request.entitlements
   *   Required. The new entitlements to create or transfer.
   * @param {string} request.authToken
   *   The super admin of the resold customer generates this token to
   *   authorize a reseller to access their Cloud Identity and purchase
   *   entitlements on their behalf. You can omit this token after authorization.
   *   See https://support.google.com/a/answer/7643790 for more details.
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.transfer_entitlements.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_TransferEntitlements_async
   */
  transferEntitlements(
    request?: protos.google.cloud.channel.v1.ITransferEntitlementsRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.ITransferEntitlementsResponse,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  transferEntitlements(
    request: protos.google.cloud.channel.v1.ITransferEntitlementsRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.ITransferEntitlementsResponse,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  transferEntitlements(
    request: protos.google.cloud.channel.v1.ITransferEntitlementsRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.channel.v1.ITransferEntitlementsResponse,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  transferEntitlements(
    request?: protos.google.cloud.channel.v1.ITransferEntitlementsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.channel.v1.ITransferEntitlementsResponse,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.channel.v1.ITransferEntitlementsResponse,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.channel.v1.ITransferEntitlementsResponse,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.transferEntitlements(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `transferEntitlements()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.transfer_entitlements.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_TransferEntitlements_async
   */
  async checkTransferEntitlementsProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.channel.v1.TransferEntitlementsResponse,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.transferEntitlements,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.channel.v1.TransferEntitlementsResponse,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * Transfers customer entitlements from their current reseller to Google.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The customer or offer resource was not found.
   * * ALREADY_EXISTS: The SKU was already transferred for the customer.
   * * CONDITION_NOT_MET or FAILED_PRECONDITION:
   *     * The SKU requires domain verification to transfer, but the domain is
   *     not verified.
   *     * An Add-On SKU (example, Vault or Drive) is missing the
   *     pre-requisite SKU (example, G Suite Basic).
   *     * (Developer accounts only) Reseller and resold domain must meet the
   *     following naming requirements:
   *         * Domain names must start with goog-test.
   *         * Domain names must include the reseller domain.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * The ID of a long-running operation.
   *
   * To get the results of the operation, call the GetOperation method of
   * CloudChannelOperationsService. The response will contain
   * google.protobuf.Empty on success. The Operation metadata will contain an
   * instance of {@link google.cloud.channel.v1.OperationMetadata|OperationMetadata}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller's customer account where the
   *   entitlements transfer from. Parent uses the format:
   *   accounts/{account_id}/customers/{customer_id}
   * @param {number[]} request.entitlements
   *   Required. The entitlements to transfer to Google.
   * @param {string} [request.requestId]
   *   Optional. You can specify an optional unique request ID, and if you need to
   *   retry your request, the server will know to ignore the request if it's
   *   complete.
   *
   *   For example, you make an initial request and the request times out. If you
   *   make the request again with the same request ID, the server can check if
   *   it received the original operation with the same request ID. If it did, it
   *   will ignore the second request.
   *
   *   The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122)
   *   with the exception that zero UUID is not supported
   *   (`00000000-0000-0000-0000-000000000000`).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.transfer_entitlements_to_google.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_TransferEntitlementsToGoogle_async
   */
  transferEntitlementsToGoogle(
    request?: protos.google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  transferEntitlementsToGoogle(
    request: protos.google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  transferEntitlementsToGoogle(
    request: protos.google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  transferEntitlementsToGoogle(
    request?: protos.google.cloud.channel.v1.ITransferEntitlementsToGoogleRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.channel.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.channel.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.transferEntitlementsToGoogle(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `transferEntitlementsToGoogle()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.transfer_entitlements_to_google.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_TransferEntitlementsToGoogle_async
   */
  async checkTransferEntitlementsToGoogleProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.channel.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.transferEntitlementsToGoogle,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.channel.v1.OperationMetadata
    >;
  }
  /**
   * List {@link google.cloud.channel.v1.Customer|Customer}s.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * List of {@link google.cloud.channel.v1.Customer|Customer}s, or an empty list if
   * there are no customers.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller account to list customers from.
   *   Parent uses the format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of customers to return. The service may return
   *   fewer than this value. If unspecified, returns at most 10 customers. The
   *   maximum value is 50.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results other than the first page.
   *   Obtained through
   *   {@link google.cloud.channel.v1.ListCustomersResponse.next_page_token|ListCustomersResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListCustomers|CloudChannelService.ListCustomers}
   *   call.
   * @param {string} [request.filter]
   *   Optional. Filters applied to the [CloudChannelService.ListCustomers]
   *   results. See
   *   https://cloud.google.com/channel/docs/concepts/google-cloud/filter-customers
   *   for more information.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Customer]{@link google.cloud.channel.v1.Customer}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listCustomersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCustomers(
    request?: protos.google.cloud.channel.v1.IListCustomersRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer[],
      protos.google.cloud.channel.v1.IListCustomersRequest | null,
      protos.google.cloud.channel.v1.IListCustomersResponse
    ]
  >;
  listCustomers(
    request: protos.google.cloud.channel.v1.IListCustomersRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListCustomersRequest,
      protos.google.cloud.channel.v1.IListCustomersResponse | null | undefined,
      protos.google.cloud.channel.v1.ICustomer
    >
  ): void;
  listCustomers(
    request: protos.google.cloud.channel.v1.IListCustomersRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListCustomersRequest,
      protos.google.cloud.channel.v1.IListCustomersResponse | null | undefined,
      protos.google.cloud.channel.v1.ICustomer
    >
  ): void;
  listCustomers(
    request?: protos.google.cloud.channel.v1.IListCustomersRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListCustomersRequest,
          | protos.google.cloud.channel.v1.IListCustomersResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.ICustomer
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListCustomersRequest,
      protos.google.cloud.channel.v1.IListCustomersResponse | null | undefined,
      protos.google.cloud.channel.v1.ICustomer
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomer[],
      protos.google.cloud.channel.v1.IListCustomersRequest | null,
      protos.google.cloud.channel.v1.IListCustomersResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listCustomers(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller account to list customers from.
   *   Parent uses the format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of customers to return. The service may return
   *   fewer than this value. If unspecified, returns at most 10 customers. The
   *   maximum value is 50.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results other than the first page.
   *   Obtained through
   *   {@link google.cloud.channel.v1.ListCustomersResponse.next_page_token|ListCustomersResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListCustomers|CloudChannelService.ListCustomers}
   *   call.
   * @param {string} [request.filter]
   *   Optional. Filters applied to the [CloudChannelService.ListCustomers]
   *   results. See
   *   https://cloud.google.com/channel/docs/concepts/google-cloud/filter-customers
   *   for more information.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Customer]{@link google.cloud.channel.v1.Customer} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listCustomersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCustomersStream(
    request?: protos.google.cloud.channel.v1.IListCustomersRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCustomers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCustomers.createStream(
      this.innerApiCalls.listCustomers as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listCustomers`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller account to list customers from.
   *   Parent uses the format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of customers to return. The service may return
   *   fewer than this value. If unspecified, returns at most 10 customers. The
   *   maximum value is 50.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results other than the first page.
   *   Obtained through
   *   {@link google.cloud.channel.v1.ListCustomersResponse.next_page_token|ListCustomersResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListCustomers|CloudChannelService.ListCustomers}
   *   call.
   * @param {string} [request.filter]
   *   Optional. Filters applied to the [CloudChannelService.ListCustomers]
   *   results. See
   *   https://cloud.google.com/channel/docs/concepts/google-cloud/filter-customers
   *   for more information.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Customer]{@link google.cloud.channel.v1.Customer}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_customers.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListCustomers_async
   */
  listCustomersAsync(
    request?: protos.google.cloud.channel.v1.IListCustomersRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.ICustomer> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCustomers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCustomers.asyncIterate(
      this.innerApiCalls['listCustomers'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.ICustomer>;
  }
  /**
   * Lists {@link google.cloud.channel.v1.Entitlement|Entitlement}s belonging to a
   * customer.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * A list of the customer's
   * {@link google.cloud.channel.v1.Entitlement|Entitlement}s.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller's customer account to list
   *   entitlements for.
   *   Parent uses the format: accounts/{account_id}/customers/{customer_id}
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, return at most 50 entitlements. The maximum
   *   value is 100; the server will coerce values above 100.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListEntitlementsResponse.next_page_token|ListEntitlementsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListEntitlements|CloudChannelService.ListEntitlements}
   *   call.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Entitlement]{@link google.cloud.channel.v1.Entitlement}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listEntitlementsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listEntitlements(
    request?: protos.google.cloud.channel.v1.IListEntitlementsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IEntitlement[],
      protos.google.cloud.channel.v1.IListEntitlementsRequest | null,
      protos.google.cloud.channel.v1.IListEntitlementsResponse
    ]
  >;
  listEntitlements(
    request: protos.google.cloud.channel.v1.IListEntitlementsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListEntitlementsRequest,
      | protos.google.cloud.channel.v1.IListEntitlementsResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IEntitlement
    >
  ): void;
  listEntitlements(
    request: protos.google.cloud.channel.v1.IListEntitlementsRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListEntitlementsRequest,
      | protos.google.cloud.channel.v1.IListEntitlementsResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IEntitlement
    >
  ): void;
  listEntitlements(
    request?: protos.google.cloud.channel.v1.IListEntitlementsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListEntitlementsRequest,
          | protos.google.cloud.channel.v1.IListEntitlementsResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.IEntitlement
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListEntitlementsRequest,
      | protos.google.cloud.channel.v1.IListEntitlementsResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IEntitlement
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IEntitlement[],
      protos.google.cloud.channel.v1.IListEntitlementsRequest | null,
      protos.google.cloud.channel.v1.IListEntitlementsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listEntitlements(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller's customer account to list
   *   entitlements for.
   *   Parent uses the format: accounts/{account_id}/customers/{customer_id}
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, return at most 50 entitlements. The maximum
   *   value is 100; the server will coerce values above 100.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListEntitlementsResponse.next_page_token|ListEntitlementsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListEntitlements|CloudChannelService.ListEntitlements}
   *   call.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Entitlement]{@link google.cloud.channel.v1.Entitlement} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listEntitlementsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listEntitlementsStream(
    request?: protos.google.cloud.channel.v1.IListEntitlementsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listEntitlements'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listEntitlements.createStream(
      this.innerApiCalls.listEntitlements as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listEntitlements`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller's customer account to list
   *   entitlements for.
   *   Parent uses the format: accounts/{account_id}/customers/{customer_id}
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, return at most 50 entitlements. The maximum
   *   value is 100; the server will coerce values above 100.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListEntitlementsResponse.next_page_token|ListEntitlementsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListEntitlements|CloudChannelService.ListEntitlements}
   *   call.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Entitlement]{@link google.cloud.channel.v1.Entitlement}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_entitlements.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListEntitlements_async
   */
  listEntitlementsAsync(
    request?: protos.google.cloud.channel.v1.IListEntitlementsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.IEntitlement> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listEntitlements'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listEntitlements.asyncIterate(
      this.innerApiCalls['listEntitlements'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.IEntitlement>;
  }
  /**
   * List {@link google.cloud.channel.v1.TransferableSku|TransferableSku}s of a
   * customer based on the Cloud Identity ID or Customer Name in the request.
   *
   * Use this method to list the entitlements information of an
   * unowned customer. You should provide the customer's
   * Cloud Identity ID or Customer Name.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED:
   *     * The customer doesn't belong to the reseller and has no auth token.
   *     * The supplied auth token is invalid.
   *     * The reseller account making the request is different
   *     from the reseller account in the query.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * A list of the customer's
   * {@link google.cloud.channel.v1.TransferableSku|TransferableSku}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.cloudIdentityId
   *   Customer's Cloud Identity ID
   * @param {string} request.customerName
   *   A reseller is required to create a customer and use the resource name of
   *   the created customer here.
   *   Customer_name uses the format:
   *   accounts/{account_id}/customers/{customer_id}
   * @param {string} request.parent
   *   Required. The reseller account's resource name.
   *   Parent uses the format: accounts/{account_id}
   * @param {number} request.pageSize
   *   The requested page size. Server might return fewer results than requested.
   *   If unspecified, returns at most 100 SKUs.
   *   The maximum value is 1000; the server will coerce values above 1000.
   *   Optional.
   * @param {string} request.pageToken
   *   A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListTransferableSkusResponse.next_page_token|ListTransferableSkusResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListTransferableSkus|CloudChannelService.ListTransferableSkus}
   *   call. Optional.
   * @param {string} [request.authToken]
   *   Optional. The super admin of the resold customer generates this token to
   *   authorize a reseller to access their Cloud Identity and purchase
   *   entitlements on their behalf. You can omit this token after authorization.
   *   See https://support.google.com/a/answer/7643790 for more details.
   * @param {string} request.languageCode
   *   The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   *   Optional.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [TransferableSku]{@link google.cloud.channel.v1.TransferableSku}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listTransferableSkusAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listTransferableSkus(
    request?: protos.google.cloud.channel.v1.IListTransferableSkusRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ITransferableSku[],
      protos.google.cloud.channel.v1.IListTransferableSkusRequest | null,
      protos.google.cloud.channel.v1.IListTransferableSkusResponse
    ]
  >;
  listTransferableSkus(
    request: protos.google.cloud.channel.v1.IListTransferableSkusRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListTransferableSkusRequest,
      | protos.google.cloud.channel.v1.IListTransferableSkusResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.ITransferableSku
    >
  ): void;
  listTransferableSkus(
    request: protos.google.cloud.channel.v1.IListTransferableSkusRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListTransferableSkusRequest,
      | protos.google.cloud.channel.v1.IListTransferableSkusResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.ITransferableSku
    >
  ): void;
  listTransferableSkus(
    request?: protos.google.cloud.channel.v1.IListTransferableSkusRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListTransferableSkusRequest,
          | protos.google.cloud.channel.v1.IListTransferableSkusResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.ITransferableSku
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListTransferableSkusRequest,
      | protos.google.cloud.channel.v1.IListTransferableSkusResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.ITransferableSku
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ITransferableSku[],
      protos.google.cloud.channel.v1.IListTransferableSkusRequest | null,
      protos.google.cloud.channel.v1.IListTransferableSkusResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listTransferableSkus(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.cloudIdentityId
   *   Customer's Cloud Identity ID
   * @param {string} request.customerName
   *   A reseller is required to create a customer and use the resource name of
   *   the created customer here.
   *   Customer_name uses the format:
   *   accounts/{account_id}/customers/{customer_id}
   * @param {string} request.parent
   *   Required. The reseller account's resource name.
   *   Parent uses the format: accounts/{account_id}
   * @param {number} request.pageSize
   *   The requested page size. Server might return fewer results than requested.
   *   If unspecified, returns at most 100 SKUs.
   *   The maximum value is 1000; the server will coerce values above 1000.
   *   Optional.
   * @param {string} request.pageToken
   *   A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListTransferableSkusResponse.next_page_token|ListTransferableSkusResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListTransferableSkus|CloudChannelService.ListTransferableSkus}
   *   call. Optional.
   * @param {string} [request.authToken]
   *   Optional. The super admin of the resold customer generates this token to
   *   authorize a reseller to access their Cloud Identity and purchase
   *   entitlements on their behalf. You can omit this token after authorization.
   *   See https://support.google.com/a/answer/7643790 for more details.
   * @param {string} request.languageCode
   *   The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   *   Optional.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [TransferableSku]{@link google.cloud.channel.v1.TransferableSku} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listTransferableSkusAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listTransferableSkusStream(
    request?: protos.google.cloud.channel.v1.IListTransferableSkusRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listTransferableSkus'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listTransferableSkus.createStream(
      this.innerApiCalls.listTransferableSkus as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listTransferableSkus`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.cloudIdentityId
   *   Customer's Cloud Identity ID
   * @param {string} request.customerName
   *   A reseller is required to create a customer and use the resource name of
   *   the created customer here.
   *   Customer_name uses the format:
   *   accounts/{account_id}/customers/{customer_id}
   * @param {string} request.parent
   *   Required. The reseller account's resource name.
   *   Parent uses the format: accounts/{account_id}
   * @param {number} request.pageSize
   *   The requested page size. Server might return fewer results than requested.
   *   If unspecified, returns at most 100 SKUs.
   *   The maximum value is 1000; the server will coerce values above 1000.
   *   Optional.
   * @param {string} request.pageToken
   *   A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListTransferableSkusResponse.next_page_token|ListTransferableSkusResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListTransferableSkus|CloudChannelService.ListTransferableSkus}
   *   call. Optional.
   * @param {string} [request.authToken]
   *   Optional. The super admin of the resold customer generates this token to
   *   authorize a reseller to access their Cloud Identity and purchase
   *   entitlements on their behalf. You can omit this token after authorization.
   *   See https://support.google.com/a/answer/7643790 for more details.
   * @param {string} request.languageCode
   *   The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   *   Optional.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [TransferableSku]{@link google.cloud.channel.v1.TransferableSku}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_transferable_skus.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListTransferableSkus_async
   */
  listTransferableSkusAsync(
    request?: protos.google.cloud.channel.v1.IListTransferableSkusRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.ITransferableSku> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listTransferableSkus'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listTransferableSkus.asyncIterate(
      this.innerApiCalls['listTransferableSkus'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.ITransferableSku>;
  }
  /**
   * List {@link google.cloud.channel.v1.TransferableOffer|TransferableOffer}s of a
   * customer based on Cloud Identity ID or Customer Name in the request.
   *
   * Use this method when a reseller gets the entitlement information of an
   * unowned customer. The reseller should provide the customer's
   * Cloud Identity ID or Customer Name.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED:
   *     * The customer doesn't belong to the reseller and has no auth token.
   *     * The customer provided incorrect reseller information when generating
   *     auth token.
   *     * The reseller account making the request is different
   *     from the reseller account in the query.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * List of {@link google.cloud.channel.v1.TransferableOffer|TransferableOffer} for
   * the given customer and SKU.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.cloudIdentityId
   *   Customer's Cloud Identity ID
   * @param {string} request.customerName
   *   A reseller should create a customer and use the resource name of
   *   that customer here.
   * @param {string} request.parent
   *   Required. The resource name of the reseller's account.
   * @param {number} request.pageSize
   *   Requested page size. Server might return fewer results than requested.
   *   If unspecified, returns at most 100 offers.
   *   The maximum value is 1000; the server will coerce values above 1000.
   * @param {string} request.pageToken
   *   A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListTransferableOffersResponse.next_page_token|ListTransferableOffersResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListTransferableOffers|CloudChannelService.ListTransferableOffers}
   *   call.
   * @param {string} request.sku
   *   Required. The SKU to look up Offers for.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [TransferableOffer]{@link google.cloud.channel.v1.TransferableOffer}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listTransferableOffersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listTransferableOffers(
    request?: protos.google.cloud.channel.v1.IListTransferableOffersRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ITransferableOffer[],
      protos.google.cloud.channel.v1.IListTransferableOffersRequest | null,
      protos.google.cloud.channel.v1.IListTransferableOffersResponse
    ]
  >;
  listTransferableOffers(
    request: protos.google.cloud.channel.v1.IListTransferableOffersRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListTransferableOffersRequest,
      | protos.google.cloud.channel.v1.IListTransferableOffersResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.ITransferableOffer
    >
  ): void;
  listTransferableOffers(
    request: protos.google.cloud.channel.v1.IListTransferableOffersRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListTransferableOffersRequest,
      | protos.google.cloud.channel.v1.IListTransferableOffersResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.ITransferableOffer
    >
  ): void;
  listTransferableOffers(
    request?: protos.google.cloud.channel.v1.IListTransferableOffersRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListTransferableOffersRequest,
          | protos.google.cloud.channel.v1.IListTransferableOffersResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.ITransferableOffer
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListTransferableOffersRequest,
      | protos.google.cloud.channel.v1.IListTransferableOffersResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.ITransferableOffer
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ITransferableOffer[],
      protos.google.cloud.channel.v1.IListTransferableOffersRequest | null,
      protos.google.cloud.channel.v1.IListTransferableOffersResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listTransferableOffers(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.cloudIdentityId
   *   Customer's Cloud Identity ID
   * @param {string} request.customerName
   *   A reseller should create a customer and use the resource name of
   *   that customer here.
   * @param {string} request.parent
   *   Required. The resource name of the reseller's account.
   * @param {number} request.pageSize
   *   Requested page size. Server might return fewer results than requested.
   *   If unspecified, returns at most 100 offers.
   *   The maximum value is 1000; the server will coerce values above 1000.
   * @param {string} request.pageToken
   *   A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListTransferableOffersResponse.next_page_token|ListTransferableOffersResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListTransferableOffers|CloudChannelService.ListTransferableOffers}
   *   call.
   * @param {string} request.sku
   *   Required. The SKU to look up Offers for.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [TransferableOffer]{@link google.cloud.channel.v1.TransferableOffer} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listTransferableOffersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listTransferableOffersStream(
    request?: protos.google.cloud.channel.v1.IListTransferableOffersRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listTransferableOffers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listTransferableOffers.createStream(
      this.innerApiCalls.listTransferableOffers as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listTransferableOffers`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.cloudIdentityId
   *   Customer's Cloud Identity ID
   * @param {string} request.customerName
   *   A reseller should create a customer and use the resource name of
   *   that customer here.
   * @param {string} request.parent
   *   Required. The resource name of the reseller's account.
   * @param {number} request.pageSize
   *   Requested page size. Server might return fewer results than requested.
   *   If unspecified, returns at most 100 offers.
   *   The maximum value is 1000; the server will coerce values above 1000.
   * @param {string} request.pageToken
   *   A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListTransferableOffersResponse.next_page_token|ListTransferableOffersResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListTransferableOffers|CloudChannelService.ListTransferableOffers}
   *   call.
   * @param {string} request.sku
   *   Required. The SKU to look up Offers for.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [TransferableOffer]{@link google.cloud.channel.v1.TransferableOffer}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_transferable_offers.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListTransferableOffers_async
   */
  listTransferableOffersAsync(
    request?: protos.google.cloud.channel.v1.IListTransferableOffersRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.ITransferableOffer> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listTransferableOffers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listTransferableOffers.asyncIterate(
      this.innerApiCalls['listTransferableOffers'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.ITransferableOffer>;
  }
  /**
   * List {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink}s
   * belonging to a distributor. You must be a distributor to call this method.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request is different
   * from the reseller account in the API request.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * Return value:
   * The list of the distributor account's
   * {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink} resources.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller account for listing channel
   *   partner links. Parent uses the format: accounts/{account_id}
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, server will pick a default size (25). The
   *   maximum value is 200; the server will coerce values above 200.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListChannelPartnerLinksResponse.next_page_token|ListChannelPartnerLinksResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListChannelPartnerLinks|CloudChannelService.ListChannelPartnerLinks}
   *   call.
   * @param {google.cloud.channel.v1.ChannelPartnerLinkView} [request.view]
   *   Optional. The level of granularity the ChannelPartnerLink will display.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [ChannelPartnerLink]{@link google.cloud.channel.v1.ChannelPartnerLink}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listChannelPartnerLinksAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listChannelPartnerLinks(
    request?: protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerLink[],
      protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest | null,
      protos.google.cloud.channel.v1.IListChannelPartnerLinksResponse
    ]
  >;
  listChannelPartnerLinks(
    request: protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
      | protos.google.cloud.channel.v1.IListChannelPartnerLinksResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IChannelPartnerLink
    >
  ): void;
  listChannelPartnerLinks(
    request: protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
      | protos.google.cloud.channel.v1.IListChannelPartnerLinksResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IChannelPartnerLink
    >
  ): void;
  listChannelPartnerLinks(
    request?: protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
          | protos.google.cloud.channel.v1.IListChannelPartnerLinksResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.IChannelPartnerLink
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
      | protos.google.cloud.channel.v1.IListChannelPartnerLinksResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IChannelPartnerLink
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerLink[],
      protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest | null,
      protos.google.cloud.channel.v1.IListChannelPartnerLinksResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listChannelPartnerLinks(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller account for listing channel
   *   partner links. Parent uses the format: accounts/{account_id}
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, server will pick a default size (25). The
   *   maximum value is 200; the server will coerce values above 200.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListChannelPartnerLinksResponse.next_page_token|ListChannelPartnerLinksResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListChannelPartnerLinks|CloudChannelService.ListChannelPartnerLinks}
   *   call.
   * @param {google.cloud.channel.v1.ChannelPartnerLinkView} [request.view]
   *   Optional. The level of granularity the ChannelPartnerLink will display.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [ChannelPartnerLink]{@link google.cloud.channel.v1.ChannelPartnerLink} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listChannelPartnerLinksAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listChannelPartnerLinksStream(
    request?: protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listChannelPartnerLinks'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listChannelPartnerLinks.createStream(
      this.innerApiCalls.listChannelPartnerLinks as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listChannelPartnerLinks`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller account for listing channel
   *   partner links. Parent uses the format: accounts/{account_id}
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, server will pick a default size (25). The
   *   maximum value is 200; the server will coerce values above 200.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   *   Obtained using
   *   {@link google.cloud.channel.v1.ListChannelPartnerLinksResponse.next_page_token|ListChannelPartnerLinksResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListChannelPartnerLinks|CloudChannelService.ListChannelPartnerLinks}
   *   call.
   * @param {google.cloud.channel.v1.ChannelPartnerLinkView} [request.view]
   *   Optional. The level of granularity the ChannelPartnerLink will display.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [ChannelPartnerLink]{@link google.cloud.channel.v1.ChannelPartnerLink}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_channel_partner_links.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListChannelPartnerLinks_async
   */
  listChannelPartnerLinksAsync(
    request?: protos.google.cloud.channel.v1.IListChannelPartnerLinksRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.IChannelPartnerLink> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listChannelPartnerLinks'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listChannelPartnerLinks.asyncIterate(
      this.innerApiCalls['listChannelPartnerLinks'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.IChannelPartnerLink>;
  }
  /**
   * Lists information about how a Reseller modifies their bill before sending
   * it to a Customer.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * NOT_FOUND: The
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the
   * {@link google.cloud.channel.v1.CustomerRepricingConfig|CustomerRepricingConfig}
   * resources. The data for each resource is displayed in the ascending order
   * of:
   * * customer ID
   * * {@link google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement|RepricingConfig.EntitlementGranularity.entitlement}
   * * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}
   * * {@link google.cloud.channel.v1.CustomerRepricingConfig.update_time|CustomerRepricingConfig.update_time}
   *
   * If unsuccessful, returns an error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the customer.
   *   Parent uses the format: accounts/{account_id}/customers/{customer_id}.
   *   Supports accounts/{account_id}/customers/- to retrieve configs for all
   *   customers.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of repricing configs to return. The service
   *   may return fewer than this value. If unspecified, returns a maximum of 50
   *   rules. The maximum value is 100; values above 100 will be coerced to 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results beyond the first page.
   *   Obtained through
   *   {@link google.cloud.channel.v1.ListCustomerRepricingConfigsResponse.next_page_token|ListCustomerRepricingConfigsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListCustomerRepricingConfigs|CloudChannelService.ListCustomerRepricingConfigs}
   *   call.
   * @param {string} [request.filter]
   *   Optional. A filter for [CloudChannelService.ListCustomerRepricingConfigs]
   *   results (customer only). You can use this filter when you support
   *   a BatchGet-like query.
   *   To use the filter, you must set `parent=accounts/{account_id}/customers/-`.
   *
   *   Example: customer = accounts/account_id/customers/c1 OR
   *   customer = accounts/account_id/customers/c2.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [CustomerRepricingConfig]{@link google.cloud.channel.v1.CustomerRepricingConfig}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listCustomerRepricingConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCustomerRepricingConfigs(
    request?: protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomerRepricingConfig[],
      protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest | null,
      protos.google.cloud.channel.v1.IListCustomerRepricingConfigsResponse
    ]
  >;
  listCustomerRepricingConfigs(
    request: protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
      | protos.google.cloud.channel.v1.IListCustomerRepricingConfigsResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.ICustomerRepricingConfig
    >
  ): void;
  listCustomerRepricingConfigs(
    request: protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
      | protos.google.cloud.channel.v1.IListCustomerRepricingConfigsResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.ICustomerRepricingConfig
    >
  ): void;
  listCustomerRepricingConfigs(
    request?: protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
          | protos.google.cloud.channel.v1.IListCustomerRepricingConfigsResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.ICustomerRepricingConfig
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
      | protos.google.cloud.channel.v1.IListCustomerRepricingConfigsResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.ICustomerRepricingConfig
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ICustomerRepricingConfig[],
      protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest | null,
      protos.google.cloud.channel.v1.IListCustomerRepricingConfigsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listCustomerRepricingConfigs(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the customer.
   *   Parent uses the format: accounts/{account_id}/customers/{customer_id}.
   *   Supports accounts/{account_id}/customers/- to retrieve configs for all
   *   customers.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of repricing configs to return. The service
   *   may return fewer than this value. If unspecified, returns a maximum of 50
   *   rules. The maximum value is 100; values above 100 will be coerced to 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results beyond the first page.
   *   Obtained through
   *   {@link google.cloud.channel.v1.ListCustomerRepricingConfigsResponse.next_page_token|ListCustomerRepricingConfigsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListCustomerRepricingConfigs|CloudChannelService.ListCustomerRepricingConfigs}
   *   call.
   * @param {string} [request.filter]
   *   Optional. A filter for [CloudChannelService.ListCustomerRepricingConfigs]
   *   results (customer only). You can use this filter when you support
   *   a BatchGet-like query.
   *   To use the filter, you must set `parent=accounts/{account_id}/customers/-`.
   *
   *   Example: customer = accounts/account_id/customers/c1 OR
   *   customer = accounts/account_id/customers/c2.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [CustomerRepricingConfig]{@link google.cloud.channel.v1.CustomerRepricingConfig} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listCustomerRepricingConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCustomerRepricingConfigsStream(
    request?: protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCustomerRepricingConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCustomerRepricingConfigs.createStream(
      this.innerApiCalls.listCustomerRepricingConfigs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listCustomerRepricingConfigs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the customer.
   *   Parent uses the format: accounts/{account_id}/customers/{customer_id}.
   *   Supports accounts/{account_id}/customers/- to retrieve configs for all
   *   customers.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of repricing configs to return. The service
   *   may return fewer than this value. If unspecified, returns a maximum of 50
   *   rules. The maximum value is 100; values above 100 will be coerced to 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results beyond the first page.
   *   Obtained through
   *   {@link google.cloud.channel.v1.ListCustomerRepricingConfigsResponse.next_page_token|ListCustomerRepricingConfigsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListCustomerRepricingConfigs|CloudChannelService.ListCustomerRepricingConfigs}
   *   call.
   * @param {string} [request.filter]
   *   Optional. A filter for [CloudChannelService.ListCustomerRepricingConfigs]
   *   results (customer only). You can use this filter when you support
   *   a BatchGet-like query.
   *   To use the filter, you must set `parent=accounts/{account_id}/customers/-`.
   *
   *   Example: customer = accounts/account_id/customers/c1 OR
   *   customer = accounts/account_id/customers/c2.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [CustomerRepricingConfig]{@link google.cloud.channel.v1.CustomerRepricingConfig}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_customer_repricing_configs.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListCustomerRepricingConfigs_async
   */
  listCustomerRepricingConfigsAsync(
    request?: protos.google.cloud.channel.v1.IListCustomerRepricingConfigsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.ICustomerRepricingConfig> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCustomerRepricingConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCustomerRepricingConfigs.asyncIterate(
      this.innerApiCalls['listCustomerRepricingConfigs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.ICustomerRepricingConfig>;
  }
  /**
   * Lists information about how a Reseller modifies their bill before sending
   * it to a ChannelPartner.
   *
   * Possible Error Codes:
   *
   * * PERMISSION_DENIED: If the account making the request and the account
   * being queried are different.
   * * NOT_FOUND: The
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * specified does not exist or is not associated with the given account.
   * * INTERNAL: Any non-user error related to technical issues in the
   * backend. In this case, contact Cloud Channel support.
   *
   * Return Value:
   * If successful, the
   * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig|ChannelPartnerRepricingConfig}
   * resources. The data for each resource is displayed in the ascending order
   * of:
   * * channel partner ID
   * * {@link google.cloud.channel.v1.RepricingConfig.effective_invoice_month|RepricingConfig.effective_invoice_month}
   * * {@link google.cloud.channel.v1.ChannelPartnerRepricingConfig.update_time|ChannelPartnerRepricingConfig.update_time}
   *
   * If unsuccessful, returns an error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the account's
   *   {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink}. Parent
   *   uses the format:
   *   accounts/{account_id}/channelPartnerLinks/{channel_partner_id}.
   *   Supports accounts/{account_id}/channelPartnerLinks/- to retrieve configs
   *   for all channel partners.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of repricing configs to return. The service
   *   may return fewer than this value. If unspecified, returns a maximum of 50
   *   rules. The maximum value is 100; values above 100 will be coerced to 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results beyond the first page.
   *   Obtained through
   *   {@link google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.next_page_token|ListChannelPartnerRepricingConfigsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigs|CloudChannelService.ListChannelPartnerRepricingConfigs}
   *   call.
   * @param {string} [request.filter]
   *   Optional. A filter for
   *   [CloudChannelService.ListChannelPartnerRepricingConfigs] results
   *   (channel_partner_link only). You can use this filter when you support a
   *   BatchGet-like query. To use the filter, you must set
   *   `parent=accounts/{account_id}/channelPartnerLinks/-`.
   *
   *   Example: `channel_partner_link =
   *   accounts/account_id/channelPartnerLinks/c1` OR `channel_partner_link =
   *   accounts/account_id/channelPartnerLinks/c2`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [ChannelPartnerRepricingConfig]{@link google.cloud.channel.v1.ChannelPartnerRepricingConfig}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listChannelPartnerRepricingConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listChannelPartnerRepricingConfigs(
    request?: protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig[],
      protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest | null,
      protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse
    ]
  >;
  listChannelPartnerRepricingConfigs(
    request: protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
      | protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig
    >
  ): void;
  listChannelPartnerRepricingConfigs(
    request: protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
      | protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig
    >
  ): void;
  listChannelPartnerRepricingConfigs(
    request?: protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
          | protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
      | protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig[],
      protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest | null,
      protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listChannelPartnerRepricingConfigs(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the account's
   *   {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink}. Parent
   *   uses the format:
   *   accounts/{account_id}/channelPartnerLinks/{channel_partner_id}.
   *   Supports accounts/{account_id}/channelPartnerLinks/- to retrieve configs
   *   for all channel partners.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of repricing configs to return. The service
   *   may return fewer than this value. If unspecified, returns a maximum of 50
   *   rules. The maximum value is 100; values above 100 will be coerced to 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results beyond the first page.
   *   Obtained through
   *   {@link google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.next_page_token|ListChannelPartnerRepricingConfigsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigs|CloudChannelService.ListChannelPartnerRepricingConfigs}
   *   call.
   * @param {string} [request.filter]
   *   Optional. A filter for
   *   [CloudChannelService.ListChannelPartnerRepricingConfigs] results
   *   (channel_partner_link only). You can use this filter when you support a
   *   BatchGet-like query. To use the filter, you must set
   *   `parent=accounts/{account_id}/channelPartnerLinks/-`.
   *
   *   Example: `channel_partner_link =
   *   accounts/account_id/channelPartnerLinks/c1` OR `channel_partner_link =
   *   accounts/account_id/channelPartnerLinks/c2`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [ChannelPartnerRepricingConfig]{@link google.cloud.channel.v1.ChannelPartnerRepricingConfig} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listChannelPartnerRepricingConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listChannelPartnerRepricingConfigsStream(
    request?: protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings =
      this._defaults['listChannelPartnerRepricingConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listChannelPartnerRepricingConfigs.createStream(
      this.innerApiCalls.listChannelPartnerRepricingConfigs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listChannelPartnerRepricingConfigs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the account's
   *   {@link google.cloud.channel.v1.ChannelPartnerLink|ChannelPartnerLink}. Parent
   *   uses the format:
   *   accounts/{account_id}/channelPartnerLinks/{channel_partner_id}.
   *   Supports accounts/{account_id}/channelPartnerLinks/- to retrieve configs
   *   for all channel partners.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of repricing configs to return. The service
   *   may return fewer than this value. If unspecified, returns a maximum of 50
   *   rules. The maximum value is 100; values above 100 will be coerced to 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results beyond the first page.
   *   Obtained through
   *   {@link google.cloud.channel.v1.ListChannelPartnerRepricingConfigsResponse.next_page_token|ListChannelPartnerRepricingConfigsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.channel.v1.CloudChannelService.ListChannelPartnerRepricingConfigs|CloudChannelService.ListChannelPartnerRepricingConfigs}
   *   call.
   * @param {string} [request.filter]
   *   Optional. A filter for
   *   [CloudChannelService.ListChannelPartnerRepricingConfigs] results
   *   (channel_partner_link only). You can use this filter when you support a
   *   BatchGet-like query. To use the filter, you must set
   *   `parent=accounts/{account_id}/channelPartnerLinks/-`.
   *
   *   Example: `channel_partner_link =
   *   accounts/account_id/channelPartnerLinks/c1` OR `channel_partner_link =
   *   accounts/account_id/channelPartnerLinks/c2`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [ChannelPartnerRepricingConfig]{@link google.cloud.channel.v1.ChannelPartnerRepricingConfig}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_channel_partner_repricing_configs.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListChannelPartnerRepricingConfigs_async
   */
  listChannelPartnerRepricingConfigsAsync(
    request?: protos.google.cloud.channel.v1.IListChannelPartnerRepricingConfigsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings =
      this._defaults['listChannelPartnerRepricingConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listChannelPartnerRepricingConfigs.asyncIterate(
      this.innerApiCalls['listChannelPartnerRepricingConfigs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.IChannelPartnerRepricingConfig>;
  }
  /**
   * Lists the Products the reseller is authorized to sell.
   *
   * Possible error codes:
   *
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.account
   *   Required. The resource name of the reseller account.
   *   Format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 Products. The maximum value
   *   is 1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Product]{@link google.cloud.channel.v1.Product}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listProductsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listProducts(
    request?: protos.google.cloud.channel.v1.IListProductsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IProduct[],
      protos.google.cloud.channel.v1.IListProductsRequest | null,
      protos.google.cloud.channel.v1.IListProductsResponse
    ]
  >;
  listProducts(
    request: protos.google.cloud.channel.v1.IListProductsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListProductsRequest,
      protos.google.cloud.channel.v1.IListProductsResponse | null | undefined,
      protos.google.cloud.channel.v1.IProduct
    >
  ): void;
  listProducts(
    request: protos.google.cloud.channel.v1.IListProductsRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListProductsRequest,
      protos.google.cloud.channel.v1.IListProductsResponse | null | undefined,
      protos.google.cloud.channel.v1.IProduct
    >
  ): void;
  listProducts(
    request?: protos.google.cloud.channel.v1.IListProductsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListProductsRequest,
          | protos.google.cloud.channel.v1.IListProductsResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.IProduct
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListProductsRequest,
      protos.google.cloud.channel.v1.IListProductsResponse | null | undefined,
      protos.google.cloud.channel.v1.IProduct
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IProduct[],
      protos.google.cloud.channel.v1.IListProductsRequest | null,
      protos.google.cloud.channel.v1.IListProductsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    this.initialize();
    return this.innerApiCalls.listProducts(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.account
   *   Required. The resource name of the reseller account.
   *   Format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 Products. The maximum value
   *   is 1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Product]{@link google.cloud.channel.v1.Product} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listProductsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listProductsStream(
    request?: protos.google.cloud.channel.v1.IListProductsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const defaultCallSettings = this._defaults['listProducts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listProducts.createStream(
      this.innerApiCalls.listProducts as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listProducts`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.account
   *   Required. The resource name of the reseller account.
   *   Format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 Products. The maximum value
   *   is 1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Product]{@link google.cloud.channel.v1.Product}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_products.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListProducts_async
   */
  listProductsAsync(
    request?: protos.google.cloud.channel.v1.IListProductsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.IProduct> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const defaultCallSettings = this._defaults['listProducts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listProducts.asyncIterate(
      this.innerApiCalls['listProducts'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.IProduct>;
  }
  /**
   * Lists the SKUs for a product the reseller is authorized to sell.
   *
   * Possible error codes:
   *
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Product to list SKUs for.
   *   Parent uses the format: products/{product_id}.
   *   Supports products/- to retrieve SKUs for all products.
   * @param {string} request.account
   *   Required. Resource name of the reseller.
   *   Format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 SKUs. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   *   Optional.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Sku]{@link google.cloud.channel.v1.Sku}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listSkusAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listSkus(
    request?: protos.google.cloud.channel.v1.IListSkusRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.ISku[],
      protos.google.cloud.channel.v1.IListSkusRequest | null,
      protos.google.cloud.channel.v1.IListSkusResponse
    ]
  >;
  listSkus(
    request: protos.google.cloud.channel.v1.IListSkusRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListSkusRequest,
      protos.google.cloud.channel.v1.IListSkusResponse | null | undefined,
      protos.google.cloud.channel.v1.ISku
    >
  ): void;
  listSkus(
    request: protos.google.cloud.channel.v1.IListSkusRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListSkusRequest,
      protos.google.cloud.channel.v1.IListSkusResponse | null | undefined,
      protos.google.cloud.channel.v1.ISku
    >
  ): void;
  listSkus(
    request?: protos.google.cloud.channel.v1.IListSkusRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListSkusRequest,
          protos.google.cloud.channel.v1.IListSkusResponse | null | undefined,
          protos.google.cloud.channel.v1.ISku
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListSkusRequest,
      protos.google.cloud.channel.v1.IListSkusResponse | null | undefined,
      protos.google.cloud.channel.v1.ISku
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.ISku[],
      protos.google.cloud.channel.v1.IListSkusRequest | null,
      protos.google.cloud.channel.v1.IListSkusResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listSkus(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Product to list SKUs for.
   *   Parent uses the format: products/{product_id}.
   *   Supports products/- to retrieve SKUs for all products.
   * @param {string} request.account
   *   Required. Resource name of the reseller.
   *   Format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 SKUs. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   *   Optional.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Sku]{@link google.cloud.channel.v1.Sku} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listSkusAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listSkusStream(
    request?: protos.google.cloud.channel.v1.IListSkusRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listSkus'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSkus.createStream(
      this.innerApiCalls.listSkus as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listSkus`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Product to list SKUs for.
   *   Parent uses the format: products/{product_id}.
   *   Supports products/- to retrieve SKUs for all products.
   * @param {string} request.account
   *   Required. Resource name of the reseller.
   *   Format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 SKUs. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   *   Optional.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Sku]{@link google.cloud.channel.v1.Sku}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_skus.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListSkus_async
   */
  listSkusAsync(
    request?: protos.google.cloud.channel.v1.IListSkusRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.ISku> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listSkus'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSkus.asyncIterate(
      this.innerApiCalls['listSkus'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.ISku>;
  }
  /**
   * Lists the Offers the reseller can sell.
   *
   * Possible error codes:
   *
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller account from which to list
   *   Offers. Parent uses the format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 500 Offers. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.filter]
   *   Optional. The expression to filter results by name (name of
   *   the Offer), sku.name (name of the SKU), or sku.product.name (name of the
   *   Product).
   *   Example 1: sku.product.name=products/p1 AND sku.name!=products/p1/skus/s1
   *   Example 2: name=accounts/a1/offers/o1
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Offer]{@link google.cloud.channel.v1.Offer}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listOffersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOffers(
    request?: protos.google.cloud.channel.v1.IListOffersRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IOffer[],
      protos.google.cloud.channel.v1.IListOffersRequest | null,
      protos.google.cloud.channel.v1.IListOffersResponse
    ]
  >;
  listOffers(
    request: protos.google.cloud.channel.v1.IListOffersRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListOffersRequest,
      protos.google.cloud.channel.v1.IListOffersResponse | null | undefined,
      protos.google.cloud.channel.v1.IOffer
    >
  ): void;
  listOffers(
    request: protos.google.cloud.channel.v1.IListOffersRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListOffersRequest,
      protos.google.cloud.channel.v1.IListOffersResponse | null | undefined,
      protos.google.cloud.channel.v1.IOffer
    >
  ): void;
  listOffers(
    request?: protos.google.cloud.channel.v1.IListOffersRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListOffersRequest,
          protos.google.cloud.channel.v1.IListOffersResponse | null | undefined,
          protos.google.cloud.channel.v1.IOffer
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListOffersRequest,
      protos.google.cloud.channel.v1.IListOffersResponse | null | undefined,
      protos.google.cloud.channel.v1.IOffer
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IOffer[],
      protos.google.cloud.channel.v1.IListOffersRequest | null,
      protos.google.cloud.channel.v1.IListOffersResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listOffers(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller account from which to list
   *   Offers. Parent uses the format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 500 Offers. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.filter]
   *   Optional. The expression to filter results by name (name of
   *   the Offer), sku.name (name of the SKU), or sku.product.name (name of the
   *   Product).
   *   Example 1: sku.product.name=products/p1 AND sku.name!=products/p1/skus/s1
   *   Example 2: name=accounts/a1/offers/o1
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Offer]{@link google.cloud.channel.v1.Offer} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listOffersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listOffersStream(
    request?: protos.google.cloud.channel.v1.IListOffersRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listOffers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOffers.createStream(
      this.innerApiCalls.listOffers as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listOffers`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the reseller account from which to list
   *   Offers. Parent uses the format: accounts/{account_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 500 Offers. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.filter]
   *   Optional. The expression to filter results by name (name of
   *   the Offer), sku.name (name of the SKU), or sku.product.name (name of the
   *   Product).
   *   Example 1: sku.product.name=products/p1 AND sku.name!=products/p1/skus/s1
   *   Example 2: name=accounts/a1/offers/o1
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Offer]{@link google.cloud.channel.v1.Offer}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_offers.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListOffers_async
   */
  listOffersAsync(
    request?: protos.google.cloud.channel.v1.IListOffersRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.IOffer> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listOffers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listOffers.asyncIterate(
      this.innerApiCalls['listOffers'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.IOffer>;
  }
  /**
   * Lists the following:
   *
   * * SKUs that you can purchase for a customer
   * * SKUs that you can upgrade or downgrade for an entitlement.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase} request.createEntitlementPurchase
   *   List SKUs for CreateEntitlement purchase.
   * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase} request.changeOfferPurchase
   *   List SKUs for ChangeOffer purchase with a new SKU.
   * @param {string} request.customer
   *   Required. The resource name of the customer to list SKUs for.
   *   Format: accounts/{account_id}/customers/{customer_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 SKUs. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [PurchasableSku]{@link google.cloud.channel.v1.PurchasableSku}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listPurchasableSkusAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listPurchasableSkus(
    request?: protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IPurchasableSku[],
      protos.google.cloud.channel.v1.IListPurchasableSkusRequest | null,
      protos.google.cloud.channel.v1.IListPurchasableSkusResponse
    ]
  >;
  listPurchasableSkus(
    request: protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
      | protos.google.cloud.channel.v1.IListPurchasableSkusResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IPurchasableSku
    >
  ): void;
  listPurchasableSkus(
    request: protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
      | protos.google.cloud.channel.v1.IListPurchasableSkusResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IPurchasableSku
    >
  ): void;
  listPurchasableSkus(
    request?: protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
          | protos.google.cloud.channel.v1.IListPurchasableSkusResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.IPurchasableSku
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
      | protos.google.cloud.channel.v1.IListPurchasableSkusResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IPurchasableSku
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IPurchasableSku[],
      protos.google.cloud.channel.v1.IListPurchasableSkusRequest | null,
      protos.google.cloud.channel.v1.IListPurchasableSkusResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        customer: request.customer ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listPurchasableSkus(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase} request.createEntitlementPurchase
   *   List SKUs for CreateEntitlement purchase.
   * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase} request.changeOfferPurchase
   *   List SKUs for ChangeOffer purchase with a new SKU.
   * @param {string} request.customer
   *   Required. The resource name of the customer to list SKUs for.
   *   Format: accounts/{account_id}/customers/{customer_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 SKUs. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [PurchasableSku]{@link google.cloud.channel.v1.PurchasableSku} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listPurchasableSkusAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listPurchasableSkusStream(
    request?: protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        customer: request.customer ?? '',
      });
    const defaultCallSettings = this._defaults['listPurchasableSkus'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPurchasableSkus.createStream(
      this.innerApiCalls.listPurchasableSkus as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listPurchasableSkus`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.CreateEntitlementPurchase} request.createEntitlementPurchase
   *   List SKUs for CreateEntitlement purchase.
   * @param {google.cloud.channel.v1.ListPurchasableSkusRequest.ChangeOfferPurchase} request.changeOfferPurchase
   *   List SKUs for ChangeOffer purchase with a new SKU.
   * @param {string} request.customer
   *   Required. The resource name of the customer to list SKUs for.
   *   Format: accounts/{account_id}/customers/{customer_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 SKUs. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [PurchasableSku]{@link google.cloud.channel.v1.PurchasableSku}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_purchasable_skus.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListPurchasableSkus_async
   */
  listPurchasableSkusAsync(
    request?: protos.google.cloud.channel.v1.IListPurchasableSkusRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.IPurchasableSku> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        customer: request.customer ?? '',
      });
    const defaultCallSettings = this._defaults['listPurchasableSkus'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPurchasableSkus.asyncIterate(
      this.innerApiCalls['listPurchasableSkus'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.IPurchasableSku>;
  }
  /**
   * Lists the following:
   *
   * * Offers that you can purchase for a customer.
   * * Offers that you can change for an entitlement.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The customer doesn't belong to the reseller
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase} request.createEntitlementPurchase
   *   List Offers for CreateEntitlement purchase.
   * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase} request.changeOfferPurchase
   *   List Offers for ChangeOffer purchase.
   * @param {string} request.customer
   *   Required. The resource name of the customer to list Offers for.
   *   Format: accounts/{account_id}/customers/{customer_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 Offers. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [PurchasableOffer]{@link google.cloud.channel.v1.PurchasableOffer}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listPurchasableOffersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listPurchasableOffers(
    request?: protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.channel.v1.IPurchasableOffer[],
      protos.google.cloud.channel.v1.IListPurchasableOffersRequest | null,
      protos.google.cloud.channel.v1.IListPurchasableOffersResponse
    ]
  >;
  listPurchasableOffers(
    request: protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
      | protos.google.cloud.channel.v1.IListPurchasableOffersResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IPurchasableOffer
    >
  ): void;
  listPurchasableOffers(
    request: protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
      | protos.google.cloud.channel.v1.IListPurchasableOffersResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IPurchasableOffer
    >
  ): void;
  listPurchasableOffers(
    request?: protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
          | protos.google.cloud.channel.v1.IListPurchasableOffersResponse
          | null
          | undefined,
          protos.google.cloud.channel.v1.IPurchasableOffer
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
      | protos.google.cloud.channel.v1.IListPurchasableOffersResponse
      | null
      | undefined,
      protos.google.cloud.channel.v1.IPurchasableOffer
    >
  ): Promise<
    [
      protos.google.cloud.channel.v1.IPurchasableOffer[],
      protos.google.cloud.channel.v1.IListPurchasableOffersRequest | null,
      protos.google.cloud.channel.v1.IListPurchasableOffersResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        customer: request.customer ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listPurchasableOffers(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase} request.createEntitlementPurchase
   *   List Offers for CreateEntitlement purchase.
   * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase} request.changeOfferPurchase
   *   List Offers for ChangeOffer purchase.
   * @param {string} request.customer
   *   Required. The resource name of the customer to list Offers for.
   *   Format: accounts/{account_id}/customers/{customer_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 Offers. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [PurchasableOffer]{@link google.cloud.channel.v1.PurchasableOffer} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listPurchasableOffersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listPurchasableOffersStream(
    request?: protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        customer: request.customer ?? '',
      });
    const defaultCallSettings = this._defaults['listPurchasableOffers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPurchasableOffers.createStream(
      this.innerApiCalls.listPurchasableOffers as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listPurchasableOffers`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.CreateEntitlementPurchase} request.createEntitlementPurchase
   *   List Offers for CreateEntitlement purchase.
   * @param {google.cloud.channel.v1.ListPurchasableOffersRequest.ChangeOfferPurchase} request.changeOfferPurchase
   *   List Offers for ChangeOffer purchase.
   * @param {string} request.customer
   *   Required. The resource name of the customer to list Offers for.
   *   Format: accounts/{account_id}/customers/{customer_id}.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server might return fewer results than
   *   requested. If unspecified, returns at most 100 Offers. The maximum value is
   *   1000; the server will coerce values above 1000.
   * @param {string} [request.pageToken]
   *   Optional. A token for a page of results other than the first page.
   * @param {string} [request.languageCode]
   *   Optional. The BCP-47 language code. For example, "en-US". The
   *   response will localize in the corresponding language code, if specified.
   *   The default value is "en-US".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [PurchasableOffer]{@link google.cloud.channel.v1.PurchasableOffer}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_purchasable_offers.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListPurchasableOffers_async
   */
  listPurchasableOffersAsync(
    request?: protos.google.cloud.channel.v1.IListPurchasableOffersRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.channel.v1.IPurchasableOffer> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        customer: request.customer ?? '',
      });
    const defaultCallSettings = this._defaults['listPurchasableOffers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPurchasableOffers.asyncIterate(
      this.innerApiCalls['listPurchasableOffers'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.channel.v1.IPurchasableOffer>;
  }
  /**
   * Lists service accounts with subscriber privileges on the Cloud Pub/Sub
   * topic created for this Channel Services account.
   *
   * Possible error codes:
   *
   * * PERMISSION_DENIED: The reseller account making the request and the
   * provided reseller account are different, or the impersonated user
   * is not a super admin.
   * * INVALID_ARGUMENT: Required request parameters are missing or invalid.
   * * NOT_FOUND: The topic resource doesn't exist.
   * * INTERNAL: Any non-user error related to a technical issue in the
   * backend. Contact Cloud Channel support.
   * * UNKNOWN: Any non-user error related to a technical issue in the backend.
   * Contact Cloud Channel support.
   *
   * Return value:
   * A list of service email addresses.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.account
   *   Required. Resource name of the account.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of service accounts to return. The service may
   *   return fewer than this value. If unspecified, returns at most 100 service
   *   accounts. The maximum value is 1000; the server will coerce values above
   *   1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListSubscribers` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListSubscribers` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of string.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listSubscribersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listSubscribers(
    request?: protos.google.cloud.channel.v1.IListSubscribersRequest,
    options?: CallOptions
  ): Promise<
    [
      string[],
      protos.google.cloud.channel.v1.IListSubscribersRequest | null,
      protos.google.cloud.channel.v1.IListSubscribersResponse
    ]
  >;
  listSubscribers(
    request: protos.google.cloud.channel.v1.IListSubscribersRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListSubscribersRequest,
      | protos.google.cloud.channel.v1.IListSubscribersResponse
      | null
      | undefined,
      string
    >
  ): void;
  listSubscribers(
    request: protos.google.cloud.channel.v1.IListSubscribersRequest,
    callback: PaginationCallback<
      protos.google.cloud.channel.v1.IListSubscribersRequest,
      | protos.google.cloud.channel.v1.IListSubscribersResponse
      | null
      | undefined,
      string
    >
  ): void;
  listSubscribers(
    request?: protos.google.cloud.channel.v1.IListSubscribersRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.channel.v1.IListSubscribersRequest,
          | protos.google.cloud.channel.v1.IListSubscribersResponse
          | null
          | undefined,
          string
        >,
    callback?: PaginationCallback<
      protos.google.cloud.channel.v1.IListSubscribersRequest,
      | protos.google.cloud.channel.v1.IListSubscribersResponse
      | null
      | undefined,
      string
    >
  ): Promise<
    [
      string[],
      protos.google.cloud.channel.v1.IListSubscribersRequest | null,
      protos.google.cloud.channel.v1.IListSubscribersResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        account: request.account ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listSubscribers(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.account
   *   Required. Resource name of the account.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of service accounts to return. The service may
   *   return fewer than this value. If unspecified, returns at most 100 service
   *   accounts. The maximum value is 1000; the server will coerce values above
   *   1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListSubscribers` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListSubscribers` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing string on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listSubscribersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listSubscribersStream(
    request?: protos.google.cloud.channel.v1.IListSubscribersRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        account: request.account ?? '',
      });
    const defaultCallSettings = this._defaults['listSubscribers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSubscribers.createStream(
      this.innerApiCalls.listSubscribers as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listSubscribers`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.account
   *   Required. Resource name of the account.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of service accounts to return. The service may
   *   return fewer than this value. If unspecified, returns at most 100 service
   *   accounts. The maximum value is 1000; the server will coerce values above
   *   1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListSubscribers` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListSubscribers` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   string. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_channel_service.list_subscribers.js</caption>
   * region_tag:cloudchannel_v1_generated_CloudChannelService_ListSubscribers_async
   */
  listSubscribersAsync(
    request?: protos.google.cloud.channel.v1.IListSubscribersRequest,
    options?: CallOptions
  ): AsyncIterable<string> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        account: request.account ?? '',
      });
    const defaultCallSettings = this._defaults['listSubscribers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSubscribers.asyncIterate(
      this.innerApiCalls['listSubscribers'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<string>;
  }
  /**
   * Gets the latest state of a long-running operation.  Clients can use this
   * method to poll the operation result at intervals as recommended by the API
   * service.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @param {function(?Error, ?Object)=} callback
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}.
   * @return {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}. The promise has a method named
   * "cancel" which cancels the ongoing API call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * const name = '';
   * const [response] = await client.getOperation({name});
   * // doThingsWith(response)
   * ```
   */
  getOperation(
    request: protos.google.longrunning.GetOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.Operation,
          protos.google.longrunning.GetOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.longrunning.Operation,
      protos.google.longrunning.GetOperationRequest,
      {} | null | undefined
    >
  ): Promise<[protos.google.longrunning.Operation]> {
    return this.operationsClient.getOperation(request, options, callback);
  }
  /**
   * Lists operations that match the specified filter in the request. If the
   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
   *
   * For-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation collection.
   * @param {string} request.filter - The standard list filter.
   * @param {number=} request.pageSize -
   *   The maximum number of resources contained in the underlying API
   *   response. If page streaming is performed per-resource, this
   *   parameter does not affect the return value. If page streaming is
   *   performed per-page, this determines the maximum number of
   *   resources in a page.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * for await (const response of client.listOperationsAsync(request));
   * // doThingsWith(response)
   * ```
   */
  listOperationsAsync(
    request: protos.google.longrunning.ListOperationsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.longrunning.ListOperationsResponse> {
    return this.operationsClient.listOperationsAsync(request, options);
  }
  /**
   * Starts asynchronous cancellation on a long-running operation.  The server
   * makes a best effort to cancel the operation, but success is not
   * guaranteed.  If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
   * {@link Operations.GetOperation} or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
   * 1, corresponding to `Code.CANCELLED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be cancelled.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.cancelOperation({name: ''});
   * ```
   */
  cancelOperation(
    request: protos.google.longrunning.CancelOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.CancelOperationRequest,
          {} | undefined | null
        >,
    callback?: Callback<
      protos.google.longrunning.CancelOperationRequest,
      protos.google.protobuf.Empty,
      {} | undefined | null
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.cancelOperation(request, options, callback);
  }

  /**
   * Deletes a long-running operation. This method indicates that the client is
   * no longer interested in the operation result. It does not cancel the
   * operation. If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be deleted.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.deleteOperation({name: ''});
   * ```
   */
  deleteOperation(
    request: protos.google.longrunning.DeleteOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.DeleteOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.Empty,
      protos.google.longrunning.DeleteOperationRequest,
      {} | null | undefined
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.deleteOperation(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified channelPartnerLink resource name string.
   *
   * @param {string} account
   * @param {string} channel_partner_link
   * @returns {string} Resource name string.
   */
  channelPartnerLinkPath(account: string, channelPartnerLink: string) {
    return this.pathTemplates.channelPartnerLinkPathTemplate.render({
      account: account,
      channel_partner_link: channelPartnerLink,
    });
  }

  /**
   * Parse the account from ChannelPartnerLink resource.
   *
   * @param {string} channelPartnerLinkName
   *   A fully-qualified path representing ChannelPartnerLink resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromChannelPartnerLinkName(channelPartnerLinkName: string) {
    return this.pathTemplates.channelPartnerLinkPathTemplate.match(
      channelPartnerLinkName
    ).account;
  }

  /**
   * Parse the channel_partner_link from ChannelPartnerLink resource.
   *
   * @param {string} channelPartnerLinkName
   *   A fully-qualified path representing ChannelPartnerLink resource.
   * @returns {string} A string representing the channel_partner_link.
   */
  matchChannelPartnerLinkFromChannelPartnerLinkName(
    channelPartnerLinkName: string
  ) {
    return this.pathTemplates.channelPartnerLinkPathTemplate.match(
      channelPartnerLinkName
    ).channel_partner_link;
  }

  /**
   * Return a fully-qualified channelPartnerRepricingConfig resource name string.
   *
   * @param {string} account
   * @param {string} channel_partner
   * @param {string} channel_partner_repricing_config
   * @returns {string} Resource name string.
   */
  channelPartnerRepricingConfigPath(
    account: string,
    channelPartner: string,
    channelPartnerRepricingConfig: string
  ) {
    return this.pathTemplates.channelPartnerRepricingConfigPathTemplate.render({
      account: account,
      channel_partner: channelPartner,
      channel_partner_repricing_config: channelPartnerRepricingConfig,
    });
  }

  /**
   * Parse the account from ChannelPartnerRepricingConfig resource.
   *
   * @param {string} channelPartnerRepricingConfigName
   *   A fully-qualified path representing ChannelPartnerRepricingConfig resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromChannelPartnerRepricingConfigName(
    channelPartnerRepricingConfigName: string
  ) {
    return this.pathTemplates.channelPartnerRepricingConfigPathTemplate.match(
      channelPartnerRepricingConfigName
    ).account;
  }

  /**
   * Parse the channel_partner from ChannelPartnerRepricingConfig resource.
   *
   * @param {string} channelPartnerRepricingConfigName
   *   A fully-qualified path representing ChannelPartnerRepricingConfig resource.
   * @returns {string} A string representing the channel_partner.
   */
  matchChannelPartnerFromChannelPartnerRepricingConfigName(
    channelPartnerRepricingConfigName: string
  ) {
    return this.pathTemplates.channelPartnerRepricingConfigPathTemplate.match(
      channelPartnerRepricingConfigName
    ).channel_partner;
  }

  /**
   * Parse the channel_partner_repricing_config from ChannelPartnerRepricingConfig resource.
   *
   * @param {string} channelPartnerRepricingConfigName
   *   A fully-qualified path representing ChannelPartnerRepricingConfig resource.
   * @returns {string} A string representing the channel_partner_repricing_config.
   */
  matchChannelPartnerRepricingConfigFromChannelPartnerRepricingConfigName(
    channelPartnerRepricingConfigName: string
  ) {
    return this.pathTemplates.channelPartnerRepricingConfigPathTemplate.match(
      channelPartnerRepricingConfigName
    ).channel_partner_repricing_config;
  }

  /**
   * Return a fully-qualified customer resource name string.
   *
   * @param {string} account
   * @param {string} customer
   * @returns {string} Resource name string.
   */
  customerPath(account: string, customer: string) {
    return this.pathTemplates.customerPathTemplate.render({
      account: account,
      customer: customer,
    });
  }

  /**
   * Parse the account from Customer resource.
   *
   * @param {string} customerName
   *   A fully-qualified path representing Customer resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromCustomerName(customerName: string) {
    return this.pathTemplates.customerPathTemplate.match(customerName).account;
  }

  /**
   * Parse the customer from Customer resource.
   *
   * @param {string} customerName
   *   A fully-qualified path representing Customer resource.
   * @returns {string} A string representing the customer.
   */
  matchCustomerFromCustomerName(customerName: string) {
    return this.pathTemplates.customerPathTemplate.match(customerName).customer;
  }

  /**
   * Return a fully-qualified customerRepricingConfig resource name string.
   *
   * @param {string} account
   * @param {string} customer
   * @param {string} customer_repricing_config
   * @returns {string} Resource name string.
   */
  customerRepricingConfigPath(
    account: string,
    customer: string,
    customerRepricingConfig: string
  ) {
    return this.pathTemplates.customerRepricingConfigPathTemplate.render({
      account: account,
      customer: customer,
      customer_repricing_config: customerRepricingConfig,
    });
  }

  /**
   * Parse the account from CustomerRepricingConfig resource.
   *
   * @param {string} customerRepricingConfigName
   *   A fully-qualified path representing CustomerRepricingConfig resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromCustomerRepricingConfigName(
    customerRepricingConfigName: string
  ) {
    return this.pathTemplates.customerRepricingConfigPathTemplate.match(
      customerRepricingConfigName
    ).account;
  }

  /**
   * Parse the customer from CustomerRepricingConfig resource.
   *
   * @param {string} customerRepricingConfigName
   *   A fully-qualified path representing CustomerRepricingConfig resource.
   * @returns {string} A string representing the customer.
   */
  matchCustomerFromCustomerRepricingConfigName(
    customerRepricingConfigName: string
  ) {
    return this.pathTemplates.customerRepricingConfigPathTemplate.match(
      customerRepricingConfigName
    ).customer;
  }

  /**
   * Parse the customer_repricing_config from CustomerRepricingConfig resource.
   *
   * @param {string} customerRepricingConfigName
   *   A fully-qualified path representing CustomerRepricingConfig resource.
   * @returns {string} A string representing the customer_repricing_config.
   */
  matchCustomerRepricingConfigFromCustomerRepricingConfigName(
    customerRepricingConfigName: string
  ) {
    return this.pathTemplates.customerRepricingConfigPathTemplate.match(
      customerRepricingConfigName
    ).customer_repricing_config;
  }

  /**
   * Return a fully-qualified entitlement resource name string.
   *
   * @param {string} account
   * @param {string} customer
   * @param {string} entitlement
   * @returns {string} Resource name string.
   */
  entitlementPath(account: string, customer: string, entitlement: string) {
    return this.pathTemplates.entitlementPathTemplate.render({
      account: account,
      customer: customer,
      entitlement: entitlement,
    });
  }

  /**
   * Parse the account from Entitlement resource.
   *
   * @param {string} entitlementName
   *   A fully-qualified path representing Entitlement resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromEntitlementName(entitlementName: string) {
    return this.pathTemplates.entitlementPathTemplate.match(entitlementName)
      .account;
  }

  /**
   * Parse the customer from Entitlement resource.
   *
   * @param {string} entitlementName
   *   A fully-qualified path representing Entitlement resource.
   * @returns {string} A string representing the customer.
   */
  matchCustomerFromEntitlementName(entitlementName: string) {
    return this.pathTemplates.entitlementPathTemplate.match(entitlementName)
      .customer;
  }

  /**
   * Parse the entitlement from Entitlement resource.
   *
   * @param {string} entitlementName
   *   A fully-qualified path representing Entitlement resource.
   * @returns {string} A string representing the entitlement.
   */
  matchEntitlementFromEntitlementName(entitlementName: string) {
    return this.pathTemplates.entitlementPathTemplate.match(entitlementName)
      .entitlement;
  }

  /**
   * Return a fully-qualified offer resource name string.
   *
   * @param {string} account
   * @param {string} offer
   * @returns {string} Resource name string.
   */
  offerPath(account: string, offer: string) {
    return this.pathTemplates.offerPathTemplate.render({
      account: account,
      offer: offer,
    });
  }

  /**
   * Parse the account from Offer resource.
   *
   * @param {string} offerName
   *   A fully-qualified path representing Offer resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromOfferName(offerName: string) {
    return this.pathTemplates.offerPathTemplate.match(offerName).account;
  }

  /**
   * Parse the offer from Offer resource.
   *
   * @param {string} offerName
   *   A fully-qualified path representing Offer resource.
   * @returns {string} A string representing the offer.
   */
  matchOfferFromOfferName(offerName: string) {
    return this.pathTemplates.offerPathTemplate.match(offerName).offer;
  }

  /**
   * Return a fully-qualified product resource name string.
   *
   * @param {string} product
   * @returns {string} Resource name string.
   */
  productPath(product: string) {
    return this.pathTemplates.productPathTemplate.render({
      product: product,
    });
  }

  /**
   * Parse the product from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the product.
   */
  matchProductFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).product;
  }

  /**
   * Return a fully-qualified report resource name string.
   *
   * @param {string} account
   * @param {string} report
   * @returns {string} Resource name string.
   */
  reportPath(account: string, report: string) {
    return this.pathTemplates.reportPathTemplate.render({
      account: account,
      report: report,
    });
  }

  /**
   * Parse the account from Report resource.
   *
   * @param {string} reportName
   *   A fully-qualified path representing Report resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromReportName(reportName: string) {
    return this.pathTemplates.reportPathTemplate.match(reportName).account;
  }

  /**
   * Parse the report from Report resource.
   *
   * @param {string} reportName
   *   A fully-qualified path representing Report resource.
   * @returns {string} A string representing the report.
   */
  matchReportFromReportName(reportName: string) {
    return this.pathTemplates.reportPathTemplate.match(reportName).report;
  }

  /**
   * Return a fully-qualified reportJob resource name string.
   *
   * @param {string} account
   * @param {string} report_job
   * @returns {string} Resource name string.
   */
  reportJobPath(account: string, reportJob: string) {
    return this.pathTemplates.reportJobPathTemplate.render({
      account: account,
      report_job: reportJob,
    });
  }

  /**
   * Parse the account from ReportJob resource.
   *
   * @param {string} reportJobName
   *   A fully-qualified path representing ReportJob resource.
   * @returns {string} A string representing the account.
   */
  matchAccountFromReportJobName(reportJobName: string) {
    return this.pathTemplates.reportJobPathTemplate.match(reportJobName)
      .account;
  }

  /**
   * Parse the report_job from ReportJob resource.
   *
   * @param {string} reportJobName
   *   A fully-qualified path representing ReportJob resource.
   * @returns {string} A string representing the report_job.
   */
  matchReportJobFromReportJobName(reportJobName: string) {
    return this.pathTemplates.reportJobPathTemplate.match(reportJobName)
      .report_job;
  }

  /**
   * Return a fully-qualified sku resource name string.
   *
   * @param {string} product
   * @param {string} sku
   * @returns {string} Resource name string.
   */
  skuPath(product: string, sku: string) {
    return this.pathTemplates.skuPathTemplate.render({
      product: product,
      sku: sku,
    });
  }

  /**
   * Parse the product from Sku resource.
   *
   * @param {string} skuName
   *   A fully-qualified path representing Sku resource.
   * @returns {string} A string representing the product.
   */
  matchProductFromSkuName(skuName: string) {
    return this.pathTemplates.skuPathTemplate.match(skuName).product;
  }

  /**
   * Parse the sku from Sku resource.
   *
   * @param {string} skuName
   *   A fully-qualified path representing Sku resource.
   * @returns {string} A string representing the sku.
   */
  matchSkuFromSkuName(skuName: string) {
    return this.pathTemplates.skuPathTemplate.match(skuName).sku;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.cloudChannelServiceStub && !this._terminated) {
      return this.cloudChannelServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
