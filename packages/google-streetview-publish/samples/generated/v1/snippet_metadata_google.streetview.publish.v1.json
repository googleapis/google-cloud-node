{
    "clientLibrary": {
        "name": "nodejs-publish",
        "version": "0.0.0",
        "language": "TYPESCRIPT",
        "apis": [
            {
                "id": "google.streetview.publish.v1",
                "version": "v1"
            }
        ]
    },
    "snippets": [
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_StartUpload_async",
            "title": "StreetViewPublishService startUpload Sample",
            "origin": "API_DEFINITION",
            "description": " Creates an upload session to start uploading photo bytes.  The method uses the upload URL of the returned [UploadRef][google.streetview.publish.v1.UploadRef] to upload the bytes for the [Photo][google.streetview.publish.v1.Photo]. In addition to the photo requirements shown in https://support.google.com/maps/answer/7012050?ref_topic=6275604, the photo must meet the following requirements: * Photo Sphere XMP metadata must be included in the photo metadata. See https://developers.google.com/streetview/spherical-metadata for the required fields. * The pixel size of the photo must meet the size requirements listed in https://support.google.com/maps/answer/7012050?ref_topic=6275604, and the photo must be a full 360 horizontally. After the upload completes, the method uses [UploadRef][google.streetview.publish.v1.UploadRef] with [CreatePhoto][google.streetview.publish.v1.StreetViewPublishService.CreatePhoto] to create the [Photo][google.streetview.publish.v1.Photo] object entry.",
            "canonical": true,
            "file": "street_view_publish_service.start_upload.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 48,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "StartUpload",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.StartUpload",
                "async": true,
                "parameters": [],
                "resultType": ".google.streetview.publish.v1.UploadRef",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "StartUpload",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.StartUpload",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_CreatePhoto_async",
            "title": "StreetViewPublishService createPhoto Sample",
            "origin": "API_DEFINITION",
            "description": " After the client finishes uploading the photo with the returned [UploadRef][google.streetview.publish.v1.UploadRef], [CreatePhoto][google.streetview.publish.v1.StreetViewPublishService.CreatePhoto] publishes the uploaded [Photo][google.streetview.publish.v1.Photo] to Street View on Google Maps. Currently, the only way to set heading, pitch, and roll in CreatePhoto is through the [Photo Sphere XMP metadata](https://developers.google.com/streetview/spherical-metadata) in the photo bytes. CreatePhoto ignores the  `pose.heading`, `pose.pitch`, `pose.roll`, `pose.altitude`, and `pose.level` fields in Pose. This method returns the following error codes: * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] if the request is malformed or if the uploaded photo is not a 360 photo. * [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND] if the upload reference does not exist. * [google.rpc.Code.RESOURCE_EXHAUSTED][google.rpc.Code.RESOURCE_EXHAUSTED] if the account has reached the storage limit.",
            "canonical": true,
            "file": "street_view_publish_service.create_photo.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 53,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "CreatePhoto",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.CreatePhoto",
                "async": true,
                "parameters": [
                    {
                        "name": "photo",
                        "type": ".google.streetview.publish.v1.Photo"
                    }
                ],
                "resultType": ".google.streetview.publish.v1.Photo",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "CreatePhoto",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.CreatePhoto",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_GetPhoto_async",
            "title": "StreetViewPublishService getPhoto Sample",
            "origin": "API_DEFINITION",
            "description": " Gets the metadata of the specified [Photo][google.streetview.publish.v1.Photo]. This method returns the following error codes: * [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED] if the requesting user did not create the requested [Photo][google.streetview.publish.v1.Photo]. * [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND] if the requested [Photo][google.streetview.publish.v1.Photo] does not exist. * [google.rpc.Code.UNAVAILABLE][google.rpc.Code.UNAVAILABLE] if the requested [Photo][google.streetview.publish.v1.Photo] is still being indexed.",
            "canonical": true,
            "file": "street_view_publish_service.get_photo.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 67,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "GetPhoto",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.GetPhoto",
                "async": true,
                "parameters": [
                    {
                        "name": "photo_id",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "view",
                        "type": ".google.streetview.publish.v1.PhotoView"
                    },
                    {
                        "name": "language_code",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.streetview.publish.v1.Photo",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "GetPhoto",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.GetPhoto",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_BatchGetPhotos_async",
            "title": "StreetViewPublishService batchGetPhotos Sample",
            "origin": "API_DEFINITION",
            "description": " Gets the metadata of the specified [Photo][google.streetview.publish.v1.Photo] batch. Note that if [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos] fails, either critical fields are missing or there is an authentication error. Even if [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos] succeeds, individual photos in the batch may have failures. These failures are specified in each [PhotoResponse.status][google.streetview.publish.v1.PhotoResponse.status] in [BatchGetPhotosResponse.results][google.streetview.publish.v1.BatchGetPhotosResponse.results]. See [GetPhoto][google.streetview.publish.v1.StreetViewPublishService.GetPhoto] for specific failures that can occur per photo.",
            "canonical": true,
            "file": "street_view_publish_service.batch_get_photos.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 69,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "BatchGetPhotos",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos",
                "async": true,
                "parameters": [
                    {
                        "name": "photo_ids",
                        "type": "TYPE_STRING[]"
                    },
                    {
                        "name": "view",
                        "type": ".google.streetview.publish.v1.PhotoView"
                    },
                    {
                        "name": "language_code",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.streetview.publish.v1.BatchGetPhotosResponse",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "BatchGetPhotos",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_ListPhotos_async",
            "title": "StreetViewPublishService listPhotos Sample",
            "origin": "API_DEFINITION",
            "description": " Lists all the [Photos][google.streetview.publish.v1.Photo] that belong to the user. > Note: Recently created photos that are still being indexed are not returned in the response.",
            "canonical": true,
            "file": "street_view_publish_service.list_photos.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 88,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "ListPhotos",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.ListPhotos",
                "async": true,
                "parameters": [
                    {
                        "name": "view",
                        "type": ".google.streetview.publish.v1.PhotoView"
                    },
                    {
                        "name": "page_size",
                        "type": "TYPE_INT32"
                    },
                    {
                        "name": "page_token",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "filter",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "language_code",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.streetview.publish.v1.ListPhotosResponse",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "ListPhotos",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.ListPhotos",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_UpdatePhoto_async",
            "title": "StreetViewPublishService updatePhoto Sample",
            "origin": "API_DEFINITION",
            "description": " Updates the metadata of a [Photo][google.streetview.publish.v1.Photo], such as pose, place association, connections, etc. Changing the pixels of a photo is not supported. Only the fields specified in the [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask] field are used. If `updateMask` is not present, the update applies to all fields. This method returns the following error codes: * [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED] if the requesting user did not create the requested photo. * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] if the request is malformed. * [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND] if the requested photo does not exist. * [google.rpc.Code.UNAVAILABLE][google.rpc.Code.UNAVAILABLE] if the requested [Photo][google.streetview.publish.v1.Photo] is still being indexed.",
            "canonical": true,
            "file": "street_view_publish_service.update_photo.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 80,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "UpdatePhoto",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.UpdatePhoto",
                "async": true,
                "parameters": [
                    {
                        "name": "photo",
                        "type": ".google.streetview.publish.v1.Photo"
                    },
                    {
                        "name": "update_mask",
                        "type": ".google.protobuf.FieldMask"
                    }
                ],
                "resultType": ".google.streetview.publish.v1.Photo",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "UpdatePhoto",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.UpdatePhoto",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_BatchUpdatePhotos_async",
            "title": "StreetViewPublishService batchUpdatePhotos Sample",
            "origin": "API_DEFINITION",
            "description": " Updates the metadata of [Photos][google.streetview.publish.v1.Photo], such as pose, place association, connections, etc. Changing the pixels of photos is not supported. Note that if [BatchUpdatePhotos][google.streetview.publish.v1.StreetViewPublishService.BatchUpdatePhotos] fails, either critical fields are missing or there is an authentication error. Even if [BatchUpdatePhotos][google.streetview.publish.v1.StreetViewPublishService.BatchUpdatePhotos] succeeds, individual photos in the batch may have failures. These failures are specified in each [PhotoResponse.status][google.streetview.publish.v1.PhotoResponse.status] in [BatchUpdatePhotosResponse.results][google.streetview.publish.v1.BatchUpdatePhotosResponse.results]. See [UpdatePhoto][google.streetview.publish.v1.StreetViewPublishService.UpdatePhoto] for specific failures that can occur per photo. Only the fields specified in [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask] field are used. If `updateMask` is not present, the update applies to all fields. The number of [UpdatePhotoRequest][google.streetview.publish.v1.UpdatePhotoRequest] messages in a [BatchUpdatePhotosRequest][google.streetview.publish.v1.BatchUpdatePhotosRequest] must not exceed 20. > Note: To update [Pose.altitude][google.streetview.publish.v1.Pose.altitude], [Pose.latLngPair][google.streetview.publish.v1.Pose.lat_lng_pair] has to be filled as well. Otherwise, the request will fail.",
            "canonical": true,
            "file": "street_view_publish_service.batch_update_photos.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 54,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "BatchUpdatePhotos",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.BatchUpdatePhotos",
                "async": true,
                "parameters": [
                    {
                        "name": "update_photo_requests",
                        "type": "TYPE_MESSAGE[]"
                    }
                ],
                "resultType": ".google.streetview.publish.v1.BatchUpdatePhotosResponse",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "BatchUpdatePhotos",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.BatchUpdatePhotos",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_DeletePhoto_async",
            "title": "StreetViewPublishService deletePhoto Sample",
            "origin": "API_DEFINITION",
            "description": " Deletes a [Photo][google.streetview.publish.v1.Photo] and its metadata. This method returns the following error codes: * [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED] if the requesting user did not create the requested photo. * [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND] if the photo ID does not exist.",
            "canonical": true,
            "file": "street_view_publish_service.delete_photo.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 53,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "DeletePhoto",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.DeletePhoto",
                "async": true,
                "parameters": [
                    {
                        "name": "photo_id",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.protobuf.Empty",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "DeletePhoto",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.DeletePhoto",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_BatchDeletePhotos_async",
            "title": "StreetViewPublishService batchDeletePhotos Sample",
            "origin": "API_DEFINITION",
            "description": " Deletes a list of [Photos][google.streetview.publish.v1.Photo] and their metadata. Note that if [BatchDeletePhotos][google.streetview.publish.v1.StreetViewPublishService.BatchDeletePhotos] fails, either critical fields are missing or there is an authentication error. Even if [BatchDeletePhotos][google.streetview.publish.v1.StreetViewPublishService.BatchDeletePhotos] succeeds, individual photos in the batch may have failures. These failures are specified in each [PhotoResponse.status][google.streetview.publish.v1.PhotoResponse.status] in [BatchDeletePhotosResponse.results][google.streetview.publish.v1.BatchDeletePhotosResponse.status]. See [DeletePhoto][google.streetview.publish.v1.StreetViewPublishService.DeletePhoto] for specific failures that can occur per photo.",
            "canonical": true,
            "file": "street_view_publish_service.batch_delete_photos.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 55,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "BatchDeletePhotos",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.BatchDeletePhotos",
                "async": true,
                "parameters": [
                    {
                        "name": "photo_ids",
                        "type": "TYPE_STRING[]"
                    }
                ],
                "resultType": ".google.streetview.publish.v1.BatchDeletePhotosResponse",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "BatchDeletePhotos",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.BatchDeletePhotos",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_StartPhotoSequenceUpload_async",
            "title": "StreetViewPublishService startPhotoSequenceUpload Sample",
            "origin": "API_DEFINITION",
            "description": " Creates an upload session to start uploading photo sequence data. The upload URL of the returned [UploadRef][google.streetview.publish.v1.UploadRef] is used to upload the data for the `photoSequence`. After the upload is complete, the [UploadRef][google.streetview.publish.v1.UploadRef] is used with [CreatePhotoSequence][google.streetview.publish.v1.StreetViewPublishService.CreatePhotoSequence] to create the [PhotoSequence][google.streetview.publish.v1.PhotoSequence] object entry.",
            "canonical": true,
            "file": "street_view_publish_service.start_photo_sequence_upload.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 48,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "StartPhotoSequenceUpload",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.StartPhotoSequenceUpload",
                "async": true,
                "parameters": [],
                "resultType": ".google.streetview.publish.v1.UploadRef",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "StartPhotoSequenceUpload",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.StartPhotoSequenceUpload",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_CreatePhotoSequence_async",
            "title": "StreetViewPublishService createPhotoSequence Sample",
            "origin": "API_DEFINITION",
            "description": " After the client finishes uploading the [PhotoSequence][google.streetview.publish.v1.PhotoSequence] with the returned [UploadRef][google.streetview.publish.v1.UploadRef], [CreatePhotoSequence][google.streetview.publish.v1.StreetViewPublishService.CreatePhotoSequence] extracts a sequence of 360 photos from a video or Extensible Device Metadata (XDM, http://www.xdm.org/) to be published to Street View on Google Maps. `CreatePhotoSequence` returns an [Operation][google.longrunning.Operation], with the [PhotoSequence][google.streetview.publish.v1.PhotoSequence] Id set in the `Operation.name` field. This method returns the following error codes: * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] if the request is malformed. * [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND] if the upload reference does not exist.",
            "canonical": true,
            "file": "street_view_publish_service.create_photo_sequence.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 61,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "CreatePhotoSequence",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.CreatePhotoSequence",
                "async": true,
                "parameters": [
                    {
                        "name": "photo_sequence",
                        "type": ".google.streetview.publish.v1.PhotoSequence"
                    },
                    {
                        "name": "input_type",
                        "type": ".google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType"
                    }
                ],
                "resultType": ".google.longrunning.Operation",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "CreatePhotoSequence",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.CreatePhotoSequence",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_GetPhotoSequence_async",
            "title": "StreetViewPublishService getPhotoSequence Sample",
            "origin": "API_DEFINITION",
            "description": " Gets the metadata of the specified [PhotoSequence][google.streetview.publish.v1.PhotoSequence] via the [Operation][google.longrunning.Operation] interface. This method returns the following three types of responses: * `Operation.done` = false, if the processing of   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not   finished yet. * `Operation.done` = true and `Operation.error` is populated, if there was   an error in processing. * `Operation.done` = true and `Operation.response` is poulated, which   contains a [PhotoSequence][google.streetview.publish.v1.PhotoSequence]   message. This method returns the following error codes: * [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED] if the requesting user did not create the requested [PhotoSequence][google.streetview.publish.v1.PhotoSequence]. * [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND] if the requested [PhotoSequence][google.streetview.publish.v1.PhotoSequence] does not exist.",
            "canonical": true,
            "file": "street_view_publish_service.get_photo_sequence.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 67,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "GetPhotoSequence",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.GetPhotoSequence",
                "async": true,
                "parameters": [
                    {
                        "name": "sequence_id",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "view",
                        "type": ".google.streetview.publish.v1.PhotoView"
                    },
                    {
                        "name": "filter",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.longrunning.Operation",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "GetPhotoSequence",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.GetPhotoSequence",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_ListPhotoSequences_async",
            "title": "StreetViewPublishService listPhotoSequences Sample",
            "origin": "API_DEFINITION",
            "description": " Lists all the [PhotoSequences][google.streetview.publish.v1.PhotoSequence] that belong to the user, in descending CreatePhotoSequence timestamp order.",
            "canonical": true,
            "file": "street_view_publish_service.list_photo_sequences.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 78,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "ListPhotoSequences",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences",
                "async": true,
                "parameters": [
                    {
                        "name": "page_size",
                        "type": "TYPE_INT32"
                    },
                    {
                        "name": "page_token",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "filter",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.streetview.publish.v1.ListPhotoSequencesResponse",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "ListPhotoSequences",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        },
        {
            "regionTag": "streetviewpublish_v1_generated_StreetViewPublishService_DeletePhotoSequence_async",
            "title": "StreetViewPublishService deletePhotoSequence Sample",
            "origin": "API_DEFINITION",
            "description": " Deletes a [PhotoSequence][google.streetview.publish.v1.PhotoSequence] and its metadata. This method returns the following error codes: * [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED] if the requesting user did not create the requested photo sequence. * [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND] if the photo sequence ID does not exist. * [google.rpc.Code.FAILED_PRECONDITION][google.rpc.Code.FAILED_PRECONDITION] if the photo sequence ID is not yet finished processing.",
            "canonical": true,
            "file": "street_view_publish_service.delete_photo_sequence.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 54,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "DeletePhotoSequence",
                "fullName": "google.streetview.publish.v1.StreetViewPublishService.DeletePhotoSequence",
                "async": true,
                "parameters": [
                    {
                        "name": "sequence_id",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.protobuf.Empty",
                "client": {
                    "shortName": "StreetViewPublishServiceClient",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishServiceClient"
                },
                "method": {
                    "shortName": "DeletePhotoSequence",
                    "fullName": "google.streetview.publish.v1.StreetViewPublishService.DeletePhotoSequence",
                    "service": {
                        "shortName": "StreetViewPublishService",
                        "fullName": "google.streetview.publish.v1.StreetViewPublishService"
                    }
                }
            }
        }
    ]
}