// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main() {
  // [START streetviewpublish_v1_generated_StreetViewPublishService_ListPhotoSequences_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Optional. The maximum number of photo sequences to return.
   *  `pageSize` must be non-negative. If `pageSize` is zero or is not
   *  provided, the default page size of 100 is used.
   *  The number of photo sequences returned in the response may be less than
   *  `pageSize` if the number of matches is less than `pageSize`.
   *  This is currently unimplemented but is in process.
   */
  // const pageSize = 1234
  /**
   *  Optional. The
   *  nextPageToken google.streetview.publish.v1.ListPhotosResponse.next_page_token 
   *  value returned from a previous
   *  ListPhotoSequences google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences 
   *  request, if any.
   */
  // const pageToken = 'abc123'
  /**
   *  Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
   *  The filters supported are: `imagery_type`, `processing_state`,
   *  `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`,
   *  `filename_query`, `min_capture_time_seconds`, `max_capture_time_seconds.
   *  See https://google.aip.dev/160 for more information. Filename queries
   *  should sent as a Phrase in order to support multiple words and special
   *  characters by adding escaped quotes. Ex: filename_query="example of a
   *  phrase.mp4"
   */
  // const filter = 'abc123'

  // Imports the Publish library
  const {StreetViewPublishServiceClient} = require('@googlemaps/streetview-publish').v1;

  // Instantiates a client
  const publishClient = new StreetViewPublishServiceClient();

  async function callListPhotoSequences() {
    // Construct request
    const request = {
    };

    // Run request
    const iterable = publishClient.listPhotoSequencesAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListPhotoSequences();
  // [END streetviewpublish_v1_generated_StreetViewPublishService_ListPhotoSequences_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
